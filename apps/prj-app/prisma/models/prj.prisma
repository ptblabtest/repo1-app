model Project {
    id               String    @id @default(uuid())
    regNumber        String?
    progress         Decimal?  @default(0)
    plannedStartDate DateTime?
    plannedEndDate   DateTime?
    actualStartDate  DateTime?
    actualEndDate    DateTime?

    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt

    contract   Contract? @relation(fields: [contractId], references: [id])
    contractId String?   @unique

    assignee    User?   @relation("Assignee", fields: [assigneeId], references: [id])
    assigneeId  String?
    createdBy   User?   @relation("CreatedBy", fields: [createdById], references: [id])
    createdById String?
    updatedBy   User?   @relation("UpdatedBy", fields: [updatedById], references: [id])
    updatedById String?
    members     User[]  @relation("ProjectMembers")

    milestones Milestone[]

    notes    Note[]
    stages   Stage[]
    events   Event[]
    budgets  Budget[]
    expenses Expense[]
}

model Milestone {
    id               String    @id @default(uuid())
    order            Decimal?
    title            String?
    description      String?
    plannedStartDate DateTime?
    plannedEndDate   DateTime?
    actualStartDate  DateTime?
    actualEndDate    DateTime?
    approvedDate     DateTime?
    share            Decimal?
    amount           Decimal?
    deliverables     String?
    progress         Decimal?  @default(0)
    revision         Decimal?

    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt

    project   Project? @relation(fields: [projectId], references: [id])
    projectId String?

    assignee    User?   @relation("Assignee", fields: [assigneeId], references: [id])
    assigneeId  String?
    createdBy   User?   @relation("CreatedBy", fields: [createdById], references: [id])
    createdById String?
    updatedBy   User?   @relation("UpdatedBy", fields: [updatedById], references: [id])
    updatedById String?

    tasks Task[]

    notes  Note[]
    stages Stage[]
    events Event[]
}

model Task {
    id               String    @id @default(uuid())
    order            Decimal?
    title            String
    plannedStartDate DateTime?
    plannedEndDate   DateTime?
    actualStartDate  DateTime?
    actualEndDate    DateTime?
    progress         Decimal?  @default(0)
    deliverables     String?
    remarks          String?

    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt

    milestone   Milestone @relation(fields: [milestoneId], references: [id])
    milestoneId String

    assignee    User?   @relation("Assignee", fields: [assigneeId], references: [id])
    assigneeId  String?
    createdBy   User?   @relation("CreatedBy", fields: [createdById], references: [id])
    createdById String?
    updatedBy   User?   @relation("UpdatedBy", fields: [updatedById], references: [id])
    updatedById String?
    members     User[]  @relation("TaskMembers")

    notes    Note[]
    stages   Stage[]
    events   Event[]
    expenses Expense[]
    funds    Fund[]
}
