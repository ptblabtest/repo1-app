
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Budget
 * 
 */
export type Budget = $Result.DefaultSelection<Prisma.$BudgetPayload>
/**
 * Model BudgetItem
 * 
 */
export type BudgetItem = $Result.DefaultSelection<Prisma.$BudgetItemPayload>
/**
 * Model Fund
 * 
 */
export type Fund = $Result.DefaultSelection<Prisma.$FundPayload>
/**
 * Model FundItem
 * 
 */
export type FundItem = $Result.DefaultSelection<Prisma.$FundItemPayload>
/**
 * Model Expense
 * 
 */
export type Expense = $Result.DefaultSelection<Prisma.$ExpensePayload>
/**
 * Model CostType
 * 
 */
export type CostType = $Result.DefaultSelection<Prisma.$CostTypePayload>
/**
 * Model Pipeline
 * 
 */
export type Pipeline = $Result.DefaultSelection<Prisma.$PipelinePayload>
/**
 * Model Lead
 * 
 */
export type Lead = $Result.DefaultSelection<Prisma.$LeadPayload>
/**
 * Model Opportunity
 * 
 */
export type Opportunity = $Result.DefaultSelection<Prisma.$OpportunityPayload>
/**
 * Model Quote
 * 
 */
export type Quote = $Result.DefaultSelection<Prisma.$QuotePayload>
/**
 * Model Contract
 * 
 */
export type Contract = $Result.DefaultSelection<Prisma.$ContractPayload>
/**
 * Model Event
 * 
 */
export type Event = $Result.DefaultSelection<Prisma.$EventPayload>
/**
 * Model Note
 * 
 */
export type Note = $Result.DefaultSelection<Prisma.$NotePayload>
/**
 * Model Stage
 * 
 */
export type Stage = $Result.DefaultSelection<Prisma.$StagePayload>
/**
 * Model StageType
 * 
 */
export type StageType = $Result.DefaultSelection<Prisma.$StageTypePayload>
/**
 * Model Client
 * 
 */
export type Client = $Result.DefaultSelection<Prisma.$ClientPayload>
/**
 * Model Vendor
 * 
 */
export type Vendor = $Result.DefaultSelection<Prisma.$VendorPayload>
/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>
/**
 * Model Category
 * 
 */
export type Category = $Result.DefaultSelection<Prisma.$CategoryPayload>
/**
 * Model Country
 * 
 */
export type Country = $Result.DefaultSelection<Prisma.$CountryPayload>
/**
 * Model Project
 * 
 */
export type Project = $Result.DefaultSelection<Prisma.$ProjectPayload>
/**
 * Model Milestone
 * 
 */
export type Milestone = $Result.DefaultSelection<Prisma.$MilestonePayload>
/**
 * Model Task
 * 
 */
export type Task = $Result.DefaultSelection<Prisma.$TaskPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Role
 * 
 */
export type Role = $Result.DefaultSelection<Prisma.$RolePayload>
/**
 * Model Organization
 * 
 */
export type Organization = $Result.DefaultSelection<Prisma.$OrganizationPayload>
/**
 * Model Profile
 * 
 */
export type Profile = $Result.DefaultSelection<Prisma.$ProfilePayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Budgets
 * const budgets = await prisma.budget.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Budgets
   * const budgets = await prisma.budget.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.budget`: Exposes CRUD operations for the **Budget** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Budgets
    * const budgets = await prisma.budget.findMany()
    * ```
    */
  get budget(): Prisma.BudgetDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.budgetItem`: Exposes CRUD operations for the **BudgetItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BudgetItems
    * const budgetItems = await prisma.budgetItem.findMany()
    * ```
    */
  get budgetItem(): Prisma.BudgetItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.fund`: Exposes CRUD operations for the **Fund** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Funds
    * const funds = await prisma.fund.findMany()
    * ```
    */
  get fund(): Prisma.FundDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.fundItem`: Exposes CRUD operations for the **FundItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FundItems
    * const fundItems = await prisma.fundItem.findMany()
    * ```
    */
  get fundItem(): Prisma.FundItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.expense`: Exposes CRUD operations for the **Expense** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Expenses
    * const expenses = await prisma.expense.findMany()
    * ```
    */
  get expense(): Prisma.ExpenseDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.costType`: Exposes CRUD operations for the **CostType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CostTypes
    * const costTypes = await prisma.costType.findMany()
    * ```
    */
  get costType(): Prisma.CostTypeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pipeline`: Exposes CRUD operations for the **Pipeline** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pipelines
    * const pipelines = await prisma.pipeline.findMany()
    * ```
    */
  get pipeline(): Prisma.PipelineDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.lead`: Exposes CRUD operations for the **Lead** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Leads
    * const leads = await prisma.lead.findMany()
    * ```
    */
  get lead(): Prisma.LeadDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.opportunity`: Exposes CRUD operations for the **Opportunity** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Opportunities
    * const opportunities = await prisma.opportunity.findMany()
    * ```
    */
  get opportunity(): Prisma.OpportunityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.quote`: Exposes CRUD operations for the **Quote** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Quotes
    * const quotes = await prisma.quote.findMany()
    * ```
    */
  get quote(): Prisma.QuoteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.contract`: Exposes CRUD operations for the **Contract** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contracts
    * const contracts = await prisma.contract.findMany()
    * ```
    */
  get contract(): Prisma.ContractDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.event`: Exposes CRUD operations for the **Event** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Events
    * const events = await prisma.event.findMany()
    * ```
    */
  get event(): Prisma.EventDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.note`: Exposes CRUD operations for the **Note** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notes
    * const notes = await prisma.note.findMany()
    * ```
    */
  get note(): Prisma.NoteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stage`: Exposes CRUD operations for the **Stage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stages
    * const stages = await prisma.stage.findMany()
    * ```
    */
  get stage(): Prisma.StageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stageType`: Exposes CRUD operations for the **StageType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StageTypes
    * const stageTypes = await prisma.stageType.findMany()
    * ```
    */
  get stageType(): Prisma.StageTypeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.client`: Exposes CRUD operations for the **Client** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clients
    * const clients = await prisma.client.findMany()
    * ```
    */
  get client(): Prisma.ClientDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.vendor`: Exposes CRUD operations for the **Vendor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vendors
    * const vendors = await prisma.vendor.findMany()
    * ```
    */
  get vendor(): Prisma.VendorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **Category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.CategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.country`: Exposes CRUD operations for the **Country** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Countries
    * const countries = await prisma.country.findMany()
    * ```
    */
  get country(): Prisma.CountryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.project`: Exposes CRUD operations for the **Project** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Projects
    * const projects = await prisma.project.findMany()
    * ```
    */
  get project(): Prisma.ProjectDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.milestone`: Exposes CRUD operations for the **Milestone** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Milestones
    * const milestones = await prisma.milestone.findMany()
    * ```
    */
  get milestone(): Prisma.MilestoneDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.task`: Exposes CRUD operations for the **Task** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tasks
    * const tasks = await prisma.task.findMany()
    * ```
    */
  get task(): Prisma.TaskDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.organization`: Exposes CRUD operations for the **Organization** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Organizations
    * const organizations = await prisma.organization.findMany()
    * ```
    */
  get organization(): Prisma.OrganizationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.profile`: Exposes CRUD operations for the **Profile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Profiles
    * const profiles = await prisma.profile.findMany()
    * ```
    */
  get profile(): Prisma.ProfileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.14.0
   * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Budget: 'Budget',
    BudgetItem: 'BudgetItem',
    Fund: 'Fund',
    FundItem: 'FundItem',
    Expense: 'Expense',
    CostType: 'CostType',
    Pipeline: 'Pipeline',
    Lead: 'Lead',
    Opportunity: 'Opportunity',
    Quote: 'Quote',
    Contract: 'Contract',
    Event: 'Event',
    Note: 'Note',
    Stage: 'Stage',
    StageType: 'StageType',
    Client: 'Client',
    Vendor: 'Vendor',
    Product: 'Product',
    Category: 'Category',
    Country: 'Country',
    Project: 'Project',
    Milestone: 'Milestone',
    Task: 'Task',
    User: 'User',
    Role: 'Role',
    Organization: 'Organization',
    Profile: 'Profile',
    Session: 'Session'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "budget" | "budgetItem" | "fund" | "fundItem" | "expense" | "costType" | "pipeline" | "lead" | "opportunity" | "quote" | "contract" | "event" | "note" | "stage" | "stageType" | "client" | "vendor" | "product" | "category" | "country" | "project" | "milestone" | "task" | "user" | "role" | "organization" | "profile" | "session"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Budget: {
        payload: Prisma.$BudgetPayload<ExtArgs>
        fields: Prisma.BudgetFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BudgetFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BudgetFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetPayload>
          }
          findFirst: {
            args: Prisma.BudgetFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BudgetFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetPayload>
          }
          findMany: {
            args: Prisma.BudgetFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetPayload>[]
          }
          create: {
            args: Prisma.BudgetCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetPayload>
          }
          createMany: {
            args: Prisma.BudgetCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BudgetCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetPayload>[]
          }
          delete: {
            args: Prisma.BudgetDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetPayload>
          }
          update: {
            args: Prisma.BudgetUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetPayload>
          }
          deleteMany: {
            args: Prisma.BudgetDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BudgetUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BudgetUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetPayload>[]
          }
          upsert: {
            args: Prisma.BudgetUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetPayload>
          }
          aggregate: {
            args: Prisma.BudgetAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBudget>
          }
          groupBy: {
            args: Prisma.BudgetGroupByArgs<ExtArgs>
            result: $Utils.Optional<BudgetGroupByOutputType>[]
          }
          count: {
            args: Prisma.BudgetCountArgs<ExtArgs>
            result: $Utils.Optional<BudgetCountAggregateOutputType> | number
          }
        }
      }
      BudgetItem: {
        payload: Prisma.$BudgetItemPayload<ExtArgs>
        fields: Prisma.BudgetItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BudgetItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BudgetItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetItemPayload>
          }
          findFirst: {
            args: Prisma.BudgetItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BudgetItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetItemPayload>
          }
          findMany: {
            args: Prisma.BudgetItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetItemPayload>[]
          }
          create: {
            args: Prisma.BudgetItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetItemPayload>
          }
          createMany: {
            args: Prisma.BudgetItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BudgetItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetItemPayload>[]
          }
          delete: {
            args: Prisma.BudgetItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetItemPayload>
          }
          update: {
            args: Prisma.BudgetItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetItemPayload>
          }
          deleteMany: {
            args: Prisma.BudgetItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BudgetItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BudgetItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetItemPayload>[]
          }
          upsert: {
            args: Prisma.BudgetItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BudgetItemPayload>
          }
          aggregate: {
            args: Prisma.BudgetItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBudgetItem>
          }
          groupBy: {
            args: Prisma.BudgetItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<BudgetItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.BudgetItemCountArgs<ExtArgs>
            result: $Utils.Optional<BudgetItemCountAggregateOutputType> | number
          }
        }
      }
      Fund: {
        payload: Prisma.$FundPayload<ExtArgs>
        fields: Prisma.FundFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FundFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FundFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundPayload>
          }
          findFirst: {
            args: Prisma.FundFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FundFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundPayload>
          }
          findMany: {
            args: Prisma.FundFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundPayload>[]
          }
          create: {
            args: Prisma.FundCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundPayload>
          }
          createMany: {
            args: Prisma.FundCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FundCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundPayload>[]
          }
          delete: {
            args: Prisma.FundDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundPayload>
          }
          update: {
            args: Prisma.FundUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundPayload>
          }
          deleteMany: {
            args: Prisma.FundDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FundUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FundUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundPayload>[]
          }
          upsert: {
            args: Prisma.FundUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundPayload>
          }
          aggregate: {
            args: Prisma.FundAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFund>
          }
          groupBy: {
            args: Prisma.FundGroupByArgs<ExtArgs>
            result: $Utils.Optional<FundGroupByOutputType>[]
          }
          count: {
            args: Prisma.FundCountArgs<ExtArgs>
            result: $Utils.Optional<FundCountAggregateOutputType> | number
          }
        }
      }
      FundItem: {
        payload: Prisma.$FundItemPayload<ExtArgs>
        fields: Prisma.FundItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FundItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FundItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundItemPayload>
          }
          findFirst: {
            args: Prisma.FundItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FundItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundItemPayload>
          }
          findMany: {
            args: Prisma.FundItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundItemPayload>[]
          }
          create: {
            args: Prisma.FundItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundItemPayload>
          }
          createMany: {
            args: Prisma.FundItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FundItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundItemPayload>[]
          }
          delete: {
            args: Prisma.FundItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundItemPayload>
          }
          update: {
            args: Prisma.FundItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundItemPayload>
          }
          deleteMany: {
            args: Prisma.FundItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FundItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FundItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundItemPayload>[]
          }
          upsert: {
            args: Prisma.FundItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FundItemPayload>
          }
          aggregate: {
            args: Prisma.FundItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFundItem>
          }
          groupBy: {
            args: Prisma.FundItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<FundItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.FundItemCountArgs<ExtArgs>
            result: $Utils.Optional<FundItemCountAggregateOutputType> | number
          }
        }
      }
      Expense: {
        payload: Prisma.$ExpensePayload<ExtArgs>
        fields: Prisma.ExpenseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ExpenseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ExpenseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          findFirst: {
            args: Prisma.ExpenseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ExpenseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          findMany: {
            args: Prisma.ExpenseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>[]
          }
          create: {
            args: Prisma.ExpenseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          createMany: {
            args: Prisma.ExpenseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ExpenseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>[]
          }
          delete: {
            args: Prisma.ExpenseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          update: {
            args: Prisma.ExpenseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          deleteMany: {
            args: Prisma.ExpenseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ExpenseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ExpenseUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>[]
          }
          upsert: {
            args: Prisma.ExpenseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          aggregate: {
            args: Prisma.ExpenseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateExpense>
          }
          groupBy: {
            args: Prisma.ExpenseGroupByArgs<ExtArgs>
            result: $Utils.Optional<ExpenseGroupByOutputType>[]
          }
          count: {
            args: Prisma.ExpenseCountArgs<ExtArgs>
            result: $Utils.Optional<ExpenseCountAggregateOutputType> | number
          }
        }
      }
      CostType: {
        payload: Prisma.$CostTypePayload<ExtArgs>
        fields: Prisma.CostTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CostTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CostTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostTypePayload>
          }
          findFirst: {
            args: Prisma.CostTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CostTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostTypePayload>
          }
          findMany: {
            args: Prisma.CostTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostTypePayload>[]
          }
          create: {
            args: Prisma.CostTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostTypePayload>
          }
          createMany: {
            args: Prisma.CostTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CostTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostTypePayload>[]
          }
          delete: {
            args: Prisma.CostTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostTypePayload>
          }
          update: {
            args: Prisma.CostTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostTypePayload>
          }
          deleteMany: {
            args: Prisma.CostTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CostTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CostTypeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostTypePayload>[]
          }
          upsert: {
            args: Prisma.CostTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostTypePayload>
          }
          aggregate: {
            args: Prisma.CostTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCostType>
          }
          groupBy: {
            args: Prisma.CostTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<CostTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.CostTypeCountArgs<ExtArgs>
            result: $Utils.Optional<CostTypeCountAggregateOutputType> | number
          }
        }
      }
      Pipeline: {
        payload: Prisma.$PipelinePayload<ExtArgs>
        fields: Prisma.PipelineFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PipelineFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelinePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PipelineFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelinePayload>
          }
          findFirst: {
            args: Prisma.PipelineFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelinePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PipelineFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelinePayload>
          }
          findMany: {
            args: Prisma.PipelineFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelinePayload>[]
          }
          create: {
            args: Prisma.PipelineCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelinePayload>
          }
          createMany: {
            args: Prisma.PipelineCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PipelineCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelinePayload>[]
          }
          delete: {
            args: Prisma.PipelineDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelinePayload>
          }
          update: {
            args: Prisma.PipelineUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelinePayload>
          }
          deleteMany: {
            args: Prisma.PipelineDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PipelineUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PipelineUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelinePayload>[]
          }
          upsert: {
            args: Prisma.PipelineUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelinePayload>
          }
          aggregate: {
            args: Prisma.PipelineAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePipeline>
          }
          groupBy: {
            args: Prisma.PipelineGroupByArgs<ExtArgs>
            result: $Utils.Optional<PipelineGroupByOutputType>[]
          }
          count: {
            args: Prisma.PipelineCountArgs<ExtArgs>
            result: $Utils.Optional<PipelineCountAggregateOutputType> | number
          }
        }
      }
      Lead: {
        payload: Prisma.$LeadPayload<ExtArgs>
        fields: Prisma.LeadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LeadFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LeadFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          findFirst: {
            args: Prisma.LeadFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LeadFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          findMany: {
            args: Prisma.LeadFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>[]
          }
          create: {
            args: Prisma.LeadCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          createMany: {
            args: Prisma.LeadCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LeadCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>[]
          }
          delete: {
            args: Prisma.LeadDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          update: {
            args: Prisma.LeadUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          deleteMany: {
            args: Prisma.LeadDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LeadUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LeadUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>[]
          }
          upsert: {
            args: Prisma.LeadUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          aggregate: {
            args: Prisma.LeadAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLead>
          }
          groupBy: {
            args: Prisma.LeadGroupByArgs<ExtArgs>
            result: $Utils.Optional<LeadGroupByOutputType>[]
          }
          count: {
            args: Prisma.LeadCountArgs<ExtArgs>
            result: $Utils.Optional<LeadCountAggregateOutputType> | number
          }
        }
      }
      Opportunity: {
        payload: Prisma.$OpportunityPayload<ExtArgs>
        fields: Prisma.OpportunityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OpportunityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpportunityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OpportunityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpportunityPayload>
          }
          findFirst: {
            args: Prisma.OpportunityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpportunityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OpportunityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpportunityPayload>
          }
          findMany: {
            args: Prisma.OpportunityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpportunityPayload>[]
          }
          create: {
            args: Prisma.OpportunityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpportunityPayload>
          }
          createMany: {
            args: Prisma.OpportunityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OpportunityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpportunityPayload>[]
          }
          delete: {
            args: Prisma.OpportunityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpportunityPayload>
          }
          update: {
            args: Prisma.OpportunityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpportunityPayload>
          }
          deleteMany: {
            args: Prisma.OpportunityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OpportunityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OpportunityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpportunityPayload>[]
          }
          upsert: {
            args: Prisma.OpportunityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpportunityPayload>
          }
          aggregate: {
            args: Prisma.OpportunityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOpportunity>
          }
          groupBy: {
            args: Prisma.OpportunityGroupByArgs<ExtArgs>
            result: $Utils.Optional<OpportunityGroupByOutputType>[]
          }
          count: {
            args: Prisma.OpportunityCountArgs<ExtArgs>
            result: $Utils.Optional<OpportunityCountAggregateOutputType> | number
          }
        }
      }
      Quote: {
        payload: Prisma.$QuotePayload<ExtArgs>
        fields: Prisma.QuoteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.QuoteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuotePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.QuoteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuotePayload>
          }
          findFirst: {
            args: Prisma.QuoteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuotePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.QuoteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuotePayload>
          }
          findMany: {
            args: Prisma.QuoteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuotePayload>[]
          }
          create: {
            args: Prisma.QuoteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuotePayload>
          }
          createMany: {
            args: Prisma.QuoteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.QuoteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuotePayload>[]
          }
          delete: {
            args: Prisma.QuoteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuotePayload>
          }
          update: {
            args: Prisma.QuoteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuotePayload>
          }
          deleteMany: {
            args: Prisma.QuoteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.QuoteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.QuoteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuotePayload>[]
          }
          upsert: {
            args: Prisma.QuoteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuotePayload>
          }
          aggregate: {
            args: Prisma.QuoteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQuote>
          }
          groupBy: {
            args: Prisma.QuoteGroupByArgs<ExtArgs>
            result: $Utils.Optional<QuoteGroupByOutputType>[]
          }
          count: {
            args: Prisma.QuoteCountArgs<ExtArgs>
            result: $Utils.Optional<QuoteCountAggregateOutputType> | number
          }
        }
      }
      Contract: {
        payload: Prisma.$ContractPayload<ExtArgs>
        fields: Prisma.ContractFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ContractFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContractPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ContractFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContractPayload>
          }
          findFirst: {
            args: Prisma.ContractFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContractPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ContractFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContractPayload>
          }
          findMany: {
            args: Prisma.ContractFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContractPayload>[]
          }
          create: {
            args: Prisma.ContractCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContractPayload>
          }
          createMany: {
            args: Prisma.ContractCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ContractCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContractPayload>[]
          }
          delete: {
            args: Prisma.ContractDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContractPayload>
          }
          update: {
            args: Prisma.ContractUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContractPayload>
          }
          deleteMany: {
            args: Prisma.ContractDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ContractUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ContractUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContractPayload>[]
          }
          upsert: {
            args: Prisma.ContractUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContractPayload>
          }
          aggregate: {
            args: Prisma.ContractAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateContract>
          }
          groupBy: {
            args: Prisma.ContractGroupByArgs<ExtArgs>
            result: $Utils.Optional<ContractGroupByOutputType>[]
          }
          count: {
            args: Prisma.ContractCountArgs<ExtArgs>
            result: $Utils.Optional<ContractCountAggregateOutputType> | number
          }
        }
      }
      Event: {
        payload: Prisma.$EventPayload<ExtArgs>
        fields: Prisma.EventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          findFirst: {
            args: Prisma.EventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          findMany: {
            args: Prisma.EventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>[]
          }
          create: {
            args: Prisma.EventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          createMany: {
            args: Prisma.EventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>[]
          }
          delete: {
            args: Prisma.EventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          update: {
            args: Prisma.EventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          deleteMany: {
            args: Prisma.EventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EventUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>[]
          }
          upsert: {
            args: Prisma.EventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          aggregate: {
            args: Prisma.EventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvent>
          }
          groupBy: {
            args: Prisma.EventGroupByArgs<ExtArgs>
            result: $Utils.Optional<EventGroupByOutputType>[]
          }
          count: {
            args: Prisma.EventCountArgs<ExtArgs>
            result: $Utils.Optional<EventCountAggregateOutputType> | number
          }
        }
      }
      Note: {
        payload: Prisma.$NotePayload<ExtArgs>
        fields: Prisma.NoteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NoteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NoteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>
          }
          findFirst: {
            args: Prisma.NoteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NoteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>
          }
          findMany: {
            args: Prisma.NoteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>[]
          }
          create: {
            args: Prisma.NoteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>
          }
          createMany: {
            args: Prisma.NoteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NoteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>[]
          }
          delete: {
            args: Prisma.NoteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>
          }
          update: {
            args: Prisma.NoteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>
          }
          deleteMany: {
            args: Prisma.NoteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NoteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.NoteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>[]
          }
          upsert: {
            args: Prisma.NoteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>
          }
          aggregate: {
            args: Prisma.NoteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNote>
          }
          groupBy: {
            args: Prisma.NoteGroupByArgs<ExtArgs>
            result: $Utils.Optional<NoteGroupByOutputType>[]
          }
          count: {
            args: Prisma.NoteCountArgs<ExtArgs>
            result: $Utils.Optional<NoteCountAggregateOutputType> | number
          }
        }
      }
      Stage: {
        payload: Prisma.$StagePayload<ExtArgs>
        fields: Prisma.StageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StagePayload>
          }
          findFirst: {
            args: Prisma.StageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StagePayload>
          }
          findMany: {
            args: Prisma.StageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StagePayload>[]
          }
          create: {
            args: Prisma.StageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StagePayload>
          }
          createMany: {
            args: Prisma.StageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StagePayload>[]
          }
          delete: {
            args: Prisma.StageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StagePayload>
          }
          update: {
            args: Prisma.StageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StagePayload>
          }
          deleteMany: {
            args: Prisma.StageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StagePayload>[]
          }
          upsert: {
            args: Prisma.StageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StagePayload>
          }
          aggregate: {
            args: Prisma.StageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStage>
          }
          groupBy: {
            args: Prisma.StageGroupByArgs<ExtArgs>
            result: $Utils.Optional<StageGroupByOutputType>[]
          }
          count: {
            args: Prisma.StageCountArgs<ExtArgs>
            result: $Utils.Optional<StageCountAggregateOutputType> | number
          }
        }
      }
      StageType: {
        payload: Prisma.$StageTypePayload<ExtArgs>
        fields: Prisma.StageTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StageTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StageTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StageTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StageTypePayload>
          }
          findFirst: {
            args: Prisma.StageTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StageTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StageTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StageTypePayload>
          }
          findMany: {
            args: Prisma.StageTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StageTypePayload>[]
          }
          create: {
            args: Prisma.StageTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StageTypePayload>
          }
          createMany: {
            args: Prisma.StageTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StageTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StageTypePayload>[]
          }
          delete: {
            args: Prisma.StageTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StageTypePayload>
          }
          update: {
            args: Prisma.StageTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StageTypePayload>
          }
          deleteMany: {
            args: Prisma.StageTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StageTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StageTypeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StageTypePayload>[]
          }
          upsert: {
            args: Prisma.StageTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StageTypePayload>
          }
          aggregate: {
            args: Prisma.StageTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStageType>
          }
          groupBy: {
            args: Prisma.StageTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<StageTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.StageTypeCountArgs<ExtArgs>
            result: $Utils.Optional<StageTypeCountAggregateOutputType> | number
          }
        }
      }
      Client: {
        payload: Prisma.$ClientPayload<ExtArgs>
        fields: Prisma.ClientFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          findFirst: {
            args: Prisma.ClientFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          findMany: {
            args: Prisma.ClientFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          create: {
            args: Prisma.ClientCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          createMany: {
            args: Prisma.ClientCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          delete: {
            args: Prisma.ClientDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          update: {
            args: Prisma.ClientUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          deleteMany: {
            args: Prisma.ClientDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClientUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          upsert: {
            args: Prisma.ClientUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          aggregate: {
            args: Prisma.ClientAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClient>
          }
          groupBy: {
            args: Prisma.ClientGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientCountArgs<ExtArgs>
            result: $Utils.Optional<ClientCountAggregateOutputType> | number
          }
        }
      }
      Vendor: {
        payload: Prisma.$VendorPayload<ExtArgs>
        fields: Prisma.VendorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VendorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VendorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>
          }
          findFirst: {
            args: Prisma.VendorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VendorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>
          }
          findMany: {
            args: Prisma.VendorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>[]
          }
          create: {
            args: Prisma.VendorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>
          }
          createMany: {
            args: Prisma.VendorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VendorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>[]
          }
          delete: {
            args: Prisma.VendorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>
          }
          update: {
            args: Prisma.VendorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>
          }
          deleteMany: {
            args: Prisma.VendorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VendorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VendorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>[]
          }
          upsert: {
            args: Prisma.VendorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>
          }
          aggregate: {
            args: Prisma.VendorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVendor>
          }
          groupBy: {
            args: Prisma.VendorGroupByArgs<ExtArgs>
            result: $Utils.Optional<VendorGroupByOutputType>[]
          }
          count: {
            args: Prisma.VendorCountArgs<ExtArgs>
            result: $Utils.Optional<VendorCountAggregateOutputType> | number
          }
        }
      }
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      Category: {
        payload: Prisma.$CategoryPayload<ExtArgs>
        fields: Prisma.CategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findFirst: {
            args: Prisma.CategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findMany: {
            args: Prisma.CategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          create: {
            args: Prisma.CategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          createMany: {
            args: Prisma.CategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          delete: {
            args: Prisma.CategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          update: {
            args: Prisma.CategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          deleteMany: {
            args: Prisma.CategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          upsert: {
            args: Prisma.CategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.CategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      Country: {
        payload: Prisma.$CountryPayload<ExtArgs>
        fields: Prisma.CountryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CountryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CountryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          findFirst: {
            args: Prisma.CountryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CountryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          findMany: {
            args: Prisma.CountryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>[]
          }
          create: {
            args: Prisma.CountryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          createMany: {
            args: Prisma.CountryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CountryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>[]
          }
          delete: {
            args: Prisma.CountryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          update: {
            args: Prisma.CountryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          deleteMany: {
            args: Prisma.CountryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CountryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CountryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>[]
          }
          upsert: {
            args: Prisma.CountryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          aggregate: {
            args: Prisma.CountryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCountry>
          }
          groupBy: {
            args: Prisma.CountryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CountryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CountryCountArgs<ExtArgs>
            result: $Utils.Optional<CountryCountAggregateOutputType> | number
          }
        }
      }
      Project: {
        payload: Prisma.$ProjectPayload<ExtArgs>
        fields: Prisma.ProjectFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProjectFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProjectFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          findFirst: {
            args: Prisma.ProjectFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProjectFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          findMany: {
            args: Prisma.ProjectFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>[]
          }
          create: {
            args: Prisma.ProjectCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          createMany: {
            args: Prisma.ProjectCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProjectCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>[]
          }
          delete: {
            args: Prisma.ProjectDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          update: {
            args: Prisma.ProjectUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          deleteMany: {
            args: Prisma.ProjectDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProjectUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProjectUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>[]
          }
          upsert: {
            args: Prisma.ProjectUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          aggregate: {
            args: Prisma.ProjectAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProject>
          }
          groupBy: {
            args: Prisma.ProjectGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProjectGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProjectCountArgs<ExtArgs>
            result: $Utils.Optional<ProjectCountAggregateOutputType> | number
          }
        }
      }
      Milestone: {
        payload: Prisma.$MilestonePayload<ExtArgs>
        fields: Prisma.MilestoneFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MilestoneFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MilestonePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MilestoneFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MilestonePayload>
          }
          findFirst: {
            args: Prisma.MilestoneFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MilestonePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MilestoneFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MilestonePayload>
          }
          findMany: {
            args: Prisma.MilestoneFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MilestonePayload>[]
          }
          create: {
            args: Prisma.MilestoneCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MilestonePayload>
          }
          createMany: {
            args: Prisma.MilestoneCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MilestoneCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MilestonePayload>[]
          }
          delete: {
            args: Prisma.MilestoneDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MilestonePayload>
          }
          update: {
            args: Prisma.MilestoneUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MilestonePayload>
          }
          deleteMany: {
            args: Prisma.MilestoneDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MilestoneUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MilestoneUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MilestonePayload>[]
          }
          upsert: {
            args: Prisma.MilestoneUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MilestonePayload>
          }
          aggregate: {
            args: Prisma.MilestoneAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMilestone>
          }
          groupBy: {
            args: Prisma.MilestoneGroupByArgs<ExtArgs>
            result: $Utils.Optional<MilestoneGroupByOutputType>[]
          }
          count: {
            args: Prisma.MilestoneCountArgs<ExtArgs>
            result: $Utils.Optional<MilestoneCountAggregateOutputType> | number
          }
        }
      }
      Task: {
        payload: Prisma.$TaskPayload<ExtArgs>
        fields: Prisma.TaskFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TaskFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TaskFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          findFirst: {
            args: Prisma.TaskFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TaskFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          findMany: {
            args: Prisma.TaskFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>[]
          }
          create: {
            args: Prisma.TaskCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          createMany: {
            args: Prisma.TaskCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TaskCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>[]
          }
          delete: {
            args: Prisma.TaskDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          update: {
            args: Prisma.TaskUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          deleteMany: {
            args: Prisma.TaskDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TaskUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TaskUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>[]
          }
          upsert: {
            args: Prisma.TaskUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          aggregate: {
            args: Prisma.TaskAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTask>
          }
          groupBy: {
            args: Prisma.TaskGroupByArgs<ExtArgs>
            result: $Utils.Optional<TaskGroupByOutputType>[]
          }
          count: {
            args: Prisma.TaskCountArgs<ExtArgs>
            result: $Utils.Optional<TaskCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Role: {
        payload: Prisma.$RolePayload<ExtArgs>
        fields: Prisma.RoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findFirst: {
            args: Prisma.RoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findMany: {
            args: Prisma.RoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          create: {
            args: Prisma.RoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          createMany: {
            args: Prisma.RoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RoleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          delete: {
            args: Prisma.RoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          update: {
            args: Prisma.RoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          deleteMany: {
            args: Prisma.RoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RoleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          upsert: {
            args: Prisma.RoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.RoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      Organization: {
        payload: Prisma.$OrganizationPayload<ExtArgs>
        fields: Prisma.OrganizationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrganizationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrganizationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          findFirst: {
            args: Prisma.OrganizationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrganizationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          findMany: {
            args: Prisma.OrganizationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>[]
          }
          create: {
            args: Prisma.OrganizationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          createMany: {
            args: Prisma.OrganizationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrganizationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>[]
          }
          delete: {
            args: Prisma.OrganizationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          update: {
            args: Prisma.OrganizationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          deleteMany: {
            args: Prisma.OrganizationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrganizationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrganizationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>[]
          }
          upsert: {
            args: Prisma.OrganizationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          aggregate: {
            args: Prisma.OrganizationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrganization>
          }
          groupBy: {
            args: Prisma.OrganizationGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrganizationGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrganizationCountArgs<ExtArgs>
            result: $Utils.Optional<OrganizationCountAggregateOutputType> | number
          }
        }
      }
      Profile: {
        payload: Prisma.$ProfilePayload<ExtArgs>
        fields: Prisma.ProfileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProfileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProfileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          findFirst: {
            args: Prisma.ProfileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProfileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          findMany: {
            args: Prisma.ProfileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          create: {
            args: Prisma.ProfileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          createMany: {
            args: Prisma.ProfileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProfileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          delete: {
            args: Prisma.ProfileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          update: {
            args: Prisma.ProfileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          deleteMany: {
            args: Prisma.ProfileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProfileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProfileUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          upsert: {
            args: Prisma.ProfileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          aggregate: {
            args: Prisma.ProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProfile>
          }
          groupBy: {
            args: Prisma.ProfileGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProfileCountArgs<ExtArgs>
            result: $Utils.Optional<ProfileCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SessionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    budget?: BudgetOmit
    budgetItem?: BudgetItemOmit
    fund?: FundOmit
    fundItem?: FundItemOmit
    expense?: ExpenseOmit
    costType?: CostTypeOmit
    pipeline?: PipelineOmit
    lead?: LeadOmit
    opportunity?: OpportunityOmit
    quote?: QuoteOmit
    contract?: ContractOmit
    event?: EventOmit
    note?: NoteOmit
    stage?: StageOmit
    stageType?: StageTypeOmit
    client?: ClientOmit
    vendor?: VendorOmit
    product?: ProductOmit
    category?: CategoryOmit
    country?: CountryOmit
    project?: ProjectOmit
    milestone?: MilestoneOmit
    task?: TaskOmit
    user?: UserOmit
    role?: RoleOmit
    organization?: OrganizationOmit
    profile?: ProfileOmit
    session?: SessionOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type BudgetCountOutputType
   */

  export type BudgetCountOutputType = {
    items: number
    notes: number
    stages: number
  }

  export type BudgetCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | BudgetCountOutputTypeCountItemsArgs
    notes?: boolean | BudgetCountOutputTypeCountNotesArgs
    stages?: boolean | BudgetCountOutputTypeCountStagesArgs
  }

  // Custom InputTypes
  /**
   * BudgetCountOutputType without action
   */
  export type BudgetCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BudgetCountOutputType
     */
    select?: BudgetCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BudgetCountOutputType without action
   */
  export type BudgetCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BudgetItemWhereInput
  }

  /**
   * BudgetCountOutputType without action
   */
  export type BudgetCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }

  /**
   * BudgetCountOutputType without action
   */
  export type BudgetCountOutputTypeCountStagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StageWhereInput
  }


  /**
   * Count Type FundCountOutputType
   */

  export type FundCountOutputType = {
    items: number
    expenses: number
    notes: number
    stages: number
  }

  export type FundCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | FundCountOutputTypeCountItemsArgs
    expenses?: boolean | FundCountOutputTypeCountExpensesArgs
    notes?: boolean | FundCountOutputTypeCountNotesArgs
    stages?: boolean | FundCountOutputTypeCountStagesArgs
  }

  // Custom InputTypes
  /**
   * FundCountOutputType without action
   */
  export type FundCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundCountOutputType
     */
    select?: FundCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FundCountOutputType without action
   */
  export type FundCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundItemWhereInput
  }

  /**
   * FundCountOutputType without action
   */
  export type FundCountOutputTypeCountExpensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExpenseWhereInput
  }

  /**
   * FundCountOutputType without action
   */
  export type FundCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }

  /**
   * FundCountOutputType without action
   */
  export type FundCountOutputTypeCountStagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StageWhereInput
  }


  /**
   * Count Type ExpenseCountOutputType
   */

  export type ExpenseCountOutputType = {
    notes: number
  }

  export type ExpenseCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notes?: boolean | ExpenseCountOutputTypeCountNotesArgs
  }

  // Custom InputTypes
  /**
   * ExpenseCountOutputType without action
   */
  export type ExpenseCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExpenseCountOutputType
     */
    select?: ExpenseCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ExpenseCountOutputType without action
   */
  export type ExpenseCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }


  /**
   * Count Type CostTypeCountOutputType
   */

  export type CostTypeCountOutputType = {
    children: number
    budgetItems: number
    fundItems: number
    expenses: number
  }

  export type CostTypeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    children?: boolean | CostTypeCountOutputTypeCountChildrenArgs
    budgetItems?: boolean | CostTypeCountOutputTypeCountBudgetItemsArgs
    fundItems?: boolean | CostTypeCountOutputTypeCountFundItemsArgs
    expenses?: boolean | CostTypeCountOutputTypeCountExpensesArgs
  }

  // Custom InputTypes
  /**
   * CostTypeCountOutputType without action
   */
  export type CostTypeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostTypeCountOutputType
     */
    select?: CostTypeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CostTypeCountOutputType without action
   */
  export type CostTypeCountOutputTypeCountChildrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CostTypeWhereInput
  }

  /**
   * CostTypeCountOutputType without action
   */
  export type CostTypeCountOutputTypeCountBudgetItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BudgetItemWhereInput
  }

  /**
   * CostTypeCountOutputType without action
   */
  export type CostTypeCountOutputTypeCountFundItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundItemWhereInput
  }

  /**
   * CostTypeCountOutputType without action
   */
  export type CostTypeCountOutputTypeCountExpensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExpenseWhereInput
  }


  /**
   * Count Type PipelineCountOutputType
   */

  export type PipelineCountOutputType = {
    members: number
    stages: number
    notes: number
    events: number
  }

  export type PipelineCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    members?: boolean | PipelineCountOutputTypeCountMembersArgs
    stages?: boolean | PipelineCountOutputTypeCountStagesArgs
    notes?: boolean | PipelineCountOutputTypeCountNotesArgs
    events?: boolean | PipelineCountOutputTypeCountEventsArgs
  }

  // Custom InputTypes
  /**
   * PipelineCountOutputType without action
   */
  export type PipelineCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PipelineCountOutputType
     */
    select?: PipelineCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PipelineCountOutputType without action
   */
  export type PipelineCountOutputTypeCountMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * PipelineCountOutputType without action
   */
  export type PipelineCountOutputTypeCountStagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StageWhereInput
  }

  /**
   * PipelineCountOutputType without action
   */
  export type PipelineCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }

  /**
   * PipelineCountOutputType without action
   */
  export type PipelineCountOutputTypeCountEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventWhereInput
  }


  /**
   * Count Type LeadCountOutputType
   */

  export type LeadCountOutputType = {
    products: number
    opportunities: number
    pipeline: number
  }

  export type LeadCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | LeadCountOutputTypeCountProductsArgs
    opportunities?: boolean | LeadCountOutputTypeCountOpportunitiesArgs
    pipeline?: boolean | LeadCountOutputTypeCountPipelineArgs
  }

  // Custom InputTypes
  /**
   * LeadCountOutputType without action
   */
  export type LeadCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadCountOutputType
     */
    select?: LeadCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LeadCountOutputType without action
   */
  export type LeadCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * LeadCountOutputType without action
   */
  export type LeadCountOutputTypeCountOpportunitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OpportunityWhereInput
  }

  /**
   * LeadCountOutputType without action
   */
  export type LeadCountOutputTypeCountPipelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PipelineWhereInput
  }


  /**
   * Count Type OpportunityCountOutputType
   */

  export type OpportunityCountOutputType = {
    products: number
    quotes: number
    pipeline: number
  }

  export type OpportunityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | OpportunityCountOutputTypeCountProductsArgs
    quotes?: boolean | OpportunityCountOutputTypeCountQuotesArgs
    pipeline?: boolean | OpportunityCountOutputTypeCountPipelineArgs
  }

  // Custom InputTypes
  /**
   * OpportunityCountOutputType without action
   */
  export type OpportunityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpportunityCountOutputType
     */
    select?: OpportunityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OpportunityCountOutputType without action
   */
  export type OpportunityCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * OpportunityCountOutputType without action
   */
  export type OpportunityCountOutputTypeCountQuotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuoteWhereInput
  }

  /**
   * OpportunityCountOutputType without action
   */
  export type OpportunityCountOutputTypeCountPipelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PipelineWhereInput
  }


  /**
   * Count Type QuoteCountOutputType
   */

  export type QuoteCountOutputType = {
    products: number
    contracts: number
    pipeline: number
  }

  export type QuoteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | QuoteCountOutputTypeCountProductsArgs
    contracts?: boolean | QuoteCountOutputTypeCountContractsArgs
    pipeline?: boolean | QuoteCountOutputTypeCountPipelineArgs
  }

  // Custom InputTypes
  /**
   * QuoteCountOutputType without action
   */
  export type QuoteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuoteCountOutputType
     */
    select?: QuoteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * QuoteCountOutputType without action
   */
  export type QuoteCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * QuoteCountOutputType without action
   */
  export type QuoteCountOutputTypeCountContractsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContractWhereInput
  }

  /**
   * QuoteCountOutputType without action
   */
  export type QuoteCountOutputTypeCountPipelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PipelineWhereInput
  }


  /**
   * Count Type ContractCountOutputType
   */

  export type ContractCountOutputType = {
    products: number
    pipeline: number
  }

  export type ContractCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | ContractCountOutputTypeCountProductsArgs
    pipeline?: boolean | ContractCountOutputTypeCountPipelineArgs
  }

  // Custom InputTypes
  /**
   * ContractCountOutputType without action
   */
  export type ContractCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContractCountOutputType
     */
    select?: ContractCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ContractCountOutputType without action
   */
  export type ContractCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * ContractCountOutputType without action
   */
  export type ContractCountOutputTypeCountPipelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PipelineWhereInput
  }


  /**
   * Count Type StageTypeCountOutputType
   */

  export type StageTypeCountOutputType = {
    stages: number
  }

  export type StageTypeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stages?: boolean | StageTypeCountOutputTypeCountStagesArgs
  }

  // Custom InputTypes
  /**
   * StageTypeCountOutputType without action
   */
  export type StageTypeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StageTypeCountOutputType
     */
    select?: StageTypeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StageTypeCountOutputType without action
   */
  export type StageTypeCountOutputTypeCountStagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StageWhereInput
  }


  /**
   * Count Type ClientCountOutputType
   */

  export type ClientCountOutputType = {
    notes: number
    leads: number
    opportunities: number
    quotes: number
    contracts: number
  }

  export type ClientCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notes?: boolean | ClientCountOutputTypeCountNotesArgs
    leads?: boolean | ClientCountOutputTypeCountLeadsArgs
    opportunities?: boolean | ClientCountOutputTypeCountOpportunitiesArgs
    quotes?: boolean | ClientCountOutputTypeCountQuotesArgs
    contracts?: boolean | ClientCountOutputTypeCountContractsArgs
  }

  // Custom InputTypes
  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCountOutputType
     */
    select?: ClientCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountLeadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LeadWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountOpportunitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OpportunityWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountQuotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuoteWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountContractsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContractWhereInput
  }


  /**
   * Count Type VendorCountOutputType
   */

  export type VendorCountOutputType = {
    notes: number
  }

  export type VendorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notes?: boolean | VendorCountOutputTypeCountNotesArgs
  }

  // Custom InputTypes
  /**
   * VendorCountOutputType without action
   */
  export type VendorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VendorCountOutputType
     */
    select?: VendorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VendorCountOutputType without action
   */
  export type VendorCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    leads: number
    opportunities: number
    quotes: number
    contracts: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    leads?: boolean | ProductCountOutputTypeCountLeadsArgs
    opportunities?: boolean | ProductCountOutputTypeCountOpportunitiesArgs
    quotes?: boolean | ProductCountOutputTypeCountQuotesArgs
    contracts?: boolean | ProductCountOutputTypeCountContractsArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountLeadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LeadWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountOpportunitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OpportunityWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountQuotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuoteWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountContractsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContractWhereInput
  }


  /**
   * Count Type ProjectCountOutputType
   */

  export type ProjectCountOutputType = {
    members: number
    milestones: number
    notes: number
    stages: number
    events: number
    budgets: number
    expenses: number
  }

  export type ProjectCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    members?: boolean | ProjectCountOutputTypeCountMembersArgs
    milestones?: boolean | ProjectCountOutputTypeCountMilestonesArgs
    notes?: boolean | ProjectCountOutputTypeCountNotesArgs
    stages?: boolean | ProjectCountOutputTypeCountStagesArgs
    events?: boolean | ProjectCountOutputTypeCountEventsArgs
    budgets?: boolean | ProjectCountOutputTypeCountBudgetsArgs
    expenses?: boolean | ProjectCountOutputTypeCountExpensesArgs
  }

  // Custom InputTypes
  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectCountOutputType
     */
    select?: ProjectCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountMilestonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MilestoneWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountStagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StageWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountBudgetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BudgetWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountExpensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExpenseWhereInput
  }


  /**
   * Count Type MilestoneCountOutputType
   */

  export type MilestoneCountOutputType = {
    tasks: number
    notes: number
    stages: number
    events: number
  }

  export type MilestoneCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tasks?: boolean | MilestoneCountOutputTypeCountTasksArgs
    notes?: boolean | MilestoneCountOutputTypeCountNotesArgs
    stages?: boolean | MilestoneCountOutputTypeCountStagesArgs
    events?: boolean | MilestoneCountOutputTypeCountEventsArgs
  }

  // Custom InputTypes
  /**
   * MilestoneCountOutputType without action
   */
  export type MilestoneCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MilestoneCountOutputType
     */
    select?: MilestoneCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MilestoneCountOutputType without action
   */
  export type MilestoneCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * MilestoneCountOutputType without action
   */
  export type MilestoneCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }

  /**
   * MilestoneCountOutputType without action
   */
  export type MilestoneCountOutputTypeCountStagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StageWhereInput
  }

  /**
   * MilestoneCountOutputType without action
   */
  export type MilestoneCountOutputTypeCountEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventWhereInput
  }


  /**
   * Count Type TaskCountOutputType
   */

  export type TaskCountOutputType = {
    members: number
    notes: number
    stages: number
    events: number
    expenses: number
    funds: number
  }

  export type TaskCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    members?: boolean | TaskCountOutputTypeCountMembersArgs
    notes?: boolean | TaskCountOutputTypeCountNotesArgs
    stages?: boolean | TaskCountOutputTypeCountStagesArgs
    events?: boolean | TaskCountOutputTypeCountEventsArgs
    expenses?: boolean | TaskCountOutputTypeCountExpensesArgs
    funds?: boolean | TaskCountOutputTypeCountFundsArgs
  }

  // Custom InputTypes
  /**
   * TaskCountOutputType without action
   */
  export type TaskCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaskCountOutputType
     */
    select?: TaskCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TaskCountOutputType without action
   */
  export type TaskCountOutputTypeCountMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * TaskCountOutputType without action
   */
  export type TaskCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }

  /**
   * TaskCountOutputType without action
   */
  export type TaskCountOutputTypeCountStagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StageWhereInput
  }

  /**
   * TaskCountOutputType without action
   */
  export type TaskCountOutputTypeCountEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventWhereInput
  }

  /**
   * TaskCountOutputType without action
   */
  export type TaskCountOutputTypeCountExpensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExpenseWhereInput
  }

  /**
   * TaskCountOutputType without action
   */
  export type TaskCountOutputTypeCountFundsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    BudgetAssignee: number
    CreatorBudget: number
    UpdaterBudget: number
    CreatorClient: number
    UpdaterClient: number
    CreatorEvent: number
    UpdaterEvent: number
    CreatorExpense: number
    UpdaterExpense: number
    FundAssignee: number
    CreatorFund: number
    UpdaterFund: number
    MilestoneAssignee: number
    CreatorMilestone: number
    UpdaterMilestone: number
    CreatorNote: number
    UpdaterNote: number
    CreatorProduct: number
    UpdaterProduct: number
    ProjectAssignee: number
    CreatorProject: number
    UpdaterProject: number
    ProjectMember: number
    CreatorStage: number
    UpdaterStage: number
    TaskAssignee: number
    CreatorTask: number
    UpdaterTask: number
    TaskMember: number
    PipelineAssignee: number
    CreatorPipeline: number
    UpdaterPipeline: number
    PipelineMember: number
    CreatorVendor: number
    UpdaterVendor: number
    CreatorProfile: number
    UpdaterProfile: number
    CreatorCostType: number
    UpdaterCostType: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    BudgetAssignee?: boolean | UserCountOutputTypeCountBudgetAssigneeArgs
    CreatorBudget?: boolean | UserCountOutputTypeCountCreatorBudgetArgs
    UpdaterBudget?: boolean | UserCountOutputTypeCountUpdaterBudgetArgs
    CreatorClient?: boolean | UserCountOutputTypeCountCreatorClientArgs
    UpdaterClient?: boolean | UserCountOutputTypeCountUpdaterClientArgs
    CreatorEvent?: boolean | UserCountOutputTypeCountCreatorEventArgs
    UpdaterEvent?: boolean | UserCountOutputTypeCountUpdaterEventArgs
    CreatorExpense?: boolean | UserCountOutputTypeCountCreatorExpenseArgs
    UpdaterExpense?: boolean | UserCountOutputTypeCountUpdaterExpenseArgs
    FundAssignee?: boolean | UserCountOutputTypeCountFundAssigneeArgs
    CreatorFund?: boolean | UserCountOutputTypeCountCreatorFundArgs
    UpdaterFund?: boolean | UserCountOutputTypeCountUpdaterFundArgs
    MilestoneAssignee?: boolean | UserCountOutputTypeCountMilestoneAssigneeArgs
    CreatorMilestone?: boolean | UserCountOutputTypeCountCreatorMilestoneArgs
    UpdaterMilestone?: boolean | UserCountOutputTypeCountUpdaterMilestoneArgs
    CreatorNote?: boolean | UserCountOutputTypeCountCreatorNoteArgs
    UpdaterNote?: boolean | UserCountOutputTypeCountUpdaterNoteArgs
    CreatorProduct?: boolean | UserCountOutputTypeCountCreatorProductArgs
    UpdaterProduct?: boolean | UserCountOutputTypeCountUpdaterProductArgs
    ProjectAssignee?: boolean | UserCountOutputTypeCountProjectAssigneeArgs
    CreatorProject?: boolean | UserCountOutputTypeCountCreatorProjectArgs
    UpdaterProject?: boolean | UserCountOutputTypeCountUpdaterProjectArgs
    ProjectMember?: boolean | UserCountOutputTypeCountProjectMemberArgs
    CreatorStage?: boolean | UserCountOutputTypeCountCreatorStageArgs
    UpdaterStage?: boolean | UserCountOutputTypeCountUpdaterStageArgs
    TaskAssignee?: boolean | UserCountOutputTypeCountTaskAssigneeArgs
    CreatorTask?: boolean | UserCountOutputTypeCountCreatorTaskArgs
    UpdaterTask?: boolean | UserCountOutputTypeCountUpdaterTaskArgs
    TaskMember?: boolean | UserCountOutputTypeCountTaskMemberArgs
    PipelineAssignee?: boolean | UserCountOutputTypeCountPipelineAssigneeArgs
    CreatorPipeline?: boolean | UserCountOutputTypeCountCreatorPipelineArgs
    UpdaterPipeline?: boolean | UserCountOutputTypeCountUpdaterPipelineArgs
    PipelineMember?: boolean | UserCountOutputTypeCountPipelineMemberArgs
    CreatorVendor?: boolean | UserCountOutputTypeCountCreatorVendorArgs
    UpdaterVendor?: boolean | UserCountOutputTypeCountUpdaterVendorArgs
    CreatorProfile?: boolean | UserCountOutputTypeCountCreatorProfileArgs
    UpdaterProfile?: boolean | UserCountOutputTypeCountUpdaterProfileArgs
    CreatorCostType?: boolean | UserCountOutputTypeCountCreatorCostTypeArgs
    UpdaterCostType?: boolean | UserCountOutputTypeCountUpdaterCostTypeArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBudgetAssigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BudgetWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatorBudgetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BudgetWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdaterBudgetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BudgetWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatorClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdaterClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatorEventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdaterEventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatorExpenseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExpenseWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdaterExpenseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExpenseWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFundAssigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatorFundArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdaterFundArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMilestoneAssigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MilestoneWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatorMilestoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MilestoneWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdaterMilestoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MilestoneWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatorNoteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdaterNoteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatorProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdaterProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProjectAssigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatorProjectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdaterProjectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProjectMemberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatorStageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdaterStageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTaskAssigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatorTaskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdaterTaskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTaskMemberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPipelineAssigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PipelineWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatorPipelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PipelineWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdaterPipelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PipelineWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPipelineMemberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PipelineWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatorVendorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VendorWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdaterVendorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VendorWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatorProfileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfileWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdaterProfileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfileWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatorCostTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CostTypeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdaterCostTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CostTypeWhereInput
  }


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    users: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | RoleCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type OrganizationCountOutputType
   */

  export type OrganizationCountOutputType = {
    users: number
  }

  export type OrganizationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | OrganizationCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationCountOutputType
     */
    select?: OrganizationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Budget
   */

  export type AggregateBudget = {
    _count: BudgetCountAggregateOutputType | null
    _avg: BudgetAvgAggregateOutputType | null
    _sum: BudgetSumAggregateOutputType | null
    _min: BudgetMinAggregateOutputType | null
    _max: BudgetMaxAggregateOutputType | null
  }

  export type BudgetAvgAggregateOutputType = {
    amount: Decimal | null
    revision: Decimal | null
  }

  export type BudgetSumAggregateOutputType = {
    amount: Decimal | null
    revision: Decimal | null
  }

  export type BudgetMinAggregateOutputType = {
    id: string | null
    regNumber: string | null
    description: string | null
    amount: Decimal | null
    approvedDate: Date | null
    revision: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
    projectId: string | null
  }

  export type BudgetMaxAggregateOutputType = {
    id: string | null
    regNumber: string | null
    description: string | null
    amount: Decimal | null
    approvedDate: Date | null
    revision: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
    projectId: string | null
  }

  export type BudgetCountAggregateOutputType = {
    id: number
    regNumber: number
    description: number
    amount: number
    approvedDate: number
    revision: number
    createdAt: number
    updatedAt: number
    assigneeId: number
    createdById: number
    updatedById: number
    projectId: number
    _all: number
  }


  export type BudgetAvgAggregateInputType = {
    amount?: true
    revision?: true
  }

  export type BudgetSumAggregateInputType = {
    amount?: true
    revision?: true
  }

  export type BudgetMinAggregateInputType = {
    id?: true
    regNumber?: true
    description?: true
    amount?: true
    approvedDate?: true
    revision?: true
    createdAt?: true
    updatedAt?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
    projectId?: true
  }

  export type BudgetMaxAggregateInputType = {
    id?: true
    regNumber?: true
    description?: true
    amount?: true
    approvedDate?: true
    revision?: true
    createdAt?: true
    updatedAt?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
    projectId?: true
  }

  export type BudgetCountAggregateInputType = {
    id?: true
    regNumber?: true
    description?: true
    amount?: true
    approvedDate?: true
    revision?: true
    createdAt?: true
    updatedAt?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
    projectId?: true
    _all?: true
  }

  export type BudgetAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Budget to aggregate.
     */
    where?: BudgetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Budgets to fetch.
     */
    orderBy?: BudgetOrderByWithRelationInput | BudgetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BudgetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Budgets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Budgets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Budgets
    **/
    _count?: true | BudgetCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BudgetAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BudgetSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BudgetMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BudgetMaxAggregateInputType
  }

  export type GetBudgetAggregateType<T extends BudgetAggregateArgs> = {
        [P in keyof T & keyof AggregateBudget]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBudget[P]>
      : GetScalarType<T[P], AggregateBudget[P]>
  }




  export type BudgetGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BudgetWhereInput
    orderBy?: BudgetOrderByWithAggregationInput | BudgetOrderByWithAggregationInput[]
    by: BudgetScalarFieldEnum[] | BudgetScalarFieldEnum
    having?: BudgetScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BudgetCountAggregateInputType | true
    _avg?: BudgetAvgAggregateInputType
    _sum?: BudgetSumAggregateInputType
    _min?: BudgetMinAggregateInputType
    _max?: BudgetMaxAggregateInputType
  }

  export type BudgetGroupByOutputType = {
    id: string
    regNumber: string | null
    description: string | null
    amount: Decimal | null
    approvedDate: Date | null
    revision: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
    projectId: string | null
    _count: BudgetCountAggregateOutputType | null
    _avg: BudgetAvgAggregateOutputType | null
    _sum: BudgetSumAggregateOutputType | null
    _min: BudgetMinAggregateOutputType | null
    _max: BudgetMaxAggregateOutputType | null
  }

  type GetBudgetGroupByPayload<T extends BudgetGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BudgetGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BudgetGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BudgetGroupByOutputType[P]>
            : GetScalarType<T[P], BudgetGroupByOutputType[P]>
        }
      >
    >


  export type BudgetSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    description?: boolean
    amount?: boolean
    approvedDate?: boolean
    revision?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    projectId?: boolean
    assignee?: boolean | Budget$assigneeArgs<ExtArgs>
    createdBy?: boolean | Budget$createdByArgs<ExtArgs>
    updatedBy?: boolean | Budget$updatedByArgs<ExtArgs>
    items?: boolean | Budget$itemsArgs<ExtArgs>
    project?: boolean | Budget$projectArgs<ExtArgs>
    notes?: boolean | Budget$notesArgs<ExtArgs>
    stages?: boolean | Budget$stagesArgs<ExtArgs>
    _count?: boolean | BudgetCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["budget"]>

  export type BudgetSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    description?: boolean
    amount?: boolean
    approvedDate?: boolean
    revision?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    projectId?: boolean
    assignee?: boolean | Budget$assigneeArgs<ExtArgs>
    createdBy?: boolean | Budget$createdByArgs<ExtArgs>
    updatedBy?: boolean | Budget$updatedByArgs<ExtArgs>
    project?: boolean | Budget$projectArgs<ExtArgs>
  }, ExtArgs["result"]["budget"]>

  export type BudgetSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    description?: boolean
    amount?: boolean
    approvedDate?: boolean
    revision?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    projectId?: boolean
    assignee?: boolean | Budget$assigneeArgs<ExtArgs>
    createdBy?: boolean | Budget$createdByArgs<ExtArgs>
    updatedBy?: boolean | Budget$updatedByArgs<ExtArgs>
    project?: boolean | Budget$projectArgs<ExtArgs>
  }, ExtArgs["result"]["budget"]>

  export type BudgetSelectScalar = {
    id?: boolean
    regNumber?: boolean
    description?: boolean
    amount?: boolean
    approvedDate?: boolean
    revision?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    projectId?: boolean
  }

  export type BudgetOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "regNumber" | "description" | "amount" | "approvedDate" | "revision" | "createdAt" | "updatedAt" | "assigneeId" | "createdById" | "updatedById" | "projectId", ExtArgs["result"]["budget"]>
  export type BudgetInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignee?: boolean | Budget$assigneeArgs<ExtArgs>
    createdBy?: boolean | Budget$createdByArgs<ExtArgs>
    updatedBy?: boolean | Budget$updatedByArgs<ExtArgs>
    items?: boolean | Budget$itemsArgs<ExtArgs>
    project?: boolean | Budget$projectArgs<ExtArgs>
    notes?: boolean | Budget$notesArgs<ExtArgs>
    stages?: boolean | Budget$stagesArgs<ExtArgs>
    _count?: boolean | BudgetCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BudgetIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignee?: boolean | Budget$assigneeArgs<ExtArgs>
    createdBy?: boolean | Budget$createdByArgs<ExtArgs>
    updatedBy?: boolean | Budget$updatedByArgs<ExtArgs>
    project?: boolean | Budget$projectArgs<ExtArgs>
  }
  export type BudgetIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignee?: boolean | Budget$assigneeArgs<ExtArgs>
    createdBy?: boolean | Budget$createdByArgs<ExtArgs>
    updatedBy?: boolean | Budget$updatedByArgs<ExtArgs>
    project?: boolean | Budget$projectArgs<ExtArgs>
  }

  export type $BudgetPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Budget"
    objects: {
      assignee: Prisma.$UserPayload<ExtArgs> | null
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      items: Prisma.$BudgetItemPayload<ExtArgs>[]
      project: Prisma.$ProjectPayload<ExtArgs> | null
      notes: Prisma.$NotePayload<ExtArgs>[]
      stages: Prisma.$StagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      regNumber: string | null
      description: string | null
      amount: Prisma.Decimal | null
      approvedDate: Date | null
      revision: Prisma.Decimal | null
      createdAt: Date | null
      updatedAt: Date | null
      assigneeId: string | null
      createdById: string | null
      updatedById: string | null
      projectId: string | null
    }, ExtArgs["result"]["budget"]>
    composites: {}
  }

  type BudgetGetPayload<S extends boolean | null | undefined | BudgetDefaultArgs> = $Result.GetResult<Prisma.$BudgetPayload, S>

  type BudgetCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BudgetFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BudgetCountAggregateInputType | true
    }

  export interface BudgetDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Budget'], meta: { name: 'Budget' } }
    /**
     * Find zero or one Budget that matches the filter.
     * @param {BudgetFindUniqueArgs} args - Arguments to find a Budget
     * @example
     * // Get one Budget
     * const budget = await prisma.budget.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BudgetFindUniqueArgs>(args: SelectSubset<T, BudgetFindUniqueArgs<ExtArgs>>): Prisma__BudgetClient<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Budget that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BudgetFindUniqueOrThrowArgs} args - Arguments to find a Budget
     * @example
     * // Get one Budget
     * const budget = await prisma.budget.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BudgetFindUniqueOrThrowArgs>(args: SelectSubset<T, BudgetFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BudgetClient<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Budget that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BudgetFindFirstArgs} args - Arguments to find a Budget
     * @example
     * // Get one Budget
     * const budget = await prisma.budget.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BudgetFindFirstArgs>(args?: SelectSubset<T, BudgetFindFirstArgs<ExtArgs>>): Prisma__BudgetClient<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Budget that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BudgetFindFirstOrThrowArgs} args - Arguments to find a Budget
     * @example
     * // Get one Budget
     * const budget = await prisma.budget.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BudgetFindFirstOrThrowArgs>(args?: SelectSubset<T, BudgetFindFirstOrThrowArgs<ExtArgs>>): Prisma__BudgetClient<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Budgets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BudgetFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Budgets
     * const budgets = await prisma.budget.findMany()
     * 
     * // Get first 10 Budgets
     * const budgets = await prisma.budget.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const budgetWithIdOnly = await prisma.budget.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BudgetFindManyArgs>(args?: SelectSubset<T, BudgetFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Budget.
     * @param {BudgetCreateArgs} args - Arguments to create a Budget.
     * @example
     * // Create one Budget
     * const Budget = await prisma.budget.create({
     *   data: {
     *     // ... data to create a Budget
     *   }
     * })
     * 
     */
    create<T extends BudgetCreateArgs>(args: SelectSubset<T, BudgetCreateArgs<ExtArgs>>): Prisma__BudgetClient<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Budgets.
     * @param {BudgetCreateManyArgs} args - Arguments to create many Budgets.
     * @example
     * // Create many Budgets
     * const budget = await prisma.budget.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BudgetCreateManyArgs>(args?: SelectSubset<T, BudgetCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Budgets and returns the data saved in the database.
     * @param {BudgetCreateManyAndReturnArgs} args - Arguments to create many Budgets.
     * @example
     * // Create many Budgets
     * const budget = await prisma.budget.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Budgets and only return the `id`
     * const budgetWithIdOnly = await prisma.budget.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BudgetCreateManyAndReturnArgs>(args?: SelectSubset<T, BudgetCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Budget.
     * @param {BudgetDeleteArgs} args - Arguments to delete one Budget.
     * @example
     * // Delete one Budget
     * const Budget = await prisma.budget.delete({
     *   where: {
     *     // ... filter to delete one Budget
     *   }
     * })
     * 
     */
    delete<T extends BudgetDeleteArgs>(args: SelectSubset<T, BudgetDeleteArgs<ExtArgs>>): Prisma__BudgetClient<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Budget.
     * @param {BudgetUpdateArgs} args - Arguments to update one Budget.
     * @example
     * // Update one Budget
     * const budget = await prisma.budget.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BudgetUpdateArgs>(args: SelectSubset<T, BudgetUpdateArgs<ExtArgs>>): Prisma__BudgetClient<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Budgets.
     * @param {BudgetDeleteManyArgs} args - Arguments to filter Budgets to delete.
     * @example
     * // Delete a few Budgets
     * const { count } = await prisma.budget.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BudgetDeleteManyArgs>(args?: SelectSubset<T, BudgetDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Budgets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BudgetUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Budgets
     * const budget = await prisma.budget.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BudgetUpdateManyArgs>(args: SelectSubset<T, BudgetUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Budgets and returns the data updated in the database.
     * @param {BudgetUpdateManyAndReturnArgs} args - Arguments to update many Budgets.
     * @example
     * // Update many Budgets
     * const budget = await prisma.budget.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Budgets and only return the `id`
     * const budgetWithIdOnly = await prisma.budget.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BudgetUpdateManyAndReturnArgs>(args: SelectSubset<T, BudgetUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Budget.
     * @param {BudgetUpsertArgs} args - Arguments to update or create a Budget.
     * @example
     * // Update or create a Budget
     * const budget = await prisma.budget.upsert({
     *   create: {
     *     // ... data to create a Budget
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Budget we want to update
     *   }
     * })
     */
    upsert<T extends BudgetUpsertArgs>(args: SelectSubset<T, BudgetUpsertArgs<ExtArgs>>): Prisma__BudgetClient<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Budgets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BudgetCountArgs} args - Arguments to filter Budgets to count.
     * @example
     * // Count the number of Budgets
     * const count = await prisma.budget.count({
     *   where: {
     *     // ... the filter for the Budgets we want to count
     *   }
     * })
    **/
    count<T extends BudgetCountArgs>(
      args?: Subset<T, BudgetCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BudgetCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Budget.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BudgetAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BudgetAggregateArgs>(args: Subset<T, BudgetAggregateArgs>): Prisma.PrismaPromise<GetBudgetAggregateType<T>>

    /**
     * Group by Budget.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BudgetGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BudgetGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BudgetGroupByArgs['orderBy'] }
        : { orderBy?: BudgetGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BudgetGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBudgetGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Budget model
   */
  readonly fields: BudgetFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Budget.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BudgetClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    assignee<T extends Budget$assigneeArgs<ExtArgs> = {}>(args?: Subset<T, Budget$assigneeArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends Budget$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Budget$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Budget$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Budget$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    items<T extends Budget$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Budget$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BudgetItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    project<T extends Budget$projectArgs<ExtArgs> = {}>(args?: Subset<T, Budget$projectArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    notes<T extends Budget$notesArgs<ExtArgs> = {}>(args?: Subset<T, Budget$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stages<T extends Budget$stagesArgs<ExtArgs> = {}>(args?: Subset<T, Budget$stagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Budget model
   */
  interface BudgetFieldRefs {
    readonly id: FieldRef<"Budget", 'String'>
    readonly regNumber: FieldRef<"Budget", 'String'>
    readonly description: FieldRef<"Budget", 'String'>
    readonly amount: FieldRef<"Budget", 'Decimal'>
    readonly approvedDate: FieldRef<"Budget", 'DateTime'>
    readonly revision: FieldRef<"Budget", 'Decimal'>
    readonly createdAt: FieldRef<"Budget", 'DateTime'>
    readonly updatedAt: FieldRef<"Budget", 'DateTime'>
    readonly assigneeId: FieldRef<"Budget", 'String'>
    readonly createdById: FieldRef<"Budget", 'String'>
    readonly updatedById: FieldRef<"Budget", 'String'>
    readonly projectId: FieldRef<"Budget", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Budget findUnique
   */
  export type BudgetFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
    /**
     * Filter, which Budget to fetch.
     */
    where: BudgetWhereUniqueInput
  }

  /**
   * Budget findUniqueOrThrow
   */
  export type BudgetFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
    /**
     * Filter, which Budget to fetch.
     */
    where: BudgetWhereUniqueInput
  }

  /**
   * Budget findFirst
   */
  export type BudgetFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
    /**
     * Filter, which Budget to fetch.
     */
    where?: BudgetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Budgets to fetch.
     */
    orderBy?: BudgetOrderByWithRelationInput | BudgetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Budgets.
     */
    cursor?: BudgetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Budgets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Budgets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Budgets.
     */
    distinct?: BudgetScalarFieldEnum | BudgetScalarFieldEnum[]
  }

  /**
   * Budget findFirstOrThrow
   */
  export type BudgetFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
    /**
     * Filter, which Budget to fetch.
     */
    where?: BudgetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Budgets to fetch.
     */
    orderBy?: BudgetOrderByWithRelationInput | BudgetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Budgets.
     */
    cursor?: BudgetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Budgets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Budgets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Budgets.
     */
    distinct?: BudgetScalarFieldEnum | BudgetScalarFieldEnum[]
  }

  /**
   * Budget findMany
   */
  export type BudgetFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
    /**
     * Filter, which Budgets to fetch.
     */
    where?: BudgetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Budgets to fetch.
     */
    orderBy?: BudgetOrderByWithRelationInput | BudgetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Budgets.
     */
    cursor?: BudgetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Budgets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Budgets.
     */
    skip?: number
    distinct?: BudgetScalarFieldEnum | BudgetScalarFieldEnum[]
  }

  /**
   * Budget create
   */
  export type BudgetCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
    /**
     * The data needed to create a Budget.
     */
    data?: XOR<BudgetCreateInput, BudgetUncheckedCreateInput>
  }

  /**
   * Budget createMany
   */
  export type BudgetCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Budgets.
     */
    data: BudgetCreateManyInput | BudgetCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Budget createManyAndReturn
   */
  export type BudgetCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * The data used to create many Budgets.
     */
    data: BudgetCreateManyInput | BudgetCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Budget update
   */
  export type BudgetUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
    /**
     * The data needed to update a Budget.
     */
    data: XOR<BudgetUpdateInput, BudgetUncheckedUpdateInput>
    /**
     * Choose, which Budget to update.
     */
    where: BudgetWhereUniqueInput
  }

  /**
   * Budget updateMany
   */
  export type BudgetUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Budgets.
     */
    data: XOR<BudgetUpdateManyMutationInput, BudgetUncheckedUpdateManyInput>
    /**
     * Filter which Budgets to update
     */
    where?: BudgetWhereInput
    /**
     * Limit how many Budgets to update.
     */
    limit?: number
  }

  /**
   * Budget updateManyAndReturn
   */
  export type BudgetUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * The data used to update Budgets.
     */
    data: XOR<BudgetUpdateManyMutationInput, BudgetUncheckedUpdateManyInput>
    /**
     * Filter which Budgets to update
     */
    where?: BudgetWhereInput
    /**
     * Limit how many Budgets to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Budget upsert
   */
  export type BudgetUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
    /**
     * The filter to search for the Budget to update in case it exists.
     */
    where: BudgetWhereUniqueInput
    /**
     * In case the Budget found by the `where` argument doesn't exist, create a new Budget with this data.
     */
    create: XOR<BudgetCreateInput, BudgetUncheckedCreateInput>
    /**
     * In case the Budget was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BudgetUpdateInput, BudgetUncheckedUpdateInput>
  }

  /**
   * Budget delete
   */
  export type BudgetDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
    /**
     * Filter which Budget to delete.
     */
    where: BudgetWhereUniqueInput
  }

  /**
   * Budget deleteMany
   */
  export type BudgetDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Budgets to delete
     */
    where?: BudgetWhereInput
    /**
     * Limit how many Budgets to delete.
     */
    limit?: number
  }

  /**
   * Budget.assignee
   */
  export type Budget$assigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Budget.createdBy
   */
  export type Budget$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Budget.updatedBy
   */
  export type Budget$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Budget.items
   */
  export type Budget$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BudgetItem
     */
    select?: BudgetItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BudgetItem
     */
    omit?: BudgetItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetItemInclude<ExtArgs> | null
    where?: BudgetItemWhereInput
    orderBy?: BudgetItemOrderByWithRelationInput | BudgetItemOrderByWithRelationInput[]
    cursor?: BudgetItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BudgetItemScalarFieldEnum | BudgetItemScalarFieldEnum[]
  }

  /**
   * Budget.project
   */
  export type Budget$projectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
  }

  /**
   * Budget.notes
   */
  export type Budget$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Budget.stages
   */
  export type Budget$stagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    where?: StageWhereInput
    orderBy?: StageOrderByWithRelationInput | StageOrderByWithRelationInput[]
    cursor?: StageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StageScalarFieldEnum | StageScalarFieldEnum[]
  }

  /**
   * Budget without action
   */
  export type BudgetDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
  }


  /**
   * Model BudgetItem
   */

  export type AggregateBudgetItem = {
    _count: BudgetItemCountAggregateOutputType | null
    _avg: BudgetItemAvgAggregateOutputType | null
    _sum: BudgetItemSumAggregateOutputType | null
    _min: BudgetItemMinAggregateOutputType | null
    _max: BudgetItemMaxAggregateOutputType | null
  }

  export type BudgetItemAvgAggregateOutputType = {
    quantity: Decimal | null
    timeUnit: Decimal | null
    unitPrice: Decimal | null
    amount: Decimal | null
  }

  export type BudgetItemSumAggregateOutputType = {
    quantity: Decimal | null
    timeUnit: Decimal | null
    unitPrice: Decimal | null
    amount: Decimal | null
  }

  export type BudgetItemMinAggregateOutputType = {
    id: string | null
    budgetId: string | null
    categoryId: string | null
    description: string | null
    quantity: Decimal | null
    timeUnit: Decimal | null
    unitPrice: Decimal | null
    amount: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BudgetItemMaxAggregateOutputType = {
    id: string | null
    budgetId: string | null
    categoryId: string | null
    description: string | null
    quantity: Decimal | null
    timeUnit: Decimal | null
    unitPrice: Decimal | null
    amount: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BudgetItemCountAggregateOutputType = {
    id: number
    budgetId: number
    categoryId: number
    description: number
    quantity: number
    timeUnit: number
    unitPrice: number
    amount: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BudgetItemAvgAggregateInputType = {
    quantity?: true
    timeUnit?: true
    unitPrice?: true
    amount?: true
  }

  export type BudgetItemSumAggregateInputType = {
    quantity?: true
    timeUnit?: true
    unitPrice?: true
    amount?: true
  }

  export type BudgetItemMinAggregateInputType = {
    id?: true
    budgetId?: true
    categoryId?: true
    description?: true
    quantity?: true
    timeUnit?: true
    unitPrice?: true
    amount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BudgetItemMaxAggregateInputType = {
    id?: true
    budgetId?: true
    categoryId?: true
    description?: true
    quantity?: true
    timeUnit?: true
    unitPrice?: true
    amount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BudgetItemCountAggregateInputType = {
    id?: true
    budgetId?: true
    categoryId?: true
    description?: true
    quantity?: true
    timeUnit?: true
    unitPrice?: true
    amount?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BudgetItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BudgetItem to aggregate.
     */
    where?: BudgetItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BudgetItems to fetch.
     */
    orderBy?: BudgetItemOrderByWithRelationInput | BudgetItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BudgetItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BudgetItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BudgetItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BudgetItems
    **/
    _count?: true | BudgetItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BudgetItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BudgetItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BudgetItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BudgetItemMaxAggregateInputType
  }

  export type GetBudgetItemAggregateType<T extends BudgetItemAggregateArgs> = {
        [P in keyof T & keyof AggregateBudgetItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBudgetItem[P]>
      : GetScalarType<T[P], AggregateBudgetItem[P]>
  }




  export type BudgetItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BudgetItemWhereInput
    orderBy?: BudgetItemOrderByWithAggregationInput | BudgetItemOrderByWithAggregationInput[]
    by: BudgetItemScalarFieldEnum[] | BudgetItemScalarFieldEnum
    having?: BudgetItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BudgetItemCountAggregateInputType | true
    _avg?: BudgetItemAvgAggregateInputType
    _sum?: BudgetItemSumAggregateInputType
    _min?: BudgetItemMinAggregateInputType
    _max?: BudgetItemMaxAggregateInputType
  }

  export type BudgetItemGroupByOutputType = {
    id: string
    budgetId: string
    categoryId: string | null
    description: string
    quantity: Decimal
    timeUnit: Decimal | null
    unitPrice: Decimal
    amount: Decimal
    createdAt: Date | null
    updatedAt: Date | null
    _count: BudgetItemCountAggregateOutputType | null
    _avg: BudgetItemAvgAggregateOutputType | null
    _sum: BudgetItemSumAggregateOutputType | null
    _min: BudgetItemMinAggregateOutputType | null
    _max: BudgetItemMaxAggregateOutputType | null
  }

  type GetBudgetItemGroupByPayload<T extends BudgetItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BudgetItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BudgetItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BudgetItemGroupByOutputType[P]>
            : GetScalarType<T[P], BudgetItemGroupByOutputType[P]>
        }
      >
    >


  export type BudgetItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    budgetId?: boolean
    categoryId?: boolean
    description?: boolean
    quantity?: boolean
    timeUnit?: boolean
    unitPrice?: boolean
    amount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    budget?: boolean | BudgetDefaultArgs<ExtArgs>
    category?: boolean | BudgetItem$categoryArgs<ExtArgs>
  }, ExtArgs["result"]["budgetItem"]>

  export type BudgetItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    budgetId?: boolean
    categoryId?: boolean
    description?: boolean
    quantity?: boolean
    timeUnit?: boolean
    unitPrice?: boolean
    amount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    budget?: boolean | BudgetDefaultArgs<ExtArgs>
    category?: boolean | BudgetItem$categoryArgs<ExtArgs>
  }, ExtArgs["result"]["budgetItem"]>

  export type BudgetItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    budgetId?: boolean
    categoryId?: boolean
    description?: boolean
    quantity?: boolean
    timeUnit?: boolean
    unitPrice?: boolean
    amount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    budget?: boolean | BudgetDefaultArgs<ExtArgs>
    category?: boolean | BudgetItem$categoryArgs<ExtArgs>
  }, ExtArgs["result"]["budgetItem"]>

  export type BudgetItemSelectScalar = {
    id?: boolean
    budgetId?: boolean
    categoryId?: boolean
    description?: boolean
    quantity?: boolean
    timeUnit?: boolean
    unitPrice?: boolean
    amount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BudgetItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "budgetId" | "categoryId" | "description" | "quantity" | "timeUnit" | "unitPrice" | "amount" | "createdAt" | "updatedAt", ExtArgs["result"]["budgetItem"]>
  export type BudgetItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    budget?: boolean | BudgetDefaultArgs<ExtArgs>
    category?: boolean | BudgetItem$categoryArgs<ExtArgs>
  }
  export type BudgetItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    budget?: boolean | BudgetDefaultArgs<ExtArgs>
    category?: boolean | BudgetItem$categoryArgs<ExtArgs>
  }
  export type BudgetItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    budget?: boolean | BudgetDefaultArgs<ExtArgs>
    category?: boolean | BudgetItem$categoryArgs<ExtArgs>
  }

  export type $BudgetItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BudgetItem"
    objects: {
      budget: Prisma.$BudgetPayload<ExtArgs>
      category: Prisma.$CostTypePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      budgetId: string
      categoryId: string | null
      description: string
      quantity: Prisma.Decimal
      timeUnit: Prisma.Decimal | null
      unitPrice: Prisma.Decimal
      amount: Prisma.Decimal
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["budgetItem"]>
    composites: {}
  }

  type BudgetItemGetPayload<S extends boolean | null | undefined | BudgetItemDefaultArgs> = $Result.GetResult<Prisma.$BudgetItemPayload, S>

  type BudgetItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BudgetItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BudgetItemCountAggregateInputType | true
    }

  export interface BudgetItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BudgetItem'], meta: { name: 'BudgetItem' } }
    /**
     * Find zero or one BudgetItem that matches the filter.
     * @param {BudgetItemFindUniqueArgs} args - Arguments to find a BudgetItem
     * @example
     * // Get one BudgetItem
     * const budgetItem = await prisma.budgetItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BudgetItemFindUniqueArgs>(args: SelectSubset<T, BudgetItemFindUniqueArgs<ExtArgs>>): Prisma__BudgetItemClient<$Result.GetResult<Prisma.$BudgetItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BudgetItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BudgetItemFindUniqueOrThrowArgs} args - Arguments to find a BudgetItem
     * @example
     * // Get one BudgetItem
     * const budgetItem = await prisma.budgetItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BudgetItemFindUniqueOrThrowArgs>(args: SelectSubset<T, BudgetItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BudgetItemClient<$Result.GetResult<Prisma.$BudgetItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BudgetItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BudgetItemFindFirstArgs} args - Arguments to find a BudgetItem
     * @example
     * // Get one BudgetItem
     * const budgetItem = await prisma.budgetItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BudgetItemFindFirstArgs>(args?: SelectSubset<T, BudgetItemFindFirstArgs<ExtArgs>>): Prisma__BudgetItemClient<$Result.GetResult<Prisma.$BudgetItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BudgetItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BudgetItemFindFirstOrThrowArgs} args - Arguments to find a BudgetItem
     * @example
     * // Get one BudgetItem
     * const budgetItem = await prisma.budgetItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BudgetItemFindFirstOrThrowArgs>(args?: SelectSubset<T, BudgetItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__BudgetItemClient<$Result.GetResult<Prisma.$BudgetItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BudgetItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BudgetItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BudgetItems
     * const budgetItems = await prisma.budgetItem.findMany()
     * 
     * // Get first 10 BudgetItems
     * const budgetItems = await prisma.budgetItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const budgetItemWithIdOnly = await prisma.budgetItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BudgetItemFindManyArgs>(args?: SelectSubset<T, BudgetItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BudgetItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BudgetItem.
     * @param {BudgetItemCreateArgs} args - Arguments to create a BudgetItem.
     * @example
     * // Create one BudgetItem
     * const BudgetItem = await prisma.budgetItem.create({
     *   data: {
     *     // ... data to create a BudgetItem
     *   }
     * })
     * 
     */
    create<T extends BudgetItemCreateArgs>(args: SelectSubset<T, BudgetItemCreateArgs<ExtArgs>>): Prisma__BudgetItemClient<$Result.GetResult<Prisma.$BudgetItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BudgetItems.
     * @param {BudgetItemCreateManyArgs} args - Arguments to create many BudgetItems.
     * @example
     * // Create many BudgetItems
     * const budgetItem = await prisma.budgetItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BudgetItemCreateManyArgs>(args?: SelectSubset<T, BudgetItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BudgetItems and returns the data saved in the database.
     * @param {BudgetItemCreateManyAndReturnArgs} args - Arguments to create many BudgetItems.
     * @example
     * // Create many BudgetItems
     * const budgetItem = await prisma.budgetItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BudgetItems and only return the `id`
     * const budgetItemWithIdOnly = await prisma.budgetItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BudgetItemCreateManyAndReturnArgs>(args?: SelectSubset<T, BudgetItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BudgetItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BudgetItem.
     * @param {BudgetItemDeleteArgs} args - Arguments to delete one BudgetItem.
     * @example
     * // Delete one BudgetItem
     * const BudgetItem = await prisma.budgetItem.delete({
     *   where: {
     *     // ... filter to delete one BudgetItem
     *   }
     * })
     * 
     */
    delete<T extends BudgetItemDeleteArgs>(args: SelectSubset<T, BudgetItemDeleteArgs<ExtArgs>>): Prisma__BudgetItemClient<$Result.GetResult<Prisma.$BudgetItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BudgetItem.
     * @param {BudgetItemUpdateArgs} args - Arguments to update one BudgetItem.
     * @example
     * // Update one BudgetItem
     * const budgetItem = await prisma.budgetItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BudgetItemUpdateArgs>(args: SelectSubset<T, BudgetItemUpdateArgs<ExtArgs>>): Prisma__BudgetItemClient<$Result.GetResult<Prisma.$BudgetItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BudgetItems.
     * @param {BudgetItemDeleteManyArgs} args - Arguments to filter BudgetItems to delete.
     * @example
     * // Delete a few BudgetItems
     * const { count } = await prisma.budgetItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BudgetItemDeleteManyArgs>(args?: SelectSubset<T, BudgetItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BudgetItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BudgetItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BudgetItems
     * const budgetItem = await prisma.budgetItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BudgetItemUpdateManyArgs>(args: SelectSubset<T, BudgetItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BudgetItems and returns the data updated in the database.
     * @param {BudgetItemUpdateManyAndReturnArgs} args - Arguments to update many BudgetItems.
     * @example
     * // Update many BudgetItems
     * const budgetItem = await prisma.budgetItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BudgetItems and only return the `id`
     * const budgetItemWithIdOnly = await prisma.budgetItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BudgetItemUpdateManyAndReturnArgs>(args: SelectSubset<T, BudgetItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BudgetItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BudgetItem.
     * @param {BudgetItemUpsertArgs} args - Arguments to update or create a BudgetItem.
     * @example
     * // Update or create a BudgetItem
     * const budgetItem = await prisma.budgetItem.upsert({
     *   create: {
     *     // ... data to create a BudgetItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BudgetItem we want to update
     *   }
     * })
     */
    upsert<T extends BudgetItemUpsertArgs>(args: SelectSubset<T, BudgetItemUpsertArgs<ExtArgs>>): Prisma__BudgetItemClient<$Result.GetResult<Prisma.$BudgetItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BudgetItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BudgetItemCountArgs} args - Arguments to filter BudgetItems to count.
     * @example
     * // Count the number of BudgetItems
     * const count = await prisma.budgetItem.count({
     *   where: {
     *     // ... the filter for the BudgetItems we want to count
     *   }
     * })
    **/
    count<T extends BudgetItemCountArgs>(
      args?: Subset<T, BudgetItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BudgetItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BudgetItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BudgetItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BudgetItemAggregateArgs>(args: Subset<T, BudgetItemAggregateArgs>): Prisma.PrismaPromise<GetBudgetItemAggregateType<T>>

    /**
     * Group by BudgetItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BudgetItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BudgetItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BudgetItemGroupByArgs['orderBy'] }
        : { orderBy?: BudgetItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BudgetItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBudgetItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BudgetItem model
   */
  readonly fields: BudgetItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BudgetItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BudgetItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    budget<T extends BudgetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BudgetDefaultArgs<ExtArgs>>): Prisma__BudgetClient<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    category<T extends BudgetItem$categoryArgs<ExtArgs> = {}>(args?: Subset<T, BudgetItem$categoryArgs<ExtArgs>>): Prisma__CostTypeClient<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BudgetItem model
   */
  interface BudgetItemFieldRefs {
    readonly id: FieldRef<"BudgetItem", 'String'>
    readonly budgetId: FieldRef<"BudgetItem", 'String'>
    readonly categoryId: FieldRef<"BudgetItem", 'String'>
    readonly description: FieldRef<"BudgetItem", 'String'>
    readonly quantity: FieldRef<"BudgetItem", 'Decimal'>
    readonly timeUnit: FieldRef<"BudgetItem", 'Decimal'>
    readonly unitPrice: FieldRef<"BudgetItem", 'Decimal'>
    readonly amount: FieldRef<"BudgetItem", 'Decimal'>
    readonly createdAt: FieldRef<"BudgetItem", 'DateTime'>
    readonly updatedAt: FieldRef<"BudgetItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BudgetItem findUnique
   */
  export type BudgetItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BudgetItem
     */
    select?: BudgetItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BudgetItem
     */
    omit?: BudgetItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetItemInclude<ExtArgs> | null
    /**
     * Filter, which BudgetItem to fetch.
     */
    where: BudgetItemWhereUniqueInput
  }

  /**
   * BudgetItem findUniqueOrThrow
   */
  export type BudgetItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BudgetItem
     */
    select?: BudgetItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BudgetItem
     */
    omit?: BudgetItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetItemInclude<ExtArgs> | null
    /**
     * Filter, which BudgetItem to fetch.
     */
    where: BudgetItemWhereUniqueInput
  }

  /**
   * BudgetItem findFirst
   */
  export type BudgetItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BudgetItem
     */
    select?: BudgetItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BudgetItem
     */
    omit?: BudgetItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetItemInclude<ExtArgs> | null
    /**
     * Filter, which BudgetItem to fetch.
     */
    where?: BudgetItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BudgetItems to fetch.
     */
    orderBy?: BudgetItemOrderByWithRelationInput | BudgetItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BudgetItems.
     */
    cursor?: BudgetItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BudgetItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BudgetItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BudgetItems.
     */
    distinct?: BudgetItemScalarFieldEnum | BudgetItemScalarFieldEnum[]
  }

  /**
   * BudgetItem findFirstOrThrow
   */
  export type BudgetItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BudgetItem
     */
    select?: BudgetItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BudgetItem
     */
    omit?: BudgetItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetItemInclude<ExtArgs> | null
    /**
     * Filter, which BudgetItem to fetch.
     */
    where?: BudgetItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BudgetItems to fetch.
     */
    orderBy?: BudgetItemOrderByWithRelationInput | BudgetItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BudgetItems.
     */
    cursor?: BudgetItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BudgetItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BudgetItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BudgetItems.
     */
    distinct?: BudgetItemScalarFieldEnum | BudgetItemScalarFieldEnum[]
  }

  /**
   * BudgetItem findMany
   */
  export type BudgetItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BudgetItem
     */
    select?: BudgetItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BudgetItem
     */
    omit?: BudgetItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetItemInclude<ExtArgs> | null
    /**
     * Filter, which BudgetItems to fetch.
     */
    where?: BudgetItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BudgetItems to fetch.
     */
    orderBy?: BudgetItemOrderByWithRelationInput | BudgetItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BudgetItems.
     */
    cursor?: BudgetItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BudgetItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BudgetItems.
     */
    skip?: number
    distinct?: BudgetItemScalarFieldEnum | BudgetItemScalarFieldEnum[]
  }

  /**
   * BudgetItem create
   */
  export type BudgetItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BudgetItem
     */
    select?: BudgetItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BudgetItem
     */
    omit?: BudgetItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetItemInclude<ExtArgs> | null
    /**
     * The data needed to create a BudgetItem.
     */
    data: XOR<BudgetItemCreateInput, BudgetItemUncheckedCreateInput>
  }

  /**
   * BudgetItem createMany
   */
  export type BudgetItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BudgetItems.
     */
    data: BudgetItemCreateManyInput | BudgetItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BudgetItem createManyAndReturn
   */
  export type BudgetItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BudgetItem
     */
    select?: BudgetItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BudgetItem
     */
    omit?: BudgetItemOmit<ExtArgs> | null
    /**
     * The data used to create many BudgetItems.
     */
    data: BudgetItemCreateManyInput | BudgetItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BudgetItem update
   */
  export type BudgetItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BudgetItem
     */
    select?: BudgetItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BudgetItem
     */
    omit?: BudgetItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetItemInclude<ExtArgs> | null
    /**
     * The data needed to update a BudgetItem.
     */
    data: XOR<BudgetItemUpdateInput, BudgetItemUncheckedUpdateInput>
    /**
     * Choose, which BudgetItem to update.
     */
    where: BudgetItemWhereUniqueInput
  }

  /**
   * BudgetItem updateMany
   */
  export type BudgetItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BudgetItems.
     */
    data: XOR<BudgetItemUpdateManyMutationInput, BudgetItemUncheckedUpdateManyInput>
    /**
     * Filter which BudgetItems to update
     */
    where?: BudgetItemWhereInput
    /**
     * Limit how many BudgetItems to update.
     */
    limit?: number
  }

  /**
   * BudgetItem updateManyAndReturn
   */
  export type BudgetItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BudgetItem
     */
    select?: BudgetItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BudgetItem
     */
    omit?: BudgetItemOmit<ExtArgs> | null
    /**
     * The data used to update BudgetItems.
     */
    data: XOR<BudgetItemUpdateManyMutationInput, BudgetItemUncheckedUpdateManyInput>
    /**
     * Filter which BudgetItems to update
     */
    where?: BudgetItemWhereInput
    /**
     * Limit how many BudgetItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BudgetItem upsert
   */
  export type BudgetItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BudgetItem
     */
    select?: BudgetItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BudgetItem
     */
    omit?: BudgetItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetItemInclude<ExtArgs> | null
    /**
     * The filter to search for the BudgetItem to update in case it exists.
     */
    where: BudgetItemWhereUniqueInput
    /**
     * In case the BudgetItem found by the `where` argument doesn't exist, create a new BudgetItem with this data.
     */
    create: XOR<BudgetItemCreateInput, BudgetItemUncheckedCreateInput>
    /**
     * In case the BudgetItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BudgetItemUpdateInput, BudgetItemUncheckedUpdateInput>
  }

  /**
   * BudgetItem delete
   */
  export type BudgetItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BudgetItem
     */
    select?: BudgetItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BudgetItem
     */
    omit?: BudgetItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetItemInclude<ExtArgs> | null
    /**
     * Filter which BudgetItem to delete.
     */
    where: BudgetItemWhereUniqueInput
  }

  /**
   * BudgetItem deleteMany
   */
  export type BudgetItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BudgetItems to delete
     */
    where?: BudgetItemWhereInput
    /**
     * Limit how many BudgetItems to delete.
     */
    limit?: number
  }

  /**
   * BudgetItem.category
   */
  export type BudgetItem$categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
    where?: CostTypeWhereInput
  }

  /**
   * BudgetItem without action
   */
  export type BudgetItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BudgetItem
     */
    select?: BudgetItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BudgetItem
     */
    omit?: BudgetItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetItemInclude<ExtArgs> | null
  }


  /**
   * Model Fund
   */

  export type AggregateFund = {
    _count: FundCountAggregateOutputType | null
    _avg: FundAvgAggregateOutputType | null
    _sum: FundSumAggregateOutputType | null
    _min: FundMinAggregateOutputType | null
    _max: FundMaxAggregateOutputType | null
  }

  export type FundAvgAggregateOutputType = {
    amount: Decimal | null
    revision: Decimal | null
  }

  export type FundSumAggregateOutputType = {
    amount: Decimal | null
    revision: Decimal | null
  }

  export type FundMinAggregateOutputType = {
    id: string | null
    regNumber: string | null
    description: string | null
    amount: Decimal | null
    requestDate: Date | null
    approvedDate: Date | null
    closedDate: Date | null
    expiredDate: Date | null
    voidDate: Date | null
    plannedPaymentDate: Date | null
    type: string | null
    revision: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
    taskId: string | null
  }

  export type FundMaxAggregateOutputType = {
    id: string | null
    regNumber: string | null
    description: string | null
    amount: Decimal | null
    requestDate: Date | null
    approvedDate: Date | null
    closedDate: Date | null
    expiredDate: Date | null
    voidDate: Date | null
    plannedPaymentDate: Date | null
    type: string | null
    revision: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
    taskId: string | null
  }

  export type FundCountAggregateOutputType = {
    id: number
    regNumber: number
    description: number
    amount: number
    requestDate: number
    approvedDate: number
    closedDate: number
    expiredDate: number
    voidDate: number
    plannedPaymentDate: number
    type: number
    revision: number
    createdAt: number
    updatedAt: number
    assigneeId: number
    createdById: number
    updatedById: number
    taskId: number
    _all: number
  }


  export type FundAvgAggregateInputType = {
    amount?: true
    revision?: true
  }

  export type FundSumAggregateInputType = {
    amount?: true
    revision?: true
  }

  export type FundMinAggregateInputType = {
    id?: true
    regNumber?: true
    description?: true
    amount?: true
    requestDate?: true
    approvedDate?: true
    closedDate?: true
    expiredDate?: true
    voidDate?: true
    plannedPaymentDate?: true
    type?: true
    revision?: true
    createdAt?: true
    updatedAt?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
    taskId?: true
  }

  export type FundMaxAggregateInputType = {
    id?: true
    regNumber?: true
    description?: true
    amount?: true
    requestDate?: true
    approvedDate?: true
    closedDate?: true
    expiredDate?: true
    voidDate?: true
    plannedPaymentDate?: true
    type?: true
    revision?: true
    createdAt?: true
    updatedAt?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
    taskId?: true
  }

  export type FundCountAggregateInputType = {
    id?: true
    regNumber?: true
    description?: true
    amount?: true
    requestDate?: true
    approvedDate?: true
    closedDate?: true
    expiredDate?: true
    voidDate?: true
    plannedPaymentDate?: true
    type?: true
    revision?: true
    createdAt?: true
    updatedAt?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
    taskId?: true
    _all?: true
  }

  export type FundAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Fund to aggregate.
     */
    where?: FundWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funds to fetch.
     */
    orderBy?: FundOrderByWithRelationInput | FundOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FundWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Funds
    **/
    _count?: true | FundCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FundAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FundSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FundMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FundMaxAggregateInputType
  }

  export type GetFundAggregateType<T extends FundAggregateArgs> = {
        [P in keyof T & keyof AggregateFund]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFund[P]>
      : GetScalarType<T[P], AggregateFund[P]>
  }




  export type FundGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundWhereInput
    orderBy?: FundOrderByWithAggregationInput | FundOrderByWithAggregationInput[]
    by: FundScalarFieldEnum[] | FundScalarFieldEnum
    having?: FundScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FundCountAggregateInputType | true
    _avg?: FundAvgAggregateInputType
    _sum?: FundSumAggregateInputType
    _min?: FundMinAggregateInputType
    _max?: FundMaxAggregateInputType
  }

  export type FundGroupByOutputType = {
    id: string
    regNumber: string | null
    description: string
    amount: Decimal | null
    requestDate: Date | null
    approvedDate: Date | null
    closedDate: Date | null
    expiredDate: Date | null
    voidDate: Date | null
    plannedPaymentDate: Date | null
    type: string | null
    revision: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
    taskId: string | null
    _count: FundCountAggregateOutputType | null
    _avg: FundAvgAggregateOutputType | null
    _sum: FundSumAggregateOutputType | null
    _min: FundMinAggregateOutputType | null
    _max: FundMaxAggregateOutputType | null
  }

  type GetFundGroupByPayload<T extends FundGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FundGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FundGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FundGroupByOutputType[P]>
            : GetScalarType<T[P], FundGroupByOutputType[P]>
        }
      >
    >


  export type FundSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    description?: boolean
    amount?: boolean
    requestDate?: boolean
    approvedDate?: boolean
    closedDate?: boolean
    expiredDate?: boolean
    voidDate?: boolean
    plannedPaymentDate?: boolean
    type?: boolean
    revision?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    taskId?: boolean
    assignee?: boolean | Fund$assigneeArgs<ExtArgs>
    createdBy?: boolean | Fund$createdByArgs<ExtArgs>
    updatedBy?: boolean | Fund$updatedByArgs<ExtArgs>
    items?: boolean | Fund$itemsArgs<ExtArgs>
    task?: boolean | Fund$taskArgs<ExtArgs>
    expenses?: boolean | Fund$expensesArgs<ExtArgs>
    notes?: boolean | Fund$notesArgs<ExtArgs>
    stages?: boolean | Fund$stagesArgs<ExtArgs>
    _count?: boolean | FundCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fund"]>

  export type FundSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    description?: boolean
    amount?: boolean
    requestDate?: boolean
    approvedDate?: boolean
    closedDate?: boolean
    expiredDate?: boolean
    voidDate?: boolean
    plannedPaymentDate?: boolean
    type?: boolean
    revision?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    taskId?: boolean
    assignee?: boolean | Fund$assigneeArgs<ExtArgs>
    createdBy?: boolean | Fund$createdByArgs<ExtArgs>
    updatedBy?: boolean | Fund$updatedByArgs<ExtArgs>
    task?: boolean | Fund$taskArgs<ExtArgs>
  }, ExtArgs["result"]["fund"]>

  export type FundSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    description?: boolean
    amount?: boolean
    requestDate?: boolean
    approvedDate?: boolean
    closedDate?: boolean
    expiredDate?: boolean
    voidDate?: boolean
    plannedPaymentDate?: boolean
    type?: boolean
    revision?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    taskId?: boolean
    assignee?: boolean | Fund$assigneeArgs<ExtArgs>
    createdBy?: boolean | Fund$createdByArgs<ExtArgs>
    updatedBy?: boolean | Fund$updatedByArgs<ExtArgs>
    task?: boolean | Fund$taskArgs<ExtArgs>
  }, ExtArgs["result"]["fund"]>

  export type FundSelectScalar = {
    id?: boolean
    regNumber?: boolean
    description?: boolean
    amount?: boolean
    requestDate?: boolean
    approvedDate?: boolean
    closedDate?: boolean
    expiredDate?: boolean
    voidDate?: boolean
    plannedPaymentDate?: boolean
    type?: boolean
    revision?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    taskId?: boolean
  }

  export type FundOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "regNumber" | "description" | "amount" | "requestDate" | "approvedDate" | "closedDate" | "expiredDate" | "voidDate" | "plannedPaymentDate" | "type" | "revision" | "createdAt" | "updatedAt" | "assigneeId" | "createdById" | "updatedById" | "taskId", ExtArgs["result"]["fund"]>
  export type FundInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignee?: boolean | Fund$assigneeArgs<ExtArgs>
    createdBy?: boolean | Fund$createdByArgs<ExtArgs>
    updatedBy?: boolean | Fund$updatedByArgs<ExtArgs>
    items?: boolean | Fund$itemsArgs<ExtArgs>
    task?: boolean | Fund$taskArgs<ExtArgs>
    expenses?: boolean | Fund$expensesArgs<ExtArgs>
    notes?: boolean | Fund$notesArgs<ExtArgs>
    stages?: boolean | Fund$stagesArgs<ExtArgs>
    _count?: boolean | FundCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FundIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignee?: boolean | Fund$assigneeArgs<ExtArgs>
    createdBy?: boolean | Fund$createdByArgs<ExtArgs>
    updatedBy?: boolean | Fund$updatedByArgs<ExtArgs>
    task?: boolean | Fund$taskArgs<ExtArgs>
  }
  export type FundIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignee?: boolean | Fund$assigneeArgs<ExtArgs>
    createdBy?: boolean | Fund$createdByArgs<ExtArgs>
    updatedBy?: boolean | Fund$updatedByArgs<ExtArgs>
    task?: boolean | Fund$taskArgs<ExtArgs>
  }

  export type $FundPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Fund"
    objects: {
      assignee: Prisma.$UserPayload<ExtArgs> | null
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      items: Prisma.$FundItemPayload<ExtArgs>[]
      task: Prisma.$TaskPayload<ExtArgs> | null
      expenses: Prisma.$ExpensePayload<ExtArgs>[]
      notes: Prisma.$NotePayload<ExtArgs>[]
      stages: Prisma.$StagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      regNumber: string | null
      description: string
      amount: Prisma.Decimal | null
      requestDate: Date | null
      approvedDate: Date | null
      closedDate: Date | null
      expiredDate: Date | null
      voidDate: Date | null
      plannedPaymentDate: Date | null
      type: string | null
      revision: Prisma.Decimal | null
      createdAt: Date | null
      updatedAt: Date | null
      assigneeId: string | null
      createdById: string | null
      updatedById: string | null
      taskId: string | null
    }, ExtArgs["result"]["fund"]>
    composites: {}
  }

  type FundGetPayload<S extends boolean | null | undefined | FundDefaultArgs> = $Result.GetResult<Prisma.$FundPayload, S>

  type FundCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FundFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FundCountAggregateInputType | true
    }

  export interface FundDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Fund'], meta: { name: 'Fund' } }
    /**
     * Find zero or one Fund that matches the filter.
     * @param {FundFindUniqueArgs} args - Arguments to find a Fund
     * @example
     * // Get one Fund
     * const fund = await prisma.fund.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FundFindUniqueArgs>(args: SelectSubset<T, FundFindUniqueArgs<ExtArgs>>): Prisma__FundClient<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Fund that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FundFindUniqueOrThrowArgs} args - Arguments to find a Fund
     * @example
     * // Get one Fund
     * const fund = await prisma.fund.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FundFindUniqueOrThrowArgs>(args: SelectSubset<T, FundFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FundClient<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Fund that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundFindFirstArgs} args - Arguments to find a Fund
     * @example
     * // Get one Fund
     * const fund = await prisma.fund.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FundFindFirstArgs>(args?: SelectSubset<T, FundFindFirstArgs<ExtArgs>>): Prisma__FundClient<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Fund that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundFindFirstOrThrowArgs} args - Arguments to find a Fund
     * @example
     * // Get one Fund
     * const fund = await prisma.fund.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FundFindFirstOrThrowArgs>(args?: SelectSubset<T, FundFindFirstOrThrowArgs<ExtArgs>>): Prisma__FundClient<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Funds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Funds
     * const funds = await prisma.fund.findMany()
     * 
     * // Get first 10 Funds
     * const funds = await prisma.fund.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fundWithIdOnly = await prisma.fund.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FundFindManyArgs>(args?: SelectSubset<T, FundFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Fund.
     * @param {FundCreateArgs} args - Arguments to create a Fund.
     * @example
     * // Create one Fund
     * const Fund = await prisma.fund.create({
     *   data: {
     *     // ... data to create a Fund
     *   }
     * })
     * 
     */
    create<T extends FundCreateArgs>(args: SelectSubset<T, FundCreateArgs<ExtArgs>>): Prisma__FundClient<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Funds.
     * @param {FundCreateManyArgs} args - Arguments to create many Funds.
     * @example
     * // Create many Funds
     * const fund = await prisma.fund.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FundCreateManyArgs>(args?: SelectSubset<T, FundCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Funds and returns the data saved in the database.
     * @param {FundCreateManyAndReturnArgs} args - Arguments to create many Funds.
     * @example
     * // Create many Funds
     * const fund = await prisma.fund.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Funds and only return the `id`
     * const fundWithIdOnly = await prisma.fund.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FundCreateManyAndReturnArgs>(args?: SelectSubset<T, FundCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Fund.
     * @param {FundDeleteArgs} args - Arguments to delete one Fund.
     * @example
     * // Delete one Fund
     * const Fund = await prisma.fund.delete({
     *   where: {
     *     // ... filter to delete one Fund
     *   }
     * })
     * 
     */
    delete<T extends FundDeleteArgs>(args: SelectSubset<T, FundDeleteArgs<ExtArgs>>): Prisma__FundClient<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Fund.
     * @param {FundUpdateArgs} args - Arguments to update one Fund.
     * @example
     * // Update one Fund
     * const fund = await prisma.fund.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FundUpdateArgs>(args: SelectSubset<T, FundUpdateArgs<ExtArgs>>): Prisma__FundClient<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Funds.
     * @param {FundDeleteManyArgs} args - Arguments to filter Funds to delete.
     * @example
     * // Delete a few Funds
     * const { count } = await prisma.fund.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FundDeleteManyArgs>(args?: SelectSubset<T, FundDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Funds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Funds
     * const fund = await prisma.fund.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FundUpdateManyArgs>(args: SelectSubset<T, FundUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Funds and returns the data updated in the database.
     * @param {FundUpdateManyAndReturnArgs} args - Arguments to update many Funds.
     * @example
     * // Update many Funds
     * const fund = await prisma.fund.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Funds and only return the `id`
     * const fundWithIdOnly = await prisma.fund.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FundUpdateManyAndReturnArgs>(args: SelectSubset<T, FundUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Fund.
     * @param {FundUpsertArgs} args - Arguments to update or create a Fund.
     * @example
     * // Update or create a Fund
     * const fund = await prisma.fund.upsert({
     *   create: {
     *     // ... data to create a Fund
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Fund we want to update
     *   }
     * })
     */
    upsert<T extends FundUpsertArgs>(args: SelectSubset<T, FundUpsertArgs<ExtArgs>>): Prisma__FundClient<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Funds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundCountArgs} args - Arguments to filter Funds to count.
     * @example
     * // Count the number of Funds
     * const count = await prisma.fund.count({
     *   where: {
     *     // ... the filter for the Funds we want to count
     *   }
     * })
    **/
    count<T extends FundCountArgs>(
      args?: Subset<T, FundCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FundCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Fund.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FundAggregateArgs>(args: Subset<T, FundAggregateArgs>): Prisma.PrismaPromise<GetFundAggregateType<T>>

    /**
     * Group by Fund.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FundGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FundGroupByArgs['orderBy'] }
        : { orderBy?: FundGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FundGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFundGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Fund model
   */
  readonly fields: FundFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Fund.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FundClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    assignee<T extends Fund$assigneeArgs<ExtArgs> = {}>(args?: Subset<T, Fund$assigneeArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends Fund$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Fund$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Fund$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Fund$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    items<T extends Fund$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Fund$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    task<T extends Fund$taskArgs<ExtArgs> = {}>(args?: Subset<T, Fund$taskArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    expenses<T extends Fund$expensesArgs<ExtArgs> = {}>(args?: Subset<T, Fund$expensesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notes<T extends Fund$notesArgs<ExtArgs> = {}>(args?: Subset<T, Fund$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stages<T extends Fund$stagesArgs<ExtArgs> = {}>(args?: Subset<T, Fund$stagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Fund model
   */
  interface FundFieldRefs {
    readonly id: FieldRef<"Fund", 'String'>
    readonly regNumber: FieldRef<"Fund", 'String'>
    readonly description: FieldRef<"Fund", 'String'>
    readonly amount: FieldRef<"Fund", 'Decimal'>
    readonly requestDate: FieldRef<"Fund", 'DateTime'>
    readonly approvedDate: FieldRef<"Fund", 'DateTime'>
    readonly closedDate: FieldRef<"Fund", 'DateTime'>
    readonly expiredDate: FieldRef<"Fund", 'DateTime'>
    readonly voidDate: FieldRef<"Fund", 'DateTime'>
    readonly plannedPaymentDate: FieldRef<"Fund", 'DateTime'>
    readonly type: FieldRef<"Fund", 'String'>
    readonly revision: FieldRef<"Fund", 'Decimal'>
    readonly createdAt: FieldRef<"Fund", 'DateTime'>
    readonly updatedAt: FieldRef<"Fund", 'DateTime'>
    readonly assigneeId: FieldRef<"Fund", 'String'>
    readonly createdById: FieldRef<"Fund", 'String'>
    readonly updatedById: FieldRef<"Fund", 'String'>
    readonly taskId: FieldRef<"Fund", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Fund findUnique
   */
  export type FundFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    /**
     * Filter, which Fund to fetch.
     */
    where: FundWhereUniqueInput
  }

  /**
   * Fund findUniqueOrThrow
   */
  export type FundFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    /**
     * Filter, which Fund to fetch.
     */
    where: FundWhereUniqueInput
  }

  /**
   * Fund findFirst
   */
  export type FundFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    /**
     * Filter, which Fund to fetch.
     */
    where?: FundWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funds to fetch.
     */
    orderBy?: FundOrderByWithRelationInput | FundOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Funds.
     */
    cursor?: FundWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Funds.
     */
    distinct?: FundScalarFieldEnum | FundScalarFieldEnum[]
  }

  /**
   * Fund findFirstOrThrow
   */
  export type FundFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    /**
     * Filter, which Fund to fetch.
     */
    where?: FundWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funds to fetch.
     */
    orderBy?: FundOrderByWithRelationInput | FundOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Funds.
     */
    cursor?: FundWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Funds.
     */
    distinct?: FundScalarFieldEnum | FundScalarFieldEnum[]
  }

  /**
   * Fund findMany
   */
  export type FundFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    /**
     * Filter, which Funds to fetch.
     */
    where?: FundWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funds to fetch.
     */
    orderBy?: FundOrderByWithRelationInput | FundOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Funds.
     */
    cursor?: FundWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funds.
     */
    skip?: number
    distinct?: FundScalarFieldEnum | FundScalarFieldEnum[]
  }

  /**
   * Fund create
   */
  export type FundCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    /**
     * The data needed to create a Fund.
     */
    data: XOR<FundCreateInput, FundUncheckedCreateInput>
  }

  /**
   * Fund createMany
   */
  export type FundCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Funds.
     */
    data: FundCreateManyInput | FundCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Fund createManyAndReturn
   */
  export type FundCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * The data used to create many Funds.
     */
    data: FundCreateManyInput | FundCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Fund update
   */
  export type FundUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    /**
     * The data needed to update a Fund.
     */
    data: XOR<FundUpdateInput, FundUncheckedUpdateInput>
    /**
     * Choose, which Fund to update.
     */
    where: FundWhereUniqueInput
  }

  /**
   * Fund updateMany
   */
  export type FundUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Funds.
     */
    data: XOR<FundUpdateManyMutationInput, FundUncheckedUpdateManyInput>
    /**
     * Filter which Funds to update
     */
    where?: FundWhereInput
    /**
     * Limit how many Funds to update.
     */
    limit?: number
  }

  /**
   * Fund updateManyAndReturn
   */
  export type FundUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * The data used to update Funds.
     */
    data: XOR<FundUpdateManyMutationInput, FundUncheckedUpdateManyInput>
    /**
     * Filter which Funds to update
     */
    where?: FundWhereInput
    /**
     * Limit how many Funds to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Fund upsert
   */
  export type FundUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    /**
     * The filter to search for the Fund to update in case it exists.
     */
    where: FundWhereUniqueInput
    /**
     * In case the Fund found by the `where` argument doesn't exist, create a new Fund with this data.
     */
    create: XOR<FundCreateInput, FundUncheckedCreateInput>
    /**
     * In case the Fund was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FundUpdateInput, FundUncheckedUpdateInput>
  }

  /**
   * Fund delete
   */
  export type FundDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    /**
     * Filter which Fund to delete.
     */
    where: FundWhereUniqueInput
  }

  /**
   * Fund deleteMany
   */
  export type FundDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Funds to delete
     */
    where?: FundWhereInput
    /**
     * Limit how many Funds to delete.
     */
    limit?: number
  }

  /**
   * Fund.assignee
   */
  export type Fund$assigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Fund.createdBy
   */
  export type Fund$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Fund.updatedBy
   */
  export type Fund$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Fund.items
   */
  export type Fund$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundItem
     */
    select?: FundItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundItem
     */
    omit?: FundItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundItemInclude<ExtArgs> | null
    where?: FundItemWhereInput
    orderBy?: FundItemOrderByWithRelationInput | FundItemOrderByWithRelationInput[]
    cursor?: FundItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FundItemScalarFieldEnum | FundItemScalarFieldEnum[]
  }

  /**
   * Fund.task
   */
  export type Fund$taskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
  }

  /**
   * Fund.expenses
   */
  export type Fund$expensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    where?: ExpenseWhereInput
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    cursor?: ExpenseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }

  /**
   * Fund.notes
   */
  export type Fund$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Fund.stages
   */
  export type Fund$stagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    where?: StageWhereInput
    orderBy?: StageOrderByWithRelationInput | StageOrderByWithRelationInput[]
    cursor?: StageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StageScalarFieldEnum | StageScalarFieldEnum[]
  }

  /**
   * Fund without action
   */
  export type FundDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
  }


  /**
   * Model FundItem
   */

  export type AggregateFundItem = {
    _count: FundItemCountAggregateOutputType | null
    _avg: FundItemAvgAggregateOutputType | null
    _sum: FundItemSumAggregateOutputType | null
    _min: FundItemMinAggregateOutputType | null
    _max: FundItemMaxAggregateOutputType | null
  }

  export type FundItemAvgAggregateOutputType = {
    quantity: Decimal | null
    timeUnit: Decimal | null
    unitPrice: Decimal | null
    amount: Decimal | null
  }

  export type FundItemSumAggregateOutputType = {
    quantity: Decimal | null
    timeUnit: Decimal | null
    unitPrice: Decimal | null
    amount: Decimal | null
  }

  export type FundItemMinAggregateOutputType = {
    id: string | null
    fundId: string | null
    categoryId: string | null
    description: string | null
    quantity: Decimal | null
    timeUnit: Decimal | null
    unitPrice: Decimal | null
    amount: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FundItemMaxAggregateOutputType = {
    id: string | null
    fundId: string | null
    categoryId: string | null
    description: string | null
    quantity: Decimal | null
    timeUnit: Decimal | null
    unitPrice: Decimal | null
    amount: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FundItemCountAggregateOutputType = {
    id: number
    fundId: number
    categoryId: number
    description: number
    quantity: number
    timeUnit: number
    unitPrice: number
    amount: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FundItemAvgAggregateInputType = {
    quantity?: true
    timeUnit?: true
    unitPrice?: true
    amount?: true
  }

  export type FundItemSumAggregateInputType = {
    quantity?: true
    timeUnit?: true
    unitPrice?: true
    amount?: true
  }

  export type FundItemMinAggregateInputType = {
    id?: true
    fundId?: true
    categoryId?: true
    description?: true
    quantity?: true
    timeUnit?: true
    unitPrice?: true
    amount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FundItemMaxAggregateInputType = {
    id?: true
    fundId?: true
    categoryId?: true
    description?: true
    quantity?: true
    timeUnit?: true
    unitPrice?: true
    amount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FundItemCountAggregateInputType = {
    id?: true
    fundId?: true
    categoryId?: true
    description?: true
    quantity?: true
    timeUnit?: true
    unitPrice?: true
    amount?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FundItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FundItem to aggregate.
     */
    where?: FundItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FundItems to fetch.
     */
    orderBy?: FundItemOrderByWithRelationInput | FundItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FundItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FundItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FundItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FundItems
    **/
    _count?: true | FundItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FundItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FundItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FundItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FundItemMaxAggregateInputType
  }

  export type GetFundItemAggregateType<T extends FundItemAggregateArgs> = {
        [P in keyof T & keyof AggregateFundItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFundItem[P]>
      : GetScalarType<T[P], AggregateFundItem[P]>
  }




  export type FundItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FundItemWhereInput
    orderBy?: FundItemOrderByWithAggregationInput | FundItemOrderByWithAggregationInput[]
    by: FundItemScalarFieldEnum[] | FundItemScalarFieldEnum
    having?: FundItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FundItemCountAggregateInputType | true
    _avg?: FundItemAvgAggregateInputType
    _sum?: FundItemSumAggregateInputType
    _min?: FundItemMinAggregateInputType
    _max?: FundItemMaxAggregateInputType
  }

  export type FundItemGroupByOutputType = {
    id: string
    fundId: string
    categoryId: string | null
    description: string
    quantity: Decimal
    timeUnit: Decimal | null
    unitPrice: Decimal
    amount: Decimal
    createdAt: Date | null
    updatedAt: Date | null
    _count: FundItemCountAggregateOutputType | null
    _avg: FundItemAvgAggregateOutputType | null
    _sum: FundItemSumAggregateOutputType | null
    _min: FundItemMinAggregateOutputType | null
    _max: FundItemMaxAggregateOutputType | null
  }

  type GetFundItemGroupByPayload<T extends FundItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FundItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FundItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FundItemGroupByOutputType[P]>
            : GetScalarType<T[P], FundItemGroupByOutputType[P]>
        }
      >
    >


  export type FundItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fundId?: boolean
    categoryId?: boolean
    description?: boolean
    quantity?: boolean
    timeUnit?: boolean
    unitPrice?: boolean
    amount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    fund?: boolean | FundDefaultArgs<ExtArgs>
    category?: boolean | FundItem$categoryArgs<ExtArgs>
  }, ExtArgs["result"]["fundItem"]>

  export type FundItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fundId?: boolean
    categoryId?: boolean
    description?: boolean
    quantity?: boolean
    timeUnit?: boolean
    unitPrice?: boolean
    amount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    fund?: boolean | FundDefaultArgs<ExtArgs>
    category?: boolean | FundItem$categoryArgs<ExtArgs>
  }, ExtArgs["result"]["fundItem"]>

  export type FundItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fundId?: boolean
    categoryId?: boolean
    description?: boolean
    quantity?: boolean
    timeUnit?: boolean
    unitPrice?: boolean
    amount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    fund?: boolean | FundDefaultArgs<ExtArgs>
    category?: boolean | FundItem$categoryArgs<ExtArgs>
  }, ExtArgs["result"]["fundItem"]>

  export type FundItemSelectScalar = {
    id?: boolean
    fundId?: boolean
    categoryId?: boolean
    description?: boolean
    quantity?: boolean
    timeUnit?: boolean
    unitPrice?: boolean
    amount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FundItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "fundId" | "categoryId" | "description" | "quantity" | "timeUnit" | "unitPrice" | "amount" | "createdAt" | "updatedAt", ExtArgs["result"]["fundItem"]>
  export type FundItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fund?: boolean | FundDefaultArgs<ExtArgs>
    category?: boolean | FundItem$categoryArgs<ExtArgs>
  }
  export type FundItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fund?: boolean | FundDefaultArgs<ExtArgs>
    category?: boolean | FundItem$categoryArgs<ExtArgs>
  }
  export type FundItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fund?: boolean | FundDefaultArgs<ExtArgs>
    category?: boolean | FundItem$categoryArgs<ExtArgs>
  }

  export type $FundItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FundItem"
    objects: {
      fund: Prisma.$FundPayload<ExtArgs>
      category: Prisma.$CostTypePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      fundId: string
      categoryId: string | null
      description: string
      quantity: Prisma.Decimal
      timeUnit: Prisma.Decimal | null
      unitPrice: Prisma.Decimal
      amount: Prisma.Decimal
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["fundItem"]>
    composites: {}
  }

  type FundItemGetPayload<S extends boolean | null | undefined | FundItemDefaultArgs> = $Result.GetResult<Prisma.$FundItemPayload, S>

  type FundItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FundItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FundItemCountAggregateInputType | true
    }

  export interface FundItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FundItem'], meta: { name: 'FundItem' } }
    /**
     * Find zero or one FundItem that matches the filter.
     * @param {FundItemFindUniqueArgs} args - Arguments to find a FundItem
     * @example
     * // Get one FundItem
     * const fundItem = await prisma.fundItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FundItemFindUniqueArgs>(args: SelectSubset<T, FundItemFindUniqueArgs<ExtArgs>>): Prisma__FundItemClient<$Result.GetResult<Prisma.$FundItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FundItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FundItemFindUniqueOrThrowArgs} args - Arguments to find a FundItem
     * @example
     * // Get one FundItem
     * const fundItem = await prisma.fundItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FundItemFindUniqueOrThrowArgs>(args: SelectSubset<T, FundItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FundItemClient<$Result.GetResult<Prisma.$FundItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FundItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundItemFindFirstArgs} args - Arguments to find a FundItem
     * @example
     * // Get one FundItem
     * const fundItem = await prisma.fundItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FundItemFindFirstArgs>(args?: SelectSubset<T, FundItemFindFirstArgs<ExtArgs>>): Prisma__FundItemClient<$Result.GetResult<Prisma.$FundItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FundItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundItemFindFirstOrThrowArgs} args - Arguments to find a FundItem
     * @example
     * // Get one FundItem
     * const fundItem = await prisma.fundItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FundItemFindFirstOrThrowArgs>(args?: SelectSubset<T, FundItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__FundItemClient<$Result.GetResult<Prisma.$FundItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FundItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FundItems
     * const fundItems = await prisma.fundItem.findMany()
     * 
     * // Get first 10 FundItems
     * const fundItems = await prisma.fundItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fundItemWithIdOnly = await prisma.fundItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FundItemFindManyArgs>(args?: SelectSubset<T, FundItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FundItem.
     * @param {FundItemCreateArgs} args - Arguments to create a FundItem.
     * @example
     * // Create one FundItem
     * const FundItem = await prisma.fundItem.create({
     *   data: {
     *     // ... data to create a FundItem
     *   }
     * })
     * 
     */
    create<T extends FundItemCreateArgs>(args: SelectSubset<T, FundItemCreateArgs<ExtArgs>>): Prisma__FundItemClient<$Result.GetResult<Prisma.$FundItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FundItems.
     * @param {FundItemCreateManyArgs} args - Arguments to create many FundItems.
     * @example
     * // Create many FundItems
     * const fundItem = await prisma.fundItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FundItemCreateManyArgs>(args?: SelectSubset<T, FundItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FundItems and returns the data saved in the database.
     * @param {FundItemCreateManyAndReturnArgs} args - Arguments to create many FundItems.
     * @example
     * // Create many FundItems
     * const fundItem = await prisma.fundItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FundItems and only return the `id`
     * const fundItemWithIdOnly = await prisma.fundItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FundItemCreateManyAndReturnArgs>(args?: SelectSubset<T, FundItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FundItem.
     * @param {FundItemDeleteArgs} args - Arguments to delete one FundItem.
     * @example
     * // Delete one FundItem
     * const FundItem = await prisma.fundItem.delete({
     *   where: {
     *     // ... filter to delete one FundItem
     *   }
     * })
     * 
     */
    delete<T extends FundItemDeleteArgs>(args: SelectSubset<T, FundItemDeleteArgs<ExtArgs>>): Prisma__FundItemClient<$Result.GetResult<Prisma.$FundItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FundItem.
     * @param {FundItemUpdateArgs} args - Arguments to update one FundItem.
     * @example
     * // Update one FundItem
     * const fundItem = await prisma.fundItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FundItemUpdateArgs>(args: SelectSubset<T, FundItemUpdateArgs<ExtArgs>>): Prisma__FundItemClient<$Result.GetResult<Prisma.$FundItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FundItems.
     * @param {FundItemDeleteManyArgs} args - Arguments to filter FundItems to delete.
     * @example
     * // Delete a few FundItems
     * const { count } = await prisma.fundItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FundItemDeleteManyArgs>(args?: SelectSubset<T, FundItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FundItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FundItems
     * const fundItem = await prisma.fundItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FundItemUpdateManyArgs>(args: SelectSubset<T, FundItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FundItems and returns the data updated in the database.
     * @param {FundItemUpdateManyAndReturnArgs} args - Arguments to update many FundItems.
     * @example
     * // Update many FundItems
     * const fundItem = await prisma.fundItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FundItems and only return the `id`
     * const fundItemWithIdOnly = await prisma.fundItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FundItemUpdateManyAndReturnArgs>(args: SelectSubset<T, FundItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FundItem.
     * @param {FundItemUpsertArgs} args - Arguments to update or create a FundItem.
     * @example
     * // Update or create a FundItem
     * const fundItem = await prisma.fundItem.upsert({
     *   create: {
     *     // ... data to create a FundItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FundItem we want to update
     *   }
     * })
     */
    upsert<T extends FundItemUpsertArgs>(args: SelectSubset<T, FundItemUpsertArgs<ExtArgs>>): Prisma__FundItemClient<$Result.GetResult<Prisma.$FundItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FundItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundItemCountArgs} args - Arguments to filter FundItems to count.
     * @example
     * // Count the number of FundItems
     * const count = await prisma.fundItem.count({
     *   where: {
     *     // ... the filter for the FundItems we want to count
     *   }
     * })
    **/
    count<T extends FundItemCountArgs>(
      args?: Subset<T, FundItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FundItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FundItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FundItemAggregateArgs>(args: Subset<T, FundItemAggregateArgs>): Prisma.PrismaPromise<GetFundItemAggregateType<T>>

    /**
     * Group by FundItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FundItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FundItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FundItemGroupByArgs['orderBy'] }
        : { orderBy?: FundItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FundItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFundItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FundItem model
   */
  readonly fields: FundItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FundItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FundItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    fund<T extends FundDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FundDefaultArgs<ExtArgs>>): Prisma__FundClient<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    category<T extends FundItem$categoryArgs<ExtArgs> = {}>(args?: Subset<T, FundItem$categoryArgs<ExtArgs>>): Prisma__CostTypeClient<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FundItem model
   */
  interface FundItemFieldRefs {
    readonly id: FieldRef<"FundItem", 'String'>
    readonly fundId: FieldRef<"FundItem", 'String'>
    readonly categoryId: FieldRef<"FundItem", 'String'>
    readonly description: FieldRef<"FundItem", 'String'>
    readonly quantity: FieldRef<"FundItem", 'Decimal'>
    readonly timeUnit: FieldRef<"FundItem", 'Decimal'>
    readonly unitPrice: FieldRef<"FundItem", 'Decimal'>
    readonly amount: FieldRef<"FundItem", 'Decimal'>
    readonly createdAt: FieldRef<"FundItem", 'DateTime'>
    readonly updatedAt: FieldRef<"FundItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FundItem findUnique
   */
  export type FundItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundItem
     */
    select?: FundItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundItem
     */
    omit?: FundItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundItemInclude<ExtArgs> | null
    /**
     * Filter, which FundItem to fetch.
     */
    where: FundItemWhereUniqueInput
  }

  /**
   * FundItem findUniqueOrThrow
   */
  export type FundItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundItem
     */
    select?: FundItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundItem
     */
    omit?: FundItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundItemInclude<ExtArgs> | null
    /**
     * Filter, which FundItem to fetch.
     */
    where: FundItemWhereUniqueInput
  }

  /**
   * FundItem findFirst
   */
  export type FundItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundItem
     */
    select?: FundItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundItem
     */
    omit?: FundItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundItemInclude<ExtArgs> | null
    /**
     * Filter, which FundItem to fetch.
     */
    where?: FundItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FundItems to fetch.
     */
    orderBy?: FundItemOrderByWithRelationInput | FundItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FundItems.
     */
    cursor?: FundItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FundItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FundItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FundItems.
     */
    distinct?: FundItemScalarFieldEnum | FundItemScalarFieldEnum[]
  }

  /**
   * FundItem findFirstOrThrow
   */
  export type FundItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundItem
     */
    select?: FundItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundItem
     */
    omit?: FundItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundItemInclude<ExtArgs> | null
    /**
     * Filter, which FundItem to fetch.
     */
    where?: FundItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FundItems to fetch.
     */
    orderBy?: FundItemOrderByWithRelationInput | FundItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FundItems.
     */
    cursor?: FundItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FundItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FundItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FundItems.
     */
    distinct?: FundItemScalarFieldEnum | FundItemScalarFieldEnum[]
  }

  /**
   * FundItem findMany
   */
  export type FundItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundItem
     */
    select?: FundItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundItem
     */
    omit?: FundItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundItemInclude<ExtArgs> | null
    /**
     * Filter, which FundItems to fetch.
     */
    where?: FundItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FundItems to fetch.
     */
    orderBy?: FundItemOrderByWithRelationInput | FundItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FundItems.
     */
    cursor?: FundItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FundItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FundItems.
     */
    skip?: number
    distinct?: FundItemScalarFieldEnum | FundItemScalarFieldEnum[]
  }

  /**
   * FundItem create
   */
  export type FundItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundItem
     */
    select?: FundItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundItem
     */
    omit?: FundItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundItemInclude<ExtArgs> | null
    /**
     * The data needed to create a FundItem.
     */
    data: XOR<FundItemCreateInput, FundItemUncheckedCreateInput>
  }

  /**
   * FundItem createMany
   */
  export type FundItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FundItems.
     */
    data: FundItemCreateManyInput | FundItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FundItem createManyAndReturn
   */
  export type FundItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundItem
     */
    select?: FundItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FundItem
     */
    omit?: FundItemOmit<ExtArgs> | null
    /**
     * The data used to create many FundItems.
     */
    data: FundItemCreateManyInput | FundItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FundItem update
   */
  export type FundItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundItem
     */
    select?: FundItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundItem
     */
    omit?: FundItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundItemInclude<ExtArgs> | null
    /**
     * The data needed to update a FundItem.
     */
    data: XOR<FundItemUpdateInput, FundItemUncheckedUpdateInput>
    /**
     * Choose, which FundItem to update.
     */
    where: FundItemWhereUniqueInput
  }

  /**
   * FundItem updateMany
   */
  export type FundItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FundItems.
     */
    data: XOR<FundItemUpdateManyMutationInput, FundItemUncheckedUpdateManyInput>
    /**
     * Filter which FundItems to update
     */
    where?: FundItemWhereInput
    /**
     * Limit how many FundItems to update.
     */
    limit?: number
  }

  /**
   * FundItem updateManyAndReturn
   */
  export type FundItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundItem
     */
    select?: FundItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FundItem
     */
    omit?: FundItemOmit<ExtArgs> | null
    /**
     * The data used to update FundItems.
     */
    data: XOR<FundItemUpdateManyMutationInput, FundItemUncheckedUpdateManyInput>
    /**
     * Filter which FundItems to update
     */
    where?: FundItemWhereInput
    /**
     * Limit how many FundItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FundItem upsert
   */
  export type FundItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundItem
     */
    select?: FundItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundItem
     */
    omit?: FundItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundItemInclude<ExtArgs> | null
    /**
     * The filter to search for the FundItem to update in case it exists.
     */
    where: FundItemWhereUniqueInput
    /**
     * In case the FundItem found by the `where` argument doesn't exist, create a new FundItem with this data.
     */
    create: XOR<FundItemCreateInput, FundItemUncheckedCreateInput>
    /**
     * In case the FundItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FundItemUpdateInput, FundItemUncheckedUpdateInput>
  }

  /**
   * FundItem delete
   */
  export type FundItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundItem
     */
    select?: FundItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundItem
     */
    omit?: FundItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundItemInclude<ExtArgs> | null
    /**
     * Filter which FundItem to delete.
     */
    where: FundItemWhereUniqueInput
  }

  /**
   * FundItem deleteMany
   */
  export type FundItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FundItems to delete
     */
    where?: FundItemWhereInput
    /**
     * Limit how many FundItems to delete.
     */
    limit?: number
  }

  /**
   * FundItem.category
   */
  export type FundItem$categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
    where?: CostTypeWhereInput
  }

  /**
   * FundItem without action
   */
  export type FundItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundItem
     */
    select?: FundItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundItem
     */
    omit?: FundItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundItemInclude<ExtArgs> | null
  }


  /**
   * Model Expense
   */

  export type AggregateExpense = {
    _count: ExpenseCountAggregateOutputType | null
    _avg: ExpenseAvgAggregateOutputType | null
    _sum: ExpenseSumAggregateOutputType | null
    _min: ExpenseMinAggregateOutputType | null
    _max: ExpenseMaxAggregateOutputType | null
  }

  export type ExpenseAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type ExpenseSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type ExpenseMinAggregateOutputType = {
    id: string | null
    regNumber: string | null
    categoryId: string | null
    description: string | null
    amount: Decimal | null
    date: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    fundId: string | null
    taskId: string | null
    projectId: string | null
  }

  export type ExpenseMaxAggregateOutputType = {
    id: string | null
    regNumber: string | null
    categoryId: string | null
    description: string | null
    amount: Decimal | null
    date: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    fundId: string | null
    taskId: string | null
    projectId: string | null
  }

  export type ExpenseCountAggregateOutputType = {
    id: number
    regNumber: number
    categoryId: number
    description: number
    amount: number
    date: number
    createdAt: number
    updatedAt: number
    createdById: number
    updatedById: number
    fundId: number
    taskId: number
    projectId: number
    _all: number
  }


  export type ExpenseAvgAggregateInputType = {
    amount?: true
  }

  export type ExpenseSumAggregateInputType = {
    amount?: true
  }

  export type ExpenseMinAggregateInputType = {
    id?: true
    regNumber?: true
    categoryId?: true
    description?: true
    amount?: true
    date?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    fundId?: true
    taskId?: true
    projectId?: true
  }

  export type ExpenseMaxAggregateInputType = {
    id?: true
    regNumber?: true
    categoryId?: true
    description?: true
    amount?: true
    date?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    fundId?: true
    taskId?: true
    projectId?: true
  }

  export type ExpenseCountAggregateInputType = {
    id?: true
    regNumber?: true
    categoryId?: true
    description?: true
    amount?: true
    date?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    fundId?: true
    taskId?: true
    projectId?: true
    _all?: true
  }

  export type ExpenseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Expense to aggregate.
     */
    where?: ExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expenses to fetch.
     */
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Expenses
    **/
    _count?: true | ExpenseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ExpenseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ExpenseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ExpenseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ExpenseMaxAggregateInputType
  }

  export type GetExpenseAggregateType<T extends ExpenseAggregateArgs> = {
        [P in keyof T & keyof AggregateExpense]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateExpense[P]>
      : GetScalarType<T[P], AggregateExpense[P]>
  }




  export type ExpenseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExpenseWhereInput
    orderBy?: ExpenseOrderByWithAggregationInput | ExpenseOrderByWithAggregationInput[]
    by: ExpenseScalarFieldEnum[] | ExpenseScalarFieldEnum
    having?: ExpenseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ExpenseCountAggregateInputType | true
    _avg?: ExpenseAvgAggregateInputType
    _sum?: ExpenseSumAggregateInputType
    _min?: ExpenseMinAggregateInputType
    _max?: ExpenseMaxAggregateInputType
  }

  export type ExpenseGroupByOutputType = {
    id: string
    regNumber: string | null
    categoryId: string
    description: string | null
    amount: Decimal
    date: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    fundId: string | null
    taskId: string | null
    projectId: string | null
    _count: ExpenseCountAggregateOutputType | null
    _avg: ExpenseAvgAggregateOutputType | null
    _sum: ExpenseSumAggregateOutputType | null
    _min: ExpenseMinAggregateOutputType | null
    _max: ExpenseMaxAggregateOutputType | null
  }

  type GetExpenseGroupByPayload<T extends ExpenseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ExpenseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ExpenseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ExpenseGroupByOutputType[P]>
            : GetScalarType<T[P], ExpenseGroupByOutputType[P]>
        }
      >
    >


  export type ExpenseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    categoryId?: boolean
    description?: boolean
    amount?: boolean
    date?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    fundId?: boolean
    taskId?: boolean
    projectId?: boolean
    category?: boolean | CostTypeDefaultArgs<ExtArgs>
    createdBy?: boolean | Expense$createdByArgs<ExtArgs>
    updatedBy?: boolean | Expense$updatedByArgs<ExtArgs>
    fund?: boolean | Expense$fundArgs<ExtArgs>
    task?: boolean | Expense$taskArgs<ExtArgs>
    project?: boolean | Expense$projectArgs<ExtArgs>
    notes?: boolean | Expense$notesArgs<ExtArgs>
    _count?: boolean | ExpenseCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["expense"]>

  export type ExpenseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    categoryId?: boolean
    description?: boolean
    amount?: boolean
    date?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    fundId?: boolean
    taskId?: boolean
    projectId?: boolean
    category?: boolean | CostTypeDefaultArgs<ExtArgs>
    createdBy?: boolean | Expense$createdByArgs<ExtArgs>
    updatedBy?: boolean | Expense$updatedByArgs<ExtArgs>
    fund?: boolean | Expense$fundArgs<ExtArgs>
    task?: boolean | Expense$taskArgs<ExtArgs>
    project?: boolean | Expense$projectArgs<ExtArgs>
  }, ExtArgs["result"]["expense"]>

  export type ExpenseSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    categoryId?: boolean
    description?: boolean
    amount?: boolean
    date?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    fundId?: boolean
    taskId?: boolean
    projectId?: boolean
    category?: boolean | CostTypeDefaultArgs<ExtArgs>
    createdBy?: boolean | Expense$createdByArgs<ExtArgs>
    updatedBy?: boolean | Expense$updatedByArgs<ExtArgs>
    fund?: boolean | Expense$fundArgs<ExtArgs>
    task?: boolean | Expense$taskArgs<ExtArgs>
    project?: boolean | Expense$projectArgs<ExtArgs>
  }, ExtArgs["result"]["expense"]>

  export type ExpenseSelectScalar = {
    id?: boolean
    regNumber?: boolean
    categoryId?: boolean
    description?: boolean
    amount?: boolean
    date?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    fundId?: boolean
    taskId?: boolean
    projectId?: boolean
  }

  export type ExpenseOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "regNumber" | "categoryId" | "description" | "amount" | "date" | "createdAt" | "updatedAt" | "createdById" | "updatedById" | "fundId" | "taskId" | "projectId", ExtArgs["result"]["expense"]>
  export type ExpenseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CostTypeDefaultArgs<ExtArgs>
    createdBy?: boolean | Expense$createdByArgs<ExtArgs>
    updatedBy?: boolean | Expense$updatedByArgs<ExtArgs>
    fund?: boolean | Expense$fundArgs<ExtArgs>
    task?: boolean | Expense$taskArgs<ExtArgs>
    project?: boolean | Expense$projectArgs<ExtArgs>
    notes?: boolean | Expense$notesArgs<ExtArgs>
    _count?: boolean | ExpenseCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ExpenseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CostTypeDefaultArgs<ExtArgs>
    createdBy?: boolean | Expense$createdByArgs<ExtArgs>
    updatedBy?: boolean | Expense$updatedByArgs<ExtArgs>
    fund?: boolean | Expense$fundArgs<ExtArgs>
    task?: boolean | Expense$taskArgs<ExtArgs>
    project?: boolean | Expense$projectArgs<ExtArgs>
  }
  export type ExpenseIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CostTypeDefaultArgs<ExtArgs>
    createdBy?: boolean | Expense$createdByArgs<ExtArgs>
    updatedBy?: boolean | Expense$updatedByArgs<ExtArgs>
    fund?: boolean | Expense$fundArgs<ExtArgs>
    task?: boolean | Expense$taskArgs<ExtArgs>
    project?: boolean | Expense$projectArgs<ExtArgs>
  }

  export type $ExpensePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Expense"
    objects: {
      category: Prisma.$CostTypePayload<ExtArgs>
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      fund: Prisma.$FundPayload<ExtArgs> | null
      task: Prisma.$TaskPayload<ExtArgs> | null
      project: Prisma.$ProjectPayload<ExtArgs> | null
      notes: Prisma.$NotePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      regNumber: string | null
      categoryId: string
      description: string | null
      amount: Prisma.Decimal
      date: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      createdById: string | null
      updatedById: string | null
      fundId: string | null
      taskId: string | null
      projectId: string | null
    }, ExtArgs["result"]["expense"]>
    composites: {}
  }

  type ExpenseGetPayload<S extends boolean | null | undefined | ExpenseDefaultArgs> = $Result.GetResult<Prisma.$ExpensePayload, S>

  type ExpenseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ExpenseFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ExpenseCountAggregateInputType | true
    }

  export interface ExpenseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Expense'], meta: { name: 'Expense' } }
    /**
     * Find zero or one Expense that matches the filter.
     * @param {ExpenseFindUniqueArgs} args - Arguments to find a Expense
     * @example
     * // Get one Expense
     * const expense = await prisma.expense.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ExpenseFindUniqueArgs>(args: SelectSubset<T, ExpenseFindUniqueArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Expense that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ExpenseFindUniqueOrThrowArgs} args - Arguments to find a Expense
     * @example
     * // Get one Expense
     * const expense = await prisma.expense.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ExpenseFindUniqueOrThrowArgs>(args: SelectSubset<T, ExpenseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Expense that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseFindFirstArgs} args - Arguments to find a Expense
     * @example
     * // Get one Expense
     * const expense = await prisma.expense.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ExpenseFindFirstArgs>(args?: SelectSubset<T, ExpenseFindFirstArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Expense that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseFindFirstOrThrowArgs} args - Arguments to find a Expense
     * @example
     * // Get one Expense
     * const expense = await prisma.expense.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ExpenseFindFirstOrThrowArgs>(args?: SelectSubset<T, ExpenseFindFirstOrThrowArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Expenses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Expenses
     * const expenses = await prisma.expense.findMany()
     * 
     * // Get first 10 Expenses
     * const expenses = await prisma.expense.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const expenseWithIdOnly = await prisma.expense.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ExpenseFindManyArgs>(args?: SelectSubset<T, ExpenseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Expense.
     * @param {ExpenseCreateArgs} args - Arguments to create a Expense.
     * @example
     * // Create one Expense
     * const Expense = await prisma.expense.create({
     *   data: {
     *     // ... data to create a Expense
     *   }
     * })
     * 
     */
    create<T extends ExpenseCreateArgs>(args: SelectSubset<T, ExpenseCreateArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Expenses.
     * @param {ExpenseCreateManyArgs} args - Arguments to create many Expenses.
     * @example
     * // Create many Expenses
     * const expense = await prisma.expense.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ExpenseCreateManyArgs>(args?: SelectSubset<T, ExpenseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Expenses and returns the data saved in the database.
     * @param {ExpenseCreateManyAndReturnArgs} args - Arguments to create many Expenses.
     * @example
     * // Create many Expenses
     * const expense = await prisma.expense.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Expenses and only return the `id`
     * const expenseWithIdOnly = await prisma.expense.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ExpenseCreateManyAndReturnArgs>(args?: SelectSubset<T, ExpenseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Expense.
     * @param {ExpenseDeleteArgs} args - Arguments to delete one Expense.
     * @example
     * // Delete one Expense
     * const Expense = await prisma.expense.delete({
     *   where: {
     *     // ... filter to delete one Expense
     *   }
     * })
     * 
     */
    delete<T extends ExpenseDeleteArgs>(args: SelectSubset<T, ExpenseDeleteArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Expense.
     * @param {ExpenseUpdateArgs} args - Arguments to update one Expense.
     * @example
     * // Update one Expense
     * const expense = await prisma.expense.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ExpenseUpdateArgs>(args: SelectSubset<T, ExpenseUpdateArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Expenses.
     * @param {ExpenseDeleteManyArgs} args - Arguments to filter Expenses to delete.
     * @example
     * // Delete a few Expenses
     * const { count } = await prisma.expense.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ExpenseDeleteManyArgs>(args?: SelectSubset<T, ExpenseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Expenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Expenses
     * const expense = await prisma.expense.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ExpenseUpdateManyArgs>(args: SelectSubset<T, ExpenseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Expenses and returns the data updated in the database.
     * @param {ExpenseUpdateManyAndReturnArgs} args - Arguments to update many Expenses.
     * @example
     * // Update many Expenses
     * const expense = await prisma.expense.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Expenses and only return the `id`
     * const expenseWithIdOnly = await prisma.expense.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ExpenseUpdateManyAndReturnArgs>(args: SelectSubset<T, ExpenseUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Expense.
     * @param {ExpenseUpsertArgs} args - Arguments to update or create a Expense.
     * @example
     * // Update or create a Expense
     * const expense = await prisma.expense.upsert({
     *   create: {
     *     // ... data to create a Expense
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Expense we want to update
     *   }
     * })
     */
    upsert<T extends ExpenseUpsertArgs>(args: SelectSubset<T, ExpenseUpsertArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Expenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseCountArgs} args - Arguments to filter Expenses to count.
     * @example
     * // Count the number of Expenses
     * const count = await prisma.expense.count({
     *   where: {
     *     // ... the filter for the Expenses we want to count
     *   }
     * })
    **/
    count<T extends ExpenseCountArgs>(
      args?: Subset<T, ExpenseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ExpenseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Expense.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ExpenseAggregateArgs>(args: Subset<T, ExpenseAggregateArgs>): Prisma.PrismaPromise<GetExpenseAggregateType<T>>

    /**
     * Group by Expense.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ExpenseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ExpenseGroupByArgs['orderBy'] }
        : { orderBy?: ExpenseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ExpenseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetExpenseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Expense model
   */
  readonly fields: ExpenseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Expense.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ExpenseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends CostTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CostTypeDefaultArgs<ExtArgs>>): Prisma__CostTypeClient<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends Expense$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Expense$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Expense$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Expense$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    fund<T extends Expense$fundArgs<ExtArgs> = {}>(args?: Subset<T, Expense$fundArgs<ExtArgs>>): Prisma__FundClient<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    task<T extends Expense$taskArgs<ExtArgs> = {}>(args?: Subset<T, Expense$taskArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    project<T extends Expense$projectArgs<ExtArgs> = {}>(args?: Subset<T, Expense$projectArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    notes<T extends Expense$notesArgs<ExtArgs> = {}>(args?: Subset<T, Expense$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Expense model
   */
  interface ExpenseFieldRefs {
    readonly id: FieldRef<"Expense", 'String'>
    readonly regNumber: FieldRef<"Expense", 'String'>
    readonly categoryId: FieldRef<"Expense", 'String'>
    readonly description: FieldRef<"Expense", 'String'>
    readonly amount: FieldRef<"Expense", 'Decimal'>
    readonly date: FieldRef<"Expense", 'DateTime'>
    readonly createdAt: FieldRef<"Expense", 'DateTime'>
    readonly updatedAt: FieldRef<"Expense", 'DateTime'>
    readonly createdById: FieldRef<"Expense", 'String'>
    readonly updatedById: FieldRef<"Expense", 'String'>
    readonly fundId: FieldRef<"Expense", 'String'>
    readonly taskId: FieldRef<"Expense", 'String'>
    readonly projectId: FieldRef<"Expense", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Expense findUnique
   */
  export type ExpenseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter, which Expense to fetch.
     */
    where: ExpenseWhereUniqueInput
  }

  /**
   * Expense findUniqueOrThrow
   */
  export type ExpenseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter, which Expense to fetch.
     */
    where: ExpenseWhereUniqueInput
  }

  /**
   * Expense findFirst
   */
  export type ExpenseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter, which Expense to fetch.
     */
    where?: ExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expenses to fetch.
     */
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Expenses.
     */
    cursor?: ExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Expenses.
     */
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }

  /**
   * Expense findFirstOrThrow
   */
  export type ExpenseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter, which Expense to fetch.
     */
    where?: ExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expenses to fetch.
     */
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Expenses.
     */
    cursor?: ExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Expenses.
     */
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }

  /**
   * Expense findMany
   */
  export type ExpenseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter, which Expenses to fetch.
     */
    where?: ExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expenses to fetch.
     */
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Expenses.
     */
    cursor?: ExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expenses.
     */
    skip?: number
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }

  /**
   * Expense create
   */
  export type ExpenseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * The data needed to create a Expense.
     */
    data: XOR<ExpenseCreateInput, ExpenseUncheckedCreateInput>
  }

  /**
   * Expense createMany
   */
  export type ExpenseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Expenses.
     */
    data: ExpenseCreateManyInput | ExpenseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Expense createManyAndReturn
   */
  export type ExpenseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * The data used to create many Expenses.
     */
    data: ExpenseCreateManyInput | ExpenseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Expense update
   */
  export type ExpenseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * The data needed to update a Expense.
     */
    data: XOR<ExpenseUpdateInput, ExpenseUncheckedUpdateInput>
    /**
     * Choose, which Expense to update.
     */
    where: ExpenseWhereUniqueInput
  }

  /**
   * Expense updateMany
   */
  export type ExpenseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Expenses.
     */
    data: XOR<ExpenseUpdateManyMutationInput, ExpenseUncheckedUpdateManyInput>
    /**
     * Filter which Expenses to update
     */
    where?: ExpenseWhereInput
    /**
     * Limit how many Expenses to update.
     */
    limit?: number
  }

  /**
   * Expense updateManyAndReturn
   */
  export type ExpenseUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * The data used to update Expenses.
     */
    data: XOR<ExpenseUpdateManyMutationInput, ExpenseUncheckedUpdateManyInput>
    /**
     * Filter which Expenses to update
     */
    where?: ExpenseWhereInput
    /**
     * Limit how many Expenses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Expense upsert
   */
  export type ExpenseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * The filter to search for the Expense to update in case it exists.
     */
    where: ExpenseWhereUniqueInput
    /**
     * In case the Expense found by the `where` argument doesn't exist, create a new Expense with this data.
     */
    create: XOR<ExpenseCreateInput, ExpenseUncheckedCreateInput>
    /**
     * In case the Expense was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ExpenseUpdateInput, ExpenseUncheckedUpdateInput>
  }

  /**
   * Expense delete
   */
  export type ExpenseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter which Expense to delete.
     */
    where: ExpenseWhereUniqueInput
  }

  /**
   * Expense deleteMany
   */
  export type ExpenseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Expenses to delete
     */
    where?: ExpenseWhereInput
    /**
     * Limit how many Expenses to delete.
     */
    limit?: number
  }

  /**
   * Expense.createdBy
   */
  export type Expense$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Expense.updatedBy
   */
  export type Expense$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Expense.fund
   */
  export type Expense$fundArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    where?: FundWhereInput
  }

  /**
   * Expense.task
   */
  export type Expense$taskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
  }

  /**
   * Expense.project
   */
  export type Expense$projectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
  }

  /**
   * Expense.notes
   */
  export type Expense$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Expense without action
   */
  export type ExpenseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
  }


  /**
   * Model CostType
   */

  export type AggregateCostType = {
    _count: CostTypeCountAggregateOutputType | null
    _avg: CostTypeAvgAggregateOutputType | null
    _sum: CostTypeSumAggregateOutputType | null
    _min: CostTypeMinAggregateOutputType | null
    _max: CostTypeMaxAggregateOutputType | null
  }

  export type CostTypeAvgAggregateOutputType = {
    order: number | null
  }

  export type CostTypeSumAggregateOutputType = {
    order: number | null
  }

  export type CostTypeMinAggregateOutputType = {
    id: string | null
    order: number | null
    name: string | null
    parentId: string | null
    createdById: string | null
    updatedById: string | null
  }

  export type CostTypeMaxAggregateOutputType = {
    id: string | null
    order: number | null
    name: string | null
    parentId: string | null
    createdById: string | null
    updatedById: string | null
  }

  export type CostTypeCountAggregateOutputType = {
    id: number
    order: number
    name: number
    parentId: number
    createdById: number
    updatedById: number
    _all: number
  }


  export type CostTypeAvgAggregateInputType = {
    order?: true
  }

  export type CostTypeSumAggregateInputType = {
    order?: true
  }

  export type CostTypeMinAggregateInputType = {
    id?: true
    order?: true
    name?: true
    parentId?: true
    createdById?: true
    updatedById?: true
  }

  export type CostTypeMaxAggregateInputType = {
    id?: true
    order?: true
    name?: true
    parentId?: true
    createdById?: true
    updatedById?: true
  }

  export type CostTypeCountAggregateInputType = {
    id?: true
    order?: true
    name?: true
    parentId?: true
    createdById?: true
    updatedById?: true
    _all?: true
  }

  export type CostTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CostType to aggregate.
     */
    where?: CostTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CostTypes to fetch.
     */
    orderBy?: CostTypeOrderByWithRelationInput | CostTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CostTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CostTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CostTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CostTypes
    **/
    _count?: true | CostTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CostTypeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CostTypeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CostTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CostTypeMaxAggregateInputType
  }

  export type GetCostTypeAggregateType<T extends CostTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateCostType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCostType[P]>
      : GetScalarType<T[P], AggregateCostType[P]>
  }




  export type CostTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CostTypeWhereInput
    orderBy?: CostTypeOrderByWithAggregationInput | CostTypeOrderByWithAggregationInput[]
    by: CostTypeScalarFieldEnum[] | CostTypeScalarFieldEnum
    having?: CostTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CostTypeCountAggregateInputType | true
    _avg?: CostTypeAvgAggregateInputType
    _sum?: CostTypeSumAggregateInputType
    _min?: CostTypeMinAggregateInputType
    _max?: CostTypeMaxAggregateInputType
  }

  export type CostTypeGroupByOutputType = {
    id: string
    order: number | null
    name: string
    parentId: string | null
    createdById: string | null
    updatedById: string | null
    _count: CostTypeCountAggregateOutputType | null
    _avg: CostTypeAvgAggregateOutputType | null
    _sum: CostTypeSumAggregateOutputType | null
    _min: CostTypeMinAggregateOutputType | null
    _max: CostTypeMaxAggregateOutputType | null
  }

  type GetCostTypeGroupByPayload<T extends CostTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CostTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CostTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CostTypeGroupByOutputType[P]>
            : GetScalarType<T[P], CostTypeGroupByOutputType[P]>
        }
      >
    >


  export type CostTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order?: boolean
    name?: boolean
    parentId?: boolean
    createdById?: boolean
    updatedById?: boolean
    parent?: boolean | CostType$parentArgs<ExtArgs>
    children?: boolean | CostType$childrenArgs<ExtArgs>
    createdBy?: boolean | CostType$createdByArgs<ExtArgs>
    updatedBy?: boolean | CostType$updatedByArgs<ExtArgs>
    budgetItems?: boolean | CostType$budgetItemsArgs<ExtArgs>
    fundItems?: boolean | CostType$fundItemsArgs<ExtArgs>
    expenses?: boolean | CostType$expensesArgs<ExtArgs>
    _count?: boolean | CostTypeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["costType"]>

  export type CostTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order?: boolean
    name?: boolean
    parentId?: boolean
    createdById?: boolean
    updatedById?: boolean
    parent?: boolean | CostType$parentArgs<ExtArgs>
    createdBy?: boolean | CostType$createdByArgs<ExtArgs>
    updatedBy?: boolean | CostType$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["costType"]>

  export type CostTypeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order?: boolean
    name?: boolean
    parentId?: boolean
    createdById?: boolean
    updatedById?: boolean
    parent?: boolean | CostType$parentArgs<ExtArgs>
    createdBy?: boolean | CostType$createdByArgs<ExtArgs>
    updatedBy?: boolean | CostType$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["costType"]>

  export type CostTypeSelectScalar = {
    id?: boolean
    order?: boolean
    name?: boolean
    parentId?: boolean
    createdById?: boolean
    updatedById?: boolean
  }

  export type CostTypeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order" | "name" | "parentId" | "createdById" | "updatedById", ExtArgs["result"]["costType"]>
  export type CostTypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | CostType$parentArgs<ExtArgs>
    children?: boolean | CostType$childrenArgs<ExtArgs>
    createdBy?: boolean | CostType$createdByArgs<ExtArgs>
    updatedBy?: boolean | CostType$updatedByArgs<ExtArgs>
    budgetItems?: boolean | CostType$budgetItemsArgs<ExtArgs>
    fundItems?: boolean | CostType$fundItemsArgs<ExtArgs>
    expenses?: boolean | CostType$expensesArgs<ExtArgs>
    _count?: boolean | CostTypeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CostTypeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | CostType$parentArgs<ExtArgs>
    createdBy?: boolean | CostType$createdByArgs<ExtArgs>
    updatedBy?: boolean | CostType$updatedByArgs<ExtArgs>
  }
  export type CostTypeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | CostType$parentArgs<ExtArgs>
    createdBy?: boolean | CostType$createdByArgs<ExtArgs>
    updatedBy?: boolean | CostType$updatedByArgs<ExtArgs>
  }

  export type $CostTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CostType"
    objects: {
      parent: Prisma.$CostTypePayload<ExtArgs> | null
      children: Prisma.$CostTypePayload<ExtArgs>[]
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      budgetItems: Prisma.$BudgetItemPayload<ExtArgs>[]
      fundItems: Prisma.$FundItemPayload<ExtArgs>[]
      expenses: Prisma.$ExpensePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      order: number | null
      name: string
      parentId: string | null
      createdById: string | null
      updatedById: string | null
    }, ExtArgs["result"]["costType"]>
    composites: {}
  }

  type CostTypeGetPayload<S extends boolean | null | undefined | CostTypeDefaultArgs> = $Result.GetResult<Prisma.$CostTypePayload, S>

  type CostTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CostTypeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CostTypeCountAggregateInputType | true
    }

  export interface CostTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CostType'], meta: { name: 'CostType' } }
    /**
     * Find zero or one CostType that matches the filter.
     * @param {CostTypeFindUniqueArgs} args - Arguments to find a CostType
     * @example
     * // Get one CostType
     * const costType = await prisma.costType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CostTypeFindUniqueArgs>(args: SelectSubset<T, CostTypeFindUniqueArgs<ExtArgs>>): Prisma__CostTypeClient<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CostType that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CostTypeFindUniqueOrThrowArgs} args - Arguments to find a CostType
     * @example
     * // Get one CostType
     * const costType = await prisma.costType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CostTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, CostTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CostTypeClient<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CostType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CostTypeFindFirstArgs} args - Arguments to find a CostType
     * @example
     * // Get one CostType
     * const costType = await prisma.costType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CostTypeFindFirstArgs>(args?: SelectSubset<T, CostTypeFindFirstArgs<ExtArgs>>): Prisma__CostTypeClient<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CostType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CostTypeFindFirstOrThrowArgs} args - Arguments to find a CostType
     * @example
     * // Get one CostType
     * const costType = await prisma.costType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CostTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, CostTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__CostTypeClient<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CostTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CostTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CostTypes
     * const costTypes = await prisma.costType.findMany()
     * 
     * // Get first 10 CostTypes
     * const costTypes = await prisma.costType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const costTypeWithIdOnly = await prisma.costType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CostTypeFindManyArgs>(args?: SelectSubset<T, CostTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CostType.
     * @param {CostTypeCreateArgs} args - Arguments to create a CostType.
     * @example
     * // Create one CostType
     * const CostType = await prisma.costType.create({
     *   data: {
     *     // ... data to create a CostType
     *   }
     * })
     * 
     */
    create<T extends CostTypeCreateArgs>(args: SelectSubset<T, CostTypeCreateArgs<ExtArgs>>): Prisma__CostTypeClient<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CostTypes.
     * @param {CostTypeCreateManyArgs} args - Arguments to create many CostTypes.
     * @example
     * // Create many CostTypes
     * const costType = await prisma.costType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CostTypeCreateManyArgs>(args?: SelectSubset<T, CostTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CostTypes and returns the data saved in the database.
     * @param {CostTypeCreateManyAndReturnArgs} args - Arguments to create many CostTypes.
     * @example
     * // Create many CostTypes
     * const costType = await prisma.costType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CostTypes and only return the `id`
     * const costTypeWithIdOnly = await prisma.costType.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CostTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, CostTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CostType.
     * @param {CostTypeDeleteArgs} args - Arguments to delete one CostType.
     * @example
     * // Delete one CostType
     * const CostType = await prisma.costType.delete({
     *   where: {
     *     // ... filter to delete one CostType
     *   }
     * })
     * 
     */
    delete<T extends CostTypeDeleteArgs>(args: SelectSubset<T, CostTypeDeleteArgs<ExtArgs>>): Prisma__CostTypeClient<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CostType.
     * @param {CostTypeUpdateArgs} args - Arguments to update one CostType.
     * @example
     * // Update one CostType
     * const costType = await prisma.costType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CostTypeUpdateArgs>(args: SelectSubset<T, CostTypeUpdateArgs<ExtArgs>>): Prisma__CostTypeClient<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CostTypes.
     * @param {CostTypeDeleteManyArgs} args - Arguments to filter CostTypes to delete.
     * @example
     * // Delete a few CostTypes
     * const { count } = await prisma.costType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CostTypeDeleteManyArgs>(args?: SelectSubset<T, CostTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CostTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CostTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CostTypes
     * const costType = await prisma.costType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CostTypeUpdateManyArgs>(args: SelectSubset<T, CostTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CostTypes and returns the data updated in the database.
     * @param {CostTypeUpdateManyAndReturnArgs} args - Arguments to update many CostTypes.
     * @example
     * // Update many CostTypes
     * const costType = await prisma.costType.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CostTypes and only return the `id`
     * const costTypeWithIdOnly = await prisma.costType.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CostTypeUpdateManyAndReturnArgs>(args: SelectSubset<T, CostTypeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CostType.
     * @param {CostTypeUpsertArgs} args - Arguments to update or create a CostType.
     * @example
     * // Update or create a CostType
     * const costType = await prisma.costType.upsert({
     *   create: {
     *     // ... data to create a CostType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CostType we want to update
     *   }
     * })
     */
    upsert<T extends CostTypeUpsertArgs>(args: SelectSubset<T, CostTypeUpsertArgs<ExtArgs>>): Prisma__CostTypeClient<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CostTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CostTypeCountArgs} args - Arguments to filter CostTypes to count.
     * @example
     * // Count the number of CostTypes
     * const count = await prisma.costType.count({
     *   where: {
     *     // ... the filter for the CostTypes we want to count
     *   }
     * })
    **/
    count<T extends CostTypeCountArgs>(
      args?: Subset<T, CostTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CostTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CostType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CostTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CostTypeAggregateArgs>(args: Subset<T, CostTypeAggregateArgs>): Prisma.PrismaPromise<GetCostTypeAggregateType<T>>

    /**
     * Group by CostType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CostTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CostTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CostTypeGroupByArgs['orderBy'] }
        : { orderBy?: CostTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CostTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCostTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CostType model
   */
  readonly fields: CostTypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CostType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CostTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parent<T extends CostType$parentArgs<ExtArgs> = {}>(args?: Subset<T, CostType$parentArgs<ExtArgs>>): Prisma__CostTypeClient<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    children<T extends CostType$childrenArgs<ExtArgs> = {}>(args?: Subset<T, CostType$childrenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBy<T extends CostType$createdByArgs<ExtArgs> = {}>(args?: Subset<T, CostType$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends CostType$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, CostType$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    budgetItems<T extends CostType$budgetItemsArgs<ExtArgs> = {}>(args?: Subset<T, CostType$budgetItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BudgetItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    fundItems<T extends CostType$fundItemsArgs<ExtArgs> = {}>(args?: Subset<T, CostType$fundItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    expenses<T extends CostType$expensesArgs<ExtArgs> = {}>(args?: Subset<T, CostType$expensesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CostType model
   */
  interface CostTypeFieldRefs {
    readonly id: FieldRef<"CostType", 'String'>
    readonly order: FieldRef<"CostType", 'Int'>
    readonly name: FieldRef<"CostType", 'String'>
    readonly parentId: FieldRef<"CostType", 'String'>
    readonly createdById: FieldRef<"CostType", 'String'>
    readonly updatedById: FieldRef<"CostType", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CostType findUnique
   */
  export type CostTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
    /**
     * Filter, which CostType to fetch.
     */
    where: CostTypeWhereUniqueInput
  }

  /**
   * CostType findUniqueOrThrow
   */
  export type CostTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
    /**
     * Filter, which CostType to fetch.
     */
    where: CostTypeWhereUniqueInput
  }

  /**
   * CostType findFirst
   */
  export type CostTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
    /**
     * Filter, which CostType to fetch.
     */
    where?: CostTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CostTypes to fetch.
     */
    orderBy?: CostTypeOrderByWithRelationInput | CostTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CostTypes.
     */
    cursor?: CostTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CostTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CostTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CostTypes.
     */
    distinct?: CostTypeScalarFieldEnum | CostTypeScalarFieldEnum[]
  }

  /**
   * CostType findFirstOrThrow
   */
  export type CostTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
    /**
     * Filter, which CostType to fetch.
     */
    where?: CostTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CostTypes to fetch.
     */
    orderBy?: CostTypeOrderByWithRelationInput | CostTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CostTypes.
     */
    cursor?: CostTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CostTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CostTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CostTypes.
     */
    distinct?: CostTypeScalarFieldEnum | CostTypeScalarFieldEnum[]
  }

  /**
   * CostType findMany
   */
  export type CostTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
    /**
     * Filter, which CostTypes to fetch.
     */
    where?: CostTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CostTypes to fetch.
     */
    orderBy?: CostTypeOrderByWithRelationInput | CostTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CostTypes.
     */
    cursor?: CostTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CostTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CostTypes.
     */
    skip?: number
    distinct?: CostTypeScalarFieldEnum | CostTypeScalarFieldEnum[]
  }

  /**
   * CostType create
   */
  export type CostTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
    /**
     * The data needed to create a CostType.
     */
    data: XOR<CostTypeCreateInput, CostTypeUncheckedCreateInput>
  }

  /**
   * CostType createMany
   */
  export type CostTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CostTypes.
     */
    data: CostTypeCreateManyInput | CostTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CostType createManyAndReturn
   */
  export type CostTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * The data used to create many CostTypes.
     */
    data: CostTypeCreateManyInput | CostTypeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CostType update
   */
  export type CostTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
    /**
     * The data needed to update a CostType.
     */
    data: XOR<CostTypeUpdateInput, CostTypeUncheckedUpdateInput>
    /**
     * Choose, which CostType to update.
     */
    where: CostTypeWhereUniqueInput
  }

  /**
   * CostType updateMany
   */
  export type CostTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CostTypes.
     */
    data: XOR<CostTypeUpdateManyMutationInput, CostTypeUncheckedUpdateManyInput>
    /**
     * Filter which CostTypes to update
     */
    where?: CostTypeWhereInput
    /**
     * Limit how many CostTypes to update.
     */
    limit?: number
  }

  /**
   * CostType updateManyAndReturn
   */
  export type CostTypeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * The data used to update CostTypes.
     */
    data: XOR<CostTypeUpdateManyMutationInput, CostTypeUncheckedUpdateManyInput>
    /**
     * Filter which CostTypes to update
     */
    where?: CostTypeWhereInput
    /**
     * Limit how many CostTypes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CostType upsert
   */
  export type CostTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
    /**
     * The filter to search for the CostType to update in case it exists.
     */
    where: CostTypeWhereUniqueInput
    /**
     * In case the CostType found by the `where` argument doesn't exist, create a new CostType with this data.
     */
    create: XOR<CostTypeCreateInput, CostTypeUncheckedCreateInput>
    /**
     * In case the CostType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CostTypeUpdateInput, CostTypeUncheckedUpdateInput>
  }

  /**
   * CostType delete
   */
  export type CostTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
    /**
     * Filter which CostType to delete.
     */
    where: CostTypeWhereUniqueInput
  }

  /**
   * CostType deleteMany
   */
  export type CostTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CostTypes to delete
     */
    where?: CostTypeWhereInput
    /**
     * Limit how many CostTypes to delete.
     */
    limit?: number
  }

  /**
   * CostType.parent
   */
  export type CostType$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
    where?: CostTypeWhereInput
  }

  /**
   * CostType.children
   */
  export type CostType$childrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
    where?: CostTypeWhereInput
    orderBy?: CostTypeOrderByWithRelationInput | CostTypeOrderByWithRelationInput[]
    cursor?: CostTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CostTypeScalarFieldEnum | CostTypeScalarFieldEnum[]
  }

  /**
   * CostType.createdBy
   */
  export type CostType$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * CostType.updatedBy
   */
  export type CostType$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * CostType.budgetItems
   */
  export type CostType$budgetItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BudgetItem
     */
    select?: BudgetItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BudgetItem
     */
    omit?: BudgetItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetItemInclude<ExtArgs> | null
    where?: BudgetItemWhereInput
    orderBy?: BudgetItemOrderByWithRelationInput | BudgetItemOrderByWithRelationInput[]
    cursor?: BudgetItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BudgetItemScalarFieldEnum | BudgetItemScalarFieldEnum[]
  }

  /**
   * CostType.fundItems
   */
  export type CostType$fundItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FundItem
     */
    select?: FundItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FundItem
     */
    omit?: FundItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundItemInclude<ExtArgs> | null
    where?: FundItemWhereInput
    orderBy?: FundItemOrderByWithRelationInput | FundItemOrderByWithRelationInput[]
    cursor?: FundItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FundItemScalarFieldEnum | FundItemScalarFieldEnum[]
  }

  /**
   * CostType.expenses
   */
  export type CostType$expensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    where?: ExpenseWhereInput
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    cursor?: ExpenseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }

  /**
   * CostType without action
   */
  export type CostTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
  }


  /**
   * Model Pipeline
   */

  export type AggregatePipeline = {
    _count: PipelineCountAggregateOutputType | null
    _min: PipelineMinAggregateOutputType | null
    _max: PipelineMaxAggregateOutputType | null
  }

  export type PipelineMinAggregateOutputType = {
    id: string | null
    regNumber: string | null
    category: string | null
    leadId: string | null
    opportunityId: string | null
    quoteId: string | null
    contractId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
  }

  export type PipelineMaxAggregateOutputType = {
    id: string | null
    regNumber: string | null
    category: string | null
    leadId: string | null
    opportunityId: string | null
    quoteId: string | null
    contractId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
  }

  export type PipelineCountAggregateOutputType = {
    id: number
    regNumber: number
    category: number
    leadId: number
    opportunityId: number
    quoteId: number
    contractId: number
    createdAt: number
    updatedAt: number
    assigneeId: number
    createdById: number
    updatedById: number
    _all: number
  }


  export type PipelineMinAggregateInputType = {
    id?: true
    regNumber?: true
    category?: true
    leadId?: true
    opportunityId?: true
    quoteId?: true
    contractId?: true
    createdAt?: true
    updatedAt?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
  }

  export type PipelineMaxAggregateInputType = {
    id?: true
    regNumber?: true
    category?: true
    leadId?: true
    opportunityId?: true
    quoteId?: true
    contractId?: true
    createdAt?: true
    updatedAt?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
  }

  export type PipelineCountAggregateInputType = {
    id?: true
    regNumber?: true
    category?: true
    leadId?: true
    opportunityId?: true
    quoteId?: true
    contractId?: true
    createdAt?: true
    updatedAt?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
    _all?: true
  }

  export type PipelineAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pipeline to aggregate.
     */
    where?: PipelineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pipelines to fetch.
     */
    orderBy?: PipelineOrderByWithRelationInput | PipelineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PipelineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pipelines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pipelines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pipelines
    **/
    _count?: true | PipelineCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PipelineMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PipelineMaxAggregateInputType
  }

  export type GetPipelineAggregateType<T extends PipelineAggregateArgs> = {
        [P in keyof T & keyof AggregatePipeline]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePipeline[P]>
      : GetScalarType<T[P], AggregatePipeline[P]>
  }




  export type PipelineGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PipelineWhereInput
    orderBy?: PipelineOrderByWithAggregationInput | PipelineOrderByWithAggregationInput[]
    by: PipelineScalarFieldEnum[] | PipelineScalarFieldEnum
    having?: PipelineScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PipelineCountAggregateInputType | true
    _min?: PipelineMinAggregateInputType
    _max?: PipelineMaxAggregateInputType
  }

  export type PipelineGroupByOutputType = {
    id: string
    regNumber: string | null
    category: string | null
    leadId: string | null
    opportunityId: string | null
    quoteId: string | null
    contractId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
    _count: PipelineCountAggregateOutputType | null
    _min: PipelineMinAggregateOutputType | null
    _max: PipelineMaxAggregateOutputType | null
  }

  type GetPipelineGroupByPayload<T extends PipelineGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PipelineGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PipelineGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PipelineGroupByOutputType[P]>
            : GetScalarType<T[P], PipelineGroupByOutputType[P]>
        }
      >
    >


  export type PipelineSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    category?: boolean
    leadId?: boolean
    opportunityId?: boolean
    quoteId?: boolean
    contractId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    lead?: boolean | Pipeline$leadArgs<ExtArgs>
    opportunity?: boolean | Pipeline$opportunityArgs<ExtArgs>
    quote?: boolean | Pipeline$quoteArgs<ExtArgs>
    contract?: boolean | Pipeline$contractArgs<ExtArgs>
    assignee?: boolean | Pipeline$assigneeArgs<ExtArgs>
    members?: boolean | Pipeline$membersArgs<ExtArgs>
    createdBy?: boolean | Pipeline$createdByArgs<ExtArgs>
    updatedBy?: boolean | Pipeline$updatedByArgs<ExtArgs>
    stages?: boolean | Pipeline$stagesArgs<ExtArgs>
    notes?: boolean | Pipeline$notesArgs<ExtArgs>
    events?: boolean | Pipeline$eventsArgs<ExtArgs>
    _count?: boolean | PipelineCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pipeline"]>

  export type PipelineSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    category?: boolean
    leadId?: boolean
    opportunityId?: boolean
    quoteId?: boolean
    contractId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    lead?: boolean | Pipeline$leadArgs<ExtArgs>
    opportunity?: boolean | Pipeline$opportunityArgs<ExtArgs>
    quote?: boolean | Pipeline$quoteArgs<ExtArgs>
    contract?: boolean | Pipeline$contractArgs<ExtArgs>
    assignee?: boolean | Pipeline$assigneeArgs<ExtArgs>
    createdBy?: boolean | Pipeline$createdByArgs<ExtArgs>
    updatedBy?: boolean | Pipeline$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["pipeline"]>

  export type PipelineSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    category?: boolean
    leadId?: boolean
    opportunityId?: boolean
    quoteId?: boolean
    contractId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    lead?: boolean | Pipeline$leadArgs<ExtArgs>
    opportunity?: boolean | Pipeline$opportunityArgs<ExtArgs>
    quote?: boolean | Pipeline$quoteArgs<ExtArgs>
    contract?: boolean | Pipeline$contractArgs<ExtArgs>
    assignee?: boolean | Pipeline$assigneeArgs<ExtArgs>
    createdBy?: boolean | Pipeline$createdByArgs<ExtArgs>
    updatedBy?: boolean | Pipeline$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["pipeline"]>

  export type PipelineSelectScalar = {
    id?: boolean
    regNumber?: boolean
    category?: boolean
    leadId?: boolean
    opportunityId?: boolean
    quoteId?: boolean
    contractId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
  }

  export type PipelineOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "regNumber" | "category" | "leadId" | "opportunityId" | "quoteId" | "contractId" | "createdAt" | "updatedAt" | "assigneeId" | "createdById" | "updatedById", ExtArgs["result"]["pipeline"]>
  export type PipelineInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lead?: boolean | Pipeline$leadArgs<ExtArgs>
    opportunity?: boolean | Pipeline$opportunityArgs<ExtArgs>
    quote?: boolean | Pipeline$quoteArgs<ExtArgs>
    contract?: boolean | Pipeline$contractArgs<ExtArgs>
    assignee?: boolean | Pipeline$assigneeArgs<ExtArgs>
    members?: boolean | Pipeline$membersArgs<ExtArgs>
    createdBy?: boolean | Pipeline$createdByArgs<ExtArgs>
    updatedBy?: boolean | Pipeline$updatedByArgs<ExtArgs>
    stages?: boolean | Pipeline$stagesArgs<ExtArgs>
    notes?: boolean | Pipeline$notesArgs<ExtArgs>
    events?: boolean | Pipeline$eventsArgs<ExtArgs>
    _count?: boolean | PipelineCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PipelineIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lead?: boolean | Pipeline$leadArgs<ExtArgs>
    opportunity?: boolean | Pipeline$opportunityArgs<ExtArgs>
    quote?: boolean | Pipeline$quoteArgs<ExtArgs>
    contract?: boolean | Pipeline$contractArgs<ExtArgs>
    assignee?: boolean | Pipeline$assigneeArgs<ExtArgs>
    createdBy?: boolean | Pipeline$createdByArgs<ExtArgs>
    updatedBy?: boolean | Pipeline$updatedByArgs<ExtArgs>
  }
  export type PipelineIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lead?: boolean | Pipeline$leadArgs<ExtArgs>
    opportunity?: boolean | Pipeline$opportunityArgs<ExtArgs>
    quote?: boolean | Pipeline$quoteArgs<ExtArgs>
    contract?: boolean | Pipeline$contractArgs<ExtArgs>
    assignee?: boolean | Pipeline$assigneeArgs<ExtArgs>
    createdBy?: boolean | Pipeline$createdByArgs<ExtArgs>
    updatedBy?: boolean | Pipeline$updatedByArgs<ExtArgs>
  }

  export type $PipelinePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pipeline"
    objects: {
      lead: Prisma.$LeadPayload<ExtArgs> | null
      opportunity: Prisma.$OpportunityPayload<ExtArgs> | null
      quote: Prisma.$QuotePayload<ExtArgs> | null
      contract: Prisma.$ContractPayload<ExtArgs> | null
      assignee: Prisma.$UserPayload<ExtArgs> | null
      members: Prisma.$UserPayload<ExtArgs>[]
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      stages: Prisma.$StagePayload<ExtArgs>[]
      notes: Prisma.$NotePayload<ExtArgs>[]
      events: Prisma.$EventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      regNumber: string | null
      category: string | null
      leadId: string | null
      opportunityId: string | null
      quoteId: string | null
      contractId: string | null
      createdAt: Date | null
      updatedAt: Date | null
      assigneeId: string | null
      createdById: string | null
      updatedById: string | null
    }, ExtArgs["result"]["pipeline"]>
    composites: {}
  }

  type PipelineGetPayload<S extends boolean | null | undefined | PipelineDefaultArgs> = $Result.GetResult<Prisma.$PipelinePayload, S>

  type PipelineCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PipelineFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PipelineCountAggregateInputType | true
    }

  export interface PipelineDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pipeline'], meta: { name: 'Pipeline' } }
    /**
     * Find zero or one Pipeline that matches the filter.
     * @param {PipelineFindUniqueArgs} args - Arguments to find a Pipeline
     * @example
     * // Get one Pipeline
     * const pipeline = await prisma.pipeline.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PipelineFindUniqueArgs>(args: SelectSubset<T, PipelineFindUniqueArgs<ExtArgs>>): Prisma__PipelineClient<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pipeline that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PipelineFindUniqueOrThrowArgs} args - Arguments to find a Pipeline
     * @example
     * // Get one Pipeline
     * const pipeline = await prisma.pipeline.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PipelineFindUniqueOrThrowArgs>(args: SelectSubset<T, PipelineFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PipelineClient<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pipeline that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PipelineFindFirstArgs} args - Arguments to find a Pipeline
     * @example
     * // Get one Pipeline
     * const pipeline = await prisma.pipeline.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PipelineFindFirstArgs>(args?: SelectSubset<T, PipelineFindFirstArgs<ExtArgs>>): Prisma__PipelineClient<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pipeline that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PipelineFindFirstOrThrowArgs} args - Arguments to find a Pipeline
     * @example
     * // Get one Pipeline
     * const pipeline = await prisma.pipeline.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PipelineFindFirstOrThrowArgs>(args?: SelectSubset<T, PipelineFindFirstOrThrowArgs<ExtArgs>>): Prisma__PipelineClient<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pipelines that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PipelineFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pipelines
     * const pipelines = await prisma.pipeline.findMany()
     * 
     * // Get first 10 Pipelines
     * const pipelines = await prisma.pipeline.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pipelineWithIdOnly = await prisma.pipeline.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PipelineFindManyArgs>(args?: SelectSubset<T, PipelineFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pipeline.
     * @param {PipelineCreateArgs} args - Arguments to create a Pipeline.
     * @example
     * // Create one Pipeline
     * const Pipeline = await prisma.pipeline.create({
     *   data: {
     *     // ... data to create a Pipeline
     *   }
     * })
     * 
     */
    create<T extends PipelineCreateArgs>(args: SelectSubset<T, PipelineCreateArgs<ExtArgs>>): Prisma__PipelineClient<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pipelines.
     * @param {PipelineCreateManyArgs} args - Arguments to create many Pipelines.
     * @example
     * // Create many Pipelines
     * const pipeline = await prisma.pipeline.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PipelineCreateManyArgs>(args?: SelectSubset<T, PipelineCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pipelines and returns the data saved in the database.
     * @param {PipelineCreateManyAndReturnArgs} args - Arguments to create many Pipelines.
     * @example
     * // Create many Pipelines
     * const pipeline = await prisma.pipeline.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pipelines and only return the `id`
     * const pipelineWithIdOnly = await prisma.pipeline.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PipelineCreateManyAndReturnArgs>(args?: SelectSubset<T, PipelineCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pipeline.
     * @param {PipelineDeleteArgs} args - Arguments to delete one Pipeline.
     * @example
     * // Delete one Pipeline
     * const Pipeline = await prisma.pipeline.delete({
     *   where: {
     *     // ... filter to delete one Pipeline
     *   }
     * })
     * 
     */
    delete<T extends PipelineDeleteArgs>(args: SelectSubset<T, PipelineDeleteArgs<ExtArgs>>): Prisma__PipelineClient<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pipeline.
     * @param {PipelineUpdateArgs} args - Arguments to update one Pipeline.
     * @example
     * // Update one Pipeline
     * const pipeline = await prisma.pipeline.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PipelineUpdateArgs>(args: SelectSubset<T, PipelineUpdateArgs<ExtArgs>>): Prisma__PipelineClient<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pipelines.
     * @param {PipelineDeleteManyArgs} args - Arguments to filter Pipelines to delete.
     * @example
     * // Delete a few Pipelines
     * const { count } = await prisma.pipeline.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PipelineDeleteManyArgs>(args?: SelectSubset<T, PipelineDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pipelines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PipelineUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pipelines
     * const pipeline = await prisma.pipeline.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PipelineUpdateManyArgs>(args: SelectSubset<T, PipelineUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pipelines and returns the data updated in the database.
     * @param {PipelineUpdateManyAndReturnArgs} args - Arguments to update many Pipelines.
     * @example
     * // Update many Pipelines
     * const pipeline = await prisma.pipeline.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pipelines and only return the `id`
     * const pipelineWithIdOnly = await prisma.pipeline.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PipelineUpdateManyAndReturnArgs>(args: SelectSubset<T, PipelineUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pipeline.
     * @param {PipelineUpsertArgs} args - Arguments to update or create a Pipeline.
     * @example
     * // Update or create a Pipeline
     * const pipeline = await prisma.pipeline.upsert({
     *   create: {
     *     // ... data to create a Pipeline
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pipeline we want to update
     *   }
     * })
     */
    upsert<T extends PipelineUpsertArgs>(args: SelectSubset<T, PipelineUpsertArgs<ExtArgs>>): Prisma__PipelineClient<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pipelines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PipelineCountArgs} args - Arguments to filter Pipelines to count.
     * @example
     * // Count the number of Pipelines
     * const count = await prisma.pipeline.count({
     *   where: {
     *     // ... the filter for the Pipelines we want to count
     *   }
     * })
    **/
    count<T extends PipelineCountArgs>(
      args?: Subset<T, PipelineCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PipelineCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pipeline.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PipelineAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PipelineAggregateArgs>(args: Subset<T, PipelineAggregateArgs>): Prisma.PrismaPromise<GetPipelineAggregateType<T>>

    /**
     * Group by Pipeline.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PipelineGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PipelineGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PipelineGroupByArgs['orderBy'] }
        : { orderBy?: PipelineGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PipelineGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPipelineGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pipeline model
   */
  readonly fields: PipelineFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pipeline.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PipelineClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    lead<T extends Pipeline$leadArgs<ExtArgs> = {}>(args?: Subset<T, Pipeline$leadArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    opportunity<T extends Pipeline$opportunityArgs<ExtArgs> = {}>(args?: Subset<T, Pipeline$opportunityArgs<ExtArgs>>): Prisma__OpportunityClient<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    quote<T extends Pipeline$quoteArgs<ExtArgs> = {}>(args?: Subset<T, Pipeline$quoteArgs<ExtArgs>>): Prisma__QuoteClient<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    contract<T extends Pipeline$contractArgs<ExtArgs> = {}>(args?: Subset<T, Pipeline$contractArgs<ExtArgs>>): Prisma__ContractClient<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    assignee<T extends Pipeline$assigneeArgs<ExtArgs> = {}>(args?: Subset<T, Pipeline$assigneeArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    members<T extends Pipeline$membersArgs<ExtArgs> = {}>(args?: Subset<T, Pipeline$membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBy<T extends Pipeline$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Pipeline$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Pipeline$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Pipeline$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    stages<T extends Pipeline$stagesArgs<ExtArgs> = {}>(args?: Subset<T, Pipeline$stagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notes<T extends Pipeline$notesArgs<ExtArgs> = {}>(args?: Subset<T, Pipeline$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    events<T extends Pipeline$eventsArgs<ExtArgs> = {}>(args?: Subset<T, Pipeline$eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pipeline model
   */
  interface PipelineFieldRefs {
    readonly id: FieldRef<"Pipeline", 'String'>
    readonly regNumber: FieldRef<"Pipeline", 'String'>
    readonly category: FieldRef<"Pipeline", 'String'>
    readonly leadId: FieldRef<"Pipeline", 'String'>
    readonly opportunityId: FieldRef<"Pipeline", 'String'>
    readonly quoteId: FieldRef<"Pipeline", 'String'>
    readonly contractId: FieldRef<"Pipeline", 'String'>
    readonly createdAt: FieldRef<"Pipeline", 'DateTime'>
    readonly updatedAt: FieldRef<"Pipeline", 'DateTime'>
    readonly assigneeId: FieldRef<"Pipeline", 'String'>
    readonly createdById: FieldRef<"Pipeline", 'String'>
    readonly updatedById: FieldRef<"Pipeline", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Pipeline findUnique
   */
  export type PipelineFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    /**
     * Filter, which Pipeline to fetch.
     */
    where: PipelineWhereUniqueInput
  }

  /**
   * Pipeline findUniqueOrThrow
   */
  export type PipelineFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    /**
     * Filter, which Pipeline to fetch.
     */
    where: PipelineWhereUniqueInput
  }

  /**
   * Pipeline findFirst
   */
  export type PipelineFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    /**
     * Filter, which Pipeline to fetch.
     */
    where?: PipelineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pipelines to fetch.
     */
    orderBy?: PipelineOrderByWithRelationInput | PipelineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pipelines.
     */
    cursor?: PipelineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pipelines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pipelines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pipelines.
     */
    distinct?: PipelineScalarFieldEnum | PipelineScalarFieldEnum[]
  }

  /**
   * Pipeline findFirstOrThrow
   */
  export type PipelineFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    /**
     * Filter, which Pipeline to fetch.
     */
    where?: PipelineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pipelines to fetch.
     */
    orderBy?: PipelineOrderByWithRelationInput | PipelineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pipelines.
     */
    cursor?: PipelineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pipelines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pipelines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pipelines.
     */
    distinct?: PipelineScalarFieldEnum | PipelineScalarFieldEnum[]
  }

  /**
   * Pipeline findMany
   */
  export type PipelineFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    /**
     * Filter, which Pipelines to fetch.
     */
    where?: PipelineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pipelines to fetch.
     */
    orderBy?: PipelineOrderByWithRelationInput | PipelineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pipelines.
     */
    cursor?: PipelineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pipelines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pipelines.
     */
    skip?: number
    distinct?: PipelineScalarFieldEnum | PipelineScalarFieldEnum[]
  }

  /**
   * Pipeline create
   */
  export type PipelineCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    /**
     * The data needed to create a Pipeline.
     */
    data?: XOR<PipelineCreateInput, PipelineUncheckedCreateInput>
  }

  /**
   * Pipeline createMany
   */
  export type PipelineCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pipelines.
     */
    data: PipelineCreateManyInput | PipelineCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pipeline createManyAndReturn
   */
  export type PipelineCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * The data used to create many Pipelines.
     */
    data: PipelineCreateManyInput | PipelineCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pipeline update
   */
  export type PipelineUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    /**
     * The data needed to update a Pipeline.
     */
    data: XOR<PipelineUpdateInput, PipelineUncheckedUpdateInput>
    /**
     * Choose, which Pipeline to update.
     */
    where: PipelineWhereUniqueInput
  }

  /**
   * Pipeline updateMany
   */
  export type PipelineUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pipelines.
     */
    data: XOR<PipelineUpdateManyMutationInput, PipelineUncheckedUpdateManyInput>
    /**
     * Filter which Pipelines to update
     */
    where?: PipelineWhereInput
    /**
     * Limit how many Pipelines to update.
     */
    limit?: number
  }

  /**
   * Pipeline updateManyAndReturn
   */
  export type PipelineUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * The data used to update Pipelines.
     */
    data: XOR<PipelineUpdateManyMutationInput, PipelineUncheckedUpdateManyInput>
    /**
     * Filter which Pipelines to update
     */
    where?: PipelineWhereInput
    /**
     * Limit how many Pipelines to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pipeline upsert
   */
  export type PipelineUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    /**
     * The filter to search for the Pipeline to update in case it exists.
     */
    where: PipelineWhereUniqueInput
    /**
     * In case the Pipeline found by the `where` argument doesn't exist, create a new Pipeline with this data.
     */
    create: XOR<PipelineCreateInput, PipelineUncheckedCreateInput>
    /**
     * In case the Pipeline was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PipelineUpdateInput, PipelineUncheckedUpdateInput>
  }

  /**
   * Pipeline delete
   */
  export type PipelineDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    /**
     * Filter which Pipeline to delete.
     */
    where: PipelineWhereUniqueInput
  }

  /**
   * Pipeline deleteMany
   */
  export type PipelineDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pipelines to delete
     */
    where?: PipelineWhereInput
    /**
     * Limit how many Pipelines to delete.
     */
    limit?: number
  }

  /**
   * Pipeline.lead
   */
  export type Pipeline$leadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    where?: LeadWhereInput
  }

  /**
   * Pipeline.opportunity
   */
  export type Pipeline$opportunityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityInclude<ExtArgs> | null
    where?: OpportunityWhereInput
  }

  /**
   * Pipeline.quote
   */
  export type Pipeline$quoteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteInclude<ExtArgs> | null
    where?: QuoteWhereInput
  }

  /**
   * Pipeline.contract
   */
  export type Pipeline$contractArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractInclude<ExtArgs> | null
    where?: ContractWhereInput
  }

  /**
   * Pipeline.assignee
   */
  export type Pipeline$assigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Pipeline.members
   */
  export type Pipeline$membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Pipeline.createdBy
   */
  export type Pipeline$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Pipeline.updatedBy
   */
  export type Pipeline$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Pipeline.stages
   */
  export type Pipeline$stagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    where?: StageWhereInput
    orderBy?: StageOrderByWithRelationInput | StageOrderByWithRelationInput[]
    cursor?: StageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StageScalarFieldEnum | StageScalarFieldEnum[]
  }

  /**
   * Pipeline.notes
   */
  export type Pipeline$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Pipeline.events
   */
  export type Pipeline$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    where?: EventWhereInput
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    cursor?: EventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Pipeline without action
   */
  export type PipelineDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
  }


  /**
   * Model Lead
   */

  export type AggregateLead = {
    _count: LeadCountAggregateOutputType | null
    _min: LeadMinAggregateOutputType | null
    _max: LeadMaxAggregateOutputType | null
  }

  export type LeadMinAggregateOutputType = {
    id: string | null
    regNumber: string | null
    name: string | null
    role: string | null
    email: string | null
    phone: string | null
    leadSource: string | null
    leadDate: Date | null
    leadAddress: string | null
    description: string | null
    prospectLocation: string | null
    approvedDate: Date | null
    expectedCloseDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    clientId: string | null
  }

  export type LeadMaxAggregateOutputType = {
    id: string | null
    regNumber: string | null
    name: string | null
    role: string | null
    email: string | null
    phone: string | null
    leadSource: string | null
    leadDate: Date | null
    leadAddress: string | null
    description: string | null
    prospectLocation: string | null
    approvedDate: Date | null
    expectedCloseDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    clientId: string | null
  }

  export type LeadCountAggregateOutputType = {
    id: number
    regNumber: number
    name: number
    role: number
    email: number
    phone: number
    leadSource: number
    leadDate: number
    leadAddress: number
    description: number
    prospectLocation: number
    approvedDate: number
    expectedCloseDate: number
    createdAt: number
    updatedAt: number
    clientId: number
    _all: number
  }


  export type LeadMinAggregateInputType = {
    id?: true
    regNumber?: true
    name?: true
    role?: true
    email?: true
    phone?: true
    leadSource?: true
    leadDate?: true
    leadAddress?: true
    description?: true
    prospectLocation?: true
    approvedDate?: true
    expectedCloseDate?: true
    createdAt?: true
    updatedAt?: true
    clientId?: true
  }

  export type LeadMaxAggregateInputType = {
    id?: true
    regNumber?: true
    name?: true
    role?: true
    email?: true
    phone?: true
    leadSource?: true
    leadDate?: true
    leadAddress?: true
    description?: true
    prospectLocation?: true
    approvedDate?: true
    expectedCloseDate?: true
    createdAt?: true
    updatedAt?: true
    clientId?: true
  }

  export type LeadCountAggregateInputType = {
    id?: true
    regNumber?: true
    name?: true
    role?: true
    email?: true
    phone?: true
    leadSource?: true
    leadDate?: true
    leadAddress?: true
    description?: true
    prospectLocation?: true
    approvedDate?: true
    expectedCloseDate?: true
    createdAt?: true
    updatedAt?: true
    clientId?: true
    _all?: true
  }

  export type LeadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Lead to aggregate.
     */
    where?: LeadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LeadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Leads
    **/
    _count?: true | LeadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LeadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LeadMaxAggregateInputType
  }

  export type GetLeadAggregateType<T extends LeadAggregateArgs> = {
        [P in keyof T & keyof AggregateLead]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLead[P]>
      : GetScalarType<T[P], AggregateLead[P]>
  }




  export type LeadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LeadWhereInput
    orderBy?: LeadOrderByWithAggregationInput | LeadOrderByWithAggregationInput[]
    by: LeadScalarFieldEnum[] | LeadScalarFieldEnum
    having?: LeadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LeadCountAggregateInputType | true
    _min?: LeadMinAggregateInputType
    _max?: LeadMaxAggregateInputType
  }

  export type LeadGroupByOutputType = {
    id: string
    regNumber: string | null
    name: string | null
    role: string | null
    email: string | null
    phone: string | null
    leadSource: string | null
    leadDate: Date | null
    leadAddress: string | null
    description: string | null
    prospectLocation: string | null
    approvedDate: Date | null
    expectedCloseDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    clientId: string | null
    _count: LeadCountAggregateOutputType | null
    _min: LeadMinAggregateOutputType | null
    _max: LeadMaxAggregateOutputType | null
  }

  type GetLeadGroupByPayload<T extends LeadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LeadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LeadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LeadGroupByOutputType[P]>
            : GetScalarType<T[P], LeadGroupByOutputType[P]>
        }
      >
    >


  export type LeadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    name?: boolean
    role?: boolean
    email?: boolean
    phone?: boolean
    leadSource?: boolean
    leadDate?: boolean
    leadAddress?: boolean
    description?: boolean
    prospectLocation?: boolean
    approvedDate?: boolean
    expectedCloseDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
    products?: boolean | Lead$productsArgs<ExtArgs>
    client?: boolean | Lead$clientArgs<ExtArgs>
    opportunities?: boolean | Lead$opportunitiesArgs<ExtArgs>
    pipeline?: boolean | Lead$pipelineArgs<ExtArgs>
    _count?: boolean | LeadCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lead"]>

  export type LeadSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    name?: boolean
    role?: boolean
    email?: boolean
    phone?: boolean
    leadSource?: boolean
    leadDate?: boolean
    leadAddress?: boolean
    description?: boolean
    prospectLocation?: boolean
    approvedDate?: boolean
    expectedCloseDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
    client?: boolean | Lead$clientArgs<ExtArgs>
  }, ExtArgs["result"]["lead"]>

  export type LeadSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    name?: boolean
    role?: boolean
    email?: boolean
    phone?: boolean
    leadSource?: boolean
    leadDate?: boolean
    leadAddress?: boolean
    description?: boolean
    prospectLocation?: boolean
    approvedDate?: boolean
    expectedCloseDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
    client?: boolean | Lead$clientArgs<ExtArgs>
  }, ExtArgs["result"]["lead"]>

  export type LeadSelectScalar = {
    id?: boolean
    regNumber?: boolean
    name?: boolean
    role?: boolean
    email?: boolean
    phone?: boolean
    leadSource?: boolean
    leadDate?: boolean
    leadAddress?: boolean
    description?: boolean
    prospectLocation?: boolean
    approvedDate?: boolean
    expectedCloseDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
  }

  export type LeadOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "regNumber" | "name" | "role" | "email" | "phone" | "leadSource" | "leadDate" | "leadAddress" | "description" | "prospectLocation" | "approvedDate" | "expectedCloseDate" | "createdAt" | "updatedAt" | "clientId", ExtArgs["result"]["lead"]>
  export type LeadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | Lead$productsArgs<ExtArgs>
    client?: boolean | Lead$clientArgs<ExtArgs>
    opportunities?: boolean | Lead$opportunitiesArgs<ExtArgs>
    pipeline?: boolean | Lead$pipelineArgs<ExtArgs>
    _count?: boolean | LeadCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LeadIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Lead$clientArgs<ExtArgs>
  }
  export type LeadIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Lead$clientArgs<ExtArgs>
  }

  export type $LeadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Lead"
    objects: {
      products: Prisma.$ProductPayload<ExtArgs>[]
      client: Prisma.$ClientPayload<ExtArgs> | null
      opportunities: Prisma.$OpportunityPayload<ExtArgs>[]
      pipeline: Prisma.$PipelinePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      regNumber: string | null
      name: string | null
      role: string | null
      email: string | null
      phone: string | null
      leadSource: string | null
      leadDate: Date | null
      leadAddress: string | null
      description: string | null
      prospectLocation: string | null
      approvedDate: Date | null
      expectedCloseDate: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      clientId: string | null
    }, ExtArgs["result"]["lead"]>
    composites: {}
  }

  type LeadGetPayload<S extends boolean | null | undefined | LeadDefaultArgs> = $Result.GetResult<Prisma.$LeadPayload, S>

  type LeadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LeadFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LeadCountAggregateInputType | true
    }

  export interface LeadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Lead'], meta: { name: 'Lead' } }
    /**
     * Find zero or one Lead that matches the filter.
     * @param {LeadFindUniqueArgs} args - Arguments to find a Lead
     * @example
     * // Get one Lead
     * const lead = await prisma.lead.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LeadFindUniqueArgs>(args: SelectSubset<T, LeadFindUniqueArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Lead that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LeadFindUniqueOrThrowArgs} args - Arguments to find a Lead
     * @example
     * // Get one Lead
     * const lead = await prisma.lead.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LeadFindUniqueOrThrowArgs>(args: SelectSubset<T, LeadFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Lead that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadFindFirstArgs} args - Arguments to find a Lead
     * @example
     * // Get one Lead
     * const lead = await prisma.lead.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LeadFindFirstArgs>(args?: SelectSubset<T, LeadFindFirstArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Lead that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadFindFirstOrThrowArgs} args - Arguments to find a Lead
     * @example
     * // Get one Lead
     * const lead = await prisma.lead.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LeadFindFirstOrThrowArgs>(args?: SelectSubset<T, LeadFindFirstOrThrowArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Leads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Leads
     * const leads = await prisma.lead.findMany()
     * 
     * // Get first 10 Leads
     * const leads = await prisma.lead.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const leadWithIdOnly = await prisma.lead.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LeadFindManyArgs>(args?: SelectSubset<T, LeadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Lead.
     * @param {LeadCreateArgs} args - Arguments to create a Lead.
     * @example
     * // Create one Lead
     * const Lead = await prisma.lead.create({
     *   data: {
     *     // ... data to create a Lead
     *   }
     * })
     * 
     */
    create<T extends LeadCreateArgs>(args: SelectSubset<T, LeadCreateArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Leads.
     * @param {LeadCreateManyArgs} args - Arguments to create many Leads.
     * @example
     * // Create many Leads
     * const lead = await prisma.lead.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LeadCreateManyArgs>(args?: SelectSubset<T, LeadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Leads and returns the data saved in the database.
     * @param {LeadCreateManyAndReturnArgs} args - Arguments to create many Leads.
     * @example
     * // Create many Leads
     * const lead = await prisma.lead.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Leads and only return the `id`
     * const leadWithIdOnly = await prisma.lead.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LeadCreateManyAndReturnArgs>(args?: SelectSubset<T, LeadCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Lead.
     * @param {LeadDeleteArgs} args - Arguments to delete one Lead.
     * @example
     * // Delete one Lead
     * const Lead = await prisma.lead.delete({
     *   where: {
     *     // ... filter to delete one Lead
     *   }
     * })
     * 
     */
    delete<T extends LeadDeleteArgs>(args: SelectSubset<T, LeadDeleteArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Lead.
     * @param {LeadUpdateArgs} args - Arguments to update one Lead.
     * @example
     * // Update one Lead
     * const lead = await prisma.lead.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LeadUpdateArgs>(args: SelectSubset<T, LeadUpdateArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Leads.
     * @param {LeadDeleteManyArgs} args - Arguments to filter Leads to delete.
     * @example
     * // Delete a few Leads
     * const { count } = await prisma.lead.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LeadDeleteManyArgs>(args?: SelectSubset<T, LeadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Leads
     * const lead = await prisma.lead.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LeadUpdateManyArgs>(args: SelectSubset<T, LeadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leads and returns the data updated in the database.
     * @param {LeadUpdateManyAndReturnArgs} args - Arguments to update many Leads.
     * @example
     * // Update many Leads
     * const lead = await prisma.lead.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Leads and only return the `id`
     * const leadWithIdOnly = await prisma.lead.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LeadUpdateManyAndReturnArgs>(args: SelectSubset<T, LeadUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Lead.
     * @param {LeadUpsertArgs} args - Arguments to update or create a Lead.
     * @example
     * // Update or create a Lead
     * const lead = await prisma.lead.upsert({
     *   create: {
     *     // ... data to create a Lead
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Lead we want to update
     *   }
     * })
     */
    upsert<T extends LeadUpsertArgs>(args: SelectSubset<T, LeadUpsertArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadCountArgs} args - Arguments to filter Leads to count.
     * @example
     * // Count the number of Leads
     * const count = await prisma.lead.count({
     *   where: {
     *     // ... the filter for the Leads we want to count
     *   }
     * })
    **/
    count<T extends LeadCountArgs>(
      args?: Subset<T, LeadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LeadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Lead.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LeadAggregateArgs>(args: Subset<T, LeadAggregateArgs>): Prisma.PrismaPromise<GetLeadAggregateType<T>>

    /**
     * Group by Lead.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LeadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LeadGroupByArgs['orderBy'] }
        : { orderBy?: LeadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LeadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Lead model
   */
  readonly fields: LeadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Lead.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LeadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends Lead$productsArgs<ExtArgs> = {}>(args?: Subset<T, Lead$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    client<T extends Lead$clientArgs<ExtArgs> = {}>(args?: Subset<T, Lead$clientArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    opportunities<T extends Lead$opportunitiesArgs<ExtArgs> = {}>(args?: Subset<T, Lead$opportunitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pipeline<T extends Lead$pipelineArgs<ExtArgs> = {}>(args?: Subset<T, Lead$pipelineArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Lead model
   */
  interface LeadFieldRefs {
    readonly id: FieldRef<"Lead", 'String'>
    readonly regNumber: FieldRef<"Lead", 'String'>
    readonly name: FieldRef<"Lead", 'String'>
    readonly role: FieldRef<"Lead", 'String'>
    readonly email: FieldRef<"Lead", 'String'>
    readonly phone: FieldRef<"Lead", 'String'>
    readonly leadSource: FieldRef<"Lead", 'String'>
    readonly leadDate: FieldRef<"Lead", 'DateTime'>
    readonly leadAddress: FieldRef<"Lead", 'String'>
    readonly description: FieldRef<"Lead", 'String'>
    readonly prospectLocation: FieldRef<"Lead", 'String'>
    readonly approvedDate: FieldRef<"Lead", 'DateTime'>
    readonly expectedCloseDate: FieldRef<"Lead", 'DateTime'>
    readonly createdAt: FieldRef<"Lead", 'DateTime'>
    readonly updatedAt: FieldRef<"Lead", 'DateTime'>
    readonly clientId: FieldRef<"Lead", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Lead findUnique
   */
  export type LeadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter, which Lead to fetch.
     */
    where: LeadWhereUniqueInput
  }

  /**
   * Lead findUniqueOrThrow
   */
  export type LeadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter, which Lead to fetch.
     */
    where: LeadWhereUniqueInput
  }

  /**
   * Lead findFirst
   */
  export type LeadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter, which Lead to fetch.
     */
    where?: LeadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Leads.
     */
    cursor?: LeadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Leads.
     */
    distinct?: LeadScalarFieldEnum | LeadScalarFieldEnum[]
  }

  /**
   * Lead findFirstOrThrow
   */
  export type LeadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter, which Lead to fetch.
     */
    where?: LeadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Leads.
     */
    cursor?: LeadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Leads.
     */
    distinct?: LeadScalarFieldEnum | LeadScalarFieldEnum[]
  }

  /**
   * Lead findMany
   */
  export type LeadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter, which Leads to fetch.
     */
    where?: LeadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Leads.
     */
    cursor?: LeadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    distinct?: LeadScalarFieldEnum | LeadScalarFieldEnum[]
  }

  /**
   * Lead create
   */
  export type LeadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * The data needed to create a Lead.
     */
    data?: XOR<LeadCreateInput, LeadUncheckedCreateInput>
  }

  /**
   * Lead createMany
   */
  export type LeadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Leads.
     */
    data: LeadCreateManyInput | LeadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Lead createManyAndReturn
   */
  export type LeadCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * The data used to create many Leads.
     */
    data: LeadCreateManyInput | LeadCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Lead update
   */
  export type LeadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * The data needed to update a Lead.
     */
    data: XOR<LeadUpdateInput, LeadUncheckedUpdateInput>
    /**
     * Choose, which Lead to update.
     */
    where: LeadWhereUniqueInput
  }

  /**
   * Lead updateMany
   */
  export type LeadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Leads.
     */
    data: XOR<LeadUpdateManyMutationInput, LeadUncheckedUpdateManyInput>
    /**
     * Filter which Leads to update
     */
    where?: LeadWhereInput
    /**
     * Limit how many Leads to update.
     */
    limit?: number
  }

  /**
   * Lead updateManyAndReturn
   */
  export type LeadUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * The data used to update Leads.
     */
    data: XOR<LeadUpdateManyMutationInput, LeadUncheckedUpdateManyInput>
    /**
     * Filter which Leads to update
     */
    where?: LeadWhereInput
    /**
     * Limit how many Leads to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Lead upsert
   */
  export type LeadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * The filter to search for the Lead to update in case it exists.
     */
    where: LeadWhereUniqueInput
    /**
     * In case the Lead found by the `where` argument doesn't exist, create a new Lead with this data.
     */
    create: XOR<LeadCreateInput, LeadUncheckedCreateInput>
    /**
     * In case the Lead was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LeadUpdateInput, LeadUncheckedUpdateInput>
  }

  /**
   * Lead delete
   */
  export type LeadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter which Lead to delete.
     */
    where: LeadWhereUniqueInput
  }

  /**
   * Lead deleteMany
   */
  export type LeadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Leads to delete
     */
    where?: LeadWhereInput
    /**
     * Limit how many Leads to delete.
     */
    limit?: number
  }

  /**
   * Lead.products
   */
  export type Lead$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Lead.client
   */
  export type Lead$clientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
  }

  /**
   * Lead.opportunities
   */
  export type Lead$opportunitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityInclude<ExtArgs> | null
    where?: OpportunityWhereInput
    orderBy?: OpportunityOrderByWithRelationInput | OpportunityOrderByWithRelationInput[]
    cursor?: OpportunityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OpportunityScalarFieldEnum | OpportunityScalarFieldEnum[]
  }

  /**
   * Lead.pipeline
   */
  export type Lead$pipelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    where?: PipelineWhereInput
    orderBy?: PipelineOrderByWithRelationInput | PipelineOrderByWithRelationInput[]
    cursor?: PipelineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PipelineScalarFieldEnum | PipelineScalarFieldEnum[]
  }

  /**
   * Lead without action
   */
  export type LeadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
  }


  /**
   * Model Opportunity
   */

  export type AggregateOpportunity = {
    _count: OpportunityCountAggregateOutputType | null
    _avg: OpportunityAvgAggregateOutputType | null
    _sum: OpportunitySumAggregateOutputType | null
    _min: OpportunityMinAggregateOutputType | null
    _max: OpportunityMaxAggregateOutputType | null
  }

  export type OpportunityAvgAggregateOutputType = {
    baseAmount: Decimal | null
    exchangeRate: Decimal | null
    amount: Decimal | null
  }

  export type OpportunitySumAggregateOutputType = {
    baseAmount: Decimal | null
    exchangeRate: Decimal | null
    amount: Decimal | null
  }

  export type OpportunityMinAggregateOutputType = {
    id: string | null
    regNumber: string | null
    title: string | null
    currency: string | null
    baseAmount: Decimal | null
    exchangeRate: Decimal | null
    amount: Decimal | null
    expectedCloseDate: Date | null
    description: string | null
    approvedDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    clientId: string | null
    leadId: string | null
  }

  export type OpportunityMaxAggregateOutputType = {
    id: string | null
    regNumber: string | null
    title: string | null
    currency: string | null
    baseAmount: Decimal | null
    exchangeRate: Decimal | null
    amount: Decimal | null
    expectedCloseDate: Date | null
    description: string | null
    approvedDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    clientId: string | null
    leadId: string | null
  }

  export type OpportunityCountAggregateOutputType = {
    id: number
    regNumber: number
    title: number
    currency: number
    baseAmount: number
    exchangeRate: number
    amount: number
    expectedCloseDate: number
    description: number
    approvedDate: number
    createdAt: number
    updatedAt: number
    clientId: number
    leadId: number
    _all: number
  }


  export type OpportunityAvgAggregateInputType = {
    baseAmount?: true
    exchangeRate?: true
    amount?: true
  }

  export type OpportunitySumAggregateInputType = {
    baseAmount?: true
    exchangeRate?: true
    amount?: true
  }

  export type OpportunityMinAggregateInputType = {
    id?: true
    regNumber?: true
    title?: true
    currency?: true
    baseAmount?: true
    exchangeRate?: true
    amount?: true
    expectedCloseDate?: true
    description?: true
    approvedDate?: true
    createdAt?: true
    updatedAt?: true
    clientId?: true
    leadId?: true
  }

  export type OpportunityMaxAggregateInputType = {
    id?: true
    regNumber?: true
    title?: true
    currency?: true
    baseAmount?: true
    exchangeRate?: true
    amount?: true
    expectedCloseDate?: true
    description?: true
    approvedDate?: true
    createdAt?: true
    updatedAt?: true
    clientId?: true
    leadId?: true
  }

  export type OpportunityCountAggregateInputType = {
    id?: true
    regNumber?: true
    title?: true
    currency?: true
    baseAmount?: true
    exchangeRate?: true
    amount?: true
    expectedCloseDate?: true
    description?: true
    approvedDate?: true
    createdAt?: true
    updatedAt?: true
    clientId?: true
    leadId?: true
    _all?: true
  }

  export type OpportunityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Opportunity to aggregate.
     */
    where?: OpportunityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Opportunities to fetch.
     */
    orderBy?: OpportunityOrderByWithRelationInput | OpportunityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OpportunityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Opportunities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Opportunities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Opportunities
    **/
    _count?: true | OpportunityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OpportunityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OpportunitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OpportunityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OpportunityMaxAggregateInputType
  }

  export type GetOpportunityAggregateType<T extends OpportunityAggregateArgs> = {
        [P in keyof T & keyof AggregateOpportunity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOpportunity[P]>
      : GetScalarType<T[P], AggregateOpportunity[P]>
  }




  export type OpportunityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OpportunityWhereInput
    orderBy?: OpportunityOrderByWithAggregationInput | OpportunityOrderByWithAggregationInput[]
    by: OpportunityScalarFieldEnum[] | OpportunityScalarFieldEnum
    having?: OpportunityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OpportunityCountAggregateInputType | true
    _avg?: OpportunityAvgAggregateInputType
    _sum?: OpportunitySumAggregateInputType
    _min?: OpportunityMinAggregateInputType
    _max?: OpportunityMaxAggregateInputType
  }

  export type OpportunityGroupByOutputType = {
    id: string
    regNumber: string | null
    title: string
    currency: string | null
    baseAmount: Decimal | null
    exchangeRate: Decimal | null
    amount: Decimal | null
    expectedCloseDate: Date | null
    description: string | null
    approvedDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    clientId: string | null
    leadId: string | null
    _count: OpportunityCountAggregateOutputType | null
    _avg: OpportunityAvgAggregateOutputType | null
    _sum: OpportunitySumAggregateOutputType | null
    _min: OpportunityMinAggregateOutputType | null
    _max: OpportunityMaxAggregateOutputType | null
  }

  type GetOpportunityGroupByPayload<T extends OpportunityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OpportunityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OpportunityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OpportunityGroupByOutputType[P]>
            : GetScalarType<T[P], OpportunityGroupByOutputType[P]>
        }
      >
    >


  export type OpportunitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    title?: boolean
    currency?: boolean
    baseAmount?: boolean
    exchangeRate?: boolean
    amount?: boolean
    expectedCloseDate?: boolean
    description?: boolean
    approvedDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
    leadId?: boolean
    products?: boolean | Opportunity$productsArgs<ExtArgs>
    client?: boolean | Opportunity$clientArgs<ExtArgs>
    lead?: boolean | Opportunity$leadArgs<ExtArgs>
    quotes?: boolean | Opportunity$quotesArgs<ExtArgs>
    pipeline?: boolean | Opportunity$pipelineArgs<ExtArgs>
    _count?: boolean | OpportunityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["opportunity"]>

  export type OpportunitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    title?: boolean
    currency?: boolean
    baseAmount?: boolean
    exchangeRate?: boolean
    amount?: boolean
    expectedCloseDate?: boolean
    description?: boolean
    approvedDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
    leadId?: boolean
    client?: boolean | Opportunity$clientArgs<ExtArgs>
    lead?: boolean | Opportunity$leadArgs<ExtArgs>
  }, ExtArgs["result"]["opportunity"]>

  export type OpportunitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    title?: boolean
    currency?: boolean
    baseAmount?: boolean
    exchangeRate?: boolean
    amount?: boolean
    expectedCloseDate?: boolean
    description?: boolean
    approvedDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
    leadId?: boolean
    client?: boolean | Opportunity$clientArgs<ExtArgs>
    lead?: boolean | Opportunity$leadArgs<ExtArgs>
  }, ExtArgs["result"]["opportunity"]>

  export type OpportunitySelectScalar = {
    id?: boolean
    regNumber?: boolean
    title?: boolean
    currency?: boolean
    baseAmount?: boolean
    exchangeRate?: boolean
    amount?: boolean
    expectedCloseDate?: boolean
    description?: boolean
    approvedDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
    leadId?: boolean
  }

  export type OpportunityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "regNumber" | "title" | "currency" | "baseAmount" | "exchangeRate" | "amount" | "expectedCloseDate" | "description" | "approvedDate" | "createdAt" | "updatedAt" | "clientId" | "leadId", ExtArgs["result"]["opportunity"]>
  export type OpportunityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | Opportunity$productsArgs<ExtArgs>
    client?: boolean | Opportunity$clientArgs<ExtArgs>
    lead?: boolean | Opportunity$leadArgs<ExtArgs>
    quotes?: boolean | Opportunity$quotesArgs<ExtArgs>
    pipeline?: boolean | Opportunity$pipelineArgs<ExtArgs>
    _count?: boolean | OpportunityCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OpportunityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Opportunity$clientArgs<ExtArgs>
    lead?: boolean | Opportunity$leadArgs<ExtArgs>
  }
  export type OpportunityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Opportunity$clientArgs<ExtArgs>
    lead?: boolean | Opportunity$leadArgs<ExtArgs>
  }

  export type $OpportunityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Opportunity"
    objects: {
      products: Prisma.$ProductPayload<ExtArgs>[]
      client: Prisma.$ClientPayload<ExtArgs> | null
      lead: Prisma.$LeadPayload<ExtArgs> | null
      quotes: Prisma.$QuotePayload<ExtArgs>[]
      pipeline: Prisma.$PipelinePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      regNumber: string | null
      title: string
      currency: string | null
      baseAmount: Prisma.Decimal | null
      exchangeRate: Prisma.Decimal | null
      amount: Prisma.Decimal | null
      expectedCloseDate: Date | null
      description: string | null
      approvedDate: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      clientId: string | null
      leadId: string | null
    }, ExtArgs["result"]["opportunity"]>
    composites: {}
  }

  type OpportunityGetPayload<S extends boolean | null | undefined | OpportunityDefaultArgs> = $Result.GetResult<Prisma.$OpportunityPayload, S>

  type OpportunityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OpportunityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OpportunityCountAggregateInputType | true
    }

  export interface OpportunityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Opportunity'], meta: { name: 'Opportunity' } }
    /**
     * Find zero or one Opportunity that matches the filter.
     * @param {OpportunityFindUniqueArgs} args - Arguments to find a Opportunity
     * @example
     * // Get one Opportunity
     * const opportunity = await prisma.opportunity.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OpportunityFindUniqueArgs>(args: SelectSubset<T, OpportunityFindUniqueArgs<ExtArgs>>): Prisma__OpportunityClient<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Opportunity that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OpportunityFindUniqueOrThrowArgs} args - Arguments to find a Opportunity
     * @example
     * // Get one Opportunity
     * const opportunity = await prisma.opportunity.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OpportunityFindUniqueOrThrowArgs>(args: SelectSubset<T, OpportunityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OpportunityClient<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Opportunity that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpportunityFindFirstArgs} args - Arguments to find a Opportunity
     * @example
     * // Get one Opportunity
     * const opportunity = await prisma.opportunity.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OpportunityFindFirstArgs>(args?: SelectSubset<T, OpportunityFindFirstArgs<ExtArgs>>): Prisma__OpportunityClient<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Opportunity that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpportunityFindFirstOrThrowArgs} args - Arguments to find a Opportunity
     * @example
     * // Get one Opportunity
     * const opportunity = await prisma.opportunity.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OpportunityFindFirstOrThrowArgs>(args?: SelectSubset<T, OpportunityFindFirstOrThrowArgs<ExtArgs>>): Prisma__OpportunityClient<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Opportunities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpportunityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Opportunities
     * const opportunities = await prisma.opportunity.findMany()
     * 
     * // Get first 10 Opportunities
     * const opportunities = await prisma.opportunity.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const opportunityWithIdOnly = await prisma.opportunity.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OpportunityFindManyArgs>(args?: SelectSubset<T, OpportunityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Opportunity.
     * @param {OpportunityCreateArgs} args - Arguments to create a Opportunity.
     * @example
     * // Create one Opportunity
     * const Opportunity = await prisma.opportunity.create({
     *   data: {
     *     // ... data to create a Opportunity
     *   }
     * })
     * 
     */
    create<T extends OpportunityCreateArgs>(args: SelectSubset<T, OpportunityCreateArgs<ExtArgs>>): Prisma__OpportunityClient<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Opportunities.
     * @param {OpportunityCreateManyArgs} args - Arguments to create many Opportunities.
     * @example
     * // Create many Opportunities
     * const opportunity = await prisma.opportunity.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OpportunityCreateManyArgs>(args?: SelectSubset<T, OpportunityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Opportunities and returns the data saved in the database.
     * @param {OpportunityCreateManyAndReturnArgs} args - Arguments to create many Opportunities.
     * @example
     * // Create many Opportunities
     * const opportunity = await prisma.opportunity.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Opportunities and only return the `id`
     * const opportunityWithIdOnly = await prisma.opportunity.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OpportunityCreateManyAndReturnArgs>(args?: SelectSubset<T, OpportunityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Opportunity.
     * @param {OpportunityDeleteArgs} args - Arguments to delete one Opportunity.
     * @example
     * // Delete one Opportunity
     * const Opportunity = await prisma.opportunity.delete({
     *   where: {
     *     // ... filter to delete one Opportunity
     *   }
     * })
     * 
     */
    delete<T extends OpportunityDeleteArgs>(args: SelectSubset<T, OpportunityDeleteArgs<ExtArgs>>): Prisma__OpportunityClient<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Opportunity.
     * @param {OpportunityUpdateArgs} args - Arguments to update one Opportunity.
     * @example
     * // Update one Opportunity
     * const opportunity = await prisma.opportunity.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OpportunityUpdateArgs>(args: SelectSubset<T, OpportunityUpdateArgs<ExtArgs>>): Prisma__OpportunityClient<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Opportunities.
     * @param {OpportunityDeleteManyArgs} args - Arguments to filter Opportunities to delete.
     * @example
     * // Delete a few Opportunities
     * const { count } = await prisma.opportunity.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OpportunityDeleteManyArgs>(args?: SelectSubset<T, OpportunityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Opportunities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpportunityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Opportunities
     * const opportunity = await prisma.opportunity.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OpportunityUpdateManyArgs>(args: SelectSubset<T, OpportunityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Opportunities and returns the data updated in the database.
     * @param {OpportunityUpdateManyAndReturnArgs} args - Arguments to update many Opportunities.
     * @example
     * // Update many Opportunities
     * const opportunity = await prisma.opportunity.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Opportunities and only return the `id`
     * const opportunityWithIdOnly = await prisma.opportunity.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OpportunityUpdateManyAndReturnArgs>(args: SelectSubset<T, OpportunityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Opportunity.
     * @param {OpportunityUpsertArgs} args - Arguments to update or create a Opportunity.
     * @example
     * // Update or create a Opportunity
     * const opportunity = await prisma.opportunity.upsert({
     *   create: {
     *     // ... data to create a Opportunity
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Opportunity we want to update
     *   }
     * })
     */
    upsert<T extends OpportunityUpsertArgs>(args: SelectSubset<T, OpportunityUpsertArgs<ExtArgs>>): Prisma__OpportunityClient<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Opportunities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpportunityCountArgs} args - Arguments to filter Opportunities to count.
     * @example
     * // Count the number of Opportunities
     * const count = await prisma.opportunity.count({
     *   where: {
     *     // ... the filter for the Opportunities we want to count
     *   }
     * })
    **/
    count<T extends OpportunityCountArgs>(
      args?: Subset<T, OpportunityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OpportunityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Opportunity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpportunityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OpportunityAggregateArgs>(args: Subset<T, OpportunityAggregateArgs>): Prisma.PrismaPromise<GetOpportunityAggregateType<T>>

    /**
     * Group by Opportunity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpportunityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OpportunityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OpportunityGroupByArgs['orderBy'] }
        : { orderBy?: OpportunityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OpportunityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOpportunityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Opportunity model
   */
  readonly fields: OpportunityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Opportunity.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OpportunityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends Opportunity$productsArgs<ExtArgs> = {}>(args?: Subset<T, Opportunity$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    client<T extends Opportunity$clientArgs<ExtArgs> = {}>(args?: Subset<T, Opportunity$clientArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    lead<T extends Opportunity$leadArgs<ExtArgs> = {}>(args?: Subset<T, Opportunity$leadArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    quotes<T extends Opportunity$quotesArgs<ExtArgs> = {}>(args?: Subset<T, Opportunity$quotesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pipeline<T extends Opportunity$pipelineArgs<ExtArgs> = {}>(args?: Subset<T, Opportunity$pipelineArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Opportunity model
   */
  interface OpportunityFieldRefs {
    readonly id: FieldRef<"Opportunity", 'String'>
    readonly regNumber: FieldRef<"Opportunity", 'String'>
    readonly title: FieldRef<"Opportunity", 'String'>
    readonly currency: FieldRef<"Opportunity", 'String'>
    readonly baseAmount: FieldRef<"Opportunity", 'Decimal'>
    readonly exchangeRate: FieldRef<"Opportunity", 'Decimal'>
    readonly amount: FieldRef<"Opportunity", 'Decimal'>
    readonly expectedCloseDate: FieldRef<"Opportunity", 'DateTime'>
    readonly description: FieldRef<"Opportunity", 'String'>
    readonly approvedDate: FieldRef<"Opportunity", 'DateTime'>
    readonly createdAt: FieldRef<"Opportunity", 'DateTime'>
    readonly updatedAt: FieldRef<"Opportunity", 'DateTime'>
    readonly clientId: FieldRef<"Opportunity", 'String'>
    readonly leadId: FieldRef<"Opportunity", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Opportunity findUnique
   */
  export type OpportunityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityInclude<ExtArgs> | null
    /**
     * Filter, which Opportunity to fetch.
     */
    where: OpportunityWhereUniqueInput
  }

  /**
   * Opportunity findUniqueOrThrow
   */
  export type OpportunityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityInclude<ExtArgs> | null
    /**
     * Filter, which Opportunity to fetch.
     */
    where: OpportunityWhereUniqueInput
  }

  /**
   * Opportunity findFirst
   */
  export type OpportunityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityInclude<ExtArgs> | null
    /**
     * Filter, which Opportunity to fetch.
     */
    where?: OpportunityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Opportunities to fetch.
     */
    orderBy?: OpportunityOrderByWithRelationInput | OpportunityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Opportunities.
     */
    cursor?: OpportunityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Opportunities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Opportunities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Opportunities.
     */
    distinct?: OpportunityScalarFieldEnum | OpportunityScalarFieldEnum[]
  }

  /**
   * Opportunity findFirstOrThrow
   */
  export type OpportunityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityInclude<ExtArgs> | null
    /**
     * Filter, which Opportunity to fetch.
     */
    where?: OpportunityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Opportunities to fetch.
     */
    orderBy?: OpportunityOrderByWithRelationInput | OpportunityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Opportunities.
     */
    cursor?: OpportunityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Opportunities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Opportunities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Opportunities.
     */
    distinct?: OpportunityScalarFieldEnum | OpportunityScalarFieldEnum[]
  }

  /**
   * Opportunity findMany
   */
  export type OpportunityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityInclude<ExtArgs> | null
    /**
     * Filter, which Opportunities to fetch.
     */
    where?: OpportunityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Opportunities to fetch.
     */
    orderBy?: OpportunityOrderByWithRelationInput | OpportunityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Opportunities.
     */
    cursor?: OpportunityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Opportunities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Opportunities.
     */
    skip?: number
    distinct?: OpportunityScalarFieldEnum | OpportunityScalarFieldEnum[]
  }

  /**
   * Opportunity create
   */
  export type OpportunityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityInclude<ExtArgs> | null
    /**
     * The data needed to create a Opportunity.
     */
    data: XOR<OpportunityCreateInput, OpportunityUncheckedCreateInput>
  }

  /**
   * Opportunity createMany
   */
  export type OpportunityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Opportunities.
     */
    data: OpportunityCreateManyInput | OpportunityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Opportunity createManyAndReturn
   */
  export type OpportunityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * The data used to create many Opportunities.
     */
    data: OpportunityCreateManyInput | OpportunityCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Opportunity update
   */
  export type OpportunityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityInclude<ExtArgs> | null
    /**
     * The data needed to update a Opportunity.
     */
    data: XOR<OpportunityUpdateInput, OpportunityUncheckedUpdateInput>
    /**
     * Choose, which Opportunity to update.
     */
    where: OpportunityWhereUniqueInput
  }

  /**
   * Opportunity updateMany
   */
  export type OpportunityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Opportunities.
     */
    data: XOR<OpportunityUpdateManyMutationInput, OpportunityUncheckedUpdateManyInput>
    /**
     * Filter which Opportunities to update
     */
    where?: OpportunityWhereInput
    /**
     * Limit how many Opportunities to update.
     */
    limit?: number
  }

  /**
   * Opportunity updateManyAndReturn
   */
  export type OpportunityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * The data used to update Opportunities.
     */
    data: XOR<OpportunityUpdateManyMutationInput, OpportunityUncheckedUpdateManyInput>
    /**
     * Filter which Opportunities to update
     */
    where?: OpportunityWhereInput
    /**
     * Limit how many Opportunities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Opportunity upsert
   */
  export type OpportunityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityInclude<ExtArgs> | null
    /**
     * The filter to search for the Opportunity to update in case it exists.
     */
    where: OpportunityWhereUniqueInput
    /**
     * In case the Opportunity found by the `where` argument doesn't exist, create a new Opportunity with this data.
     */
    create: XOR<OpportunityCreateInput, OpportunityUncheckedCreateInput>
    /**
     * In case the Opportunity was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OpportunityUpdateInput, OpportunityUncheckedUpdateInput>
  }

  /**
   * Opportunity delete
   */
  export type OpportunityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityInclude<ExtArgs> | null
    /**
     * Filter which Opportunity to delete.
     */
    where: OpportunityWhereUniqueInput
  }

  /**
   * Opportunity deleteMany
   */
  export type OpportunityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Opportunities to delete
     */
    where?: OpportunityWhereInput
    /**
     * Limit how many Opportunities to delete.
     */
    limit?: number
  }

  /**
   * Opportunity.products
   */
  export type Opportunity$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Opportunity.client
   */
  export type Opportunity$clientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
  }

  /**
   * Opportunity.lead
   */
  export type Opportunity$leadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    where?: LeadWhereInput
  }

  /**
   * Opportunity.quotes
   */
  export type Opportunity$quotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteInclude<ExtArgs> | null
    where?: QuoteWhereInput
    orderBy?: QuoteOrderByWithRelationInput | QuoteOrderByWithRelationInput[]
    cursor?: QuoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QuoteScalarFieldEnum | QuoteScalarFieldEnum[]
  }

  /**
   * Opportunity.pipeline
   */
  export type Opportunity$pipelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    where?: PipelineWhereInput
    orderBy?: PipelineOrderByWithRelationInput | PipelineOrderByWithRelationInput[]
    cursor?: PipelineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PipelineScalarFieldEnum | PipelineScalarFieldEnum[]
  }

  /**
   * Opportunity without action
   */
  export type OpportunityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityInclude<ExtArgs> | null
  }


  /**
   * Model Quote
   */

  export type AggregateQuote = {
    _count: QuoteCountAggregateOutputType | null
    _avg: QuoteAvgAggregateOutputType | null
    _sum: QuoteSumAggregateOutputType | null
    _min: QuoteMinAggregateOutputType | null
    _max: QuoteMaxAggregateOutputType | null
  }

  export type QuoteAvgAggregateOutputType = {
    baseAmount: Decimal | null
    exchangeRate: Decimal | null
    amount: Decimal | null
  }

  export type QuoteSumAggregateOutputType = {
    baseAmount: Decimal | null
    exchangeRate: Decimal | null
    amount: Decimal | null
  }

  export type QuoteMinAggregateOutputType = {
    id: string | null
    regNumber: string | null
    title: string | null
    currency: string | null
    baseAmount: Decimal | null
    exchangeRate: Decimal | null
    amount: Decimal | null
    releasedDate: Date | null
    approvedDate: Date | null
    expiredDate: Date | null
    expectedCloseDate: Date | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    clientId: string | null
    opportunityId: string | null
  }

  export type QuoteMaxAggregateOutputType = {
    id: string | null
    regNumber: string | null
    title: string | null
    currency: string | null
    baseAmount: Decimal | null
    exchangeRate: Decimal | null
    amount: Decimal | null
    releasedDate: Date | null
    approvedDate: Date | null
    expiredDate: Date | null
    expectedCloseDate: Date | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    clientId: string | null
    opportunityId: string | null
  }

  export type QuoteCountAggregateOutputType = {
    id: number
    regNumber: number
    title: number
    currency: number
    baseAmount: number
    exchangeRate: number
    amount: number
    releasedDate: number
    approvedDate: number
    expiredDate: number
    expectedCloseDate: number
    description: number
    createdAt: number
    updatedAt: number
    clientId: number
    opportunityId: number
    _all: number
  }


  export type QuoteAvgAggregateInputType = {
    baseAmount?: true
    exchangeRate?: true
    amount?: true
  }

  export type QuoteSumAggregateInputType = {
    baseAmount?: true
    exchangeRate?: true
    amount?: true
  }

  export type QuoteMinAggregateInputType = {
    id?: true
    regNumber?: true
    title?: true
    currency?: true
    baseAmount?: true
    exchangeRate?: true
    amount?: true
    releasedDate?: true
    approvedDate?: true
    expiredDate?: true
    expectedCloseDate?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    clientId?: true
    opportunityId?: true
  }

  export type QuoteMaxAggregateInputType = {
    id?: true
    regNumber?: true
    title?: true
    currency?: true
    baseAmount?: true
    exchangeRate?: true
    amount?: true
    releasedDate?: true
    approvedDate?: true
    expiredDate?: true
    expectedCloseDate?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    clientId?: true
    opportunityId?: true
  }

  export type QuoteCountAggregateInputType = {
    id?: true
    regNumber?: true
    title?: true
    currency?: true
    baseAmount?: true
    exchangeRate?: true
    amount?: true
    releasedDate?: true
    approvedDate?: true
    expiredDate?: true
    expectedCloseDate?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    clientId?: true
    opportunityId?: true
    _all?: true
  }

  export type QuoteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Quote to aggregate.
     */
    where?: QuoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Quotes to fetch.
     */
    orderBy?: QuoteOrderByWithRelationInput | QuoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: QuoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Quotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Quotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Quotes
    **/
    _count?: true | QuoteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: QuoteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: QuoteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: QuoteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: QuoteMaxAggregateInputType
  }

  export type GetQuoteAggregateType<T extends QuoteAggregateArgs> = {
        [P in keyof T & keyof AggregateQuote]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQuote[P]>
      : GetScalarType<T[P], AggregateQuote[P]>
  }




  export type QuoteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuoteWhereInput
    orderBy?: QuoteOrderByWithAggregationInput | QuoteOrderByWithAggregationInput[]
    by: QuoteScalarFieldEnum[] | QuoteScalarFieldEnum
    having?: QuoteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: QuoteCountAggregateInputType | true
    _avg?: QuoteAvgAggregateInputType
    _sum?: QuoteSumAggregateInputType
    _min?: QuoteMinAggregateInputType
    _max?: QuoteMaxAggregateInputType
  }

  export type QuoteGroupByOutputType = {
    id: string
    regNumber: string | null
    title: string
    currency: string | null
    baseAmount: Decimal | null
    exchangeRate: Decimal | null
    amount: Decimal | null
    releasedDate: Date | null
    approvedDate: Date | null
    expiredDate: Date | null
    expectedCloseDate: Date | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    clientId: string | null
    opportunityId: string | null
    _count: QuoteCountAggregateOutputType | null
    _avg: QuoteAvgAggregateOutputType | null
    _sum: QuoteSumAggregateOutputType | null
    _min: QuoteMinAggregateOutputType | null
    _max: QuoteMaxAggregateOutputType | null
  }

  type GetQuoteGroupByPayload<T extends QuoteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<QuoteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof QuoteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], QuoteGroupByOutputType[P]>
            : GetScalarType<T[P], QuoteGroupByOutputType[P]>
        }
      >
    >


  export type QuoteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    title?: boolean
    currency?: boolean
    baseAmount?: boolean
    exchangeRate?: boolean
    amount?: boolean
    releasedDate?: boolean
    approvedDate?: boolean
    expiredDate?: boolean
    expectedCloseDate?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
    opportunityId?: boolean
    products?: boolean | Quote$productsArgs<ExtArgs>
    client?: boolean | Quote$clientArgs<ExtArgs>
    opportunity?: boolean | Quote$opportunityArgs<ExtArgs>
    contracts?: boolean | Quote$contractsArgs<ExtArgs>
    pipeline?: boolean | Quote$pipelineArgs<ExtArgs>
    _count?: boolean | QuoteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["quote"]>

  export type QuoteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    title?: boolean
    currency?: boolean
    baseAmount?: boolean
    exchangeRate?: boolean
    amount?: boolean
    releasedDate?: boolean
    approvedDate?: boolean
    expiredDate?: boolean
    expectedCloseDate?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
    opportunityId?: boolean
    client?: boolean | Quote$clientArgs<ExtArgs>
    opportunity?: boolean | Quote$opportunityArgs<ExtArgs>
  }, ExtArgs["result"]["quote"]>

  export type QuoteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    title?: boolean
    currency?: boolean
    baseAmount?: boolean
    exchangeRate?: boolean
    amount?: boolean
    releasedDate?: boolean
    approvedDate?: boolean
    expiredDate?: boolean
    expectedCloseDate?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
    opportunityId?: boolean
    client?: boolean | Quote$clientArgs<ExtArgs>
    opportunity?: boolean | Quote$opportunityArgs<ExtArgs>
  }, ExtArgs["result"]["quote"]>

  export type QuoteSelectScalar = {
    id?: boolean
    regNumber?: boolean
    title?: boolean
    currency?: boolean
    baseAmount?: boolean
    exchangeRate?: boolean
    amount?: boolean
    releasedDate?: boolean
    approvedDate?: boolean
    expiredDate?: boolean
    expectedCloseDate?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
    opportunityId?: boolean
  }

  export type QuoteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "regNumber" | "title" | "currency" | "baseAmount" | "exchangeRate" | "amount" | "releasedDate" | "approvedDate" | "expiredDate" | "expectedCloseDate" | "description" | "createdAt" | "updatedAt" | "clientId" | "opportunityId", ExtArgs["result"]["quote"]>
  export type QuoteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | Quote$productsArgs<ExtArgs>
    client?: boolean | Quote$clientArgs<ExtArgs>
    opportunity?: boolean | Quote$opportunityArgs<ExtArgs>
    contracts?: boolean | Quote$contractsArgs<ExtArgs>
    pipeline?: boolean | Quote$pipelineArgs<ExtArgs>
    _count?: boolean | QuoteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type QuoteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Quote$clientArgs<ExtArgs>
    opportunity?: boolean | Quote$opportunityArgs<ExtArgs>
  }
  export type QuoteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Quote$clientArgs<ExtArgs>
    opportunity?: boolean | Quote$opportunityArgs<ExtArgs>
  }

  export type $QuotePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Quote"
    objects: {
      products: Prisma.$ProductPayload<ExtArgs>[]
      client: Prisma.$ClientPayload<ExtArgs> | null
      opportunity: Prisma.$OpportunityPayload<ExtArgs> | null
      contracts: Prisma.$ContractPayload<ExtArgs>[]
      pipeline: Prisma.$PipelinePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      regNumber: string | null
      title: string
      currency: string | null
      baseAmount: Prisma.Decimal | null
      exchangeRate: Prisma.Decimal | null
      amount: Prisma.Decimal | null
      releasedDate: Date | null
      approvedDate: Date | null
      expiredDate: Date | null
      expectedCloseDate: Date | null
      description: string | null
      createdAt: Date | null
      updatedAt: Date | null
      clientId: string | null
      opportunityId: string | null
    }, ExtArgs["result"]["quote"]>
    composites: {}
  }

  type QuoteGetPayload<S extends boolean | null | undefined | QuoteDefaultArgs> = $Result.GetResult<Prisma.$QuotePayload, S>

  type QuoteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<QuoteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: QuoteCountAggregateInputType | true
    }

  export interface QuoteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Quote'], meta: { name: 'Quote' } }
    /**
     * Find zero or one Quote that matches the filter.
     * @param {QuoteFindUniqueArgs} args - Arguments to find a Quote
     * @example
     * // Get one Quote
     * const quote = await prisma.quote.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends QuoteFindUniqueArgs>(args: SelectSubset<T, QuoteFindUniqueArgs<ExtArgs>>): Prisma__QuoteClient<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Quote that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {QuoteFindUniqueOrThrowArgs} args - Arguments to find a Quote
     * @example
     * // Get one Quote
     * const quote = await prisma.quote.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends QuoteFindUniqueOrThrowArgs>(args: SelectSubset<T, QuoteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__QuoteClient<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Quote that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuoteFindFirstArgs} args - Arguments to find a Quote
     * @example
     * // Get one Quote
     * const quote = await prisma.quote.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends QuoteFindFirstArgs>(args?: SelectSubset<T, QuoteFindFirstArgs<ExtArgs>>): Prisma__QuoteClient<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Quote that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuoteFindFirstOrThrowArgs} args - Arguments to find a Quote
     * @example
     * // Get one Quote
     * const quote = await prisma.quote.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends QuoteFindFirstOrThrowArgs>(args?: SelectSubset<T, QuoteFindFirstOrThrowArgs<ExtArgs>>): Prisma__QuoteClient<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Quotes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuoteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Quotes
     * const quotes = await prisma.quote.findMany()
     * 
     * // Get first 10 Quotes
     * const quotes = await prisma.quote.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const quoteWithIdOnly = await prisma.quote.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends QuoteFindManyArgs>(args?: SelectSubset<T, QuoteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Quote.
     * @param {QuoteCreateArgs} args - Arguments to create a Quote.
     * @example
     * // Create one Quote
     * const Quote = await prisma.quote.create({
     *   data: {
     *     // ... data to create a Quote
     *   }
     * })
     * 
     */
    create<T extends QuoteCreateArgs>(args: SelectSubset<T, QuoteCreateArgs<ExtArgs>>): Prisma__QuoteClient<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Quotes.
     * @param {QuoteCreateManyArgs} args - Arguments to create many Quotes.
     * @example
     * // Create many Quotes
     * const quote = await prisma.quote.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends QuoteCreateManyArgs>(args?: SelectSubset<T, QuoteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Quotes and returns the data saved in the database.
     * @param {QuoteCreateManyAndReturnArgs} args - Arguments to create many Quotes.
     * @example
     * // Create many Quotes
     * const quote = await prisma.quote.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Quotes and only return the `id`
     * const quoteWithIdOnly = await prisma.quote.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends QuoteCreateManyAndReturnArgs>(args?: SelectSubset<T, QuoteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Quote.
     * @param {QuoteDeleteArgs} args - Arguments to delete one Quote.
     * @example
     * // Delete one Quote
     * const Quote = await prisma.quote.delete({
     *   where: {
     *     // ... filter to delete one Quote
     *   }
     * })
     * 
     */
    delete<T extends QuoteDeleteArgs>(args: SelectSubset<T, QuoteDeleteArgs<ExtArgs>>): Prisma__QuoteClient<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Quote.
     * @param {QuoteUpdateArgs} args - Arguments to update one Quote.
     * @example
     * // Update one Quote
     * const quote = await prisma.quote.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends QuoteUpdateArgs>(args: SelectSubset<T, QuoteUpdateArgs<ExtArgs>>): Prisma__QuoteClient<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Quotes.
     * @param {QuoteDeleteManyArgs} args - Arguments to filter Quotes to delete.
     * @example
     * // Delete a few Quotes
     * const { count } = await prisma.quote.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends QuoteDeleteManyArgs>(args?: SelectSubset<T, QuoteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Quotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuoteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Quotes
     * const quote = await prisma.quote.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends QuoteUpdateManyArgs>(args: SelectSubset<T, QuoteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Quotes and returns the data updated in the database.
     * @param {QuoteUpdateManyAndReturnArgs} args - Arguments to update many Quotes.
     * @example
     * // Update many Quotes
     * const quote = await prisma.quote.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Quotes and only return the `id`
     * const quoteWithIdOnly = await prisma.quote.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends QuoteUpdateManyAndReturnArgs>(args: SelectSubset<T, QuoteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Quote.
     * @param {QuoteUpsertArgs} args - Arguments to update or create a Quote.
     * @example
     * // Update or create a Quote
     * const quote = await prisma.quote.upsert({
     *   create: {
     *     // ... data to create a Quote
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Quote we want to update
     *   }
     * })
     */
    upsert<T extends QuoteUpsertArgs>(args: SelectSubset<T, QuoteUpsertArgs<ExtArgs>>): Prisma__QuoteClient<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Quotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuoteCountArgs} args - Arguments to filter Quotes to count.
     * @example
     * // Count the number of Quotes
     * const count = await prisma.quote.count({
     *   where: {
     *     // ... the filter for the Quotes we want to count
     *   }
     * })
    **/
    count<T extends QuoteCountArgs>(
      args?: Subset<T, QuoteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], QuoteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Quote.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuoteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends QuoteAggregateArgs>(args: Subset<T, QuoteAggregateArgs>): Prisma.PrismaPromise<GetQuoteAggregateType<T>>

    /**
     * Group by Quote.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuoteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends QuoteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: QuoteGroupByArgs['orderBy'] }
        : { orderBy?: QuoteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, QuoteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQuoteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Quote model
   */
  readonly fields: QuoteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Quote.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__QuoteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends Quote$productsArgs<ExtArgs> = {}>(args?: Subset<T, Quote$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    client<T extends Quote$clientArgs<ExtArgs> = {}>(args?: Subset<T, Quote$clientArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    opportunity<T extends Quote$opportunityArgs<ExtArgs> = {}>(args?: Subset<T, Quote$opportunityArgs<ExtArgs>>): Prisma__OpportunityClient<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    contracts<T extends Quote$contractsArgs<ExtArgs> = {}>(args?: Subset<T, Quote$contractsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pipeline<T extends Quote$pipelineArgs<ExtArgs> = {}>(args?: Subset<T, Quote$pipelineArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Quote model
   */
  interface QuoteFieldRefs {
    readonly id: FieldRef<"Quote", 'String'>
    readonly regNumber: FieldRef<"Quote", 'String'>
    readonly title: FieldRef<"Quote", 'String'>
    readonly currency: FieldRef<"Quote", 'String'>
    readonly baseAmount: FieldRef<"Quote", 'Decimal'>
    readonly exchangeRate: FieldRef<"Quote", 'Decimal'>
    readonly amount: FieldRef<"Quote", 'Decimal'>
    readonly releasedDate: FieldRef<"Quote", 'DateTime'>
    readonly approvedDate: FieldRef<"Quote", 'DateTime'>
    readonly expiredDate: FieldRef<"Quote", 'DateTime'>
    readonly expectedCloseDate: FieldRef<"Quote", 'DateTime'>
    readonly description: FieldRef<"Quote", 'String'>
    readonly createdAt: FieldRef<"Quote", 'DateTime'>
    readonly updatedAt: FieldRef<"Quote", 'DateTime'>
    readonly clientId: FieldRef<"Quote", 'String'>
    readonly opportunityId: FieldRef<"Quote", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Quote findUnique
   */
  export type QuoteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteInclude<ExtArgs> | null
    /**
     * Filter, which Quote to fetch.
     */
    where: QuoteWhereUniqueInput
  }

  /**
   * Quote findUniqueOrThrow
   */
  export type QuoteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteInclude<ExtArgs> | null
    /**
     * Filter, which Quote to fetch.
     */
    where: QuoteWhereUniqueInput
  }

  /**
   * Quote findFirst
   */
  export type QuoteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteInclude<ExtArgs> | null
    /**
     * Filter, which Quote to fetch.
     */
    where?: QuoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Quotes to fetch.
     */
    orderBy?: QuoteOrderByWithRelationInput | QuoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Quotes.
     */
    cursor?: QuoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Quotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Quotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Quotes.
     */
    distinct?: QuoteScalarFieldEnum | QuoteScalarFieldEnum[]
  }

  /**
   * Quote findFirstOrThrow
   */
  export type QuoteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteInclude<ExtArgs> | null
    /**
     * Filter, which Quote to fetch.
     */
    where?: QuoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Quotes to fetch.
     */
    orderBy?: QuoteOrderByWithRelationInput | QuoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Quotes.
     */
    cursor?: QuoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Quotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Quotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Quotes.
     */
    distinct?: QuoteScalarFieldEnum | QuoteScalarFieldEnum[]
  }

  /**
   * Quote findMany
   */
  export type QuoteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteInclude<ExtArgs> | null
    /**
     * Filter, which Quotes to fetch.
     */
    where?: QuoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Quotes to fetch.
     */
    orderBy?: QuoteOrderByWithRelationInput | QuoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Quotes.
     */
    cursor?: QuoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Quotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Quotes.
     */
    skip?: number
    distinct?: QuoteScalarFieldEnum | QuoteScalarFieldEnum[]
  }

  /**
   * Quote create
   */
  export type QuoteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteInclude<ExtArgs> | null
    /**
     * The data needed to create a Quote.
     */
    data: XOR<QuoteCreateInput, QuoteUncheckedCreateInput>
  }

  /**
   * Quote createMany
   */
  export type QuoteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Quotes.
     */
    data: QuoteCreateManyInput | QuoteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Quote createManyAndReturn
   */
  export type QuoteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * The data used to create many Quotes.
     */
    data: QuoteCreateManyInput | QuoteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Quote update
   */
  export type QuoteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteInclude<ExtArgs> | null
    /**
     * The data needed to update a Quote.
     */
    data: XOR<QuoteUpdateInput, QuoteUncheckedUpdateInput>
    /**
     * Choose, which Quote to update.
     */
    where: QuoteWhereUniqueInput
  }

  /**
   * Quote updateMany
   */
  export type QuoteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Quotes.
     */
    data: XOR<QuoteUpdateManyMutationInput, QuoteUncheckedUpdateManyInput>
    /**
     * Filter which Quotes to update
     */
    where?: QuoteWhereInput
    /**
     * Limit how many Quotes to update.
     */
    limit?: number
  }

  /**
   * Quote updateManyAndReturn
   */
  export type QuoteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * The data used to update Quotes.
     */
    data: XOR<QuoteUpdateManyMutationInput, QuoteUncheckedUpdateManyInput>
    /**
     * Filter which Quotes to update
     */
    where?: QuoteWhereInput
    /**
     * Limit how many Quotes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Quote upsert
   */
  export type QuoteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteInclude<ExtArgs> | null
    /**
     * The filter to search for the Quote to update in case it exists.
     */
    where: QuoteWhereUniqueInput
    /**
     * In case the Quote found by the `where` argument doesn't exist, create a new Quote with this data.
     */
    create: XOR<QuoteCreateInput, QuoteUncheckedCreateInput>
    /**
     * In case the Quote was found with the provided `where` argument, update it with this data.
     */
    update: XOR<QuoteUpdateInput, QuoteUncheckedUpdateInput>
  }

  /**
   * Quote delete
   */
  export type QuoteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteInclude<ExtArgs> | null
    /**
     * Filter which Quote to delete.
     */
    where: QuoteWhereUniqueInput
  }

  /**
   * Quote deleteMany
   */
  export type QuoteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Quotes to delete
     */
    where?: QuoteWhereInput
    /**
     * Limit how many Quotes to delete.
     */
    limit?: number
  }

  /**
   * Quote.products
   */
  export type Quote$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Quote.client
   */
  export type Quote$clientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
  }

  /**
   * Quote.opportunity
   */
  export type Quote$opportunityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityInclude<ExtArgs> | null
    where?: OpportunityWhereInput
  }

  /**
   * Quote.contracts
   */
  export type Quote$contractsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractInclude<ExtArgs> | null
    where?: ContractWhereInput
    orderBy?: ContractOrderByWithRelationInput | ContractOrderByWithRelationInput[]
    cursor?: ContractWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContractScalarFieldEnum | ContractScalarFieldEnum[]
  }

  /**
   * Quote.pipeline
   */
  export type Quote$pipelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    where?: PipelineWhereInput
    orderBy?: PipelineOrderByWithRelationInput | PipelineOrderByWithRelationInput[]
    cursor?: PipelineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PipelineScalarFieldEnum | PipelineScalarFieldEnum[]
  }

  /**
   * Quote without action
   */
  export type QuoteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteInclude<ExtArgs> | null
  }


  /**
   * Model Contract
   */

  export type AggregateContract = {
    _count: ContractCountAggregateOutputType | null
    _avg: ContractAvgAggregateOutputType | null
    _sum: ContractSumAggregateOutputType | null
    _min: ContractMinAggregateOutputType | null
    _max: ContractMaxAggregateOutputType | null
  }

  export type ContractAvgAggregateOutputType = {
    baseAmount: Decimal | null
    exchangeRate: Decimal | null
    amount: Decimal | null
  }

  export type ContractSumAggregateOutputType = {
    baseAmount: Decimal | null
    exchangeRate: Decimal | null
    amount: Decimal | null
  }

  export type ContractMinAggregateOutputType = {
    id: string | null
    regNumber: string | null
    title: string | null
    signedDate: Date | null
    startDate: Date | null
    endDate: Date | null
    description: string | null
    penalty: boolean | null
    currency: string | null
    baseAmount: Decimal | null
    exchangeRate: Decimal | null
    amount: Decimal | null
    clientPicName: string | null
    createdAt: Date | null
    updatedAt: Date | null
    clientId: string | null
    quoteId: string | null
  }

  export type ContractMaxAggregateOutputType = {
    id: string | null
    regNumber: string | null
    title: string | null
    signedDate: Date | null
    startDate: Date | null
    endDate: Date | null
    description: string | null
    penalty: boolean | null
    currency: string | null
    baseAmount: Decimal | null
    exchangeRate: Decimal | null
    amount: Decimal | null
    clientPicName: string | null
    createdAt: Date | null
    updatedAt: Date | null
    clientId: string | null
    quoteId: string | null
  }

  export type ContractCountAggregateOutputType = {
    id: number
    regNumber: number
    title: number
    signedDate: number
    startDate: number
    endDate: number
    description: number
    penalty: number
    currency: number
    baseAmount: number
    exchangeRate: number
    amount: number
    clientPicName: number
    createdAt: number
    updatedAt: number
    clientId: number
    quoteId: number
    _all: number
  }


  export type ContractAvgAggregateInputType = {
    baseAmount?: true
    exchangeRate?: true
    amount?: true
  }

  export type ContractSumAggregateInputType = {
    baseAmount?: true
    exchangeRate?: true
    amount?: true
  }

  export type ContractMinAggregateInputType = {
    id?: true
    regNumber?: true
    title?: true
    signedDate?: true
    startDate?: true
    endDate?: true
    description?: true
    penalty?: true
    currency?: true
    baseAmount?: true
    exchangeRate?: true
    amount?: true
    clientPicName?: true
    createdAt?: true
    updatedAt?: true
    clientId?: true
    quoteId?: true
  }

  export type ContractMaxAggregateInputType = {
    id?: true
    regNumber?: true
    title?: true
    signedDate?: true
    startDate?: true
    endDate?: true
    description?: true
    penalty?: true
    currency?: true
    baseAmount?: true
    exchangeRate?: true
    amount?: true
    clientPicName?: true
    createdAt?: true
    updatedAt?: true
    clientId?: true
    quoteId?: true
  }

  export type ContractCountAggregateInputType = {
    id?: true
    regNumber?: true
    title?: true
    signedDate?: true
    startDate?: true
    endDate?: true
    description?: true
    penalty?: true
    currency?: true
    baseAmount?: true
    exchangeRate?: true
    amount?: true
    clientPicName?: true
    createdAt?: true
    updatedAt?: true
    clientId?: true
    quoteId?: true
    _all?: true
  }

  export type ContractAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contract to aggregate.
     */
    where?: ContractWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contracts to fetch.
     */
    orderBy?: ContractOrderByWithRelationInput | ContractOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ContractWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contracts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contracts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Contracts
    **/
    _count?: true | ContractCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ContractAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ContractSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContractMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContractMaxAggregateInputType
  }

  export type GetContractAggregateType<T extends ContractAggregateArgs> = {
        [P in keyof T & keyof AggregateContract]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContract[P]>
      : GetScalarType<T[P], AggregateContract[P]>
  }




  export type ContractGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContractWhereInput
    orderBy?: ContractOrderByWithAggregationInput | ContractOrderByWithAggregationInput[]
    by: ContractScalarFieldEnum[] | ContractScalarFieldEnum
    having?: ContractScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContractCountAggregateInputType | true
    _avg?: ContractAvgAggregateInputType
    _sum?: ContractSumAggregateInputType
    _min?: ContractMinAggregateInputType
    _max?: ContractMaxAggregateInputType
  }

  export type ContractGroupByOutputType = {
    id: string
    regNumber: string | null
    title: string
    signedDate: Date | null
    startDate: Date | null
    endDate: Date | null
    description: string | null
    penalty: boolean | null
    currency: string | null
    baseAmount: Decimal | null
    exchangeRate: Decimal | null
    amount: Decimal | null
    clientPicName: string | null
    createdAt: Date | null
    updatedAt: Date | null
    clientId: string | null
    quoteId: string | null
    _count: ContractCountAggregateOutputType | null
    _avg: ContractAvgAggregateOutputType | null
    _sum: ContractSumAggregateOutputType | null
    _min: ContractMinAggregateOutputType | null
    _max: ContractMaxAggregateOutputType | null
  }

  type GetContractGroupByPayload<T extends ContractGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContractGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContractGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContractGroupByOutputType[P]>
            : GetScalarType<T[P], ContractGroupByOutputType[P]>
        }
      >
    >


  export type ContractSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    title?: boolean
    signedDate?: boolean
    startDate?: boolean
    endDate?: boolean
    description?: boolean
    penalty?: boolean
    currency?: boolean
    baseAmount?: boolean
    exchangeRate?: boolean
    amount?: boolean
    clientPicName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
    quoteId?: boolean
    products?: boolean | Contract$productsArgs<ExtArgs>
    client?: boolean | Contract$clientArgs<ExtArgs>
    quote?: boolean | Contract$quoteArgs<ExtArgs>
    project?: boolean | Contract$projectArgs<ExtArgs>
    pipeline?: boolean | Contract$pipelineArgs<ExtArgs>
    _count?: boolean | ContractCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contract"]>

  export type ContractSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    title?: boolean
    signedDate?: boolean
    startDate?: boolean
    endDate?: boolean
    description?: boolean
    penalty?: boolean
    currency?: boolean
    baseAmount?: boolean
    exchangeRate?: boolean
    amount?: boolean
    clientPicName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
    quoteId?: boolean
    client?: boolean | Contract$clientArgs<ExtArgs>
    quote?: boolean | Contract$quoteArgs<ExtArgs>
  }, ExtArgs["result"]["contract"]>

  export type ContractSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    title?: boolean
    signedDate?: boolean
    startDate?: boolean
    endDate?: boolean
    description?: boolean
    penalty?: boolean
    currency?: boolean
    baseAmount?: boolean
    exchangeRate?: boolean
    amount?: boolean
    clientPicName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
    quoteId?: boolean
    client?: boolean | Contract$clientArgs<ExtArgs>
    quote?: boolean | Contract$quoteArgs<ExtArgs>
  }, ExtArgs["result"]["contract"]>

  export type ContractSelectScalar = {
    id?: boolean
    regNumber?: boolean
    title?: boolean
    signedDate?: boolean
    startDate?: boolean
    endDate?: boolean
    description?: boolean
    penalty?: boolean
    currency?: boolean
    baseAmount?: boolean
    exchangeRate?: boolean
    amount?: boolean
    clientPicName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    clientId?: boolean
    quoteId?: boolean
  }

  export type ContractOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "regNumber" | "title" | "signedDate" | "startDate" | "endDate" | "description" | "penalty" | "currency" | "baseAmount" | "exchangeRate" | "amount" | "clientPicName" | "createdAt" | "updatedAt" | "clientId" | "quoteId", ExtArgs["result"]["contract"]>
  export type ContractInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | Contract$productsArgs<ExtArgs>
    client?: boolean | Contract$clientArgs<ExtArgs>
    quote?: boolean | Contract$quoteArgs<ExtArgs>
    project?: boolean | Contract$projectArgs<ExtArgs>
    pipeline?: boolean | Contract$pipelineArgs<ExtArgs>
    _count?: boolean | ContractCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ContractIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Contract$clientArgs<ExtArgs>
    quote?: boolean | Contract$quoteArgs<ExtArgs>
  }
  export type ContractIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Contract$clientArgs<ExtArgs>
    quote?: boolean | Contract$quoteArgs<ExtArgs>
  }

  export type $ContractPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Contract"
    objects: {
      products: Prisma.$ProductPayload<ExtArgs>[]
      client: Prisma.$ClientPayload<ExtArgs> | null
      quote: Prisma.$QuotePayload<ExtArgs> | null
      project: Prisma.$ProjectPayload<ExtArgs> | null
      pipeline: Prisma.$PipelinePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      regNumber: string | null
      title: string
      signedDate: Date | null
      startDate: Date | null
      endDate: Date | null
      description: string | null
      penalty: boolean | null
      currency: string | null
      baseAmount: Prisma.Decimal | null
      exchangeRate: Prisma.Decimal | null
      amount: Prisma.Decimal | null
      clientPicName: string | null
      createdAt: Date | null
      updatedAt: Date | null
      clientId: string | null
      quoteId: string | null
    }, ExtArgs["result"]["contract"]>
    composites: {}
  }

  type ContractGetPayload<S extends boolean | null | undefined | ContractDefaultArgs> = $Result.GetResult<Prisma.$ContractPayload, S>

  type ContractCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ContractFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ContractCountAggregateInputType | true
    }

  export interface ContractDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Contract'], meta: { name: 'Contract' } }
    /**
     * Find zero or one Contract that matches the filter.
     * @param {ContractFindUniqueArgs} args - Arguments to find a Contract
     * @example
     * // Get one Contract
     * const contract = await prisma.contract.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ContractFindUniqueArgs>(args: SelectSubset<T, ContractFindUniqueArgs<ExtArgs>>): Prisma__ContractClient<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Contract that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ContractFindUniqueOrThrowArgs} args - Arguments to find a Contract
     * @example
     * // Get one Contract
     * const contract = await prisma.contract.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ContractFindUniqueOrThrowArgs>(args: SelectSubset<T, ContractFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ContractClient<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Contract that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContractFindFirstArgs} args - Arguments to find a Contract
     * @example
     * // Get one Contract
     * const contract = await prisma.contract.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ContractFindFirstArgs>(args?: SelectSubset<T, ContractFindFirstArgs<ExtArgs>>): Prisma__ContractClient<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Contract that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContractFindFirstOrThrowArgs} args - Arguments to find a Contract
     * @example
     * // Get one Contract
     * const contract = await prisma.contract.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ContractFindFirstOrThrowArgs>(args?: SelectSubset<T, ContractFindFirstOrThrowArgs<ExtArgs>>): Prisma__ContractClient<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Contracts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContractFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contracts
     * const contracts = await prisma.contract.findMany()
     * 
     * // Get first 10 Contracts
     * const contracts = await prisma.contract.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const contractWithIdOnly = await prisma.contract.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ContractFindManyArgs>(args?: SelectSubset<T, ContractFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Contract.
     * @param {ContractCreateArgs} args - Arguments to create a Contract.
     * @example
     * // Create one Contract
     * const Contract = await prisma.contract.create({
     *   data: {
     *     // ... data to create a Contract
     *   }
     * })
     * 
     */
    create<T extends ContractCreateArgs>(args: SelectSubset<T, ContractCreateArgs<ExtArgs>>): Prisma__ContractClient<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Contracts.
     * @param {ContractCreateManyArgs} args - Arguments to create many Contracts.
     * @example
     * // Create many Contracts
     * const contract = await prisma.contract.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ContractCreateManyArgs>(args?: SelectSubset<T, ContractCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Contracts and returns the data saved in the database.
     * @param {ContractCreateManyAndReturnArgs} args - Arguments to create many Contracts.
     * @example
     * // Create many Contracts
     * const contract = await prisma.contract.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Contracts and only return the `id`
     * const contractWithIdOnly = await prisma.contract.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ContractCreateManyAndReturnArgs>(args?: SelectSubset<T, ContractCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Contract.
     * @param {ContractDeleteArgs} args - Arguments to delete one Contract.
     * @example
     * // Delete one Contract
     * const Contract = await prisma.contract.delete({
     *   where: {
     *     // ... filter to delete one Contract
     *   }
     * })
     * 
     */
    delete<T extends ContractDeleteArgs>(args: SelectSubset<T, ContractDeleteArgs<ExtArgs>>): Prisma__ContractClient<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Contract.
     * @param {ContractUpdateArgs} args - Arguments to update one Contract.
     * @example
     * // Update one Contract
     * const contract = await prisma.contract.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ContractUpdateArgs>(args: SelectSubset<T, ContractUpdateArgs<ExtArgs>>): Prisma__ContractClient<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Contracts.
     * @param {ContractDeleteManyArgs} args - Arguments to filter Contracts to delete.
     * @example
     * // Delete a few Contracts
     * const { count } = await prisma.contract.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ContractDeleteManyArgs>(args?: SelectSubset<T, ContractDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contracts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContractUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contracts
     * const contract = await prisma.contract.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ContractUpdateManyArgs>(args: SelectSubset<T, ContractUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contracts and returns the data updated in the database.
     * @param {ContractUpdateManyAndReturnArgs} args - Arguments to update many Contracts.
     * @example
     * // Update many Contracts
     * const contract = await prisma.contract.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Contracts and only return the `id`
     * const contractWithIdOnly = await prisma.contract.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ContractUpdateManyAndReturnArgs>(args: SelectSubset<T, ContractUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Contract.
     * @param {ContractUpsertArgs} args - Arguments to update or create a Contract.
     * @example
     * // Update or create a Contract
     * const contract = await prisma.contract.upsert({
     *   create: {
     *     // ... data to create a Contract
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contract we want to update
     *   }
     * })
     */
    upsert<T extends ContractUpsertArgs>(args: SelectSubset<T, ContractUpsertArgs<ExtArgs>>): Prisma__ContractClient<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Contracts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContractCountArgs} args - Arguments to filter Contracts to count.
     * @example
     * // Count the number of Contracts
     * const count = await prisma.contract.count({
     *   where: {
     *     // ... the filter for the Contracts we want to count
     *   }
     * })
    **/
    count<T extends ContractCountArgs>(
      args?: Subset<T, ContractCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContractCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contract.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContractAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContractAggregateArgs>(args: Subset<T, ContractAggregateArgs>): Prisma.PrismaPromise<GetContractAggregateType<T>>

    /**
     * Group by Contract.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContractGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ContractGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ContractGroupByArgs['orderBy'] }
        : { orderBy?: ContractGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ContractGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContractGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Contract model
   */
  readonly fields: ContractFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Contract.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ContractClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends Contract$productsArgs<ExtArgs> = {}>(args?: Subset<T, Contract$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    client<T extends Contract$clientArgs<ExtArgs> = {}>(args?: Subset<T, Contract$clientArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    quote<T extends Contract$quoteArgs<ExtArgs> = {}>(args?: Subset<T, Contract$quoteArgs<ExtArgs>>): Prisma__QuoteClient<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    project<T extends Contract$projectArgs<ExtArgs> = {}>(args?: Subset<T, Contract$projectArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    pipeline<T extends Contract$pipelineArgs<ExtArgs> = {}>(args?: Subset<T, Contract$pipelineArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Contract model
   */
  interface ContractFieldRefs {
    readonly id: FieldRef<"Contract", 'String'>
    readonly regNumber: FieldRef<"Contract", 'String'>
    readonly title: FieldRef<"Contract", 'String'>
    readonly signedDate: FieldRef<"Contract", 'DateTime'>
    readonly startDate: FieldRef<"Contract", 'DateTime'>
    readonly endDate: FieldRef<"Contract", 'DateTime'>
    readonly description: FieldRef<"Contract", 'String'>
    readonly penalty: FieldRef<"Contract", 'Boolean'>
    readonly currency: FieldRef<"Contract", 'String'>
    readonly baseAmount: FieldRef<"Contract", 'Decimal'>
    readonly exchangeRate: FieldRef<"Contract", 'Decimal'>
    readonly amount: FieldRef<"Contract", 'Decimal'>
    readonly clientPicName: FieldRef<"Contract", 'String'>
    readonly createdAt: FieldRef<"Contract", 'DateTime'>
    readonly updatedAt: FieldRef<"Contract", 'DateTime'>
    readonly clientId: FieldRef<"Contract", 'String'>
    readonly quoteId: FieldRef<"Contract", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Contract findUnique
   */
  export type ContractFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractInclude<ExtArgs> | null
    /**
     * Filter, which Contract to fetch.
     */
    where: ContractWhereUniqueInput
  }

  /**
   * Contract findUniqueOrThrow
   */
  export type ContractFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractInclude<ExtArgs> | null
    /**
     * Filter, which Contract to fetch.
     */
    where: ContractWhereUniqueInput
  }

  /**
   * Contract findFirst
   */
  export type ContractFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractInclude<ExtArgs> | null
    /**
     * Filter, which Contract to fetch.
     */
    where?: ContractWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contracts to fetch.
     */
    orderBy?: ContractOrderByWithRelationInput | ContractOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contracts.
     */
    cursor?: ContractWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contracts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contracts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contracts.
     */
    distinct?: ContractScalarFieldEnum | ContractScalarFieldEnum[]
  }

  /**
   * Contract findFirstOrThrow
   */
  export type ContractFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractInclude<ExtArgs> | null
    /**
     * Filter, which Contract to fetch.
     */
    where?: ContractWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contracts to fetch.
     */
    orderBy?: ContractOrderByWithRelationInput | ContractOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contracts.
     */
    cursor?: ContractWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contracts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contracts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contracts.
     */
    distinct?: ContractScalarFieldEnum | ContractScalarFieldEnum[]
  }

  /**
   * Contract findMany
   */
  export type ContractFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractInclude<ExtArgs> | null
    /**
     * Filter, which Contracts to fetch.
     */
    where?: ContractWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contracts to fetch.
     */
    orderBy?: ContractOrderByWithRelationInput | ContractOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Contracts.
     */
    cursor?: ContractWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contracts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contracts.
     */
    skip?: number
    distinct?: ContractScalarFieldEnum | ContractScalarFieldEnum[]
  }

  /**
   * Contract create
   */
  export type ContractCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractInclude<ExtArgs> | null
    /**
     * The data needed to create a Contract.
     */
    data: XOR<ContractCreateInput, ContractUncheckedCreateInput>
  }

  /**
   * Contract createMany
   */
  export type ContractCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Contracts.
     */
    data: ContractCreateManyInput | ContractCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Contract createManyAndReturn
   */
  export type ContractCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * The data used to create many Contracts.
     */
    data: ContractCreateManyInput | ContractCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Contract update
   */
  export type ContractUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractInclude<ExtArgs> | null
    /**
     * The data needed to update a Contract.
     */
    data: XOR<ContractUpdateInput, ContractUncheckedUpdateInput>
    /**
     * Choose, which Contract to update.
     */
    where: ContractWhereUniqueInput
  }

  /**
   * Contract updateMany
   */
  export type ContractUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Contracts.
     */
    data: XOR<ContractUpdateManyMutationInput, ContractUncheckedUpdateManyInput>
    /**
     * Filter which Contracts to update
     */
    where?: ContractWhereInput
    /**
     * Limit how many Contracts to update.
     */
    limit?: number
  }

  /**
   * Contract updateManyAndReturn
   */
  export type ContractUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * The data used to update Contracts.
     */
    data: XOR<ContractUpdateManyMutationInput, ContractUncheckedUpdateManyInput>
    /**
     * Filter which Contracts to update
     */
    where?: ContractWhereInput
    /**
     * Limit how many Contracts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Contract upsert
   */
  export type ContractUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractInclude<ExtArgs> | null
    /**
     * The filter to search for the Contract to update in case it exists.
     */
    where: ContractWhereUniqueInput
    /**
     * In case the Contract found by the `where` argument doesn't exist, create a new Contract with this data.
     */
    create: XOR<ContractCreateInput, ContractUncheckedCreateInput>
    /**
     * In case the Contract was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ContractUpdateInput, ContractUncheckedUpdateInput>
  }

  /**
   * Contract delete
   */
  export type ContractDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractInclude<ExtArgs> | null
    /**
     * Filter which Contract to delete.
     */
    where: ContractWhereUniqueInput
  }

  /**
   * Contract deleteMany
   */
  export type ContractDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contracts to delete
     */
    where?: ContractWhereInput
    /**
     * Limit how many Contracts to delete.
     */
    limit?: number
  }

  /**
   * Contract.products
   */
  export type Contract$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Contract.client
   */
  export type Contract$clientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
  }

  /**
   * Contract.quote
   */
  export type Contract$quoteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteInclude<ExtArgs> | null
    where?: QuoteWhereInput
  }

  /**
   * Contract.project
   */
  export type Contract$projectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
  }

  /**
   * Contract.pipeline
   */
  export type Contract$pipelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    where?: PipelineWhereInput
    orderBy?: PipelineOrderByWithRelationInput | PipelineOrderByWithRelationInput[]
    cursor?: PipelineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PipelineScalarFieldEnum | PipelineScalarFieldEnum[]
  }

  /**
   * Contract without action
   */
  export type ContractDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractInclude<ExtArgs> | null
  }


  /**
   * Model Event
   */

  export type AggregateEvent = {
    _count: EventCountAggregateOutputType | null
    _min: EventMinAggregateOutputType | null
    _max: EventMaxAggregateOutputType | null
  }

  export type EventMinAggregateOutputType = {
    id: string | null
    title: string | null
    category: string | null
    description: string | null
    startDate: Date | null
    endDate: Date | null
    url: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    pipelineId: string | null
    projectId: string | null
    milestoneId: string | null
    taskId: string | null
  }

  export type EventMaxAggregateOutputType = {
    id: string | null
    title: string | null
    category: string | null
    description: string | null
    startDate: Date | null
    endDate: Date | null
    url: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    pipelineId: string | null
    projectId: string | null
    milestoneId: string | null
    taskId: string | null
  }

  export type EventCountAggregateOutputType = {
    id: number
    title: number
    category: number
    description: number
    startDate: number
    endDate: number
    url: number
    createdAt: number
    updatedAt: number
    createdById: number
    updatedById: number
    pipelineId: number
    projectId: number
    milestoneId: number
    taskId: number
    _all: number
  }


  export type EventMinAggregateInputType = {
    id?: true
    title?: true
    category?: true
    description?: true
    startDate?: true
    endDate?: true
    url?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    pipelineId?: true
    projectId?: true
    milestoneId?: true
    taskId?: true
  }

  export type EventMaxAggregateInputType = {
    id?: true
    title?: true
    category?: true
    description?: true
    startDate?: true
    endDate?: true
    url?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    pipelineId?: true
    projectId?: true
    milestoneId?: true
    taskId?: true
  }

  export type EventCountAggregateInputType = {
    id?: true
    title?: true
    category?: true
    description?: true
    startDate?: true
    endDate?: true
    url?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    pipelineId?: true
    projectId?: true
    milestoneId?: true
    taskId?: true
    _all?: true
  }

  export type EventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Event to aggregate.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Events
    **/
    _count?: true | EventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventMaxAggregateInputType
  }

  export type GetEventAggregateType<T extends EventAggregateArgs> = {
        [P in keyof T & keyof AggregateEvent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvent[P]>
      : GetScalarType<T[P], AggregateEvent[P]>
  }




  export type EventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventWhereInput
    orderBy?: EventOrderByWithAggregationInput | EventOrderByWithAggregationInput[]
    by: EventScalarFieldEnum[] | EventScalarFieldEnum
    having?: EventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventCountAggregateInputType | true
    _min?: EventMinAggregateInputType
    _max?: EventMaxAggregateInputType
  }

  export type EventGroupByOutputType = {
    id: string
    title: string
    category: string | null
    description: string | null
    startDate: Date | null
    endDate: Date | null
    url: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    pipelineId: string | null
    projectId: string | null
    milestoneId: string | null
    taskId: string | null
    _count: EventCountAggregateOutputType | null
    _min: EventMinAggregateOutputType | null
    _max: EventMaxAggregateOutputType | null
  }

  type GetEventGroupByPayload<T extends EventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventGroupByOutputType[P]>
            : GetScalarType<T[P], EventGroupByOutputType[P]>
        }
      >
    >


  export type EventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    category?: boolean
    description?: boolean
    startDate?: boolean
    endDate?: boolean
    url?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    pipelineId?: boolean
    projectId?: boolean
    milestoneId?: boolean
    taskId?: boolean
    createdBy?: boolean | Event$createdByArgs<ExtArgs>
    updatedBy?: boolean | Event$updatedByArgs<ExtArgs>
    pipeline?: boolean | Event$pipelineArgs<ExtArgs>
    project?: boolean | Event$projectArgs<ExtArgs>
    milestone?: boolean | Event$milestoneArgs<ExtArgs>
    task?: boolean | Event$taskArgs<ExtArgs>
  }, ExtArgs["result"]["event"]>

  export type EventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    category?: boolean
    description?: boolean
    startDate?: boolean
    endDate?: boolean
    url?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    pipelineId?: boolean
    projectId?: boolean
    milestoneId?: boolean
    taskId?: boolean
    createdBy?: boolean | Event$createdByArgs<ExtArgs>
    updatedBy?: boolean | Event$updatedByArgs<ExtArgs>
    pipeline?: boolean | Event$pipelineArgs<ExtArgs>
    project?: boolean | Event$projectArgs<ExtArgs>
    milestone?: boolean | Event$milestoneArgs<ExtArgs>
    task?: boolean | Event$taskArgs<ExtArgs>
  }, ExtArgs["result"]["event"]>

  export type EventSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    category?: boolean
    description?: boolean
    startDate?: boolean
    endDate?: boolean
    url?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    pipelineId?: boolean
    projectId?: boolean
    milestoneId?: boolean
    taskId?: boolean
    createdBy?: boolean | Event$createdByArgs<ExtArgs>
    updatedBy?: boolean | Event$updatedByArgs<ExtArgs>
    pipeline?: boolean | Event$pipelineArgs<ExtArgs>
    project?: boolean | Event$projectArgs<ExtArgs>
    milestone?: boolean | Event$milestoneArgs<ExtArgs>
    task?: boolean | Event$taskArgs<ExtArgs>
  }, ExtArgs["result"]["event"]>

  export type EventSelectScalar = {
    id?: boolean
    title?: boolean
    category?: boolean
    description?: boolean
    startDate?: boolean
    endDate?: boolean
    url?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    pipelineId?: boolean
    projectId?: boolean
    milestoneId?: boolean
    taskId?: boolean
  }

  export type EventOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "category" | "description" | "startDate" | "endDate" | "url" | "createdAt" | "updatedAt" | "createdById" | "updatedById" | "pipelineId" | "projectId" | "milestoneId" | "taskId", ExtArgs["result"]["event"]>
  export type EventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Event$createdByArgs<ExtArgs>
    updatedBy?: boolean | Event$updatedByArgs<ExtArgs>
    pipeline?: boolean | Event$pipelineArgs<ExtArgs>
    project?: boolean | Event$projectArgs<ExtArgs>
    milestone?: boolean | Event$milestoneArgs<ExtArgs>
    task?: boolean | Event$taskArgs<ExtArgs>
  }
  export type EventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Event$createdByArgs<ExtArgs>
    updatedBy?: boolean | Event$updatedByArgs<ExtArgs>
    pipeline?: boolean | Event$pipelineArgs<ExtArgs>
    project?: boolean | Event$projectArgs<ExtArgs>
    milestone?: boolean | Event$milestoneArgs<ExtArgs>
    task?: boolean | Event$taskArgs<ExtArgs>
  }
  export type EventIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Event$createdByArgs<ExtArgs>
    updatedBy?: boolean | Event$updatedByArgs<ExtArgs>
    pipeline?: boolean | Event$pipelineArgs<ExtArgs>
    project?: boolean | Event$projectArgs<ExtArgs>
    milestone?: boolean | Event$milestoneArgs<ExtArgs>
    task?: boolean | Event$taskArgs<ExtArgs>
  }

  export type $EventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Event"
    objects: {
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      pipeline: Prisma.$PipelinePayload<ExtArgs> | null
      project: Prisma.$ProjectPayload<ExtArgs> | null
      milestone: Prisma.$MilestonePayload<ExtArgs> | null
      task: Prisma.$TaskPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      category: string | null
      description: string | null
      startDate: Date | null
      endDate: Date | null
      url: string | null
      createdAt: Date | null
      updatedAt: Date | null
      createdById: string | null
      updatedById: string | null
      pipelineId: string | null
      projectId: string | null
      milestoneId: string | null
      taskId: string | null
    }, ExtArgs["result"]["event"]>
    composites: {}
  }

  type EventGetPayload<S extends boolean | null | undefined | EventDefaultArgs> = $Result.GetResult<Prisma.$EventPayload, S>

  type EventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EventFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EventCountAggregateInputType | true
    }

  export interface EventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Event'], meta: { name: 'Event' } }
    /**
     * Find zero or one Event that matches the filter.
     * @param {EventFindUniqueArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EventFindUniqueArgs>(args: SelectSubset<T, EventFindUniqueArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Event that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EventFindUniqueOrThrowArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EventFindUniqueOrThrowArgs>(args: SelectSubset<T, EventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Event that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventFindFirstArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EventFindFirstArgs>(args?: SelectSubset<T, EventFindFirstArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Event that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventFindFirstOrThrowArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EventFindFirstOrThrowArgs>(args?: SelectSubset<T, EventFindFirstOrThrowArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Events
     * const events = await prisma.event.findMany()
     * 
     * // Get first 10 Events
     * const events = await prisma.event.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventWithIdOnly = await prisma.event.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EventFindManyArgs>(args?: SelectSubset<T, EventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Event.
     * @param {EventCreateArgs} args - Arguments to create a Event.
     * @example
     * // Create one Event
     * const Event = await prisma.event.create({
     *   data: {
     *     // ... data to create a Event
     *   }
     * })
     * 
     */
    create<T extends EventCreateArgs>(args: SelectSubset<T, EventCreateArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Events.
     * @param {EventCreateManyArgs} args - Arguments to create many Events.
     * @example
     * // Create many Events
     * const event = await prisma.event.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EventCreateManyArgs>(args?: SelectSubset<T, EventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Events and returns the data saved in the database.
     * @param {EventCreateManyAndReturnArgs} args - Arguments to create many Events.
     * @example
     * // Create many Events
     * const event = await prisma.event.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Events and only return the `id`
     * const eventWithIdOnly = await prisma.event.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EventCreateManyAndReturnArgs>(args?: SelectSubset<T, EventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Event.
     * @param {EventDeleteArgs} args - Arguments to delete one Event.
     * @example
     * // Delete one Event
     * const Event = await prisma.event.delete({
     *   where: {
     *     // ... filter to delete one Event
     *   }
     * })
     * 
     */
    delete<T extends EventDeleteArgs>(args: SelectSubset<T, EventDeleteArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Event.
     * @param {EventUpdateArgs} args - Arguments to update one Event.
     * @example
     * // Update one Event
     * const event = await prisma.event.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EventUpdateArgs>(args: SelectSubset<T, EventUpdateArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Events.
     * @param {EventDeleteManyArgs} args - Arguments to filter Events to delete.
     * @example
     * // Delete a few Events
     * const { count } = await prisma.event.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EventDeleteManyArgs>(args?: SelectSubset<T, EventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Events
     * const event = await prisma.event.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EventUpdateManyArgs>(args: SelectSubset<T, EventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Events and returns the data updated in the database.
     * @param {EventUpdateManyAndReturnArgs} args - Arguments to update many Events.
     * @example
     * // Update many Events
     * const event = await prisma.event.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Events and only return the `id`
     * const eventWithIdOnly = await prisma.event.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EventUpdateManyAndReturnArgs>(args: SelectSubset<T, EventUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Event.
     * @param {EventUpsertArgs} args - Arguments to update or create a Event.
     * @example
     * // Update or create a Event
     * const event = await prisma.event.upsert({
     *   create: {
     *     // ... data to create a Event
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Event we want to update
     *   }
     * })
     */
    upsert<T extends EventUpsertArgs>(args: SelectSubset<T, EventUpsertArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventCountArgs} args - Arguments to filter Events to count.
     * @example
     * // Count the number of Events
     * const count = await prisma.event.count({
     *   where: {
     *     // ... the filter for the Events we want to count
     *   }
     * })
    **/
    count<T extends EventCountArgs>(
      args?: Subset<T, EventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventAggregateArgs>(args: Subset<T, EventAggregateArgs>): Prisma.PrismaPromise<GetEventAggregateType<T>>

    /**
     * Group by Event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EventGroupByArgs['orderBy'] }
        : { orderBy?: EventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Event model
   */
  readonly fields: EventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Event.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createdBy<T extends Event$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Event$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Event$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Event$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    pipeline<T extends Event$pipelineArgs<ExtArgs> = {}>(args?: Subset<T, Event$pipelineArgs<ExtArgs>>): Prisma__PipelineClient<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    project<T extends Event$projectArgs<ExtArgs> = {}>(args?: Subset<T, Event$projectArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    milestone<T extends Event$milestoneArgs<ExtArgs> = {}>(args?: Subset<T, Event$milestoneArgs<ExtArgs>>): Prisma__MilestoneClient<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    task<T extends Event$taskArgs<ExtArgs> = {}>(args?: Subset<T, Event$taskArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Event model
   */
  interface EventFieldRefs {
    readonly id: FieldRef<"Event", 'String'>
    readonly title: FieldRef<"Event", 'String'>
    readonly category: FieldRef<"Event", 'String'>
    readonly description: FieldRef<"Event", 'String'>
    readonly startDate: FieldRef<"Event", 'DateTime'>
    readonly endDate: FieldRef<"Event", 'DateTime'>
    readonly url: FieldRef<"Event", 'String'>
    readonly createdAt: FieldRef<"Event", 'DateTime'>
    readonly updatedAt: FieldRef<"Event", 'DateTime'>
    readonly createdById: FieldRef<"Event", 'String'>
    readonly updatedById: FieldRef<"Event", 'String'>
    readonly pipelineId: FieldRef<"Event", 'String'>
    readonly projectId: FieldRef<"Event", 'String'>
    readonly milestoneId: FieldRef<"Event", 'String'>
    readonly taskId: FieldRef<"Event", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Event findUnique
   */
  export type EventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event findUniqueOrThrow
   */
  export type EventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event findFirst
   */
  export type EventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Events.
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Events.
     */
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Event findFirstOrThrow
   */
  export type EventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Events.
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Events.
     */
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Event findMany
   */
  export type EventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Events to fetch.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Events.
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Event create
   */
  export type EventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * The data needed to create a Event.
     */
    data: XOR<EventCreateInput, EventUncheckedCreateInput>
  }

  /**
   * Event createMany
   */
  export type EventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Events.
     */
    data: EventCreateManyInput | EventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Event createManyAndReturn
   */
  export type EventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * The data used to create many Events.
     */
    data: EventCreateManyInput | EventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Event update
   */
  export type EventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * The data needed to update a Event.
     */
    data: XOR<EventUpdateInput, EventUncheckedUpdateInput>
    /**
     * Choose, which Event to update.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event updateMany
   */
  export type EventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Events.
     */
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyInput>
    /**
     * Filter which Events to update
     */
    where?: EventWhereInput
    /**
     * Limit how many Events to update.
     */
    limit?: number
  }

  /**
   * Event updateManyAndReturn
   */
  export type EventUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * The data used to update Events.
     */
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyInput>
    /**
     * Filter which Events to update
     */
    where?: EventWhereInput
    /**
     * Limit how many Events to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Event upsert
   */
  export type EventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * The filter to search for the Event to update in case it exists.
     */
    where: EventWhereUniqueInput
    /**
     * In case the Event found by the `where` argument doesn't exist, create a new Event with this data.
     */
    create: XOR<EventCreateInput, EventUncheckedCreateInput>
    /**
     * In case the Event was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EventUpdateInput, EventUncheckedUpdateInput>
  }

  /**
   * Event delete
   */
  export type EventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter which Event to delete.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event deleteMany
   */
  export type EventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Events to delete
     */
    where?: EventWhereInput
    /**
     * Limit how many Events to delete.
     */
    limit?: number
  }

  /**
   * Event.createdBy
   */
  export type Event$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Event.updatedBy
   */
  export type Event$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Event.pipeline
   */
  export type Event$pipelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    where?: PipelineWhereInput
  }

  /**
   * Event.project
   */
  export type Event$projectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
  }

  /**
   * Event.milestone
   */
  export type Event$milestoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    where?: MilestoneWhereInput
  }

  /**
   * Event.task
   */
  export type Event$taskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
  }

  /**
   * Event without action
   */
  export type EventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
  }


  /**
   * Model Note
   */

  export type AggregateNote = {
    _count: NoteCountAggregateOutputType | null
    _min: NoteMinAggregateOutputType | null
    _max: NoteMaxAggregateOutputType | null
  }

  export type NoteMinAggregateOutputType = {
    id: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    pipelineId: string | null
    projectId: string | null
    milestoneId: string | null
    taskId: string | null
    budgetId: string | null
    fundId: string | null
    expenseId: string | null
    clientId: string | null
    vendorId: string | null
  }

  export type NoteMaxAggregateOutputType = {
    id: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    pipelineId: string | null
    projectId: string | null
    milestoneId: string | null
    taskId: string | null
    budgetId: string | null
    fundId: string | null
    expenseId: string | null
    clientId: string | null
    vendorId: string | null
  }

  export type NoteCountAggregateOutputType = {
    id: number
    description: number
    createdAt: number
    updatedAt: number
    createdById: number
    updatedById: number
    pipelineId: number
    projectId: number
    milestoneId: number
    taskId: number
    budgetId: number
    fundId: number
    expenseId: number
    clientId: number
    vendorId: number
    _all: number
  }


  export type NoteMinAggregateInputType = {
    id?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    pipelineId?: true
    projectId?: true
    milestoneId?: true
    taskId?: true
    budgetId?: true
    fundId?: true
    expenseId?: true
    clientId?: true
    vendorId?: true
  }

  export type NoteMaxAggregateInputType = {
    id?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    pipelineId?: true
    projectId?: true
    milestoneId?: true
    taskId?: true
    budgetId?: true
    fundId?: true
    expenseId?: true
    clientId?: true
    vendorId?: true
  }

  export type NoteCountAggregateInputType = {
    id?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    pipelineId?: true
    projectId?: true
    milestoneId?: true
    taskId?: true
    budgetId?: true
    fundId?: true
    expenseId?: true
    clientId?: true
    vendorId?: true
    _all?: true
  }

  export type NoteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Note to aggregate.
     */
    where?: NoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notes to fetch.
     */
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notes
    **/
    _count?: true | NoteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NoteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NoteMaxAggregateInputType
  }

  export type GetNoteAggregateType<T extends NoteAggregateArgs> = {
        [P in keyof T & keyof AggregateNote]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNote[P]>
      : GetScalarType<T[P], AggregateNote[P]>
  }




  export type NoteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithAggregationInput | NoteOrderByWithAggregationInput[]
    by: NoteScalarFieldEnum[] | NoteScalarFieldEnum
    having?: NoteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NoteCountAggregateInputType | true
    _min?: NoteMinAggregateInputType
    _max?: NoteMaxAggregateInputType
  }

  export type NoteGroupByOutputType = {
    id: string
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    pipelineId: string | null
    projectId: string | null
    milestoneId: string | null
    taskId: string | null
    budgetId: string | null
    fundId: string | null
    expenseId: string | null
    clientId: string | null
    vendorId: string | null
    _count: NoteCountAggregateOutputType | null
    _min: NoteMinAggregateOutputType | null
    _max: NoteMaxAggregateOutputType | null
  }

  type GetNoteGroupByPayload<T extends NoteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NoteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NoteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NoteGroupByOutputType[P]>
            : GetScalarType<T[P], NoteGroupByOutputType[P]>
        }
      >
    >


  export type NoteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    pipelineId?: boolean
    projectId?: boolean
    milestoneId?: boolean
    taskId?: boolean
    budgetId?: boolean
    fundId?: boolean
    expenseId?: boolean
    clientId?: boolean
    vendorId?: boolean
    createdBy?: boolean | Note$createdByArgs<ExtArgs>
    updatedBy?: boolean | Note$updatedByArgs<ExtArgs>
    pipeline?: boolean | Note$pipelineArgs<ExtArgs>
    project?: boolean | Note$projectArgs<ExtArgs>
    milestone?: boolean | Note$milestoneArgs<ExtArgs>
    task?: boolean | Note$taskArgs<ExtArgs>
    budget?: boolean | Note$budgetArgs<ExtArgs>
    fund?: boolean | Note$fundArgs<ExtArgs>
    expense?: boolean | Note$expenseArgs<ExtArgs>
    client?: boolean | Note$clientArgs<ExtArgs>
    vendor?: boolean | Note$vendorArgs<ExtArgs>
  }, ExtArgs["result"]["note"]>

  export type NoteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    pipelineId?: boolean
    projectId?: boolean
    milestoneId?: boolean
    taskId?: boolean
    budgetId?: boolean
    fundId?: boolean
    expenseId?: boolean
    clientId?: boolean
    vendorId?: boolean
    createdBy?: boolean | Note$createdByArgs<ExtArgs>
    updatedBy?: boolean | Note$updatedByArgs<ExtArgs>
    pipeline?: boolean | Note$pipelineArgs<ExtArgs>
    project?: boolean | Note$projectArgs<ExtArgs>
    milestone?: boolean | Note$milestoneArgs<ExtArgs>
    task?: boolean | Note$taskArgs<ExtArgs>
    budget?: boolean | Note$budgetArgs<ExtArgs>
    fund?: boolean | Note$fundArgs<ExtArgs>
    expense?: boolean | Note$expenseArgs<ExtArgs>
    client?: boolean | Note$clientArgs<ExtArgs>
    vendor?: boolean | Note$vendorArgs<ExtArgs>
  }, ExtArgs["result"]["note"]>

  export type NoteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    pipelineId?: boolean
    projectId?: boolean
    milestoneId?: boolean
    taskId?: boolean
    budgetId?: boolean
    fundId?: boolean
    expenseId?: boolean
    clientId?: boolean
    vendorId?: boolean
    createdBy?: boolean | Note$createdByArgs<ExtArgs>
    updatedBy?: boolean | Note$updatedByArgs<ExtArgs>
    pipeline?: boolean | Note$pipelineArgs<ExtArgs>
    project?: boolean | Note$projectArgs<ExtArgs>
    milestone?: boolean | Note$milestoneArgs<ExtArgs>
    task?: boolean | Note$taskArgs<ExtArgs>
    budget?: boolean | Note$budgetArgs<ExtArgs>
    fund?: boolean | Note$fundArgs<ExtArgs>
    expense?: boolean | Note$expenseArgs<ExtArgs>
    client?: boolean | Note$clientArgs<ExtArgs>
    vendor?: boolean | Note$vendorArgs<ExtArgs>
  }, ExtArgs["result"]["note"]>

  export type NoteSelectScalar = {
    id?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    pipelineId?: boolean
    projectId?: boolean
    milestoneId?: boolean
    taskId?: boolean
    budgetId?: boolean
    fundId?: boolean
    expenseId?: boolean
    clientId?: boolean
    vendorId?: boolean
  }

  export type NoteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "description" | "createdAt" | "updatedAt" | "createdById" | "updatedById" | "pipelineId" | "projectId" | "milestoneId" | "taskId" | "budgetId" | "fundId" | "expenseId" | "clientId" | "vendorId", ExtArgs["result"]["note"]>
  export type NoteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Note$createdByArgs<ExtArgs>
    updatedBy?: boolean | Note$updatedByArgs<ExtArgs>
    pipeline?: boolean | Note$pipelineArgs<ExtArgs>
    project?: boolean | Note$projectArgs<ExtArgs>
    milestone?: boolean | Note$milestoneArgs<ExtArgs>
    task?: boolean | Note$taskArgs<ExtArgs>
    budget?: boolean | Note$budgetArgs<ExtArgs>
    fund?: boolean | Note$fundArgs<ExtArgs>
    expense?: boolean | Note$expenseArgs<ExtArgs>
    client?: boolean | Note$clientArgs<ExtArgs>
    vendor?: boolean | Note$vendorArgs<ExtArgs>
  }
  export type NoteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Note$createdByArgs<ExtArgs>
    updatedBy?: boolean | Note$updatedByArgs<ExtArgs>
    pipeline?: boolean | Note$pipelineArgs<ExtArgs>
    project?: boolean | Note$projectArgs<ExtArgs>
    milestone?: boolean | Note$milestoneArgs<ExtArgs>
    task?: boolean | Note$taskArgs<ExtArgs>
    budget?: boolean | Note$budgetArgs<ExtArgs>
    fund?: boolean | Note$fundArgs<ExtArgs>
    expense?: boolean | Note$expenseArgs<ExtArgs>
    client?: boolean | Note$clientArgs<ExtArgs>
    vendor?: boolean | Note$vendorArgs<ExtArgs>
  }
  export type NoteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Note$createdByArgs<ExtArgs>
    updatedBy?: boolean | Note$updatedByArgs<ExtArgs>
    pipeline?: boolean | Note$pipelineArgs<ExtArgs>
    project?: boolean | Note$projectArgs<ExtArgs>
    milestone?: boolean | Note$milestoneArgs<ExtArgs>
    task?: boolean | Note$taskArgs<ExtArgs>
    budget?: boolean | Note$budgetArgs<ExtArgs>
    fund?: boolean | Note$fundArgs<ExtArgs>
    expense?: boolean | Note$expenseArgs<ExtArgs>
    client?: boolean | Note$clientArgs<ExtArgs>
    vendor?: boolean | Note$vendorArgs<ExtArgs>
  }

  export type $NotePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Note"
    objects: {
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      pipeline: Prisma.$PipelinePayload<ExtArgs> | null
      project: Prisma.$ProjectPayload<ExtArgs> | null
      milestone: Prisma.$MilestonePayload<ExtArgs> | null
      task: Prisma.$TaskPayload<ExtArgs> | null
      budget: Prisma.$BudgetPayload<ExtArgs> | null
      fund: Prisma.$FundPayload<ExtArgs> | null
      expense: Prisma.$ExpensePayload<ExtArgs> | null
      client: Prisma.$ClientPayload<ExtArgs> | null
      vendor: Prisma.$VendorPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      description: string | null
      createdAt: Date | null
      updatedAt: Date | null
      createdById: string | null
      updatedById: string | null
      pipelineId: string | null
      projectId: string | null
      milestoneId: string | null
      taskId: string | null
      budgetId: string | null
      fundId: string | null
      expenseId: string | null
      clientId: string | null
      vendorId: string | null
    }, ExtArgs["result"]["note"]>
    composites: {}
  }

  type NoteGetPayload<S extends boolean | null | undefined | NoteDefaultArgs> = $Result.GetResult<Prisma.$NotePayload, S>

  type NoteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NoteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NoteCountAggregateInputType | true
    }

  export interface NoteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Note'], meta: { name: 'Note' } }
    /**
     * Find zero or one Note that matches the filter.
     * @param {NoteFindUniqueArgs} args - Arguments to find a Note
     * @example
     * // Get one Note
     * const note = await prisma.note.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NoteFindUniqueArgs>(args: SelectSubset<T, NoteFindUniqueArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Note that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NoteFindUniqueOrThrowArgs} args - Arguments to find a Note
     * @example
     * // Get one Note
     * const note = await prisma.note.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NoteFindUniqueOrThrowArgs>(args: SelectSubset<T, NoteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Note that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoteFindFirstArgs} args - Arguments to find a Note
     * @example
     * // Get one Note
     * const note = await prisma.note.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NoteFindFirstArgs>(args?: SelectSubset<T, NoteFindFirstArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Note that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoteFindFirstOrThrowArgs} args - Arguments to find a Note
     * @example
     * // Get one Note
     * const note = await prisma.note.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NoteFindFirstOrThrowArgs>(args?: SelectSubset<T, NoteFindFirstOrThrowArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notes
     * const notes = await prisma.note.findMany()
     * 
     * // Get first 10 Notes
     * const notes = await prisma.note.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const noteWithIdOnly = await prisma.note.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NoteFindManyArgs>(args?: SelectSubset<T, NoteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Note.
     * @param {NoteCreateArgs} args - Arguments to create a Note.
     * @example
     * // Create one Note
     * const Note = await prisma.note.create({
     *   data: {
     *     // ... data to create a Note
     *   }
     * })
     * 
     */
    create<T extends NoteCreateArgs>(args: SelectSubset<T, NoteCreateArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notes.
     * @param {NoteCreateManyArgs} args - Arguments to create many Notes.
     * @example
     * // Create many Notes
     * const note = await prisma.note.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NoteCreateManyArgs>(args?: SelectSubset<T, NoteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notes and returns the data saved in the database.
     * @param {NoteCreateManyAndReturnArgs} args - Arguments to create many Notes.
     * @example
     * // Create many Notes
     * const note = await prisma.note.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notes and only return the `id`
     * const noteWithIdOnly = await prisma.note.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NoteCreateManyAndReturnArgs>(args?: SelectSubset<T, NoteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Note.
     * @param {NoteDeleteArgs} args - Arguments to delete one Note.
     * @example
     * // Delete one Note
     * const Note = await prisma.note.delete({
     *   where: {
     *     // ... filter to delete one Note
     *   }
     * })
     * 
     */
    delete<T extends NoteDeleteArgs>(args: SelectSubset<T, NoteDeleteArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Note.
     * @param {NoteUpdateArgs} args - Arguments to update one Note.
     * @example
     * // Update one Note
     * const note = await prisma.note.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NoteUpdateArgs>(args: SelectSubset<T, NoteUpdateArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notes.
     * @param {NoteDeleteManyArgs} args - Arguments to filter Notes to delete.
     * @example
     * // Delete a few Notes
     * const { count } = await prisma.note.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NoteDeleteManyArgs>(args?: SelectSubset<T, NoteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notes
     * const note = await prisma.note.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NoteUpdateManyArgs>(args: SelectSubset<T, NoteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notes and returns the data updated in the database.
     * @param {NoteUpdateManyAndReturnArgs} args - Arguments to update many Notes.
     * @example
     * // Update many Notes
     * const note = await prisma.note.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notes and only return the `id`
     * const noteWithIdOnly = await prisma.note.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends NoteUpdateManyAndReturnArgs>(args: SelectSubset<T, NoteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Note.
     * @param {NoteUpsertArgs} args - Arguments to update or create a Note.
     * @example
     * // Update or create a Note
     * const note = await prisma.note.upsert({
     *   create: {
     *     // ... data to create a Note
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Note we want to update
     *   }
     * })
     */
    upsert<T extends NoteUpsertArgs>(args: SelectSubset<T, NoteUpsertArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoteCountArgs} args - Arguments to filter Notes to count.
     * @example
     * // Count the number of Notes
     * const count = await prisma.note.count({
     *   where: {
     *     // ... the filter for the Notes we want to count
     *   }
     * })
    **/
    count<T extends NoteCountArgs>(
      args?: Subset<T, NoteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NoteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Note.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NoteAggregateArgs>(args: Subset<T, NoteAggregateArgs>): Prisma.PrismaPromise<GetNoteAggregateType<T>>

    /**
     * Group by Note.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NoteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NoteGroupByArgs['orderBy'] }
        : { orderBy?: NoteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NoteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNoteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Note model
   */
  readonly fields: NoteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Note.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NoteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createdBy<T extends Note$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Note$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Note$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Note$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    pipeline<T extends Note$pipelineArgs<ExtArgs> = {}>(args?: Subset<T, Note$pipelineArgs<ExtArgs>>): Prisma__PipelineClient<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    project<T extends Note$projectArgs<ExtArgs> = {}>(args?: Subset<T, Note$projectArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    milestone<T extends Note$milestoneArgs<ExtArgs> = {}>(args?: Subset<T, Note$milestoneArgs<ExtArgs>>): Prisma__MilestoneClient<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    task<T extends Note$taskArgs<ExtArgs> = {}>(args?: Subset<T, Note$taskArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    budget<T extends Note$budgetArgs<ExtArgs> = {}>(args?: Subset<T, Note$budgetArgs<ExtArgs>>): Prisma__BudgetClient<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    fund<T extends Note$fundArgs<ExtArgs> = {}>(args?: Subset<T, Note$fundArgs<ExtArgs>>): Prisma__FundClient<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    expense<T extends Note$expenseArgs<ExtArgs> = {}>(args?: Subset<T, Note$expenseArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    client<T extends Note$clientArgs<ExtArgs> = {}>(args?: Subset<T, Note$clientArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vendor<T extends Note$vendorArgs<ExtArgs> = {}>(args?: Subset<T, Note$vendorArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Note model
   */
  interface NoteFieldRefs {
    readonly id: FieldRef<"Note", 'String'>
    readonly description: FieldRef<"Note", 'String'>
    readonly createdAt: FieldRef<"Note", 'DateTime'>
    readonly updatedAt: FieldRef<"Note", 'DateTime'>
    readonly createdById: FieldRef<"Note", 'String'>
    readonly updatedById: FieldRef<"Note", 'String'>
    readonly pipelineId: FieldRef<"Note", 'String'>
    readonly projectId: FieldRef<"Note", 'String'>
    readonly milestoneId: FieldRef<"Note", 'String'>
    readonly taskId: FieldRef<"Note", 'String'>
    readonly budgetId: FieldRef<"Note", 'String'>
    readonly fundId: FieldRef<"Note", 'String'>
    readonly expenseId: FieldRef<"Note", 'String'>
    readonly clientId: FieldRef<"Note", 'String'>
    readonly vendorId: FieldRef<"Note", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Note findUnique
   */
  export type NoteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * Filter, which Note to fetch.
     */
    where: NoteWhereUniqueInput
  }

  /**
   * Note findUniqueOrThrow
   */
  export type NoteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * Filter, which Note to fetch.
     */
    where: NoteWhereUniqueInput
  }

  /**
   * Note findFirst
   */
  export type NoteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * Filter, which Note to fetch.
     */
    where?: NoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notes to fetch.
     */
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notes.
     */
    cursor?: NoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notes.
     */
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Note findFirstOrThrow
   */
  export type NoteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * Filter, which Note to fetch.
     */
    where?: NoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notes to fetch.
     */
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notes.
     */
    cursor?: NoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notes.
     */
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Note findMany
   */
  export type NoteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * Filter, which Notes to fetch.
     */
    where?: NoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notes to fetch.
     */
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notes.
     */
    cursor?: NoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notes.
     */
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Note create
   */
  export type NoteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * The data needed to create a Note.
     */
    data?: XOR<NoteCreateInput, NoteUncheckedCreateInput>
  }

  /**
   * Note createMany
   */
  export type NoteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notes.
     */
    data: NoteCreateManyInput | NoteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Note createManyAndReturn
   */
  export type NoteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * The data used to create many Notes.
     */
    data: NoteCreateManyInput | NoteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Note update
   */
  export type NoteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * The data needed to update a Note.
     */
    data: XOR<NoteUpdateInput, NoteUncheckedUpdateInput>
    /**
     * Choose, which Note to update.
     */
    where: NoteWhereUniqueInput
  }

  /**
   * Note updateMany
   */
  export type NoteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notes.
     */
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyInput>
    /**
     * Filter which Notes to update
     */
    where?: NoteWhereInput
    /**
     * Limit how many Notes to update.
     */
    limit?: number
  }

  /**
   * Note updateManyAndReturn
   */
  export type NoteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * The data used to update Notes.
     */
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyInput>
    /**
     * Filter which Notes to update
     */
    where?: NoteWhereInput
    /**
     * Limit how many Notes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Note upsert
   */
  export type NoteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * The filter to search for the Note to update in case it exists.
     */
    where: NoteWhereUniqueInput
    /**
     * In case the Note found by the `where` argument doesn't exist, create a new Note with this data.
     */
    create: XOR<NoteCreateInput, NoteUncheckedCreateInput>
    /**
     * In case the Note was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NoteUpdateInput, NoteUncheckedUpdateInput>
  }

  /**
   * Note delete
   */
  export type NoteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * Filter which Note to delete.
     */
    where: NoteWhereUniqueInput
  }

  /**
   * Note deleteMany
   */
  export type NoteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notes to delete
     */
    where?: NoteWhereInput
    /**
     * Limit how many Notes to delete.
     */
    limit?: number
  }

  /**
   * Note.createdBy
   */
  export type Note$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Note.updatedBy
   */
  export type Note$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Note.pipeline
   */
  export type Note$pipelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    where?: PipelineWhereInput
  }

  /**
   * Note.project
   */
  export type Note$projectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
  }

  /**
   * Note.milestone
   */
  export type Note$milestoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    where?: MilestoneWhereInput
  }

  /**
   * Note.task
   */
  export type Note$taskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
  }

  /**
   * Note.budget
   */
  export type Note$budgetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
    where?: BudgetWhereInput
  }

  /**
   * Note.fund
   */
  export type Note$fundArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    where?: FundWhereInput
  }

  /**
   * Note.expense
   */
  export type Note$expenseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    where?: ExpenseWhereInput
  }

  /**
   * Note.client
   */
  export type Note$clientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
  }

  /**
   * Note.vendor
   */
  export type Note$vendorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendor
     */
    omit?: VendorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    where?: VendorWhereInput
  }

  /**
   * Note without action
   */
  export type NoteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
  }


  /**
   * Model Stage
   */

  export type AggregateStage = {
    _count: StageCountAggregateOutputType | null
    _min: StageMinAggregateOutputType | null
    _max: StageMaxAggregateOutputType | null
  }

  export type StageMinAggregateOutputType = {
    id: string | null
    stageTypeId: string | null
    comment: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    pipelineId: string | null
    projectId: string | null
    milestoneId: string | null
    taskId: string | null
    budgetId: string | null
    fundId: string | null
  }

  export type StageMaxAggregateOutputType = {
    id: string | null
    stageTypeId: string | null
    comment: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    pipelineId: string | null
    projectId: string | null
    milestoneId: string | null
    taskId: string | null
    budgetId: string | null
    fundId: string | null
  }

  export type StageCountAggregateOutputType = {
    id: number
    stageTypeId: number
    comment: number
    createdAt: number
    updatedAt: number
    createdById: number
    updatedById: number
    pipelineId: number
    projectId: number
    milestoneId: number
    taskId: number
    budgetId: number
    fundId: number
    _all: number
  }


  export type StageMinAggregateInputType = {
    id?: true
    stageTypeId?: true
    comment?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    pipelineId?: true
    projectId?: true
    milestoneId?: true
    taskId?: true
    budgetId?: true
    fundId?: true
  }

  export type StageMaxAggregateInputType = {
    id?: true
    stageTypeId?: true
    comment?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    pipelineId?: true
    projectId?: true
    milestoneId?: true
    taskId?: true
    budgetId?: true
    fundId?: true
  }

  export type StageCountAggregateInputType = {
    id?: true
    stageTypeId?: true
    comment?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    pipelineId?: true
    projectId?: true
    milestoneId?: true
    taskId?: true
    budgetId?: true
    fundId?: true
    _all?: true
  }

  export type StageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Stage to aggregate.
     */
    where?: StageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stages to fetch.
     */
    orderBy?: StageOrderByWithRelationInput | StageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Stages
    **/
    _count?: true | StageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StageMaxAggregateInputType
  }

  export type GetStageAggregateType<T extends StageAggregateArgs> = {
        [P in keyof T & keyof AggregateStage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStage[P]>
      : GetScalarType<T[P], AggregateStage[P]>
  }




  export type StageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StageWhereInput
    orderBy?: StageOrderByWithAggregationInput | StageOrderByWithAggregationInput[]
    by: StageScalarFieldEnum[] | StageScalarFieldEnum
    having?: StageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StageCountAggregateInputType | true
    _min?: StageMinAggregateInputType
    _max?: StageMaxAggregateInputType
  }

  export type StageGroupByOutputType = {
    id: string
    stageTypeId: string
    comment: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    pipelineId: string | null
    projectId: string | null
    milestoneId: string | null
    taskId: string | null
    budgetId: string | null
    fundId: string | null
    _count: StageCountAggregateOutputType | null
    _min: StageMinAggregateOutputType | null
    _max: StageMaxAggregateOutputType | null
  }

  type GetStageGroupByPayload<T extends StageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StageGroupByOutputType[P]>
            : GetScalarType<T[P], StageGroupByOutputType[P]>
        }
      >
    >


  export type StageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stageTypeId?: boolean
    comment?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    pipelineId?: boolean
    projectId?: boolean
    milestoneId?: boolean
    taskId?: boolean
    budgetId?: boolean
    fundId?: boolean
    type?: boolean | StageTypeDefaultArgs<ExtArgs>
    createdBy?: boolean | Stage$createdByArgs<ExtArgs>
    updatedBy?: boolean | Stage$updatedByArgs<ExtArgs>
    pipeline?: boolean | Stage$pipelineArgs<ExtArgs>
    project?: boolean | Stage$projectArgs<ExtArgs>
    milestone?: boolean | Stage$milestoneArgs<ExtArgs>
    task?: boolean | Stage$taskArgs<ExtArgs>
    budget?: boolean | Stage$budgetArgs<ExtArgs>
    fund?: boolean | Stage$fundArgs<ExtArgs>
  }, ExtArgs["result"]["stage"]>

  export type StageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stageTypeId?: boolean
    comment?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    pipelineId?: boolean
    projectId?: boolean
    milestoneId?: boolean
    taskId?: boolean
    budgetId?: boolean
    fundId?: boolean
    type?: boolean | StageTypeDefaultArgs<ExtArgs>
    createdBy?: boolean | Stage$createdByArgs<ExtArgs>
    updatedBy?: boolean | Stage$updatedByArgs<ExtArgs>
    pipeline?: boolean | Stage$pipelineArgs<ExtArgs>
    project?: boolean | Stage$projectArgs<ExtArgs>
    milestone?: boolean | Stage$milestoneArgs<ExtArgs>
    task?: boolean | Stage$taskArgs<ExtArgs>
    budget?: boolean | Stage$budgetArgs<ExtArgs>
    fund?: boolean | Stage$fundArgs<ExtArgs>
  }, ExtArgs["result"]["stage"]>

  export type StageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stageTypeId?: boolean
    comment?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    pipelineId?: boolean
    projectId?: boolean
    milestoneId?: boolean
    taskId?: boolean
    budgetId?: boolean
    fundId?: boolean
    type?: boolean | StageTypeDefaultArgs<ExtArgs>
    createdBy?: boolean | Stage$createdByArgs<ExtArgs>
    updatedBy?: boolean | Stage$updatedByArgs<ExtArgs>
    pipeline?: boolean | Stage$pipelineArgs<ExtArgs>
    project?: boolean | Stage$projectArgs<ExtArgs>
    milestone?: boolean | Stage$milestoneArgs<ExtArgs>
    task?: boolean | Stage$taskArgs<ExtArgs>
    budget?: boolean | Stage$budgetArgs<ExtArgs>
    fund?: boolean | Stage$fundArgs<ExtArgs>
  }, ExtArgs["result"]["stage"]>

  export type StageSelectScalar = {
    id?: boolean
    stageTypeId?: boolean
    comment?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    pipelineId?: boolean
    projectId?: boolean
    milestoneId?: boolean
    taskId?: boolean
    budgetId?: boolean
    fundId?: boolean
  }

  export type StageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "stageTypeId" | "comment" | "createdAt" | "updatedAt" | "createdById" | "updatedById" | "pipelineId" | "projectId" | "milestoneId" | "taskId" | "budgetId" | "fundId", ExtArgs["result"]["stage"]>
  export type StageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    type?: boolean | StageTypeDefaultArgs<ExtArgs>
    createdBy?: boolean | Stage$createdByArgs<ExtArgs>
    updatedBy?: boolean | Stage$updatedByArgs<ExtArgs>
    pipeline?: boolean | Stage$pipelineArgs<ExtArgs>
    project?: boolean | Stage$projectArgs<ExtArgs>
    milestone?: boolean | Stage$milestoneArgs<ExtArgs>
    task?: boolean | Stage$taskArgs<ExtArgs>
    budget?: boolean | Stage$budgetArgs<ExtArgs>
    fund?: boolean | Stage$fundArgs<ExtArgs>
  }
  export type StageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    type?: boolean | StageTypeDefaultArgs<ExtArgs>
    createdBy?: boolean | Stage$createdByArgs<ExtArgs>
    updatedBy?: boolean | Stage$updatedByArgs<ExtArgs>
    pipeline?: boolean | Stage$pipelineArgs<ExtArgs>
    project?: boolean | Stage$projectArgs<ExtArgs>
    milestone?: boolean | Stage$milestoneArgs<ExtArgs>
    task?: boolean | Stage$taskArgs<ExtArgs>
    budget?: boolean | Stage$budgetArgs<ExtArgs>
    fund?: boolean | Stage$fundArgs<ExtArgs>
  }
  export type StageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    type?: boolean | StageTypeDefaultArgs<ExtArgs>
    createdBy?: boolean | Stage$createdByArgs<ExtArgs>
    updatedBy?: boolean | Stage$updatedByArgs<ExtArgs>
    pipeline?: boolean | Stage$pipelineArgs<ExtArgs>
    project?: boolean | Stage$projectArgs<ExtArgs>
    milestone?: boolean | Stage$milestoneArgs<ExtArgs>
    task?: boolean | Stage$taskArgs<ExtArgs>
    budget?: boolean | Stage$budgetArgs<ExtArgs>
    fund?: boolean | Stage$fundArgs<ExtArgs>
  }

  export type $StagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Stage"
    objects: {
      type: Prisma.$StageTypePayload<ExtArgs>
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      pipeline: Prisma.$PipelinePayload<ExtArgs> | null
      project: Prisma.$ProjectPayload<ExtArgs> | null
      milestone: Prisma.$MilestonePayload<ExtArgs> | null
      task: Prisma.$TaskPayload<ExtArgs> | null
      budget: Prisma.$BudgetPayload<ExtArgs> | null
      fund: Prisma.$FundPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      stageTypeId: string
      comment: string | null
      createdAt: Date | null
      updatedAt: Date | null
      createdById: string | null
      updatedById: string | null
      pipelineId: string | null
      projectId: string | null
      milestoneId: string | null
      taskId: string | null
      budgetId: string | null
      fundId: string | null
    }, ExtArgs["result"]["stage"]>
    composites: {}
  }

  type StageGetPayload<S extends boolean | null | undefined | StageDefaultArgs> = $Result.GetResult<Prisma.$StagePayload, S>

  type StageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StageCountAggregateInputType | true
    }

  export interface StageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Stage'], meta: { name: 'Stage' } }
    /**
     * Find zero or one Stage that matches the filter.
     * @param {StageFindUniqueArgs} args - Arguments to find a Stage
     * @example
     * // Get one Stage
     * const stage = await prisma.stage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StageFindUniqueArgs>(args: SelectSubset<T, StageFindUniqueArgs<ExtArgs>>): Prisma__StageClient<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Stage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StageFindUniqueOrThrowArgs} args - Arguments to find a Stage
     * @example
     * // Get one Stage
     * const stage = await prisma.stage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StageFindUniqueOrThrowArgs>(args: SelectSubset<T, StageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StageClient<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StageFindFirstArgs} args - Arguments to find a Stage
     * @example
     * // Get one Stage
     * const stage = await prisma.stage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StageFindFirstArgs>(args?: SelectSubset<T, StageFindFirstArgs<ExtArgs>>): Prisma__StageClient<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StageFindFirstOrThrowArgs} args - Arguments to find a Stage
     * @example
     * // Get one Stage
     * const stage = await prisma.stage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StageFindFirstOrThrowArgs>(args?: SelectSubset<T, StageFindFirstOrThrowArgs<ExtArgs>>): Prisma__StageClient<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Stages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stages
     * const stages = await prisma.stage.findMany()
     * 
     * // Get first 10 Stages
     * const stages = await prisma.stage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stageWithIdOnly = await prisma.stage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StageFindManyArgs>(args?: SelectSubset<T, StageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Stage.
     * @param {StageCreateArgs} args - Arguments to create a Stage.
     * @example
     * // Create one Stage
     * const Stage = await prisma.stage.create({
     *   data: {
     *     // ... data to create a Stage
     *   }
     * })
     * 
     */
    create<T extends StageCreateArgs>(args: SelectSubset<T, StageCreateArgs<ExtArgs>>): Prisma__StageClient<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Stages.
     * @param {StageCreateManyArgs} args - Arguments to create many Stages.
     * @example
     * // Create many Stages
     * const stage = await prisma.stage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StageCreateManyArgs>(args?: SelectSubset<T, StageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Stages and returns the data saved in the database.
     * @param {StageCreateManyAndReturnArgs} args - Arguments to create many Stages.
     * @example
     * // Create many Stages
     * const stage = await prisma.stage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Stages and only return the `id`
     * const stageWithIdOnly = await prisma.stage.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StageCreateManyAndReturnArgs>(args?: SelectSubset<T, StageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Stage.
     * @param {StageDeleteArgs} args - Arguments to delete one Stage.
     * @example
     * // Delete one Stage
     * const Stage = await prisma.stage.delete({
     *   where: {
     *     // ... filter to delete one Stage
     *   }
     * })
     * 
     */
    delete<T extends StageDeleteArgs>(args: SelectSubset<T, StageDeleteArgs<ExtArgs>>): Prisma__StageClient<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Stage.
     * @param {StageUpdateArgs} args - Arguments to update one Stage.
     * @example
     * // Update one Stage
     * const stage = await prisma.stage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StageUpdateArgs>(args: SelectSubset<T, StageUpdateArgs<ExtArgs>>): Prisma__StageClient<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Stages.
     * @param {StageDeleteManyArgs} args - Arguments to filter Stages to delete.
     * @example
     * // Delete a few Stages
     * const { count } = await prisma.stage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StageDeleteManyArgs>(args?: SelectSubset<T, StageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stages
     * const stage = await prisma.stage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StageUpdateManyArgs>(args: SelectSubset<T, StageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stages and returns the data updated in the database.
     * @param {StageUpdateManyAndReturnArgs} args - Arguments to update many Stages.
     * @example
     * // Update many Stages
     * const stage = await prisma.stage.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Stages and only return the `id`
     * const stageWithIdOnly = await prisma.stage.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StageUpdateManyAndReturnArgs>(args: SelectSubset<T, StageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Stage.
     * @param {StageUpsertArgs} args - Arguments to update or create a Stage.
     * @example
     * // Update or create a Stage
     * const stage = await prisma.stage.upsert({
     *   create: {
     *     // ... data to create a Stage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Stage we want to update
     *   }
     * })
     */
    upsert<T extends StageUpsertArgs>(args: SelectSubset<T, StageUpsertArgs<ExtArgs>>): Prisma__StageClient<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Stages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StageCountArgs} args - Arguments to filter Stages to count.
     * @example
     * // Count the number of Stages
     * const count = await prisma.stage.count({
     *   where: {
     *     // ... the filter for the Stages we want to count
     *   }
     * })
    **/
    count<T extends StageCountArgs>(
      args?: Subset<T, StageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Stage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StageAggregateArgs>(args: Subset<T, StageAggregateArgs>): Prisma.PrismaPromise<GetStageAggregateType<T>>

    /**
     * Group by Stage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StageGroupByArgs['orderBy'] }
        : { orderBy?: StageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Stage model
   */
  readonly fields: StageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Stage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    type<T extends StageTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StageTypeDefaultArgs<ExtArgs>>): Prisma__StageTypeClient<$Result.GetResult<Prisma.$StageTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends Stage$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Stage$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Stage$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Stage$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    pipeline<T extends Stage$pipelineArgs<ExtArgs> = {}>(args?: Subset<T, Stage$pipelineArgs<ExtArgs>>): Prisma__PipelineClient<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    project<T extends Stage$projectArgs<ExtArgs> = {}>(args?: Subset<T, Stage$projectArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    milestone<T extends Stage$milestoneArgs<ExtArgs> = {}>(args?: Subset<T, Stage$milestoneArgs<ExtArgs>>): Prisma__MilestoneClient<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    task<T extends Stage$taskArgs<ExtArgs> = {}>(args?: Subset<T, Stage$taskArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    budget<T extends Stage$budgetArgs<ExtArgs> = {}>(args?: Subset<T, Stage$budgetArgs<ExtArgs>>): Prisma__BudgetClient<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    fund<T extends Stage$fundArgs<ExtArgs> = {}>(args?: Subset<T, Stage$fundArgs<ExtArgs>>): Prisma__FundClient<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Stage model
   */
  interface StageFieldRefs {
    readonly id: FieldRef<"Stage", 'String'>
    readonly stageTypeId: FieldRef<"Stage", 'String'>
    readonly comment: FieldRef<"Stage", 'String'>
    readonly createdAt: FieldRef<"Stage", 'DateTime'>
    readonly updatedAt: FieldRef<"Stage", 'DateTime'>
    readonly createdById: FieldRef<"Stage", 'String'>
    readonly updatedById: FieldRef<"Stage", 'String'>
    readonly pipelineId: FieldRef<"Stage", 'String'>
    readonly projectId: FieldRef<"Stage", 'String'>
    readonly milestoneId: FieldRef<"Stage", 'String'>
    readonly taskId: FieldRef<"Stage", 'String'>
    readonly budgetId: FieldRef<"Stage", 'String'>
    readonly fundId: FieldRef<"Stage", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Stage findUnique
   */
  export type StageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    /**
     * Filter, which Stage to fetch.
     */
    where: StageWhereUniqueInput
  }

  /**
   * Stage findUniqueOrThrow
   */
  export type StageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    /**
     * Filter, which Stage to fetch.
     */
    where: StageWhereUniqueInput
  }

  /**
   * Stage findFirst
   */
  export type StageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    /**
     * Filter, which Stage to fetch.
     */
    where?: StageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stages to fetch.
     */
    orderBy?: StageOrderByWithRelationInput | StageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Stages.
     */
    cursor?: StageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Stages.
     */
    distinct?: StageScalarFieldEnum | StageScalarFieldEnum[]
  }

  /**
   * Stage findFirstOrThrow
   */
  export type StageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    /**
     * Filter, which Stage to fetch.
     */
    where?: StageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stages to fetch.
     */
    orderBy?: StageOrderByWithRelationInput | StageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Stages.
     */
    cursor?: StageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Stages.
     */
    distinct?: StageScalarFieldEnum | StageScalarFieldEnum[]
  }

  /**
   * Stage findMany
   */
  export type StageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    /**
     * Filter, which Stages to fetch.
     */
    where?: StageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stages to fetch.
     */
    orderBy?: StageOrderByWithRelationInput | StageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Stages.
     */
    cursor?: StageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stages.
     */
    skip?: number
    distinct?: StageScalarFieldEnum | StageScalarFieldEnum[]
  }

  /**
   * Stage create
   */
  export type StageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    /**
     * The data needed to create a Stage.
     */
    data: XOR<StageCreateInput, StageUncheckedCreateInput>
  }

  /**
   * Stage createMany
   */
  export type StageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Stages.
     */
    data: StageCreateManyInput | StageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Stage createManyAndReturn
   */
  export type StageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * The data used to create many Stages.
     */
    data: StageCreateManyInput | StageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Stage update
   */
  export type StageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    /**
     * The data needed to update a Stage.
     */
    data: XOR<StageUpdateInput, StageUncheckedUpdateInput>
    /**
     * Choose, which Stage to update.
     */
    where: StageWhereUniqueInput
  }

  /**
   * Stage updateMany
   */
  export type StageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Stages.
     */
    data: XOR<StageUpdateManyMutationInput, StageUncheckedUpdateManyInput>
    /**
     * Filter which Stages to update
     */
    where?: StageWhereInput
    /**
     * Limit how many Stages to update.
     */
    limit?: number
  }

  /**
   * Stage updateManyAndReturn
   */
  export type StageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * The data used to update Stages.
     */
    data: XOR<StageUpdateManyMutationInput, StageUncheckedUpdateManyInput>
    /**
     * Filter which Stages to update
     */
    where?: StageWhereInput
    /**
     * Limit how many Stages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Stage upsert
   */
  export type StageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    /**
     * The filter to search for the Stage to update in case it exists.
     */
    where: StageWhereUniqueInput
    /**
     * In case the Stage found by the `where` argument doesn't exist, create a new Stage with this data.
     */
    create: XOR<StageCreateInput, StageUncheckedCreateInput>
    /**
     * In case the Stage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StageUpdateInput, StageUncheckedUpdateInput>
  }

  /**
   * Stage delete
   */
  export type StageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    /**
     * Filter which Stage to delete.
     */
    where: StageWhereUniqueInput
  }

  /**
   * Stage deleteMany
   */
  export type StageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Stages to delete
     */
    where?: StageWhereInput
    /**
     * Limit how many Stages to delete.
     */
    limit?: number
  }

  /**
   * Stage.createdBy
   */
  export type Stage$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Stage.updatedBy
   */
  export type Stage$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Stage.pipeline
   */
  export type Stage$pipelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    where?: PipelineWhereInput
  }

  /**
   * Stage.project
   */
  export type Stage$projectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
  }

  /**
   * Stage.milestone
   */
  export type Stage$milestoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    where?: MilestoneWhereInput
  }

  /**
   * Stage.task
   */
  export type Stage$taskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
  }

  /**
   * Stage.budget
   */
  export type Stage$budgetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
    where?: BudgetWhereInput
  }

  /**
   * Stage.fund
   */
  export type Stage$fundArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    where?: FundWhereInput
  }

  /**
   * Stage without action
   */
  export type StageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
  }


  /**
   * Model StageType
   */

  export type AggregateStageType = {
    _count: StageTypeCountAggregateOutputType | null
    _avg: StageTypeAvgAggregateOutputType | null
    _sum: StageTypeSumAggregateOutputType | null
    _min: StageTypeMinAggregateOutputType | null
    _max: StageTypeMaxAggregateOutputType | null
  }

  export type StageTypeAvgAggregateOutputType = {
    order: Decimal | null
  }

  export type StageTypeSumAggregateOutputType = {
    order: Decimal | null
  }

  export type StageTypeMinAggregateOutputType = {
    id: string | null
    model: string | null
    order: Decimal | null
    value: string | null
  }

  export type StageTypeMaxAggregateOutputType = {
    id: string | null
    model: string | null
    order: Decimal | null
    value: string | null
  }

  export type StageTypeCountAggregateOutputType = {
    id: number
    model: number
    order: number
    value: number
    _all: number
  }


  export type StageTypeAvgAggregateInputType = {
    order?: true
  }

  export type StageTypeSumAggregateInputType = {
    order?: true
  }

  export type StageTypeMinAggregateInputType = {
    id?: true
    model?: true
    order?: true
    value?: true
  }

  export type StageTypeMaxAggregateInputType = {
    id?: true
    model?: true
    order?: true
    value?: true
  }

  export type StageTypeCountAggregateInputType = {
    id?: true
    model?: true
    order?: true
    value?: true
    _all?: true
  }

  export type StageTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StageType to aggregate.
     */
    where?: StageTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StageTypes to fetch.
     */
    orderBy?: StageTypeOrderByWithRelationInput | StageTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StageTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StageTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StageTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StageTypes
    **/
    _count?: true | StageTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StageTypeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StageTypeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StageTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StageTypeMaxAggregateInputType
  }

  export type GetStageTypeAggregateType<T extends StageTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateStageType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStageType[P]>
      : GetScalarType<T[P], AggregateStageType[P]>
  }




  export type StageTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StageTypeWhereInput
    orderBy?: StageTypeOrderByWithAggregationInput | StageTypeOrderByWithAggregationInput[]
    by: StageTypeScalarFieldEnum[] | StageTypeScalarFieldEnum
    having?: StageTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StageTypeCountAggregateInputType | true
    _avg?: StageTypeAvgAggregateInputType
    _sum?: StageTypeSumAggregateInputType
    _min?: StageTypeMinAggregateInputType
    _max?: StageTypeMaxAggregateInputType
  }

  export type StageTypeGroupByOutputType = {
    id: string
    model: string
    order: Decimal
    value: string
    _count: StageTypeCountAggregateOutputType | null
    _avg: StageTypeAvgAggregateOutputType | null
    _sum: StageTypeSumAggregateOutputType | null
    _min: StageTypeMinAggregateOutputType | null
    _max: StageTypeMaxAggregateOutputType | null
  }

  type GetStageTypeGroupByPayload<T extends StageTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StageTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StageTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StageTypeGroupByOutputType[P]>
            : GetScalarType<T[P], StageTypeGroupByOutputType[P]>
        }
      >
    >


  export type StageTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    model?: boolean
    order?: boolean
    value?: boolean
    stages?: boolean | StageType$stagesArgs<ExtArgs>
    _count?: boolean | StageTypeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stageType"]>

  export type StageTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    model?: boolean
    order?: boolean
    value?: boolean
  }, ExtArgs["result"]["stageType"]>

  export type StageTypeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    model?: boolean
    order?: boolean
    value?: boolean
  }, ExtArgs["result"]["stageType"]>

  export type StageTypeSelectScalar = {
    id?: boolean
    model?: boolean
    order?: boolean
    value?: boolean
  }

  export type StageTypeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "model" | "order" | "value", ExtArgs["result"]["stageType"]>
  export type StageTypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stages?: boolean | StageType$stagesArgs<ExtArgs>
    _count?: boolean | StageTypeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type StageTypeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type StageTypeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $StageTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StageType"
    objects: {
      stages: Prisma.$StagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      model: string
      order: Prisma.Decimal
      value: string
    }, ExtArgs["result"]["stageType"]>
    composites: {}
  }

  type StageTypeGetPayload<S extends boolean | null | undefined | StageTypeDefaultArgs> = $Result.GetResult<Prisma.$StageTypePayload, S>

  type StageTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StageTypeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StageTypeCountAggregateInputType | true
    }

  export interface StageTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StageType'], meta: { name: 'StageType' } }
    /**
     * Find zero or one StageType that matches the filter.
     * @param {StageTypeFindUniqueArgs} args - Arguments to find a StageType
     * @example
     * // Get one StageType
     * const stageType = await prisma.stageType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StageTypeFindUniqueArgs>(args: SelectSubset<T, StageTypeFindUniqueArgs<ExtArgs>>): Prisma__StageTypeClient<$Result.GetResult<Prisma.$StageTypePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StageType that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StageTypeFindUniqueOrThrowArgs} args - Arguments to find a StageType
     * @example
     * // Get one StageType
     * const stageType = await prisma.stageType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StageTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, StageTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StageTypeClient<$Result.GetResult<Prisma.$StageTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StageType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StageTypeFindFirstArgs} args - Arguments to find a StageType
     * @example
     * // Get one StageType
     * const stageType = await prisma.stageType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StageTypeFindFirstArgs>(args?: SelectSubset<T, StageTypeFindFirstArgs<ExtArgs>>): Prisma__StageTypeClient<$Result.GetResult<Prisma.$StageTypePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StageType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StageTypeFindFirstOrThrowArgs} args - Arguments to find a StageType
     * @example
     * // Get one StageType
     * const stageType = await prisma.stageType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StageTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, StageTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__StageTypeClient<$Result.GetResult<Prisma.$StageTypePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StageTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StageTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StageTypes
     * const stageTypes = await prisma.stageType.findMany()
     * 
     * // Get first 10 StageTypes
     * const stageTypes = await prisma.stageType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stageTypeWithIdOnly = await prisma.stageType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StageTypeFindManyArgs>(args?: SelectSubset<T, StageTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StageTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StageType.
     * @param {StageTypeCreateArgs} args - Arguments to create a StageType.
     * @example
     * // Create one StageType
     * const StageType = await prisma.stageType.create({
     *   data: {
     *     // ... data to create a StageType
     *   }
     * })
     * 
     */
    create<T extends StageTypeCreateArgs>(args: SelectSubset<T, StageTypeCreateArgs<ExtArgs>>): Prisma__StageTypeClient<$Result.GetResult<Prisma.$StageTypePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StageTypes.
     * @param {StageTypeCreateManyArgs} args - Arguments to create many StageTypes.
     * @example
     * // Create many StageTypes
     * const stageType = await prisma.stageType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StageTypeCreateManyArgs>(args?: SelectSubset<T, StageTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StageTypes and returns the data saved in the database.
     * @param {StageTypeCreateManyAndReturnArgs} args - Arguments to create many StageTypes.
     * @example
     * // Create many StageTypes
     * const stageType = await prisma.stageType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StageTypes and only return the `id`
     * const stageTypeWithIdOnly = await prisma.stageType.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StageTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, StageTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StageTypePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a StageType.
     * @param {StageTypeDeleteArgs} args - Arguments to delete one StageType.
     * @example
     * // Delete one StageType
     * const StageType = await prisma.stageType.delete({
     *   where: {
     *     // ... filter to delete one StageType
     *   }
     * })
     * 
     */
    delete<T extends StageTypeDeleteArgs>(args: SelectSubset<T, StageTypeDeleteArgs<ExtArgs>>): Prisma__StageTypeClient<$Result.GetResult<Prisma.$StageTypePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StageType.
     * @param {StageTypeUpdateArgs} args - Arguments to update one StageType.
     * @example
     * // Update one StageType
     * const stageType = await prisma.stageType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StageTypeUpdateArgs>(args: SelectSubset<T, StageTypeUpdateArgs<ExtArgs>>): Prisma__StageTypeClient<$Result.GetResult<Prisma.$StageTypePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StageTypes.
     * @param {StageTypeDeleteManyArgs} args - Arguments to filter StageTypes to delete.
     * @example
     * // Delete a few StageTypes
     * const { count } = await prisma.stageType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StageTypeDeleteManyArgs>(args?: SelectSubset<T, StageTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StageTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StageTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StageTypes
     * const stageType = await prisma.stageType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StageTypeUpdateManyArgs>(args: SelectSubset<T, StageTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StageTypes and returns the data updated in the database.
     * @param {StageTypeUpdateManyAndReturnArgs} args - Arguments to update many StageTypes.
     * @example
     * // Update many StageTypes
     * const stageType = await prisma.stageType.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more StageTypes and only return the `id`
     * const stageTypeWithIdOnly = await prisma.stageType.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StageTypeUpdateManyAndReturnArgs>(args: SelectSubset<T, StageTypeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StageTypePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one StageType.
     * @param {StageTypeUpsertArgs} args - Arguments to update or create a StageType.
     * @example
     * // Update or create a StageType
     * const stageType = await prisma.stageType.upsert({
     *   create: {
     *     // ... data to create a StageType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StageType we want to update
     *   }
     * })
     */
    upsert<T extends StageTypeUpsertArgs>(args: SelectSubset<T, StageTypeUpsertArgs<ExtArgs>>): Prisma__StageTypeClient<$Result.GetResult<Prisma.$StageTypePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StageTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StageTypeCountArgs} args - Arguments to filter StageTypes to count.
     * @example
     * // Count the number of StageTypes
     * const count = await prisma.stageType.count({
     *   where: {
     *     // ... the filter for the StageTypes we want to count
     *   }
     * })
    **/
    count<T extends StageTypeCountArgs>(
      args?: Subset<T, StageTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StageTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StageType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StageTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StageTypeAggregateArgs>(args: Subset<T, StageTypeAggregateArgs>): Prisma.PrismaPromise<GetStageTypeAggregateType<T>>

    /**
     * Group by StageType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StageTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StageTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StageTypeGroupByArgs['orderBy'] }
        : { orderBy?: StageTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StageTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStageTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StageType model
   */
  readonly fields: StageTypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StageType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StageTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    stages<T extends StageType$stagesArgs<ExtArgs> = {}>(args?: Subset<T, StageType$stagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StageType model
   */
  interface StageTypeFieldRefs {
    readonly id: FieldRef<"StageType", 'String'>
    readonly model: FieldRef<"StageType", 'String'>
    readonly order: FieldRef<"StageType", 'Decimal'>
    readonly value: FieldRef<"StageType", 'String'>
  }
    

  // Custom InputTypes
  /**
   * StageType findUnique
   */
  export type StageTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StageType
     */
    select?: StageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StageType
     */
    omit?: StageTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageTypeInclude<ExtArgs> | null
    /**
     * Filter, which StageType to fetch.
     */
    where: StageTypeWhereUniqueInput
  }

  /**
   * StageType findUniqueOrThrow
   */
  export type StageTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StageType
     */
    select?: StageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StageType
     */
    omit?: StageTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageTypeInclude<ExtArgs> | null
    /**
     * Filter, which StageType to fetch.
     */
    where: StageTypeWhereUniqueInput
  }

  /**
   * StageType findFirst
   */
  export type StageTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StageType
     */
    select?: StageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StageType
     */
    omit?: StageTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageTypeInclude<ExtArgs> | null
    /**
     * Filter, which StageType to fetch.
     */
    where?: StageTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StageTypes to fetch.
     */
    orderBy?: StageTypeOrderByWithRelationInput | StageTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StageTypes.
     */
    cursor?: StageTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StageTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StageTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StageTypes.
     */
    distinct?: StageTypeScalarFieldEnum | StageTypeScalarFieldEnum[]
  }

  /**
   * StageType findFirstOrThrow
   */
  export type StageTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StageType
     */
    select?: StageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StageType
     */
    omit?: StageTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageTypeInclude<ExtArgs> | null
    /**
     * Filter, which StageType to fetch.
     */
    where?: StageTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StageTypes to fetch.
     */
    orderBy?: StageTypeOrderByWithRelationInput | StageTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StageTypes.
     */
    cursor?: StageTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StageTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StageTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StageTypes.
     */
    distinct?: StageTypeScalarFieldEnum | StageTypeScalarFieldEnum[]
  }

  /**
   * StageType findMany
   */
  export type StageTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StageType
     */
    select?: StageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StageType
     */
    omit?: StageTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageTypeInclude<ExtArgs> | null
    /**
     * Filter, which StageTypes to fetch.
     */
    where?: StageTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StageTypes to fetch.
     */
    orderBy?: StageTypeOrderByWithRelationInput | StageTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StageTypes.
     */
    cursor?: StageTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StageTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StageTypes.
     */
    skip?: number
    distinct?: StageTypeScalarFieldEnum | StageTypeScalarFieldEnum[]
  }

  /**
   * StageType create
   */
  export type StageTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StageType
     */
    select?: StageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StageType
     */
    omit?: StageTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageTypeInclude<ExtArgs> | null
    /**
     * The data needed to create a StageType.
     */
    data: XOR<StageTypeCreateInput, StageTypeUncheckedCreateInput>
  }

  /**
   * StageType createMany
   */
  export type StageTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StageTypes.
     */
    data: StageTypeCreateManyInput | StageTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StageType createManyAndReturn
   */
  export type StageTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StageType
     */
    select?: StageTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StageType
     */
    omit?: StageTypeOmit<ExtArgs> | null
    /**
     * The data used to create many StageTypes.
     */
    data: StageTypeCreateManyInput | StageTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StageType update
   */
  export type StageTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StageType
     */
    select?: StageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StageType
     */
    omit?: StageTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageTypeInclude<ExtArgs> | null
    /**
     * The data needed to update a StageType.
     */
    data: XOR<StageTypeUpdateInput, StageTypeUncheckedUpdateInput>
    /**
     * Choose, which StageType to update.
     */
    where: StageTypeWhereUniqueInput
  }

  /**
   * StageType updateMany
   */
  export type StageTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StageTypes.
     */
    data: XOR<StageTypeUpdateManyMutationInput, StageTypeUncheckedUpdateManyInput>
    /**
     * Filter which StageTypes to update
     */
    where?: StageTypeWhereInput
    /**
     * Limit how many StageTypes to update.
     */
    limit?: number
  }

  /**
   * StageType updateManyAndReturn
   */
  export type StageTypeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StageType
     */
    select?: StageTypeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StageType
     */
    omit?: StageTypeOmit<ExtArgs> | null
    /**
     * The data used to update StageTypes.
     */
    data: XOR<StageTypeUpdateManyMutationInput, StageTypeUncheckedUpdateManyInput>
    /**
     * Filter which StageTypes to update
     */
    where?: StageTypeWhereInput
    /**
     * Limit how many StageTypes to update.
     */
    limit?: number
  }

  /**
   * StageType upsert
   */
  export type StageTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StageType
     */
    select?: StageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StageType
     */
    omit?: StageTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageTypeInclude<ExtArgs> | null
    /**
     * The filter to search for the StageType to update in case it exists.
     */
    where: StageTypeWhereUniqueInput
    /**
     * In case the StageType found by the `where` argument doesn't exist, create a new StageType with this data.
     */
    create: XOR<StageTypeCreateInput, StageTypeUncheckedCreateInput>
    /**
     * In case the StageType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StageTypeUpdateInput, StageTypeUncheckedUpdateInput>
  }

  /**
   * StageType delete
   */
  export type StageTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StageType
     */
    select?: StageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StageType
     */
    omit?: StageTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageTypeInclude<ExtArgs> | null
    /**
     * Filter which StageType to delete.
     */
    where: StageTypeWhereUniqueInput
  }

  /**
   * StageType deleteMany
   */
  export type StageTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StageTypes to delete
     */
    where?: StageTypeWhereInput
    /**
     * Limit how many StageTypes to delete.
     */
    limit?: number
  }

  /**
   * StageType.stages
   */
  export type StageType$stagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    where?: StageWhereInput
    orderBy?: StageOrderByWithRelationInput | StageOrderByWithRelationInput[]
    cursor?: StageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StageScalarFieldEnum | StageScalarFieldEnum[]
  }

  /**
   * StageType without action
   */
  export type StageTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StageType
     */
    select?: StageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StageType
     */
    omit?: StageTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageTypeInclude<ExtArgs> | null
  }


  /**
   * Model Client
   */

  export type AggregateClient = {
    _count: ClientCountAggregateOutputType | null
    _min: ClientMinAggregateOutputType | null
    _max: ClientMaxAggregateOutputType | null
  }

  export type ClientMinAggregateOutputType = {
    id: string | null
    regNumber: string | null
    name: string | null
    address: string | null
    phone: string | null
    email: string | null
    legal: string | null
    category: string | null
    country: string | null
    contactName: string | null
    contactRole: string | null
    contactPhone: string | null
    contactEmail: string | null
    taxNumber: string | null
    taxAddress: string | null
    taxStatus: boolean | null
    procurementName: string | null
    procurementRole: string | null
    procurementPhone: string | null
    procurementEmail: string | null
    billingAddress: string | null
    paymentName: string | null
    paymentRole: string | null
    paymentPhone: string | null
    paymentEmail: string | null
    bankName: string | null
    accountReferenceNumber: string | null
    accountOwnerName: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
  }

  export type ClientMaxAggregateOutputType = {
    id: string | null
    regNumber: string | null
    name: string | null
    address: string | null
    phone: string | null
    email: string | null
    legal: string | null
    category: string | null
    country: string | null
    contactName: string | null
    contactRole: string | null
    contactPhone: string | null
    contactEmail: string | null
    taxNumber: string | null
    taxAddress: string | null
    taxStatus: boolean | null
    procurementName: string | null
    procurementRole: string | null
    procurementPhone: string | null
    procurementEmail: string | null
    billingAddress: string | null
    paymentName: string | null
    paymentRole: string | null
    paymentPhone: string | null
    paymentEmail: string | null
    bankName: string | null
    accountReferenceNumber: string | null
    accountOwnerName: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
  }

  export type ClientCountAggregateOutputType = {
    id: number
    regNumber: number
    name: number
    address: number
    phone: number
    email: number
    legal: number
    category: number
    country: number
    contactName: number
    contactRole: number
    contactPhone: number
    contactEmail: number
    taxNumber: number
    taxAddress: number
    taxStatus: number
    procurementName: number
    procurementRole: number
    procurementPhone: number
    procurementEmail: number
    billingAddress: number
    paymentName: number
    paymentRole: number
    paymentPhone: number
    paymentEmail: number
    bankName: number
    accountReferenceNumber: number
    accountOwnerName: number
    createdAt: number
    updatedAt: number
    createdById: number
    updatedById: number
    _all: number
  }


  export type ClientMinAggregateInputType = {
    id?: true
    regNumber?: true
    name?: true
    address?: true
    phone?: true
    email?: true
    legal?: true
    category?: true
    country?: true
    contactName?: true
    contactRole?: true
    contactPhone?: true
    contactEmail?: true
    taxNumber?: true
    taxAddress?: true
    taxStatus?: true
    procurementName?: true
    procurementRole?: true
    procurementPhone?: true
    procurementEmail?: true
    billingAddress?: true
    paymentName?: true
    paymentRole?: true
    paymentPhone?: true
    paymentEmail?: true
    bankName?: true
    accountReferenceNumber?: true
    accountOwnerName?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
  }

  export type ClientMaxAggregateInputType = {
    id?: true
    regNumber?: true
    name?: true
    address?: true
    phone?: true
    email?: true
    legal?: true
    category?: true
    country?: true
    contactName?: true
    contactRole?: true
    contactPhone?: true
    contactEmail?: true
    taxNumber?: true
    taxAddress?: true
    taxStatus?: true
    procurementName?: true
    procurementRole?: true
    procurementPhone?: true
    procurementEmail?: true
    billingAddress?: true
    paymentName?: true
    paymentRole?: true
    paymentPhone?: true
    paymentEmail?: true
    bankName?: true
    accountReferenceNumber?: true
    accountOwnerName?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
  }

  export type ClientCountAggregateInputType = {
    id?: true
    regNumber?: true
    name?: true
    address?: true
    phone?: true
    email?: true
    legal?: true
    category?: true
    country?: true
    contactName?: true
    contactRole?: true
    contactPhone?: true
    contactEmail?: true
    taxNumber?: true
    taxAddress?: true
    taxStatus?: true
    procurementName?: true
    procurementRole?: true
    procurementPhone?: true
    procurementEmail?: true
    billingAddress?: true
    paymentName?: true
    paymentRole?: true
    paymentPhone?: true
    paymentEmail?: true
    bankName?: true
    accountReferenceNumber?: true
    accountOwnerName?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    _all?: true
  }

  export type ClientAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Client to aggregate.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clients
    **/
    _count?: true | ClientCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientMaxAggregateInputType
  }

  export type GetClientAggregateType<T extends ClientAggregateArgs> = {
        [P in keyof T & keyof AggregateClient]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClient[P]>
      : GetScalarType<T[P], AggregateClient[P]>
  }




  export type ClientGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientWhereInput
    orderBy?: ClientOrderByWithAggregationInput | ClientOrderByWithAggregationInput[]
    by: ClientScalarFieldEnum[] | ClientScalarFieldEnum
    having?: ClientScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientCountAggregateInputType | true
    _min?: ClientMinAggregateInputType
    _max?: ClientMaxAggregateInputType
  }

  export type ClientGroupByOutputType = {
    id: string
    regNumber: string | null
    name: string
    address: string | null
    phone: string | null
    email: string | null
    legal: string | null
    category: string | null
    country: string | null
    contactName: string | null
    contactRole: string | null
    contactPhone: string | null
    contactEmail: string | null
    taxNumber: string | null
    taxAddress: string | null
    taxStatus: boolean
    procurementName: string | null
    procurementRole: string | null
    procurementPhone: string | null
    procurementEmail: string | null
    billingAddress: string | null
    paymentName: string | null
    paymentRole: string | null
    paymentPhone: string | null
    paymentEmail: string | null
    bankName: string | null
    accountReferenceNumber: string | null
    accountOwnerName: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    _count: ClientCountAggregateOutputType | null
    _min: ClientMinAggregateOutputType | null
    _max: ClientMaxAggregateOutputType | null
  }

  type GetClientGroupByPayload<T extends ClientGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientGroupByOutputType[P]>
            : GetScalarType<T[P], ClientGroupByOutputType[P]>
        }
      >
    >


  export type ClientSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    name?: boolean
    address?: boolean
    phone?: boolean
    email?: boolean
    legal?: boolean
    category?: boolean
    country?: boolean
    contactName?: boolean
    contactRole?: boolean
    contactPhone?: boolean
    contactEmail?: boolean
    taxNumber?: boolean
    taxAddress?: boolean
    taxStatus?: boolean
    procurementName?: boolean
    procurementRole?: boolean
    procurementPhone?: boolean
    procurementEmail?: boolean
    billingAddress?: boolean
    paymentName?: boolean
    paymentRole?: boolean
    paymentPhone?: boolean
    paymentEmail?: boolean
    bankName?: boolean
    accountReferenceNumber?: boolean
    accountOwnerName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    createdBy?: boolean | Client$createdByArgs<ExtArgs>
    updatedBy?: boolean | Client$updatedByArgs<ExtArgs>
    notes?: boolean | Client$notesArgs<ExtArgs>
    leads?: boolean | Client$leadsArgs<ExtArgs>
    opportunities?: boolean | Client$opportunitiesArgs<ExtArgs>
    quotes?: boolean | Client$quotesArgs<ExtArgs>
    contracts?: boolean | Client$contractsArgs<ExtArgs>
    _count?: boolean | ClientCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["client"]>

  export type ClientSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    name?: boolean
    address?: boolean
    phone?: boolean
    email?: boolean
    legal?: boolean
    category?: boolean
    country?: boolean
    contactName?: boolean
    contactRole?: boolean
    contactPhone?: boolean
    contactEmail?: boolean
    taxNumber?: boolean
    taxAddress?: boolean
    taxStatus?: boolean
    procurementName?: boolean
    procurementRole?: boolean
    procurementPhone?: boolean
    procurementEmail?: boolean
    billingAddress?: boolean
    paymentName?: boolean
    paymentRole?: boolean
    paymentPhone?: boolean
    paymentEmail?: boolean
    bankName?: boolean
    accountReferenceNumber?: boolean
    accountOwnerName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    createdBy?: boolean | Client$createdByArgs<ExtArgs>
    updatedBy?: boolean | Client$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["client"]>

  export type ClientSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    name?: boolean
    address?: boolean
    phone?: boolean
    email?: boolean
    legal?: boolean
    category?: boolean
    country?: boolean
    contactName?: boolean
    contactRole?: boolean
    contactPhone?: boolean
    contactEmail?: boolean
    taxNumber?: boolean
    taxAddress?: boolean
    taxStatus?: boolean
    procurementName?: boolean
    procurementRole?: boolean
    procurementPhone?: boolean
    procurementEmail?: boolean
    billingAddress?: boolean
    paymentName?: boolean
    paymentRole?: boolean
    paymentPhone?: boolean
    paymentEmail?: boolean
    bankName?: boolean
    accountReferenceNumber?: boolean
    accountOwnerName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    createdBy?: boolean | Client$createdByArgs<ExtArgs>
    updatedBy?: boolean | Client$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["client"]>

  export type ClientSelectScalar = {
    id?: boolean
    regNumber?: boolean
    name?: boolean
    address?: boolean
    phone?: boolean
    email?: boolean
    legal?: boolean
    category?: boolean
    country?: boolean
    contactName?: boolean
    contactRole?: boolean
    contactPhone?: boolean
    contactEmail?: boolean
    taxNumber?: boolean
    taxAddress?: boolean
    taxStatus?: boolean
    procurementName?: boolean
    procurementRole?: boolean
    procurementPhone?: boolean
    procurementEmail?: boolean
    billingAddress?: boolean
    paymentName?: boolean
    paymentRole?: boolean
    paymentPhone?: boolean
    paymentEmail?: boolean
    bankName?: boolean
    accountReferenceNumber?: boolean
    accountOwnerName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
  }

  export type ClientOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "regNumber" | "name" | "address" | "phone" | "email" | "legal" | "category" | "country" | "contactName" | "contactRole" | "contactPhone" | "contactEmail" | "taxNumber" | "taxAddress" | "taxStatus" | "procurementName" | "procurementRole" | "procurementPhone" | "procurementEmail" | "billingAddress" | "paymentName" | "paymentRole" | "paymentPhone" | "paymentEmail" | "bankName" | "accountReferenceNumber" | "accountOwnerName" | "createdAt" | "updatedAt" | "createdById" | "updatedById", ExtArgs["result"]["client"]>
  export type ClientInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Client$createdByArgs<ExtArgs>
    updatedBy?: boolean | Client$updatedByArgs<ExtArgs>
    notes?: boolean | Client$notesArgs<ExtArgs>
    leads?: boolean | Client$leadsArgs<ExtArgs>
    opportunities?: boolean | Client$opportunitiesArgs<ExtArgs>
    quotes?: boolean | Client$quotesArgs<ExtArgs>
    contracts?: boolean | Client$contractsArgs<ExtArgs>
    _count?: boolean | ClientCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClientIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Client$createdByArgs<ExtArgs>
    updatedBy?: boolean | Client$updatedByArgs<ExtArgs>
  }
  export type ClientIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Client$createdByArgs<ExtArgs>
    updatedBy?: boolean | Client$updatedByArgs<ExtArgs>
  }

  export type $ClientPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Client"
    objects: {
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      notes: Prisma.$NotePayload<ExtArgs>[]
      leads: Prisma.$LeadPayload<ExtArgs>[]
      opportunities: Prisma.$OpportunityPayload<ExtArgs>[]
      quotes: Prisma.$QuotePayload<ExtArgs>[]
      contracts: Prisma.$ContractPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      regNumber: string | null
      name: string
      address: string | null
      phone: string | null
      email: string | null
      legal: string | null
      category: string | null
      country: string | null
      contactName: string | null
      contactRole: string | null
      contactPhone: string | null
      contactEmail: string | null
      taxNumber: string | null
      taxAddress: string | null
      taxStatus: boolean
      procurementName: string | null
      procurementRole: string | null
      procurementPhone: string | null
      procurementEmail: string | null
      billingAddress: string | null
      paymentName: string | null
      paymentRole: string | null
      paymentPhone: string | null
      paymentEmail: string | null
      bankName: string | null
      accountReferenceNumber: string | null
      accountOwnerName: string | null
      createdAt: Date | null
      updatedAt: Date | null
      createdById: string | null
      updatedById: string | null
    }, ExtArgs["result"]["client"]>
    composites: {}
  }

  type ClientGetPayload<S extends boolean | null | undefined | ClientDefaultArgs> = $Result.GetResult<Prisma.$ClientPayload, S>

  type ClientCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClientFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClientCountAggregateInputType | true
    }

  export interface ClientDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Client'], meta: { name: 'Client' } }
    /**
     * Find zero or one Client that matches the filter.
     * @param {ClientFindUniqueArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientFindUniqueArgs>(args: SelectSubset<T, ClientFindUniqueArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Client that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClientFindUniqueOrThrowArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Client that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindFirstArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientFindFirstArgs>(args?: SelectSubset<T, ClientFindFirstArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Client that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindFirstOrThrowArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clients
     * const clients = await prisma.client.findMany()
     * 
     * // Get first 10 Clients
     * const clients = await prisma.client.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clientWithIdOnly = await prisma.client.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClientFindManyArgs>(args?: SelectSubset<T, ClientFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Client.
     * @param {ClientCreateArgs} args - Arguments to create a Client.
     * @example
     * // Create one Client
     * const Client = await prisma.client.create({
     *   data: {
     *     // ... data to create a Client
     *   }
     * })
     * 
     */
    create<T extends ClientCreateArgs>(args: SelectSubset<T, ClientCreateArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clients.
     * @param {ClientCreateManyArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const client = await prisma.client.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientCreateManyArgs>(args?: SelectSubset<T, ClientCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clients and returns the data saved in the database.
     * @param {ClientCreateManyAndReturnArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const client = await prisma.client.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clients and only return the `id`
     * const clientWithIdOnly = await prisma.client.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Client.
     * @param {ClientDeleteArgs} args - Arguments to delete one Client.
     * @example
     * // Delete one Client
     * const Client = await prisma.client.delete({
     *   where: {
     *     // ... filter to delete one Client
     *   }
     * })
     * 
     */
    delete<T extends ClientDeleteArgs>(args: SelectSubset<T, ClientDeleteArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Client.
     * @param {ClientUpdateArgs} args - Arguments to update one Client.
     * @example
     * // Update one Client
     * const client = await prisma.client.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientUpdateArgs>(args: SelectSubset<T, ClientUpdateArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clients.
     * @param {ClientDeleteManyArgs} args - Arguments to filter Clients to delete.
     * @example
     * // Delete a few Clients
     * const { count } = await prisma.client.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientDeleteManyArgs>(args?: SelectSubset<T, ClientDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clients
     * const client = await prisma.client.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientUpdateManyArgs>(args: SelectSubset<T, ClientUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients and returns the data updated in the database.
     * @param {ClientUpdateManyAndReturnArgs} args - Arguments to update many Clients.
     * @example
     * // Update many Clients
     * const client = await prisma.client.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Clients and only return the `id`
     * const clientWithIdOnly = await prisma.client.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClientUpdateManyAndReturnArgs>(args: SelectSubset<T, ClientUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Client.
     * @param {ClientUpsertArgs} args - Arguments to update or create a Client.
     * @example
     * // Update or create a Client
     * const client = await prisma.client.upsert({
     *   create: {
     *     // ... data to create a Client
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Client we want to update
     *   }
     * })
     */
    upsert<T extends ClientUpsertArgs>(args: SelectSubset<T, ClientUpsertArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCountArgs} args - Arguments to filter Clients to count.
     * @example
     * // Count the number of Clients
     * const count = await prisma.client.count({
     *   where: {
     *     // ... the filter for the Clients we want to count
     *   }
     * })
    **/
    count<T extends ClientCountArgs>(
      args?: Subset<T, ClientCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientAggregateArgs>(args: Subset<T, ClientAggregateArgs>): Prisma.PrismaPromise<GetClientAggregateType<T>>

    /**
     * Group by Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientGroupByArgs['orderBy'] }
        : { orderBy?: ClientGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Client model
   */
  readonly fields: ClientFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Client.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createdBy<T extends Client$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Client$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Client$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Client$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    notes<T extends Client$notesArgs<ExtArgs> = {}>(args?: Subset<T, Client$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    leads<T extends Client$leadsArgs<ExtArgs> = {}>(args?: Subset<T, Client$leadsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    opportunities<T extends Client$opportunitiesArgs<ExtArgs> = {}>(args?: Subset<T, Client$opportunitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    quotes<T extends Client$quotesArgs<ExtArgs> = {}>(args?: Subset<T, Client$quotesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    contracts<T extends Client$contractsArgs<ExtArgs> = {}>(args?: Subset<T, Client$contractsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Client model
   */
  interface ClientFieldRefs {
    readonly id: FieldRef<"Client", 'String'>
    readonly regNumber: FieldRef<"Client", 'String'>
    readonly name: FieldRef<"Client", 'String'>
    readonly address: FieldRef<"Client", 'String'>
    readonly phone: FieldRef<"Client", 'String'>
    readonly email: FieldRef<"Client", 'String'>
    readonly legal: FieldRef<"Client", 'String'>
    readonly category: FieldRef<"Client", 'String'>
    readonly country: FieldRef<"Client", 'String'>
    readonly contactName: FieldRef<"Client", 'String'>
    readonly contactRole: FieldRef<"Client", 'String'>
    readonly contactPhone: FieldRef<"Client", 'String'>
    readonly contactEmail: FieldRef<"Client", 'String'>
    readonly taxNumber: FieldRef<"Client", 'String'>
    readonly taxAddress: FieldRef<"Client", 'String'>
    readonly taxStatus: FieldRef<"Client", 'Boolean'>
    readonly procurementName: FieldRef<"Client", 'String'>
    readonly procurementRole: FieldRef<"Client", 'String'>
    readonly procurementPhone: FieldRef<"Client", 'String'>
    readonly procurementEmail: FieldRef<"Client", 'String'>
    readonly billingAddress: FieldRef<"Client", 'String'>
    readonly paymentName: FieldRef<"Client", 'String'>
    readonly paymentRole: FieldRef<"Client", 'String'>
    readonly paymentPhone: FieldRef<"Client", 'String'>
    readonly paymentEmail: FieldRef<"Client", 'String'>
    readonly bankName: FieldRef<"Client", 'String'>
    readonly accountReferenceNumber: FieldRef<"Client", 'String'>
    readonly accountOwnerName: FieldRef<"Client", 'String'>
    readonly createdAt: FieldRef<"Client", 'DateTime'>
    readonly updatedAt: FieldRef<"Client", 'DateTime'>
    readonly createdById: FieldRef<"Client", 'String'>
    readonly updatedById: FieldRef<"Client", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Client findUnique
   */
  export type ClientFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client findUniqueOrThrow
   */
  export type ClientFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client findFirst
   */
  export type ClientFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clients.
     */
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client findFirstOrThrow
   */
  export type ClientFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clients.
     */
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client findMany
   */
  export type ClientFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Clients to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client create
   */
  export type ClientCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The data needed to create a Client.
     */
    data: XOR<ClientCreateInput, ClientUncheckedCreateInput>
  }

  /**
   * Client createMany
   */
  export type ClientCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clients.
     */
    data: ClientCreateManyInput | ClientCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Client createManyAndReturn
   */
  export type ClientCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * The data used to create many Clients.
     */
    data: ClientCreateManyInput | ClientCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Client update
   */
  export type ClientUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The data needed to update a Client.
     */
    data: XOR<ClientUpdateInput, ClientUncheckedUpdateInput>
    /**
     * Choose, which Client to update.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client updateMany
   */
  export type ClientUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clients.
     */
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyInput>
    /**
     * Filter which Clients to update
     */
    where?: ClientWhereInput
    /**
     * Limit how many Clients to update.
     */
    limit?: number
  }

  /**
   * Client updateManyAndReturn
   */
  export type ClientUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * The data used to update Clients.
     */
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyInput>
    /**
     * Filter which Clients to update
     */
    where?: ClientWhereInput
    /**
     * Limit how many Clients to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Client upsert
   */
  export type ClientUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The filter to search for the Client to update in case it exists.
     */
    where: ClientWhereUniqueInput
    /**
     * In case the Client found by the `where` argument doesn't exist, create a new Client with this data.
     */
    create: XOR<ClientCreateInput, ClientUncheckedCreateInput>
    /**
     * In case the Client was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientUpdateInput, ClientUncheckedUpdateInput>
  }

  /**
   * Client delete
   */
  export type ClientDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter which Client to delete.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client deleteMany
   */
  export type ClientDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clients to delete
     */
    where?: ClientWhereInput
    /**
     * Limit how many Clients to delete.
     */
    limit?: number
  }

  /**
   * Client.createdBy
   */
  export type Client$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Client.updatedBy
   */
  export type Client$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Client.notes
   */
  export type Client$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Client.leads
   */
  export type Client$leadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    where?: LeadWhereInput
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    cursor?: LeadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LeadScalarFieldEnum | LeadScalarFieldEnum[]
  }

  /**
   * Client.opportunities
   */
  export type Client$opportunitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityInclude<ExtArgs> | null
    where?: OpportunityWhereInput
    orderBy?: OpportunityOrderByWithRelationInput | OpportunityOrderByWithRelationInput[]
    cursor?: OpportunityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OpportunityScalarFieldEnum | OpportunityScalarFieldEnum[]
  }

  /**
   * Client.quotes
   */
  export type Client$quotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteInclude<ExtArgs> | null
    where?: QuoteWhereInput
    orderBy?: QuoteOrderByWithRelationInput | QuoteOrderByWithRelationInput[]
    cursor?: QuoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QuoteScalarFieldEnum | QuoteScalarFieldEnum[]
  }

  /**
   * Client.contracts
   */
  export type Client$contractsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractInclude<ExtArgs> | null
    where?: ContractWhereInput
    orderBy?: ContractOrderByWithRelationInput | ContractOrderByWithRelationInput[]
    cursor?: ContractWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContractScalarFieldEnum | ContractScalarFieldEnum[]
  }

  /**
   * Client without action
   */
  export type ClientDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
  }


  /**
   * Model Vendor
   */

  export type AggregateVendor = {
    _count: VendorCountAggregateOutputType | null
    _min: VendorMinAggregateOutputType | null
    _max: VendorMaxAggregateOutputType | null
  }

  export type VendorMinAggregateOutputType = {
    id: string | null
    regNumber: string | null
    name: string | null
    address: string | null
    phone: string | null
    email: string | null
    city: string | null
    postalCode: string | null
    legal: string | null
    vendorCategory: string | null
    contactName: string | null
    contactRole: string | null
    contactPhone: string | null
    contactEmail: string | null
    taxNumber: string | null
    taxStatus: boolean | null
    siupNumber: string | null
    nibNumber: string | null
    pkpNumber: string | null
    productType: string | null
    description: string | null
    bankName: string | null
    accountReferenceNumber: string | null
    accountOwnerName: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
  }

  export type VendorMaxAggregateOutputType = {
    id: string | null
    regNumber: string | null
    name: string | null
    address: string | null
    phone: string | null
    email: string | null
    city: string | null
    postalCode: string | null
    legal: string | null
    vendorCategory: string | null
    contactName: string | null
    contactRole: string | null
    contactPhone: string | null
    contactEmail: string | null
    taxNumber: string | null
    taxStatus: boolean | null
    siupNumber: string | null
    nibNumber: string | null
    pkpNumber: string | null
    productType: string | null
    description: string | null
    bankName: string | null
    accountReferenceNumber: string | null
    accountOwnerName: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
  }

  export type VendorCountAggregateOutputType = {
    id: number
    regNumber: number
    name: number
    address: number
    phone: number
    email: number
    city: number
    postalCode: number
    legal: number
    vendorCategory: number
    contactName: number
    contactRole: number
    contactPhone: number
    contactEmail: number
    taxNumber: number
    taxStatus: number
    siupNumber: number
    nibNumber: number
    pkpNumber: number
    productType: number
    description: number
    bankName: number
    accountReferenceNumber: number
    accountOwnerName: number
    createdAt: number
    updatedAt: number
    createdById: number
    updatedById: number
    _all: number
  }


  export type VendorMinAggregateInputType = {
    id?: true
    regNumber?: true
    name?: true
    address?: true
    phone?: true
    email?: true
    city?: true
    postalCode?: true
    legal?: true
    vendorCategory?: true
    contactName?: true
    contactRole?: true
    contactPhone?: true
    contactEmail?: true
    taxNumber?: true
    taxStatus?: true
    siupNumber?: true
    nibNumber?: true
    pkpNumber?: true
    productType?: true
    description?: true
    bankName?: true
    accountReferenceNumber?: true
    accountOwnerName?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
  }

  export type VendorMaxAggregateInputType = {
    id?: true
    regNumber?: true
    name?: true
    address?: true
    phone?: true
    email?: true
    city?: true
    postalCode?: true
    legal?: true
    vendorCategory?: true
    contactName?: true
    contactRole?: true
    contactPhone?: true
    contactEmail?: true
    taxNumber?: true
    taxStatus?: true
    siupNumber?: true
    nibNumber?: true
    pkpNumber?: true
    productType?: true
    description?: true
    bankName?: true
    accountReferenceNumber?: true
    accountOwnerName?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
  }

  export type VendorCountAggregateInputType = {
    id?: true
    regNumber?: true
    name?: true
    address?: true
    phone?: true
    email?: true
    city?: true
    postalCode?: true
    legal?: true
    vendorCategory?: true
    contactName?: true
    contactRole?: true
    contactPhone?: true
    contactEmail?: true
    taxNumber?: true
    taxStatus?: true
    siupNumber?: true
    nibNumber?: true
    pkpNumber?: true
    productType?: true
    description?: true
    bankName?: true
    accountReferenceNumber?: true
    accountOwnerName?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    _all?: true
  }

  export type VendorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vendor to aggregate.
     */
    where?: VendorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendors to fetch.
     */
    orderBy?: VendorOrderByWithRelationInput | VendorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VendorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Vendors
    **/
    _count?: true | VendorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VendorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VendorMaxAggregateInputType
  }

  export type GetVendorAggregateType<T extends VendorAggregateArgs> = {
        [P in keyof T & keyof AggregateVendor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVendor[P]>
      : GetScalarType<T[P], AggregateVendor[P]>
  }




  export type VendorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VendorWhereInput
    orderBy?: VendorOrderByWithAggregationInput | VendorOrderByWithAggregationInput[]
    by: VendorScalarFieldEnum[] | VendorScalarFieldEnum
    having?: VendorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VendorCountAggregateInputType | true
    _min?: VendorMinAggregateInputType
    _max?: VendorMaxAggregateInputType
  }

  export type VendorGroupByOutputType = {
    id: string
    regNumber: string | null
    name: string
    address: string | null
    phone: string | null
    email: string | null
    city: string | null
    postalCode: string | null
    legal: string | null
    vendorCategory: string | null
    contactName: string | null
    contactRole: string | null
    contactPhone: string | null
    contactEmail: string | null
    taxNumber: string | null
    taxStatus: boolean
    siupNumber: string | null
    nibNumber: string | null
    pkpNumber: string | null
    productType: string | null
    description: string | null
    bankName: string | null
    accountReferenceNumber: string | null
    accountOwnerName: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    _count: VendorCountAggregateOutputType | null
    _min: VendorMinAggregateOutputType | null
    _max: VendorMaxAggregateOutputType | null
  }

  type GetVendorGroupByPayload<T extends VendorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VendorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VendorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VendorGroupByOutputType[P]>
            : GetScalarType<T[P], VendorGroupByOutputType[P]>
        }
      >
    >


  export type VendorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    name?: boolean
    address?: boolean
    phone?: boolean
    email?: boolean
    city?: boolean
    postalCode?: boolean
    legal?: boolean
    vendorCategory?: boolean
    contactName?: boolean
    contactRole?: boolean
    contactPhone?: boolean
    contactEmail?: boolean
    taxNumber?: boolean
    taxStatus?: boolean
    siupNumber?: boolean
    nibNumber?: boolean
    pkpNumber?: boolean
    productType?: boolean
    description?: boolean
    bankName?: boolean
    accountReferenceNumber?: boolean
    accountOwnerName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    createdBy?: boolean | Vendor$createdByArgs<ExtArgs>
    updatedBy?: boolean | Vendor$updatedByArgs<ExtArgs>
    notes?: boolean | Vendor$notesArgs<ExtArgs>
    _count?: boolean | VendorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vendor"]>

  export type VendorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    name?: boolean
    address?: boolean
    phone?: boolean
    email?: boolean
    city?: boolean
    postalCode?: boolean
    legal?: boolean
    vendorCategory?: boolean
    contactName?: boolean
    contactRole?: boolean
    contactPhone?: boolean
    contactEmail?: boolean
    taxNumber?: boolean
    taxStatus?: boolean
    siupNumber?: boolean
    nibNumber?: boolean
    pkpNumber?: boolean
    productType?: boolean
    description?: boolean
    bankName?: boolean
    accountReferenceNumber?: boolean
    accountOwnerName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    createdBy?: boolean | Vendor$createdByArgs<ExtArgs>
    updatedBy?: boolean | Vendor$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["vendor"]>

  export type VendorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    name?: boolean
    address?: boolean
    phone?: boolean
    email?: boolean
    city?: boolean
    postalCode?: boolean
    legal?: boolean
    vendorCategory?: boolean
    contactName?: boolean
    contactRole?: boolean
    contactPhone?: boolean
    contactEmail?: boolean
    taxNumber?: boolean
    taxStatus?: boolean
    siupNumber?: boolean
    nibNumber?: boolean
    pkpNumber?: boolean
    productType?: boolean
    description?: boolean
    bankName?: boolean
    accountReferenceNumber?: boolean
    accountOwnerName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    createdBy?: boolean | Vendor$createdByArgs<ExtArgs>
    updatedBy?: boolean | Vendor$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["vendor"]>

  export type VendorSelectScalar = {
    id?: boolean
    regNumber?: boolean
    name?: boolean
    address?: boolean
    phone?: boolean
    email?: boolean
    city?: boolean
    postalCode?: boolean
    legal?: boolean
    vendorCategory?: boolean
    contactName?: boolean
    contactRole?: boolean
    contactPhone?: boolean
    contactEmail?: boolean
    taxNumber?: boolean
    taxStatus?: boolean
    siupNumber?: boolean
    nibNumber?: boolean
    pkpNumber?: boolean
    productType?: boolean
    description?: boolean
    bankName?: boolean
    accountReferenceNumber?: boolean
    accountOwnerName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
  }

  export type VendorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "regNumber" | "name" | "address" | "phone" | "email" | "city" | "postalCode" | "legal" | "vendorCategory" | "contactName" | "contactRole" | "contactPhone" | "contactEmail" | "taxNumber" | "taxStatus" | "siupNumber" | "nibNumber" | "pkpNumber" | "productType" | "description" | "bankName" | "accountReferenceNumber" | "accountOwnerName" | "createdAt" | "updatedAt" | "createdById" | "updatedById", ExtArgs["result"]["vendor"]>
  export type VendorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Vendor$createdByArgs<ExtArgs>
    updatedBy?: boolean | Vendor$updatedByArgs<ExtArgs>
    notes?: boolean | Vendor$notesArgs<ExtArgs>
    _count?: boolean | VendorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VendorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Vendor$createdByArgs<ExtArgs>
    updatedBy?: boolean | Vendor$updatedByArgs<ExtArgs>
  }
  export type VendorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Vendor$createdByArgs<ExtArgs>
    updatedBy?: boolean | Vendor$updatedByArgs<ExtArgs>
  }

  export type $VendorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Vendor"
    objects: {
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      notes: Prisma.$NotePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      regNumber: string | null
      name: string
      address: string | null
      phone: string | null
      email: string | null
      city: string | null
      postalCode: string | null
      legal: string | null
      vendorCategory: string | null
      contactName: string | null
      contactRole: string | null
      contactPhone: string | null
      contactEmail: string | null
      taxNumber: string | null
      taxStatus: boolean
      siupNumber: string | null
      nibNumber: string | null
      pkpNumber: string | null
      productType: string | null
      description: string | null
      bankName: string | null
      accountReferenceNumber: string | null
      accountOwnerName: string | null
      createdAt: Date | null
      updatedAt: Date | null
      createdById: string | null
      updatedById: string | null
    }, ExtArgs["result"]["vendor"]>
    composites: {}
  }

  type VendorGetPayload<S extends boolean | null | undefined | VendorDefaultArgs> = $Result.GetResult<Prisma.$VendorPayload, S>

  type VendorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VendorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VendorCountAggregateInputType | true
    }

  export interface VendorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Vendor'], meta: { name: 'Vendor' } }
    /**
     * Find zero or one Vendor that matches the filter.
     * @param {VendorFindUniqueArgs} args - Arguments to find a Vendor
     * @example
     * // Get one Vendor
     * const vendor = await prisma.vendor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VendorFindUniqueArgs>(args: SelectSubset<T, VendorFindUniqueArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Vendor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VendorFindUniqueOrThrowArgs} args - Arguments to find a Vendor
     * @example
     * // Get one Vendor
     * const vendor = await prisma.vendor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VendorFindUniqueOrThrowArgs>(args: SelectSubset<T, VendorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vendor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendorFindFirstArgs} args - Arguments to find a Vendor
     * @example
     * // Get one Vendor
     * const vendor = await prisma.vendor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VendorFindFirstArgs>(args?: SelectSubset<T, VendorFindFirstArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vendor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendorFindFirstOrThrowArgs} args - Arguments to find a Vendor
     * @example
     * // Get one Vendor
     * const vendor = await prisma.vendor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VendorFindFirstOrThrowArgs>(args?: SelectSubset<T, VendorFindFirstOrThrowArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Vendors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vendors
     * const vendors = await prisma.vendor.findMany()
     * 
     * // Get first 10 Vendors
     * const vendors = await prisma.vendor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const vendorWithIdOnly = await prisma.vendor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VendorFindManyArgs>(args?: SelectSubset<T, VendorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Vendor.
     * @param {VendorCreateArgs} args - Arguments to create a Vendor.
     * @example
     * // Create one Vendor
     * const Vendor = await prisma.vendor.create({
     *   data: {
     *     // ... data to create a Vendor
     *   }
     * })
     * 
     */
    create<T extends VendorCreateArgs>(args: SelectSubset<T, VendorCreateArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Vendors.
     * @param {VendorCreateManyArgs} args - Arguments to create many Vendors.
     * @example
     * // Create many Vendors
     * const vendor = await prisma.vendor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VendorCreateManyArgs>(args?: SelectSubset<T, VendorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Vendors and returns the data saved in the database.
     * @param {VendorCreateManyAndReturnArgs} args - Arguments to create many Vendors.
     * @example
     * // Create many Vendors
     * const vendor = await prisma.vendor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Vendors and only return the `id`
     * const vendorWithIdOnly = await prisma.vendor.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VendorCreateManyAndReturnArgs>(args?: SelectSubset<T, VendorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Vendor.
     * @param {VendorDeleteArgs} args - Arguments to delete one Vendor.
     * @example
     * // Delete one Vendor
     * const Vendor = await prisma.vendor.delete({
     *   where: {
     *     // ... filter to delete one Vendor
     *   }
     * })
     * 
     */
    delete<T extends VendorDeleteArgs>(args: SelectSubset<T, VendorDeleteArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Vendor.
     * @param {VendorUpdateArgs} args - Arguments to update one Vendor.
     * @example
     * // Update one Vendor
     * const vendor = await prisma.vendor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VendorUpdateArgs>(args: SelectSubset<T, VendorUpdateArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Vendors.
     * @param {VendorDeleteManyArgs} args - Arguments to filter Vendors to delete.
     * @example
     * // Delete a few Vendors
     * const { count } = await prisma.vendor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VendorDeleteManyArgs>(args?: SelectSubset<T, VendorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vendors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vendors
     * const vendor = await prisma.vendor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VendorUpdateManyArgs>(args: SelectSubset<T, VendorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vendors and returns the data updated in the database.
     * @param {VendorUpdateManyAndReturnArgs} args - Arguments to update many Vendors.
     * @example
     * // Update many Vendors
     * const vendor = await prisma.vendor.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Vendors and only return the `id`
     * const vendorWithIdOnly = await prisma.vendor.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VendorUpdateManyAndReturnArgs>(args: SelectSubset<T, VendorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Vendor.
     * @param {VendorUpsertArgs} args - Arguments to update or create a Vendor.
     * @example
     * // Update or create a Vendor
     * const vendor = await prisma.vendor.upsert({
     *   create: {
     *     // ... data to create a Vendor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vendor we want to update
     *   }
     * })
     */
    upsert<T extends VendorUpsertArgs>(args: SelectSubset<T, VendorUpsertArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Vendors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendorCountArgs} args - Arguments to filter Vendors to count.
     * @example
     * // Count the number of Vendors
     * const count = await prisma.vendor.count({
     *   where: {
     *     // ... the filter for the Vendors we want to count
     *   }
     * })
    **/
    count<T extends VendorCountArgs>(
      args?: Subset<T, VendorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VendorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vendor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VendorAggregateArgs>(args: Subset<T, VendorAggregateArgs>): Prisma.PrismaPromise<GetVendorAggregateType<T>>

    /**
     * Group by Vendor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VendorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VendorGroupByArgs['orderBy'] }
        : { orderBy?: VendorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VendorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVendorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Vendor model
   */
  readonly fields: VendorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Vendor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VendorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createdBy<T extends Vendor$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Vendor$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Vendor$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Vendor$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    notes<T extends Vendor$notesArgs<ExtArgs> = {}>(args?: Subset<T, Vendor$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Vendor model
   */
  interface VendorFieldRefs {
    readonly id: FieldRef<"Vendor", 'String'>
    readonly regNumber: FieldRef<"Vendor", 'String'>
    readonly name: FieldRef<"Vendor", 'String'>
    readonly address: FieldRef<"Vendor", 'String'>
    readonly phone: FieldRef<"Vendor", 'String'>
    readonly email: FieldRef<"Vendor", 'String'>
    readonly city: FieldRef<"Vendor", 'String'>
    readonly postalCode: FieldRef<"Vendor", 'String'>
    readonly legal: FieldRef<"Vendor", 'String'>
    readonly vendorCategory: FieldRef<"Vendor", 'String'>
    readonly contactName: FieldRef<"Vendor", 'String'>
    readonly contactRole: FieldRef<"Vendor", 'String'>
    readonly contactPhone: FieldRef<"Vendor", 'String'>
    readonly contactEmail: FieldRef<"Vendor", 'String'>
    readonly taxNumber: FieldRef<"Vendor", 'String'>
    readonly taxStatus: FieldRef<"Vendor", 'Boolean'>
    readonly siupNumber: FieldRef<"Vendor", 'String'>
    readonly nibNumber: FieldRef<"Vendor", 'String'>
    readonly pkpNumber: FieldRef<"Vendor", 'String'>
    readonly productType: FieldRef<"Vendor", 'String'>
    readonly description: FieldRef<"Vendor", 'String'>
    readonly bankName: FieldRef<"Vendor", 'String'>
    readonly accountReferenceNumber: FieldRef<"Vendor", 'String'>
    readonly accountOwnerName: FieldRef<"Vendor", 'String'>
    readonly createdAt: FieldRef<"Vendor", 'DateTime'>
    readonly updatedAt: FieldRef<"Vendor", 'DateTime'>
    readonly createdById: FieldRef<"Vendor", 'String'>
    readonly updatedById: FieldRef<"Vendor", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Vendor findUnique
   */
  export type VendorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendor
     */
    omit?: VendorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * Filter, which Vendor to fetch.
     */
    where: VendorWhereUniqueInput
  }

  /**
   * Vendor findUniqueOrThrow
   */
  export type VendorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendor
     */
    omit?: VendorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * Filter, which Vendor to fetch.
     */
    where: VendorWhereUniqueInput
  }

  /**
   * Vendor findFirst
   */
  export type VendorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendor
     */
    omit?: VendorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * Filter, which Vendor to fetch.
     */
    where?: VendorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendors to fetch.
     */
    orderBy?: VendorOrderByWithRelationInput | VendorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vendors.
     */
    cursor?: VendorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vendors.
     */
    distinct?: VendorScalarFieldEnum | VendorScalarFieldEnum[]
  }

  /**
   * Vendor findFirstOrThrow
   */
  export type VendorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendor
     */
    omit?: VendorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * Filter, which Vendor to fetch.
     */
    where?: VendorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendors to fetch.
     */
    orderBy?: VendorOrderByWithRelationInput | VendorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vendors.
     */
    cursor?: VendorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vendors.
     */
    distinct?: VendorScalarFieldEnum | VendorScalarFieldEnum[]
  }

  /**
   * Vendor findMany
   */
  export type VendorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendor
     */
    omit?: VendorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * Filter, which Vendors to fetch.
     */
    where?: VendorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendors to fetch.
     */
    orderBy?: VendorOrderByWithRelationInput | VendorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Vendors.
     */
    cursor?: VendorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendors.
     */
    skip?: number
    distinct?: VendorScalarFieldEnum | VendorScalarFieldEnum[]
  }

  /**
   * Vendor create
   */
  export type VendorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendor
     */
    omit?: VendorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * The data needed to create a Vendor.
     */
    data: XOR<VendorCreateInput, VendorUncheckedCreateInput>
  }

  /**
   * Vendor createMany
   */
  export type VendorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Vendors.
     */
    data: VendorCreateManyInput | VendorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Vendor createManyAndReturn
   */
  export type VendorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Vendor
     */
    omit?: VendorOmit<ExtArgs> | null
    /**
     * The data used to create many Vendors.
     */
    data: VendorCreateManyInput | VendorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Vendor update
   */
  export type VendorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendor
     */
    omit?: VendorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * The data needed to update a Vendor.
     */
    data: XOR<VendorUpdateInput, VendorUncheckedUpdateInput>
    /**
     * Choose, which Vendor to update.
     */
    where: VendorWhereUniqueInput
  }

  /**
   * Vendor updateMany
   */
  export type VendorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Vendors.
     */
    data: XOR<VendorUpdateManyMutationInput, VendorUncheckedUpdateManyInput>
    /**
     * Filter which Vendors to update
     */
    where?: VendorWhereInput
    /**
     * Limit how many Vendors to update.
     */
    limit?: number
  }

  /**
   * Vendor updateManyAndReturn
   */
  export type VendorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Vendor
     */
    omit?: VendorOmit<ExtArgs> | null
    /**
     * The data used to update Vendors.
     */
    data: XOR<VendorUpdateManyMutationInput, VendorUncheckedUpdateManyInput>
    /**
     * Filter which Vendors to update
     */
    where?: VendorWhereInput
    /**
     * Limit how many Vendors to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Vendor upsert
   */
  export type VendorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendor
     */
    omit?: VendorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * The filter to search for the Vendor to update in case it exists.
     */
    where: VendorWhereUniqueInput
    /**
     * In case the Vendor found by the `where` argument doesn't exist, create a new Vendor with this data.
     */
    create: XOR<VendorCreateInput, VendorUncheckedCreateInput>
    /**
     * In case the Vendor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VendorUpdateInput, VendorUncheckedUpdateInput>
  }

  /**
   * Vendor delete
   */
  export type VendorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendor
     */
    omit?: VendorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * Filter which Vendor to delete.
     */
    where: VendorWhereUniqueInput
  }

  /**
   * Vendor deleteMany
   */
  export type VendorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vendors to delete
     */
    where?: VendorWhereInput
    /**
     * Limit how many Vendors to delete.
     */
    limit?: number
  }

  /**
   * Vendor.createdBy
   */
  export type Vendor$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Vendor.updatedBy
   */
  export type Vendor$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Vendor.notes
   */
  export type Vendor$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Vendor without action
   */
  export type VendorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendor
     */
    omit?: VendorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
  }


  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductMinAggregateOutputType = {
    id: string | null
    regNumber: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
  }

  export type ProductMaxAggregateOutputType = {
    id: string | null
    regNumber: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    regNumber: number
    name: number
    description: number
    createdAt: number
    updatedAt: number
    createdById: number
    updatedById: number
    _all: number
  }


  export type ProductMinAggregateInputType = {
    id?: true
    regNumber?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    regNumber?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    regNumber?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: string
    regNumber: string | null
    name: string
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    _count: ProductCountAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    createdBy?: boolean | Product$createdByArgs<ExtArgs>
    updatedBy?: boolean | Product$updatedByArgs<ExtArgs>
    leads?: boolean | Product$leadsArgs<ExtArgs>
    opportunities?: boolean | Product$opportunitiesArgs<ExtArgs>
    quotes?: boolean | Product$quotesArgs<ExtArgs>
    contracts?: boolean | Product$contractsArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    createdBy?: boolean | Product$createdByArgs<ExtArgs>
    updatedBy?: boolean | Product$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    createdBy?: boolean | Product$createdByArgs<ExtArgs>
    updatedBy?: boolean | Product$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectScalar = {
    id?: boolean
    regNumber?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
  }

  export type ProductOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "regNumber" | "name" | "description" | "createdAt" | "updatedAt" | "createdById" | "updatedById", ExtArgs["result"]["product"]>
  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Product$createdByArgs<ExtArgs>
    updatedBy?: boolean | Product$updatedByArgs<ExtArgs>
    leads?: boolean | Product$leadsArgs<ExtArgs>
    opportunities?: boolean | Product$opportunitiesArgs<ExtArgs>
    quotes?: boolean | Product$quotesArgs<ExtArgs>
    contracts?: boolean | Product$contractsArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Product$createdByArgs<ExtArgs>
    updatedBy?: boolean | Product$updatedByArgs<ExtArgs>
  }
  export type ProductIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Product$createdByArgs<ExtArgs>
    updatedBy?: boolean | Product$updatedByArgs<ExtArgs>
  }

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      leads: Prisma.$LeadPayload<ExtArgs>[]
      opportunities: Prisma.$OpportunityPayload<ExtArgs>[]
      quotes: Prisma.$QuotePayload<ExtArgs>[]
      contracts: Prisma.$ContractPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      regNumber: string | null
      name: string
      description: string | null
      createdAt: Date | null
      updatedAt: Date | null
      createdById: string | null
      updatedById: string | null
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {ProductCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productWithIdOnly = await prisma.product.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products and returns the data updated in the database.
     * @param {ProductUpdateManyAndReturnArgs} args - Arguments to update many Products.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Products and only return the `id`
     * const productWithIdOnly = await prisma.product.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createdBy<T extends Product$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Product$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Product$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Product$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    leads<T extends Product$leadsArgs<ExtArgs> = {}>(args?: Subset<T, Product$leadsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    opportunities<T extends Product$opportunitiesArgs<ExtArgs> = {}>(args?: Subset<T, Product$opportunitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpportunityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    quotes<T extends Product$quotesArgs<ExtArgs> = {}>(args?: Subset<T, Product$quotesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    contracts<T extends Product$contractsArgs<ExtArgs> = {}>(args?: Subset<T, Product$contractsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */
  interface ProductFieldRefs {
    readonly id: FieldRef<"Product", 'String'>
    readonly regNumber: FieldRef<"Product", 'String'>
    readonly name: FieldRef<"Product", 'String'>
    readonly description: FieldRef<"Product", 'String'>
    readonly createdAt: FieldRef<"Product", 'DateTime'>
    readonly updatedAt: FieldRef<"Product", 'DateTime'>
    readonly createdById: FieldRef<"Product", 'String'>
    readonly updatedById: FieldRef<"Product", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product createManyAndReturn
   */
  export type ProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
  }

  /**
   * Product updateManyAndReturn
   */
  export type ProductUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to delete.
     */
    limit?: number
  }

  /**
   * Product.createdBy
   */
  export type Product$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Product.updatedBy
   */
  export type Product$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Product.leads
   */
  export type Product$leadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Lead
     */
    omit?: LeadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    where?: LeadWhereInput
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    cursor?: LeadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LeadScalarFieldEnum | LeadScalarFieldEnum[]
  }

  /**
   * Product.opportunities
   */
  export type Product$opportunitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opportunity
     */
    select?: OpportunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opportunity
     */
    omit?: OpportunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpportunityInclude<ExtArgs> | null
    where?: OpportunityWhereInput
    orderBy?: OpportunityOrderByWithRelationInput | OpportunityOrderByWithRelationInput[]
    cursor?: OpportunityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OpportunityScalarFieldEnum | OpportunityScalarFieldEnum[]
  }

  /**
   * Product.quotes
   */
  export type Product$quotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quote
     */
    select?: QuoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Quote
     */
    omit?: QuoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuoteInclude<ExtArgs> | null
    where?: QuoteWhereInput
    orderBy?: QuoteOrderByWithRelationInput | QuoteOrderByWithRelationInput[]
    cursor?: QuoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QuoteScalarFieldEnum | QuoteScalarFieldEnum[]
  }

  /**
   * Product.contracts
   */
  export type Product$contractsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractInclude<ExtArgs> | null
    where?: ContractWhereInput
    orderBy?: ContractOrderByWithRelationInput | ContractOrderByWithRelationInput[]
    cursor?: ContractWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContractScalarFieldEnum | ContractScalarFieldEnum[]
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Model Category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryMinAggregateOutputType = {
    id: string | null
    key: string | null
    value: string | null
    label: string | null
  }

  export type CategoryMaxAggregateOutputType = {
    id: string | null
    key: string | null
    value: string | null
    label: string | null
  }

  export type CategoryCountAggregateOutputType = {
    id: number
    key: number
    value: number
    label: number
    _all: number
  }


  export type CategoryMinAggregateInputType = {
    id?: true
    key?: true
    value?: true
    label?: true
  }

  export type CategoryMaxAggregateInputType = {
    id?: true
    key?: true
    value?: true
    label?: true
  }

  export type CategoryCountAggregateInputType = {
    id?: true
    key?: true
    value?: true
    label?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Category to aggregate.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type CategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithAggregationInput | CategoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: CategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    id: string
    key: string
    value: string
    label: string
    _count: CategoryCountAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends CategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type CategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    key?: boolean
    value?: boolean
    label?: boolean
  }, ExtArgs["result"]["category"]>

  export type CategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    key?: boolean
    value?: boolean
    label?: boolean
  }, ExtArgs["result"]["category"]>

  export type CategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    key?: boolean
    value?: boolean
    label?: boolean
  }, ExtArgs["result"]["category"]>

  export type CategorySelectScalar = {
    id?: boolean
    key?: boolean
    value?: boolean
    label?: boolean
  }

  export type CategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "key" | "value" | "label", ExtArgs["result"]["category"]>

  export type $CategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Category"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      key: string
      value: string
      label: string
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type CategoryGetPayload<S extends boolean | null | undefined | CategoryDefaultArgs> = $Result.GetResult<Prisma.$CategoryPayload, S>

  type CategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface CategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Category'], meta: { name: 'Category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {CategoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryFindUniqueArgs>(args: SelectSubset<T, CategoryFindUniqueArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryFindFirstArgs>(args?: SelectSubset<T, CategoryFindFirstArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryWithIdOnly = await prisma.category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryFindManyArgs>(args?: SelectSubset<T, CategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Category.
     * @param {CategoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends CategoryCreateArgs>(args: SelectSubset<T, CategoryCreateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories.
     * @param {CategoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryCreateManyArgs>(args?: SelectSubset<T, CategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categories and returns the data saved in the database.
     * @param {CategoryCreateManyAndReturnArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Category.
     * @param {CategoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends CategoryDeleteArgs>(args: SelectSubset<T, CategoryDeleteArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Category.
     * @param {CategoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryUpdateArgs>(args: SelectSubset<T, CategoryUpdateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories.
     * @param {CategoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryDeleteManyArgs>(args?: SelectSubset<T, CategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryUpdateManyArgs>(args: SelectSubset<T, CategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories and returns the data updated in the database.
     * @param {CategoryUpdateManyAndReturnArgs} args - Arguments to update many Categories.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Category.
     * @param {CategoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends CategoryUpsertArgs>(args: SelectSubset<T, CategoryUpsertArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoryCountArgs>(
      args?: Subset<T, CategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryGroupByArgs['orderBy'] }
        : { orderBy?: CategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Category model
   */
  readonly fields: CategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Category model
   */
  interface CategoryFieldRefs {
    readonly id: FieldRef<"Category", 'String'>
    readonly key: FieldRef<"Category", 'String'>
    readonly value: FieldRef<"Category", 'String'>
    readonly label: FieldRef<"Category", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Category findUnique
   */
  export type CategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findUniqueOrThrow
   */
  export type CategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findFirst
   */
  export type CategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findFirstOrThrow
   */
  export type CategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findMany
   */
  export type CategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category create
   */
  export type CategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data needed to create a Category.
     */
    data: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
  }

  /**
   * Category createMany
   */
  export type CategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category createManyAndReturn
   */
  export type CategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category update
   */
  export type CategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data needed to update a Category.
     */
    data: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
    /**
     * Choose, which Category to update.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category updateMany
   */
  export type CategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
  }

  /**
   * Category updateManyAndReturn
   */
  export type CategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
  }

  /**
   * Category upsert
   */
  export type CategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The filter to search for the Category to update in case it exists.
     */
    where: CategoryWhereUniqueInput
    /**
     * In case the Category found by the `where` argument doesn't exist, create a new Category with this data.
     */
    create: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
    /**
     * In case the Category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
  }

  /**
   * Category delete
   */
  export type CategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Filter which Category to delete.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category deleteMany
   */
  export type CategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to delete.
     */
    limit?: number
  }

  /**
   * Category without action
   */
  export type CategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
  }


  /**
   * Model Country
   */

  export type AggregateCountry = {
    _count: CountryCountAggregateOutputType | null
    _min: CountryMinAggregateOutputType | null
    _max: CountryMaxAggregateOutputType | null
  }

  export type CountryMinAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
  }

  export type CountryMaxAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
  }

  export type CountryCountAggregateOutputType = {
    id: number
    name: number
    code: number
    _all: number
  }


  export type CountryMinAggregateInputType = {
    id?: true
    name?: true
    code?: true
  }

  export type CountryMaxAggregateInputType = {
    id?: true
    name?: true
    code?: true
  }

  export type CountryCountAggregateInputType = {
    id?: true
    name?: true
    code?: true
    _all?: true
  }

  export type CountryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Country to aggregate.
     */
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     */
    orderBy?: CountryOrderByWithRelationInput | CountryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Countries
    **/
    _count?: true | CountryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CountryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CountryMaxAggregateInputType
  }

  export type GetCountryAggregateType<T extends CountryAggregateArgs> = {
        [P in keyof T & keyof AggregateCountry]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCountry[P]>
      : GetScalarType<T[P], AggregateCountry[P]>
  }




  export type CountryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CountryWhereInput
    orderBy?: CountryOrderByWithAggregationInput | CountryOrderByWithAggregationInput[]
    by: CountryScalarFieldEnum[] | CountryScalarFieldEnum
    having?: CountryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CountryCountAggregateInputType | true
    _min?: CountryMinAggregateInputType
    _max?: CountryMaxAggregateInputType
  }

  export type CountryGroupByOutputType = {
    id: string
    name: string | null
    code: string | null
    _count: CountryCountAggregateOutputType | null
    _min: CountryMinAggregateOutputType | null
    _max: CountryMaxAggregateOutputType | null
  }

  type GetCountryGroupByPayload<T extends CountryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CountryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CountryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CountryGroupByOutputType[P]>
            : GetScalarType<T[P], CountryGroupByOutputType[P]>
        }
      >
    >


  export type CountrySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
  }, ExtArgs["result"]["country"]>

  export type CountrySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
  }, ExtArgs["result"]["country"]>

  export type CountrySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
  }, ExtArgs["result"]["country"]>

  export type CountrySelectScalar = {
    id?: boolean
    name?: boolean
    code?: boolean
  }

  export type CountryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "code", ExtArgs["result"]["country"]>

  export type $CountryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Country"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string | null
      code: string | null
    }, ExtArgs["result"]["country"]>
    composites: {}
  }

  type CountryGetPayload<S extends boolean | null | undefined | CountryDefaultArgs> = $Result.GetResult<Prisma.$CountryPayload, S>

  type CountryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CountryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CountryCountAggregateInputType | true
    }

  export interface CountryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Country'], meta: { name: 'Country' } }
    /**
     * Find zero or one Country that matches the filter.
     * @param {CountryFindUniqueArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CountryFindUniqueArgs>(args: SelectSubset<T, CountryFindUniqueArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Country that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CountryFindUniqueOrThrowArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CountryFindUniqueOrThrowArgs>(args: SelectSubset<T, CountryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Country that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryFindFirstArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CountryFindFirstArgs>(args?: SelectSubset<T, CountryFindFirstArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Country that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryFindFirstOrThrowArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CountryFindFirstOrThrowArgs>(args?: SelectSubset<T, CountryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Countries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Countries
     * const countries = await prisma.country.findMany()
     * 
     * // Get first 10 Countries
     * const countries = await prisma.country.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const countryWithIdOnly = await prisma.country.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CountryFindManyArgs>(args?: SelectSubset<T, CountryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Country.
     * @param {CountryCreateArgs} args - Arguments to create a Country.
     * @example
     * // Create one Country
     * const Country = await prisma.country.create({
     *   data: {
     *     // ... data to create a Country
     *   }
     * })
     * 
     */
    create<T extends CountryCreateArgs>(args: SelectSubset<T, CountryCreateArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Countries.
     * @param {CountryCreateManyArgs} args - Arguments to create many Countries.
     * @example
     * // Create many Countries
     * const country = await prisma.country.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CountryCreateManyArgs>(args?: SelectSubset<T, CountryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Countries and returns the data saved in the database.
     * @param {CountryCreateManyAndReturnArgs} args - Arguments to create many Countries.
     * @example
     * // Create many Countries
     * const country = await prisma.country.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Countries and only return the `id`
     * const countryWithIdOnly = await prisma.country.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CountryCreateManyAndReturnArgs>(args?: SelectSubset<T, CountryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Country.
     * @param {CountryDeleteArgs} args - Arguments to delete one Country.
     * @example
     * // Delete one Country
     * const Country = await prisma.country.delete({
     *   where: {
     *     // ... filter to delete one Country
     *   }
     * })
     * 
     */
    delete<T extends CountryDeleteArgs>(args: SelectSubset<T, CountryDeleteArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Country.
     * @param {CountryUpdateArgs} args - Arguments to update one Country.
     * @example
     * // Update one Country
     * const country = await prisma.country.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CountryUpdateArgs>(args: SelectSubset<T, CountryUpdateArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Countries.
     * @param {CountryDeleteManyArgs} args - Arguments to filter Countries to delete.
     * @example
     * // Delete a few Countries
     * const { count } = await prisma.country.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CountryDeleteManyArgs>(args?: SelectSubset<T, CountryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Countries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Countries
     * const country = await prisma.country.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CountryUpdateManyArgs>(args: SelectSubset<T, CountryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Countries and returns the data updated in the database.
     * @param {CountryUpdateManyAndReturnArgs} args - Arguments to update many Countries.
     * @example
     * // Update many Countries
     * const country = await prisma.country.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Countries and only return the `id`
     * const countryWithIdOnly = await prisma.country.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CountryUpdateManyAndReturnArgs>(args: SelectSubset<T, CountryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Country.
     * @param {CountryUpsertArgs} args - Arguments to update or create a Country.
     * @example
     * // Update or create a Country
     * const country = await prisma.country.upsert({
     *   create: {
     *     // ... data to create a Country
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Country we want to update
     *   }
     * })
     */
    upsert<T extends CountryUpsertArgs>(args: SelectSubset<T, CountryUpsertArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Countries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryCountArgs} args - Arguments to filter Countries to count.
     * @example
     * // Count the number of Countries
     * const count = await prisma.country.count({
     *   where: {
     *     // ... the filter for the Countries we want to count
     *   }
     * })
    **/
    count<T extends CountryCountArgs>(
      args?: Subset<T, CountryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CountryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Country.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CountryAggregateArgs>(args: Subset<T, CountryAggregateArgs>): Prisma.PrismaPromise<GetCountryAggregateType<T>>

    /**
     * Group by Country.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CountryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CountryGroupByArgs['orderBy'] }
        : { orderBy?: CountryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CountryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCountryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Country model
   */
  readonly fields: CountryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Country.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CountryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Country model
   */
  interface CountryFieldRefs {
    readonly id: FieldRef<"Country", 'String'>
    readonly name: FieldRef<"Country", 'String'>
    readonly code: FieldRef<"Country", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Country findUnique
   */
  export type CountryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Filter, which Country to fetch.
     */
    where: CountryWhereUniqueInput
  }

  /**
   * Country findUniqueOrThrow
   */
  export type CountryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Filter, which Country to fetch.
     */
    where: CountryWhereUniqueInput
  }

  /**
   * Country findFirst
   */
  export type CountryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Filter, which Country to fetch.
     */
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     */
    orderBy?: CountryOrderByWithRelationInput | CountryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Countries.
     */
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Countries.
     */
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * Country findFirstOrThrow
   */
  export type CountryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Filter, which Country to fetch.
     */
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     */
    orderBy?: CountryOrderByWithRelationInput | CountryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Countries.
     */
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Countries.
     */
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * Country findMany
   */
  export type CountryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Filter, which Countries to fetch.
     */
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     */
    orderBy?: CountryOrderByWithRelationInput | CountryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Countries.
     */
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     */
    skip?: number
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * Country create
   */
  export type CountryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * The data needed to create a Country.
     */
    data?: XOR<CountryCreateInput, CountryUncheckedCreateInput>
  }

  /**
   * Country createMany
   */
  export type CountryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Countries.
     */
    data: CountryCreateManyInput | CountryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Country createManyAndReturn
   */
  export type CountryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * The data used to create many Countries.
     */
    data: CountryCreateManyInput | CountryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Country update
   */
  export type CountryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * The data needed to update a Country.
     */
    data: XOR<CountryUpdateInput, CountryUncheckedUpdateInput>
    /**
     * Choose, which Country to update.
     */
    where: CountryWhereUniqueInput
  }

  /**
   * Country updateMany
   */
  export type CountryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Countries.
     */
    data: XOR<CountryUpdateManyMutationInput, CountryUncheckedUpdateManyInput>
    /**
     * Filter which Countries to update
     */
    where?: CountryWhereInput
    /**
     * Limit how many Countries to update.
     */
    limit?: number
  }

  /**
   * Country updateManyAndReturn
   */
  export type CountryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * The data used to update Countries.
     */
    data: XOR<CountryUpdateManyMutationInput, CountryUncheckedUpdateManyInput>
    /**
     * Filter which Countries to update
     */
    where?: CountryWhereInput
    /**
     * Limit how many Countries to update.
     */
    limit?: number
  }

  /**
   * Country upsert
   */
  export type CountryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * The filter to search for the Country to update in case it exists.
     */
    where: CountryWhereUniqueInput
    /**
     * In case the Country found by the `where` argument doesn't exist, create a new Country with this data.
     */
    create: XOR<CountryCreateInput, CountryUncheckedCreateInput>
    /**
     * In case the Country was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CountryUpdateInput, CountryUncheckedUpdateInput>
  }

  /**
   * Country delete
   */
  export type CountryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Filter which Country to delete.
     */
    where: CountryWhereUniqueInput
  }

  /**
   * Country deleteMany
   */
  export type CountryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Countries to delete
     */
    where?: CountryWhereInput
    /**
     * Limit how many Countries to delete.
     */
    limit?: number
  }

  /**
   * Country without action
   */
  export type CountryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
  }


  /**
   * Model Project
   */

  export type AggregateProject = {
    _count: ProjectCountAggregateOutputType | null
    _avg: ProjectAvgAggregateOutputType | null
    _sum: ProjectSumAggregateOutputType | null
    _min: ProjectMinAggregateOutputType | null
    _max: ProjectMaxAggregateOutputType | null
  }

  export type ProjectAvgAggregateOutputType = {
    progress: Decimal | null
  }

  export type ProjectSumAggregateOutputType = {
    progress: Decimal | null
  }

  export type ProjectMinAggregateOutputType = {
    id: string | null
    regNumber: string | null
    progress: Decimal | null
    plannedStartDate: Date | null
    plannedEndDate: Date | null
    actualStartDate: Date | null
    actualEndDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    contractId: string | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
  }

  export type ProjectMaxAggregateOutputType = {
    id: string | null
    regNumber: string | null
    progress: Decimal | null
    plannedStartDate: Date | null
    plannedEndDate: Date | null
    actualStartDate: Date | null
    actualEndDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    contractId: string | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
  }

  export type ProjectCountAggregateOutputType = {
    id: number
    regNumber: number
    progress: number
    plannedStartDate: number
    plannedEndDate: number
    actualStartDate: number
    actualEndDate: number
    createdAt: number
    updatedAt: number
    contractId: number
    assigneeId: number
    createdById: number
    updatedById: number
    _all: number
  }


  export type ProjectAvgAggregateInputType = {
    progress?: true
  }

  export type ProjectSumAggregateInputType = {
    progress?: true
  }

  export type ProjectMinAggregateInputType = {
    id?: true
    regNumber?: true
    progress?: true
    plannedStartDate?: true
    plannedEndDate?: true
    actualStartDate?: true
    actualEndDate?: true
    createdAt?: true
    updatedAt?: true
    contractId?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
  }

  export type ProjectMaxAggregateInputType = {
    id?: true
    regNumber?: true
    progress?: true
    plannedStartDate?: true
    plannedEndDate?: true
    actualStartDate?: true
    actualEndDate?: true
    createdAt?: true
    updatedAt?: true
    contractId?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
  }

  export type ProjectCountAggregateInputType = {
    id?: true
    regNumber?: true
    progress?: true
    plannedStartDate?: true
    plannedEndDate?: true
    actualStartDate?: true
    actualEndDate?: true
    createdAt?: true
    updatedAt?: true
    contractId?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
    _all?: true
  }

  export type ProjectAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Project to aggregate.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Projects
    **/
    _count?: true | ProjectCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProjectAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProjectSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectMaxAggregateInputType
  }

  export type GetProjectAggregateType<T extends ProjectAggregateArgs> = {
        [P in keyof T & keyof AggregateProject]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProject[P]>
      : GetScalarType<T[P], AggregateProject[P]>
  }




  export type ProjectGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectWhereInput
    orderBy?: ProjectOrderByWithAggregationInput | ProjectOrderByWithAggregationInput[]
    by: ProjectScalarFieldEnum[] | ProjectScalarFieldEnum
    having?: ProjectScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectCountAggregateInputType | true
    _avg?: ProjectAvgAggregateInputType
    _sum?: ProjectSumAggregateInputType
    _min?: ProjectMinAggregateInputType
    _max?: ProjectMaxAggregateInputType
  }

  export type ProjectGroupByOutputType = {
    id: string
    regNumber: string | null
    progress: Decimal | null
    plannedStartDate: Date | null
    plannedEndDate: Date | null
    actualStartDate: Date | null
    actualEndDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    contractId: string | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
    _count: ProjectCountAggregateOutputType | null
    _avg: ProjectAvgAggregateOutputType | null
    _sum: ProjectSumAggregateOutputType | null
    _min: ProjectMinAggregateOutputType | null
    _max: ProjectMaxAggregateOutputType | null
  }

  type GetProjectGroupByPayload<T extends ProjectGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProjectGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectGroupByOutputType[P]>
        }
      >
    >


  export type ProjectSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    progress?: boolean
    plannedStartDate?: boolean
    plannedEndDate?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    contractId?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    contract?: boolean | Project$contractArgs<ExtArgs>
    assignee?: boolean | Project$assigneeArgs<ExtArgs>
    createdBy?: boolean | Project$createdByArgs<ExtArgs>
    updatedBy?: boolean | Project$updatedByArgs<ExtArgs>
    members?: boolean | Project$membersArgs<ExtArgs>
    milestones?: boolean | Project$milestonesArgs<ExtArgs>
    notes?: boolean | Project$notesArgs<ExtArgs>
    stages?: boolean | Project$stagesArgs<ExtArgs>
    events?: boolean | Project$eventsArgs<ExtArgs>
    budgets?: boolean | Project$budgetsArgs<ExtArgs>
    expenses?: boolean | Project$expensesArgs<ExtArgs>
    _count?: boolean | ProjectCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["project"]>

  export type ProjectSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    progress?: boolean
    plannedStartDate?: boolean
    plannedEndDate?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    contractId?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    contract?: boolean | Project$contractArgs<ExtArgs>
    assignee?: boolean | Project$assigneeArgs<ExtArgs>
    createdBy?: boolean | Project$createdByArgs<ExtArgs>
    updatedBy?: boolean | Project$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["project"]>

  export type ProjectSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regNumber?: boolean
    progress?: boolean
    plannedStartDate?: boolean
    plannedEndDate?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    contractId?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    contract?: boolean | Project$contractArgs<ExtArgs>
    assignee?: boolean | Project$assigneeArgs<ExtArgs>
    createdBy?: boolean | Project$createdByArgs<ExtArgs>
    updatedBy?: boolean | Project$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["project"]>

  export type ProjectSelectScalar = {
    id?: boolean
    regNumber?: boolean
    progress?: boolean
    plannedStartDate?: boolean
    plannedEndDate?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    contractId?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
  }

  export type ProjectOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "regNumber" | "progress" | "plannedStartDate" | "plannedEndDate" | "actualStartDate" | "actualEndDate" | "createdAt" | "updatedAt" | "contractId" | "assigneeId" | "createdById" | "updatedById", ExtArgs["result"]["project"]>
  export type ProjectInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contract?: boolean | Project$contractArgs<ExtArgs>
    assignee?: boolean | Project$assigneeArgs<ExtArgs>
    createdBy?: boolean | Project$createdByArgs<ExtArgs>
    updatedBy?: boolean | Project$updatedByArgs<ExtArgs>
    members?: boolean | Project$membersArgs<ExtArgs>
    milestones?: boolean | Project$milestonesArgs<ExtArgs>
    notes?: boolean | Project$notesArgs<ExtArgs>
    stages?: boolean | Project$stagesArgs<ExtArgs>
    events?: boolean | Project$eventsArgs<ExtArgs>
    budgets?: boolean | Project$budgetsArgs<ExtArgs>
    expenses?: boolean | Project$expensesArgs<ExtArgs>
    _count?: boolean | ProjectCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProjectIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contract?: boolean | Project$contractArgs<ExtArgs>
    assignee?: boolean | Project$assigneeArgs<ExtArgs>
    createdBy?: boolean | Project$createdByArgs<ExtArgs>
    updatedBy?: boolean | Project$updatedByArgs<ExtArgs>
  }
  export type ProjectIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contract?: boolean | Project$contractArgs<ExtArgs>
    assignee?: boolean | Project$assigneeArgs<ExtArgs>
    createdBy?: boolean | Project$createdByArgs<ExtArgs>
    updatedBy?: boolean | Project$updatedByArgs<ExtArgs>
  }

  export type $ProjectPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Project"
    objects: {
      contract: Prisma.$ContractPayload<ExtArgs> | null
      assignee: Prisma.$UserPayload<ExtArgs> | null
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      members: Prisma.$UserPayload<ExtArgs>[]
      milestones: Prisma.$MilestonePayload<ExtArgs>[]
      notes: Prisma.$NotePayload<ExtArgs>[]
      stages: Prisma.$StagePayload<ExtArgs>[]
      events: Prisma.$EventPayload<ExtArgs>[]
      budgets: Prisma.$BudgetPayload<ExtArgs>[]
      expenses: Prisma.$ExpensePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      regNumber: string | null
      progress: Prisma.Decimal | null
      plannedStartDate: Date | null
      plannedEndDate: Date | null
      actualStartDate: Date | null
      actualEndDate: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      contractId: string | null
      assigneeId: string | null
      createdById: string | null
      updatedById: string | null
    }, ExtArgs["result"]["project"]>
    composites: {}
  }

  type ProjectGetPayload<S extends boolean | null | undefined | ProjectDefaultArgs> = $Result.GetResult<Prisma.$ProjectPayload, S>

  type ProjectCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProjectFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProjectCountAggregateInputType | true
    }

  export interface ProjectDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Project'], meta: { name: 'Project' } }
    /**
     * Find zero or one Project that matches the filter.
     * @param {ProjectFindUniqueArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProjectFindUniqueArgs>(args: SelectSubset<T, ProjectFindUniqueArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Project that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProjectFindUniqueOrThrowArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProjectFindUniqueOrThrowArgs>(args: SelectSubset<T, ProjectFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindFirstArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProjectFindFirstArgs>(args?: SelectSubset<T, ProjectFindFirstArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindFirstOrThrowArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProjectFindFirstOrThrowArgs>(args?: SelectSubset<T, ProjectFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Projects
     * const projects = await prisma.project.findMany()
     * 
     * // Get first 10 Projects
     * const projects = await prisma.project.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const projectWithIdOnly = await prisma.project.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProjectFindManyArgs>(args?: SelectSubset<T, ProjectFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Project.
     * @param {ProjectCreateArgs} args - Arguments to create a Project.
     * @example
     * // Create one Project
     * const Project = await prisma.project.create({
     *   data: {
     *     // ... data to create a Project
     *   }
     * })
     * 
     */
    create<T extends ProjectCreateArgs>(args: SelectSubset<T, ProjectCreateArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Projects.
     * @param {ProjectCreateManyArgs} args - Arguments to create many Projects.
     * @example
     * // Create many Projects
     * const project = await prisma.project.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProjectCreateManyArgs>(args?: SelectSubset<T, ProjectCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Projects and returns the data saved in the database.
     * @param {ProjectCreateManyAndReturnArgs} args - Arguments to create many Projects.
     * @example
     * // Create many Projects
     * const project = await prisma.project.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Projects and only return the `id`
     * const projectWithIdOnly = await prisma.project.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProjectCreateManyAndReturnArgs>(args?: SelectSubset<T, ProjectCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Project.
     * @param {ProjectDeleteArgs} args - Arguments to delete one Project.
     * @example
     * // Delete one Project
     * const Project = await prisma.project.delete({
     *   where: {
     *     // ... filter to delete one Project
     *   }
     * })
     * 
     */
    delete<T extends ProjectDeleteArgs>(args: SelectSubset<T, ProjectDeleteArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Project.
     * @param {ProjectUpdateArgs} args - Arguments to update one Project.
     * @example
     * // Update one Project
     * const project = await prisma.project.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProjectUpdateArgs>(args: SelectSubset<T, ProjectUpdateArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Projects.
     * @param {ProjectDeleteManyArgs} args - Arguments to filter Projects to delete.
     * @example
     * // Delete a few Projects
     * const { count } = await prisma.project.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProjectDeleteManyArgs>(args?: SelectSubset<T, ProjectDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Projects
     * const project = await prisma.project.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProjectUpdateManyArgs>(args: SelectSubset<T, ProjectUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Projects and returns the data updated in the database.
     * @param {ProjectUpdateManyAndReturnArgs} args - Arguments to update many Projects.
     * @example
     * // Update many Projects
     * const project = await prisma.project.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Projects and only return the `id`
     * const projectWithIdOnly = await prisma.project.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProjectUpdateManyAndReturnArgs>(args: SelectSubset<T, ProjectUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Project.
     * @param {ProjectUpsertArgs} args - Arguments to update or create a Project.
     * @example
     * // Update or create a Project
     * const project = await prisma.project.upsert({
     *   create: {
     *     // ... data to create a Project
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Project we want to update
     *   }
     * })
     */
    upsert<T extends ProjectUpsertArgs>(args: SelectSubset<T, ProjectUpsertArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectCountArgs} args - Arguments to filter Projects to count.
     * @example
     * // Count the number of Projects
     * const count = await prisma.project.count({
     *   where: {
     *     // ... the filter for the Projects we want to count
     *   }
     * })
    **/
    count<T extends ProjectCountArgs>(
      args?: Subset<T, ProjectCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectAggregateArgs>(args: Subset<T, ProjectAggregateArgs>): Prisma.PrismaPromise<GetProjectAggregateType<T>>

    /**
     * Group by Project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProjectGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProjectGroupByArgs['orderBy'] }
        : { orderBy?: ProjectGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProjectGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Project model
   */
  readonly fields: ProjectFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Project.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProjectClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    contract<T extends Project$contractArgs<ExtArgs> = {}>(args?: Subset<T, Project$contractArgs<ExtArgs>>): Prisma__ContractClient<$Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    assignee<T extends Project$assigneeArgs<ExtArgs> = {}>(args?: Subset<T, Project$assigneeArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends Project$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Project$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Project$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Project$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    members<T extends Project$membersArgs<ExtArgs> = {}>(args?: Subset<T, Project$membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    milestones<T extends Project$milestonesArgs<ExtArgs> = {}>(args?: Subset<T, Project$milestonesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notes<T extends Project$notesArgs<ExtArgs> = {}>(args?: Subset<T, Project$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stages<T extends Project$stagesArgs<ExtArgs> = {}>(args?: Subset<T, Project$stagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    events<T extends Project$eventsArgs<ExtArgs> = {}>(args?: Subset<T, Project$eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    budgets<T extends Project$budgetsArgs<ExtArgs> = {}>(args?: Subset<T, Project$budgetsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    expenses<T extends Project$expensesArgs<ExtArgs> = {}>(args?: Subset<T, Project$expensesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Project model
   */
  interface ProjectFieldRefs {
    readonly id: FieldRef<"Project", 'String'>
    readonly regNumber: FieldRef<"Project", 'String'>
    readonly progress: FieldRef<"Project", 'Decimal'>
    readonly plannedStartDate: FieldRef<"Project", 'DateTime'>
    readonly plannedEndDate: FieldRef<"Project", 'DateTime'>
    readonly actualStartDate: FieldRef<"Project", 'DateTime'>
    readonly actualEndDate: FieldRef<"Project", 'DateTime'>
    readonly createdAt: FieldRef<"Project", 'DateTime'>
    readonly updatedAt: FieldRef<"Project", 'DateTime'>
    readonly contractId: FieldRef<"Project", 'String'>
    readonly assigneeId: FieldRef<"Project", 'String'>
    readonly createdById: FieldRef<"Project", 'String'>
    readonly updatedById: FieldRef<"Project", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Project findUnique
   */
  export type ProjectFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project findUniqueOrThrow
   */
  export type ProjectFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project findFirst
   */
  export type ProjectFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     */
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Project findFirstOrThrow
   */
  export type ProjectFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     */
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Project findMany
   */
  export type ProjectFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Projects to fetch.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Projects.
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Project create
   */
  export type ProjectCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * The data needed to create a Project.
     */
    data?: XOR<ProjectCreateInput, ProjectUncheckedCreateInput>
  }

  /**
   * Project createMany
   */
  export type ProjectCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Projects.
     */
    data: ProjectCreateManyInput | ProjectCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Project createManyAndReturn
   */
  export type ProjectCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * The data used to create many Projects.
     */
    data: ProjectCreateManyInput | ProjectCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Project update
   */
  export type ProjectUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * The data needed to update a Project.
     */
    data: XOR<ProjectUpdateInput, ProjectUncheckedUpdateInput>
    /**
     * Choose, which Project to update.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project updateMany
   */
  export type ProjectUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Projects.
     */
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyInput>
    /**
     * Filter which Projects to update
     */
    where?: ProjectWhereInput
    /**
     * Limit how many Projects to update.
     */
    limit?: number
  }

  /**
   * Project updateManyAndReturn
   */
  export type ProjectUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * The data used to update Projects.
     */
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyInput>
    /**
     * Filter which Projects to update
     */
    where?: ProjectWhereInput
    /**
     * Limit how many Projects to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Project upsert
   */
  export type ProjectUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * The filter to search for the Project to update in case it exists.
     */
    where: ProjectWhereUniqueInput
    /**
     * In case the Project found by the `where` argument doesn't exist, create a new Project with this data.
     */
    create: XOR<ProjectCreateInput, ProjectUncheckedCreateInput>
    /**
     * In case the Project was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProjectUpdateInput, ProjectUncheckedUpdateInput>
  }

  /**
   * Project delete
   */
  export type ProjectDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter which Project to delete.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project deleteMany
   */
  export type ProjectDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Projects to delete
     */
    where?: ProjectWhereInput
    /**
     * Limit how many Projects to delete.
     */
    limit?: number
  }

  /**
   * Project.contract
   */
  export type Project$contractArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contract
     */
    select?: ContractSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contract
     */
    omit?: ContractOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContractInclude<ExtArgs> | null
    where?: ContractWhereInput
  }

  /**
   * Project.assignee
   */
  export type Project$assigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Project.createdBy
   */
  export type Project$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Project.updatedBy
   */
  export type Project$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Project.members
   */
  export type Project$membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Project.milestones
   */
  export type Project$milestonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    where?: MilestoneWhereInput
    orderBy?: MilestoneOrderByWithRelationInput | MilestoneOrderByWithRelationInput[]
    cursor?: MilestoneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MilestoneScalarFieldEnum | MilestoneScalarFieldEnum[]
  }

  /**
   * Project.notes
   */
  export type Project$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Project.stages
   */
  export type Project$stagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    where?: StageWhereInput
    orderBy?: StageOrderByWithRelationInput | StageOrderByWithRelationInput[]
    cursor?: StageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StageScalarFieldEnum | StageScalarFieldEnum[]
  }

  /**
   * Project.events
   */
  export type Project$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    where?: EventWhereInput
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    cursor?: EventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Project.budgets
   */
  export type Project$budgetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
    where?: BudgetWhereInput
    orderBy?: BudgetOrderByWithRelationInput | BudgetOrderByWithRelationInput[]
    cursor?: BudgetWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BudgetScalarFieldEnum | BudgetScalarFieldEnum[]
  }

  /**
   * Project.expenses
   */
  export type Project$expensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    where?: ExpenseWhereInput
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    cursor?: ExpenseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }

  /**
   * Project without action
   */
  export type ProjectDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
  }


  /**
   * Model Milestone
   */

  export type AggregateMilestone = {
    _count: MilestoneCountAggregateOutputType | null
    _avg: MilestoneAvgAggregateOutputType | null
    _sum: MilestoneSumAggregateOutputType | null
    _min: MilestoneMinAggregateOutputType | null
    _max: MilestoneMaxAggregateOutputType | null
  }

  export type MilestoneAvgAggregateOutputType = {
    order: Decimal | null
    share: Decimal | null
    amount: Decimal | null
    progress: Decimal | null
    revision: Decimal | null
  }

  export type MilestoneSumAggregateOutputType = {
    order: Decimal | null
    share: Decimal | null
    amount: Decimal | null
    progress: Decimal | null
    revision: Decimal | null
  }

  export type MilestoneMinAggregateOutputType = {
    id: string | null
    order: Decimal | null
    title: string | null
    description: string | null
    plannedStartDate: Date | null
    plannedEndDate: Date | null
    actualStartDate: Date | null
    actualEndDate: Date | null
    approvedDate: Date | null
    share: Decimal | null
    amount: Decimal | null
    deliverables: string | null
    progress: Decimal | null
    revision: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    projectId: string | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
  }

  export type MilestoneMaxAggregateOutputType = {
    id: string | null
    order: Decimal | null
    title: string | null
    description: string | null
    plannedStartDate: Date | null
    plannedEndDate: Date | null
    actualStartDate: Date | null
    actualEndDate: Date | null
    approvedDate: Date | null
    share: Decimal | null
    amount: Decimal | null
    deliverables: string | null
    progress: Decimal | null
    revision: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    projectId: string | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
  }

  export type MilestoneCountAggregateOutputType = {
    id: number
    order: number
    title: number
    description: number
    plannedStartDate: number
    plannedEndDate: number
    actualStartDate: number
    actualEndDate: number
    approvedDate: number
    share: number
    amount: number
    deliverables: number
    progress: number
    revision: number
    createdAt: number
    updatedAt: number
    projectId: number
    assigneeId: number
    createdById: number
    updatedById: number
    _all: number
  }


  export type MilestoneAvgAggregateInputType = {
    order?: true
    share?: true
    amount?: true
    progress?: true
    revision?: true
  }

  export type MilestoneSumAggregateInputType = {
    order?: true
    share?: true
    amount?: true
    progress?: true
    revision?: true
  }

  export type MilestoneMinAggregateInputType = {
    id?: true
    order?: true
    title?: true
    description?: true
    plannedStartDate?: true
    plannedEndDate?: true
    actualStartDate?: true
    actualEndDate?: true
    approvedDate?: true
    share?: true
    amount?: true
    deliverables?: true
    progress?: true
    revision?: true
    createdAt?: true
    updatedAt?: true
    projectId?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
  }

  export type MilestoneMaxAggregateInputType = {
    id?: true
    order?: true
    title?: true
    description?: true
    plannedStartDate?: true
    plannedEndDate?: true
    actualStartDate?: true
    actualEndDate?: true
    approvedDate?: true
    share?: true
    amount?: true
    deliverables?: true
    progress?: true
    revision?: true
    createdAt?: true
    updatedAt?: true
    projectId?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
  }

  export type MilestoneCountAggregateInputType = {
    id?: true
    order?: true
    title?: true
    description?: true
    plannedStartDate?: true
    plannedEndDate?: true
    actualStartDate?: true
    actualEndDate?: true
    approvedDate?: true
    share?: true
    amount?: true
    deliverables?: true
    progress?: true
    revision?: true
    createdAt?: true
    updatedAt?: true
    projectId?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
    _all?: true
  }

  export type MilestoneAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Milestone to aggregate.
     */
    where?: MilestoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Milestones to fetch.
     */
    orderBy?: MilestoneOrderByWithRelationInput | MilestoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MilestoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Milestones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Milestones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Milestones
    **/
    _count?: true | MilestoneCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MilestoneAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MilestoneSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MilestoneMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MilestoneMaxAggregateInputType
  }

  export type GetMilestoneAggregateType<T extends MilestoneAggregateArgs> = {
        [P in keyof T & keyof AggregateMilestone]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMilestone[P]>
      : GetScalarType<T[P], AggregateMilestone[P]>
  }




  export type MilestoneGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MilestoneWhereInput
    orderBy?: MilestoneOrderByWithAggregationInput | MilestoneOrderByWithAggregationInput[]
    by: MilestoneScalarFieldEnum[] | MilestoneScalarFieldEnum
    having?: MilestoneScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MilestoneCountAggregateInputType | true
    _avg?: MilestoneAvgAggregateInputType
    _sum?: MilestoneSumAggregateInputType
    _min?: MilestoneMinAggregateInputType
    _max?: MilestoneMaxAggregateInputType
  }

  export type MilestoneGroupByOutputType = {
    id: string
    order: Decimal | null
    title: string | null
    description: string | null
    plannedStartDate: Date | null
    plannedEndDate: Date | null
    actualStartDate: Date | null
    actualEndDate: Date | null
    approvedDate: Date | null
    share: Decimal | null
    amount: Decimal | null
    deliverables: string | null
    progress: Decimal | null
    revision: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    projectId: string | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
    _count: MilestoneCountAggregateOutputType | null
    _avg: MilestoneAvgAggregateOutputType | null
    _sum: MilestoneSumAggregateOutputType | null
    _min: MilestoneMinAggregateOutputType | null
    _max: MilestoneMaxAggregateOutputType | null
  }

  type GetMilestoneGroupByPayload<T extends MilestoneGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MilestoneGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MilestoneGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MilestoneGroupByOutputType[P]>
            : GetScalarType<T[P], MilestoneGroupByOutputType[P]>
        }
      >
    >


  export type MilestoneSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order?: boolean
    title?: boolean
    description?: boolean
    plannedStartDate?: boolean
    plannedEndDate?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    approvedDate?: boolean
    share?: boolean
    amount?: boolean
    deliverables?: boolean
    progress?: boolean
    revision?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    projectId?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    project?: boolean | Milestone$projectArgs<ExtArgs>
    assignee?: boolean | Milestone$assigneeArgs<ExtArgs>
    createdBy?: boolean | Milestone$createdByArgs<ExtArgs>
    updatedBy?: boolean | Milestone$updatedByArgs<ExtArgs>
    tasks?: boolean | Milestone$tasksArgs<ExtArgs>
    notes?: boolean | Milestone$notesArgs<ExtArgs>
    stages?: boolean | Milestone$stagesArgs<ExtArgs>
    events?: boolean | Milestone$eventsArgs<ExtArgs>
    _count?: boolean | MilestoneCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["milestone"]>

  export type MilestoneSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order?: boolean
    title?: boolean
    description?: boolean
    plannedStartDate?: boolean
    plannedEndDate?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    approvedDate?: boolean
    share?: boolean
    amount?: boolean
    deliverables?: boolean
    progress?: boolean
    revision?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    projectId?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    project?: boolean | Milestone$projectArgs<ExtArgs>
    assignee?: boolean | Milestone$assigneeArgs<ExtArgs>
    createdBy?: boolean | Milestone$createdByArgs<ExtArgs>
    updatedBy?: boolean | Milestone$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["milestone"]>

  export type MilestoneSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order?: boolean
    title?: boolean
    description?: boolean
    plannedStartDate?: boolean
    plannedEndDate?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    approvedDate?: boolean
    share?: boolean
    amount?: boolean
    deliverables?: boolean
    progress?: boolean
    revision?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    projectId?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    project?: boolean | Milestone$projectArgs<ExtArgs>
    assignee?: boolean | Milestone$assigneeArgs<ExtArgs>
    createdBy?: boolean | Milestone$createdByArgs<ExtArgs>
    updatedBy?: boolean | Milestone$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["milestone"]>

  export type MilestoneSelectScalar = {
    id?: boolean
    order?: boolean
    title?: boolean
    description?: boolean
    plannedStartDate?: boolean
    plannedEndDate?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    approvedDate?: boolean
    share?: boolean
    amount?: boolean
    deliverables?: boolean
    progress?: boolean
    revision?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    projectId?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
  }

  export type MilestoneOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order" | "title" | "description" | "plannedStartDate" | "plannedEndDate" | "actualStartDate" | "actualEndDate" | "approvedDate" | "share" | "amount" | "deliverables" | "progress" | "revision" | "createdAt" | "updatedAt" | "projectId" | "assigneeId" | "createdById" | "updatedById", ExtArgs["result"]["milestone"]>
  export type MilestoneInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project?: boolean | Milestone$projectArgs<ExtArgs>
    assignee?: boolean | Milestone$assigneeArgs<ExtArgs>
    createdBy?: boolean | Milestone$createdByArgs<ExtArgs>
    updatedBy?: boolean | Milestone$updatedByArgs<ExtArgs>
    tasks?: boolean | Milestone$tasksArgs<ExtArgs>
    notes?: boolean | Milestone$notesArgs<ExtArgs>
    stages?: boolean | Milestone$stagesArgs<ExtArgs>
    events?: boolean | Milestone$eventsArgs<ExtArgs>
    _count?: boolean | MilestoneCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MilestoneIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project?: boolean | Milestone$projectArgs<ExtArgs>
    assignee?: boolean | Milestone$assigneeArgs<ExtArgs>
    createdBy?: boolean | Milestone$createdByArgs<ExtArgs>
    updatedBy?: boolean | Milestone$updatedByArgs<ExtArgs>
  }
  export type MilestoneIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project?: boolean | Milestone$projectArgs<ExtArgs>
    assignee?: boolean | Milestone$assigneeArgs<ExtArgs>
    createdBy?: boolean | Milestone$createdByArgs<ExtArgs>
    updatedBy?: boolean | Milestone$updatedByArgs<ExtArgs>
  }

  export type $MilestonePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Milestone"
    objects: {
      project: Prisma.$ProjectPayload<ExtArgs> | null
      assignee: Prisma.$UserPayload<ExtArgs> | null
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      tasks: Prisma.$TaskPayload<ExtArgs>[]
      notes: Prisma.$NotePayload<ExtArgs>[]
      stages: Prisma.$StagePayload<ExtArgs>[]
      events: Prisma.$EventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      order: Prisma.Decimal | null
      title: string | null
      description: string | null
      plannedStartDate: Date | null
      plannedEndDate: Date | null
      actualStartDate: Date | null
      actualEndDate: Date | null
      approvedDate: Date | null
      share: Prisma.Decimal | null
      amount: Prisma.Decimal | null
      deliverables: string | null
      progress: Prisma.Decimal | null
      revision: Prisma.Decimal | null
      createdAt: Date | null
      updatedAt: Date | null
      projectId: string | null
      assigneeId: string | null
      createdById: string | null
      updatedById: string | null
    }, ExtArgs["result"]["milestone"]>
    composites: {}
  }

  type MilestoneGetPayload<S extends boolean | null | undefined | MilestoneDefaultArgs> = $Result.GetResult<Prisma.$MilestonePayload, S>

  type MilestoneCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MilestoneFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MilestoneCountAggregateInputType | true
    }

  export interface MilestoneDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Milestone'], meta: { name: 'Milestone' } }
    /**
     * Find zero or one Milestone that matches the filter.
     * @param {MilestoneFindUniqueArgs} args - Arguments to find a Milestone
     * @example
     * // Get one Milestone
     * const milestone = await prisma.milestone.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MilestoneFindUniqueArgs>(args: SelectSubset<T, MilestoneFindUniqueArgs<ExtArgs>>): Prisma__MilestoneClient<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Milestone that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MilestoneFindUniqueOrThrowArgs} args - Arguments to find a Milestone
     * @example
     * // Get one Milestone
     * const milestone = await prisma.milestone.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MilestoneFindUniqueOrThrowArgs>(args: SelectSubset<T, MilestoneFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MilestoneClient<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Milestone that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MilestoneFindFirstArgs} args - Arguments to find a Milestone
     * @example
     * // Get one Milestone
     * const milestone = await prisma.milestone.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MilestoneFindFirstArgs>(args?: SelectSubset<T, MilestoneFindFirstArgs<ExtArgs>>): Prisma__MilestoneClient<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Milestone that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MilestoneFindFirstOrThrowArgs} args - Arguments to find a Milestone
     * @example
     * // Get one Milestone
     * const milestone = await prisma.milestone.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MilestoneFindFirstOrThrowArgs>(args?: SelectSubset<T, MilestoneFindFirstOrThrowArgs<ExtArgs>>): Prisma__MilestoneClient<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Milestones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MilestoneFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Milestones
     * const milestones = await prisma.milestone.findMany()
     * 
     * // Get first 10 Milestones
     * const milestones = await prisma.milestone.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const milestoneWithIdOnly = await prisma.milestone.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MilestoneFindManyArgs>(args?: SelectSubset<T, MilestoneFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Milestone.
     * @param {MilestoneCreateArgs} args - Arguments to create a Milestone.
     * @example
     * // Create one Milestone
     * const Milestone = await prisma.milestone.create({
     *   data: {
     *     // ... data to create a Milestone
     *   }
     * })
     * 
     */
    create<T extends MilestoneCreateArgs>(args: SelectSubset<T, MilestoneCreateArgs<ExtArgs>>): Prisma__MilestoneClient<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Milestones.
     * @param {MilestoneCreateManyArgs} args - Arguments to create many Milestones.
     * @example
     * // Create many Milestones
     * const milestone = await prisma.milestone.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MilestoneCreateManyArgs>(args?: SelectSubset<T, MilestoneCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Milestones and returns the data saved in the database.
     * @param {MilestoneCreateManyAndReturnArgs} args - Arguments to create many Milestones.
     * @example
     * // Create many Milestones
     * const milestone = await prisma.milestone.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Milestones and only return the `id`
     * const milestoneWithIdOnly = await prisma.milestone.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MilestoneCreateManyAndReturnArgs>(args?: SelectSubset<T, MilestoneCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Milestone.
     * @param {MilestoneDeleteArgs} args - Arguments to delete one Milestone.
     * @example
     * // Delete one Milestone
     * const Milestone = await prisma.milestone.delete({
     *   where: {
     *     // ... filter to delete one Milestone
     *   }
     * })
     * 
     */
    delete<T extends MilestoneDeleteArgs>(args: SelectSubset<T, MilestoneDeleteArgs<ExtArgs>>): Prisma__MilestoneClient<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Milestone.
     * @param {MilestoneUpdateArgs} args - Arguments to update one Milestone.
     * @example
     * // Update one Milestone
     * const milestone = await prisma.milestone.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MilestoneUpdateArgs>(args: SelectSubset<T, MilestoneUpdateArgs<ExtArgs>>): Prisma__MilestoneClient<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Milestones.
     * @param {MilestoneDeleteManyArgs} args - Arguments to filter Milestones to delete.
     * @example
     * // Delete a few Milestones
     * const { count } = await prisma.milestone.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MilestoneDeleteManyArgs>(args?: SelectSubset<T, MilestoneDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Milestones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MilestoneUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Milestones
     * const milestone = await prisma.milestone.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MilestoneUpdateManyArgs>(args: SelectSubset<T, MilestoneUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Milestones and returns the data updated in the database.
     * @param {MilestoneUpdateManyAndReturnArgs} args - Arguments to update many Milestones.
     * @example
     * // Update many Milestones
     * const milestone = await prisma.milestone.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Milestones and only return the `id`
     * const milestoneWithIdOnly = await prisma.milestone.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MilestoneUpdateManyAndReturnArgs>(args: SelectSubset<T, MilestoneUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Milestone.
     * @param {MilestoneUpsertArgs} args - Arguments to update or create a Milestone.
     * @example
     * // Update or create a Milestone
     * const milestone = await prisma.milestone.upsert({
     *   create: {
     *     // ... data to create a Milestone
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Milestone we want to update
     *   }
     * })
     */
    upsert<T extends MilestoneUpsertArgs>(args: SelectSubset<T, MilestoneUpsertArgs<ExtArgs>>): Prisma__MilestoneClient<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Milestones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MilestoneCountArgs} args - Arguments to filter Milestones to count.
     * @example
     * // Count the number of Milestones
     * const count = await prisma.milestone.count({
     *   where: {
     *     // ... the filter for the Milestones we want to count
     *   }
     * })
    **/
    count<T extends MilestoneCountArgs>(
      args?: Subset<T, MilestoneCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MilestoneCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Milestone.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MilestoneAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MilestoneAggregateArgs>(args: Subset<T, MilestoneAggregateArgs>): Prisma.PrismaPromise<GetMilestoneAggregateType<T>>

    /**
     * Group by Milestone.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MilestoneGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MilestoneGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MilestoneGroupByArgs['orderBy'] }
        : { orderBy?: MilestoneGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MilestoneGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMilestoneGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Milestone model
   */
  readonly fields: MilestoneFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Milestone.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MilestoneClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    project<T extends Milestone$projectArgs<ExtArgs> = {}>(args?: Subset<T, Milestone$projectArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    assignee<T extends Milestone$assigneeArgs<ExtArgs> = {}>(args?: Subset<T, Milestone$assigneeArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends Milestone$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Milestone$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Milestone$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Milestone$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tasks<T extends Milestone$tasksArgs<ExtArgs> = {}>(args?: Subset<T, Milestone$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notes<T extends Milestone$notesArgs<ExtArgs> = {}>(args?: Subset<T, Milestone$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stages<T extends Milestone$stagesArgs<ExtArgs> = {}>(args?: Subset<T, Milestone$stagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    events<T extends Milestone$eventsArgs<ExtArgs> = {}>(args?: Subset<T, Milestone$eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Milestone model
   */
  interface MilestoneFieldRefs {
    readonly id: FieldRef<"Milestone", 'String'>
    readonly order: FieldRef<"Milestone", 'Decimal'>
    readonly title: FieldRef<"Milestone", 'String'>
    readonly description: FieldRef<"Milestone", 'String'>
    readonly plannedStartDate: FieldRef<"Milestone", 'DateTime'>
    readonly plannedEndDate: FieldRef<"Milestone", 'DateTime'>
    readonly actualStartDate: FieldRef<"Milestone", 'DateTime'>
    readonly actualEndDate: FieldRef<"Milestone", 'DateTime'>
    readonly approvedDate: FieldRef<"Milestone", 'DateTime'>
    readonly share: FieldRef<"Milestone", 'Decimal'>
    readonly amount: FieldRef<"Milestone", 'Decimal'>
    readonly deliverables: FieldRef<"Milestone", 'String'>
    readonly progress: FieldRef<"Milestone", 'Decimal'>
    readonly revision: FieldRef<"Milestone", 'Decimal'>
    readonly createdAt: FieldRef<"Milestone", 'DateTime'>
    readonly updatedAt: FieldRef<"Milestone", 'DateTime'>
    readonly projectId: FieldRef<"Milestone", 'String'>
    readonly assigneeId: FieldRef<"Milestone", 'String'>
    readonly createdById: FieldRef<"Milestone", 'String'>
    readonly updatedById: FieldRef<"Milestone", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Milestone findUnique
   */
  export type MilestoneFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    /**
     * Filter, which Milestone to fetch.
     */
    where: MilestoneWhereUniqueInput
  }

  /**
   * Milestone findUniqueOrThrow
   */
  export type MilestoneFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    /**
     * Filter, which Milestone to fetch.
     */
    where: MilestoneWhereUniqueInput
  }

  /**
   * Milestone findFirst
   */
  export type MilestoneFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    /**
     * Filter, which Milestone to fetch.
     */
    where?: MilestoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Milestones to fetch.
     */
    orderBy?: MilestoneOrderByWithRelationInput | MilestoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Milestones.
     */
    cursor?: MilestoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Milestones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Milestones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Milestones.
     */
    distinct?: MilestoneScalarFieldEnum | MilestoneScalarFieldEnum[]
  }

  /**
   * Milestone findFirstOrThrow
   */
  export type MilestoneFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    /**
     * Filter, which Milestone to fetch.
     */
    where?: MilestoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Milestones to fetch.
     */
    orderBy?: MilestoneOrderByWithRelationInput | MilestoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Milestones.
     */
    cursor?: MilestoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Milestones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Milestones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Milestones.
     */
    distinct?: MilestoneScalarFieldEnum | MilestoneScalarFieldEnum[]
  }

  /**
   * Milestone findMany
   */
  export type MilestoneFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    /**
     * Filter, which Milestones to fetch.
     */
    where?: MilestoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Milestones to fetch.
     */
    orderBy?: MilestoneOrderByWithRelationInput | MilestoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Milestones.
     */
    cursor?: MilestoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Milestones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Milestones.
     */
    skip?: number
    distinct?: MilestoneScalarFieldEnum | MilestoneScalarFieldEnum[]
  }

  /**
   * Milestone create
   */
  export type MilestoneCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    /**
     * The data needed to create a Milestone.
     */
    data?: XOR<MilestoneCreateInput, MilestoneUncheckedCreateInput>
  }

  /**
   * Milestone createMany
   */
  export type MilestoneCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Milestones.
     */
    data: MilestoneCreateManyInput | MilestoneCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Milestone createManyAndReturn
   */
  export type MilestoneCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * The data used to create many Milestones.
     */
    data: MilestoneCreateManyInput | MilestoneCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Milestone update
   */
  export type MilestoneUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    /**
     * The data needed to update a Milestone.
     */
    data: XOR<MilestoneUpdateInput, MilestoneUncheckedUpdateInput>
    /**
     * Choose, which Milestone to update.
     */
    where: MilestoneWhereUniqueInput
  }

  /**
   * Milestone updateMany
   */
  export type MilestoneUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Milestones.
     */
    data: XOR<MilestoneUpdateManyMutationInput, MilestoneUncheckedUpdateManyInput>
    /**
     * Filter which Milestones to update
     */
    where?: MilestoneWhereInput
    /**
     * Limit how many Milestones to update.
     */
    limit?: number
  }

  /**
   * Milestone updateManyAndReturn
   */
  export type MilestoneUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * The data used to update Milestones.
     */
    data: XOR<MilestoneUpdateManyMutationInput, MilestoneUncheckedUpdateManyInput>
    /**
     * Filter which Milestones to update
     */
    where?: MilestoneWhereInput
    /**
     * Limit how many Milestones to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Milestone upsert
   */
  export type MilestoneUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    /**
     * The filter to search for the Milestone to update in case it exists.
     */
    where: MilestoneWhereUniqueInput
    /**
     * In case the Milestone found by the `where` argument doesn't exist, create a new Milestone with this data.
     */
    create: XOR<MilestoneCreateInput, MilestoneUncheckedCreateInput>
    /**
     * In case the Milestone was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MilestoneUpdateInput, MilestoneUncheckedUpdateInput>
  }

  /**
   * Milestone delete
   */
  export type MilestoneDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    /**
     * Filter which Milestone to delete.
     */
    where: MilestoneWhereUniqueInput
  }

  /**
   * Milestone deleteMany
   */
  export type MilestoneDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Milestones to delete
     */
    where?: MilestoneWhereInput
    /**
     * Limit how many Milestones to delete.
     */
    limit?: number
  }

  /**
   * Milestone.project
   */
  export type Milestone$projectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
  }

  /**
   * Milestone.assignee
   */
  export type Milestone$assigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Milestone.createdBy
   */
  export type Milestone$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Milestone.updatedBy
   */
  export type Milestone$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Milestone.tasks
   */
  export type Milestone$tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Milestone.notes
   */
  export type Milestone$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Milestone.stages
   */
  export type Milestone$stagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    where?: StageWhereInput
    orderBy?: StageOrderByWithRelationInput | StageOrderByWithRelationInput[]
    cursor?: StageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StageScalarFieldEnum | StageScalarFieldEnum[]
  }

  /**
   * Milestone.events
   */
  export type Milestone$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    where?: EventWhereInput
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    cursor?: EventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Milestone without action
   */
  export type MilestoneDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
  }


  /**
   * Model Task
   */

  export type AggregateTask = {
    _count: TaskCountAggregateOutputType | null
    _avg: TaskAvgAggregateOutputType | null
    _sum: TaskSumAggregateOutputType | null
    _min: TaskMinAggregateOutputType | null
    _max: TaskMaxAggregateOutputType | null
  }

  export type TaskAvgAggregateOutputType = {
    order: Decimal | null
    progress: Decimal | null
  }

  export type TaskSumAggregateOutputType = {
    order: Decimal | null
    progress: Decimal | null
  }

  export type TaskMinAggregateOutputType = {
    id: string | null
    order: Decimal | null
    title: string | null
    plannedStartDate: Date | null
    plannedEndDate: Date | null
    actualStartDate: Date | null
    actualEndDate: Date | null
    progress: Decimal | null
    deliverables: string | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
    milestoneId: string | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
  }

  export type TaskMaxAggregateOutputType = {
    id: string | null
    order: Decimal | null
    title: string | null
    plannedStartDate: Date | null
    plannedEndDate: Date | null
    actualStartDate: Date | null
    actualEndDate: Date | null
    progress: Decimal | null
    deliverables: string | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
    milestoneId: string | null
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
  }

  export type TaskCountAggregateOutputType = {
    id: number
    order: number
    title: number
    plannedStartDate: number
    plannedEndDate: number
    actualStartDate: number
    actualEndDate: number
    progress: number
    deliverables: number
    remarks: number
    createdAt: number
    updatedAt: number
    milestoneId: number
    assigneeId: number
    createdById: number
    updatedById: number
    _all: number
  }


  export type TaskAvgAggregateInputType = {
    order?: true
    progress?: true
  }

  export type TaskSumAggregateInputType = {
    order?: true
    progress?: true
  }

  export type TaskMinAggregateInputType = {
    id?: true
    order?: true
    title?: true
    plannedStartDate?: true
    plannedEndDate?: true
    actualStartDate?: true
    actualEndDate?: true
    progress?: true
    deliverables?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
    milestoneId?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
  }

  export type TaskMaxAggregateInputType = {
    id?: true
    order?: true
    title?: true
    plannedStartDate?: true
    plannedEndDate?: true
    actualStartDate?: true
    actualEndDate?: true
    progress?: true
    deliverables?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
    milestoneId?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
  }

  export type TaskCountAggregateInputType = {
    id?: true
    order?: true
    title?: true
    plannedStartDate?: true
    plannedEndDate?: true
    actualStartDate?: true
    actualEndDate?: true
    progress?: true
    deliverables?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
    milestoneId?: true
    assigneeId?: true
    createdById?: true
    updatedById?: true
    _all?: true
  }

  export type TaskAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Task to aggregate.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tasks
    **/
    _count?: true | TaskCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TaskAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TaskSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TaskMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TaskMaxAggregateInputType
  }

  export type GetTaskAggregateType<T extends TaskAggregateArgs> = {
        [P in keyof T & keyof AggregateTask]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTask[P]>
      : GetScalarType<T[P], AggregateTask[P]>
  }




  export type TaskGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithAggregationInput | TaskOrderByWithAggregationInput[]
    by: TaskScalarFieldEnum[] | TaskScalarFieldEnum
    having?: TaskScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TaskCountAggregateInputType | true
    _avg?: TaskAvgAggregateInputType
    _sum?: TaskSumAggregateInputType
    _min?: TaskMinAggregateInputType
    _max?: TaskMaxAggregateInputType
  }

  export type TaskGroupByOutputType = {
    id: string
    order: Decimal | null
    title: string
    plannedStartDate: Date | null
    plannedEndDate: Date | null
    actualStartDate: Date | null
    actualEndDate: Date | null
    progress: Decimal | null
    deliverables: string | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
    milestoneId: string
    assigneeId: string | null
    createdById: string | null
    updatedById: string | null
    _count: TaskCountAggregateOutputType | null
    _avg: TaskAvgAggregateOutputType | null
    _sum: TaskSumAggregateOutputType | null
    _min: TaskMinAggregateOutputType | null
    _max: TaskMaxAggregateOutputType | null
  }

  type GetTaskGroupByPayload<T extends TaskGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TaskGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TaskGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TaskGroupByOutputType[P]>
            : GetScalarType<T[P], TaskGroupByOutputType[P]>
        }
      >
    >


  export type TaskSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order?: boolean
    title?: boolean
    plannedStartDate?: boolean
    plannedEndDate?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    progress?: boolean
    deliverables?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    milestoneId?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    milestone?: boolean | MilestoneDefaultArgs<ExtArgs>
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
    createdBy?: boolean | Task$createdByArgs<ExtArgs>
    updatedBy?: boolean | Task$updatedByArgs<ExtArgs>
    members?: boolean | Task$membersArgs<ExtArgs>
    notes?: boolean | Task$notesArgs<ExtArgs>
    stages?: boolean | Task$stagesArgs<ExtArgs>
    events?: boolean | Task$eventsArgs<ExtArgs>
    expenses?: boolean | Task$expensesArgs<ExtArgs>
    funds?: boolean | Task$fundsArgs<ExtArgs>
    _count?: boolean | TaskCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["task"]>

  export type TaskSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order?: boolean
    title?: boolean
    plannedStartDate?: boolean
    plannedEndDate?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    progress?: boolean
    deliverables?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    milestoneId?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    milestone?: boolean | MilestoneDefaultArgs<ExtArgs>
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
    createdBy?: boolean | Task$createdByArgs<ExtArgs>
    updatedBy?: boolean | Task$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["task"]>

  export type TaskSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order?: boolean
    title?: boolean
    plannedStartDate?: boolean
    plannedEndDate?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    progress?: boolean
    deliverables?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    milestoneId?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
    milestone?: boolean | MilestoneDefaultArgs<ExtArgs>
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
    createdBy?: boolean | Task$createdByArgs<ExtArgs>
    updatedBy?: boolean | Task$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["task"]>

  export type TaskSelectScalar = {
    id?: boolean
    order?: boolean
    title?: boolean
    plannedStartDate?: boolean
    plannedEndDate?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    progress?: boolean
    deliverables?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    milestoneId?: boolean
    assigneeId?: boolean
    createdById?: boolean
    updatedById?: boolean
  }

  export type TaskOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order" | "title" | "plannedStartDate" | "plannedEndDate" | "actualStartDate" | "actualEndDate" | "progress" | "deliverables" | "remarks" | "createdAt" | "updatedAt" | "milestoneId" | "assigneeId" | "createdById" | "updatedById", ExtArgs["result"]["task"]>
  export type TaskInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    milestone?: boolean | MilestoneDefaultArgs<ExtArgs>
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
    createdBy?: boolean | Task$createdByArgs<ExtArgs>
    updatedBy?: boolean | Task$updatedByArgs<ExtArgs>
    members?: boolean | Task$membersArgs<ExtArgs>
    notes?: boolean | Task$notesArgs<ExtArgs>
    stages?: boolean | Task$stagesArgs<ExtArgs>
    events?: boolean | Task$eventsArgs<ExtArgs>
    expenses?: boolean | Task$expensesArgs<ExtArgs>
    funds?: boolean | Task$fundsArgs<ExtArgs>
    _count?: boolean | TaskCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TaskIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    milestone?: boolean | MilestoneDefaultArgs<ExtArgs>
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
    createdBy?: boolean | Task$createdByArgs<ExtArgs>
    updatedBy?: boolean | Task$updatedByArgs<ExtArgs>
  }
  export type TaskIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    milestone?: boolean | MilestoneDefaultArgs<ExtArgs>
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
    createdBy?: boolean | Task$createdByArgs<ExtArgs>
    updatedBy?: boolean | Task$updatedByArgs<ExtArgs>
  }

  export type $TaskPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Task"
    objects: {
      milestone: Prisma.$MilestonePayload<ExtArgs>
      assignee: Prisma.$UserPayload<ExtArgs> | null
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      members: Prisma.$UserPayload<ExtArgs>[]
      notes: Prisma.$NotePayload<ExtArgs>[]
      stages: Prisma.$StagePayload<ExtArgs>[]
      events: Prisma.$EventPayload<ExtArgs>[]
      expenses: Prisma.$ExpensePayload<ExtArgs>[]
      funds: Prisma.$FundPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      order: Prisma.Decimal | null
      title: string
      plannedStartDate: Date | null
      plannedEndDate: Date | null
      actualStartDate: Date | null
      actualEndDate: Date | null
      progress: Prisma.Decimal | null
      deliverables: string | null
      remarks: string | null
      createdAt: Date | null
      updatedAt: Date | null
      milestoneId: string
      assigneeId: string | null
      createdById: string | null
      updatedById: string | null
    }, ExtArgs["result"]["task"]>
    composites: {}
  }

  type TaskGetPayload<S extends boolean | null | undefined | TaskDefaultArgs> = $Result.GetResult<Prisma.$TaskPayload, S>

  type TaskCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TaskFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TaskCountAggregateInputType | true
    }

  export interface TaskDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Task'], meta: { name: 'Task' } }
    /**
     * Find zero or one Task that matches the filter.
     * @param {TaskFindUniqueArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TaskFindUniqueArgs>(args: SelectSubset<T, TaskFindUniqueArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Task that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TaskFindUniqueOrThrowArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TaskFindUniqueOrThrowArgs>(args: SelectSubset<T, TaskFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Task that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskFindFirstArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TaskFindFirstArgs>(args?: SelectSubset<T, TaskFindFirstArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Task that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskFindFirstOrThrowArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TaskFindFirstOrThrowArgs>(args?: SelectSubset<T, TaskFindFirstOrThrowArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tasks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tasks
     * const tasks = await prisma.task.findMany()
     * 
     * // Get first 10 Tasks
     * const tasks = await prisma.task.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const taskWithIdOnly = await prisma.task.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TaskFindManyArgs>(args?: SelectSubset<T, TaskFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Task.
     * @param {TaskCreateArgs} args - Arguments to create a Task.
     * @example
     * // Create one Task
     * const Task = await prisma.task.create({
     *   data: {
     *     // ... data to create a Task
     *   }
     * })
     * 
     */
    create<T extends TaskCreateArgs>(args: SelectSubset<T, TaskCreateArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tasks.
     * @param {TaskCreateManyArgs} args - Arguments to create many Tasks.
     * @example
     * // Create many Tasks
     * const task = await prisma.task.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TaskCreateManyArgs>(args?: SelectSubset<T, TaskCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tasks and returns the data saved in the database.
     * @param {TaskCreateManyAndReturnArgs} args - Arguments to create many Tasks.
     * @example
     * // Create many Tasks
     * const task = await prisma.task.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tasks and only return the `id`
     * const taskWithIdOnly = await prisma.task.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TaskCreateManyAndReturnArgs>(args?: SelectSubset<T, TaskCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Task.
     * @param {TaskDeleteArgs} args - Arguments to delete one Task.
     * @example
     * // Delete one Task
     * const Task = await prisma.task.delete({
     *   where: {
     *     // ... filter to delete one Task
     *   }
     * })
     * 
     */
    delete<T extends TaskDeleteArgs>(args: SelectSubset<T, TaskDeleteArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Task.
     * @param {TaskUpdateArgs} args - Arguments to update one Task.
     * @example
     * // Update one Task
     * const task = await prisma.task.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TaskUpdateArgs>(args: SelectSubset<T, TaskUpdateArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tasks.
     * @param {TaskDeleteManyArgs} args - Arguments to filter Tasks to delete.
     * @example
     * // Delete a few Tasks
     * const { count } = await prisma.task.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TaskDeleteManyArgs>(args?: SelectSubset<T, TaskDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tasks
     * const task = await prisma.task.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TaskUpdateManyArgs>(args: SelectSubset<T, TaskUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tasks and returns the data updated in the database.
     * @param {TaskUpdateManyAndReturnArgs} args - Arguments to update many Tasks.
     * @example
     * // Update many Tasks
     * const task = await prisma.task.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tasks and only return the `id`
     * const taskWithIdOnly = await prisma.task.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TaskUpdateManyAndReturnArgs>(args: SelectSubset<T, TaskUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Task.
     * @param {TaskUpsertArgs} args - Arguments to update or create a Task.
     * @example
     * // Update or create a Task
     * const task = await prisma.task.upsert({
     *   create: {
     *     // ... data to create a Task
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Task we want to update
     *   }
     * })
     */
    upsert<T extends TaskUpsertArgs>(args: SelectSubset<T, TaskUpsertArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskCountArgs} args - Arguments to filter Tasks to count.
     * @example
     * // Count the number of Tasks
     * const count = await prisma.task.count({
     *   where: {
     *     // ... the filter for the Tasks we want to count
     *   }
     * })
    **/
    count<T extends TaskCountArgs>(
      args?: Subset<T, TaskCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TaskCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Task.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TaskAggregateArgs>(args: Subset<T, TaskAggregateArgs>): Prisma.PrismaPromise<GetTaskAggregateType<T>>

    /**
     * Group by Task.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TaskGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TaskGroupByArgs['orderBy'] }
        : { orderBy?: TaskGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TaskGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTaskGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Task model
   */
  readonly fields: TaskFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Task.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TaskClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    milestone<T extends MilestoneDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MilestoneDefaultArgs<ExtArgs>>): Prisma__MilestoneClient<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    assignee<T extends Task$assigneeArgs<ExtArgs> = {}>(args?: Subset<T, Task$assigneeArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends Task$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Task$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Task$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Task$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    members<T extends Task$membersArgs<ExtArgs> = {}>(args?: Subset<T, Task$membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notes<T extends Task$notesArgs<ExtArgs> = {}>(args?: Subset<T, Task$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stages<T extends Task$stagesArgs<ExtArgs> = {}>(args?: Subset<T, Task$stagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    events<T extends Task$eventsArgs<ExtArgs> = {}>(args?: Subset<T, Task$eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    expenses<T extends Task$expensesArgs<ExtArgs> = {}>(args?: Subset<T, Task$expensesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    funds<T extends Task$fundsArgs<ExtArgs> = {}>(args?: Subset<T, Task$fundsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Task model
   */
  interface TaskFieldRefs {
    readonly id: FieldRef<"Task", 'String'>
    readonly order: FieldRef<"Task", 'Decimal'>
    readonly title: FieldRef<"Task", 'String'>
    readonly plannedStartDate: FieldRef<"Task", 'DateTime'>
    readonly plannedEndDate: FieldRef<"Task", 'DateTime'>
    readonly actualStartDate: FieldRef<"Task", 'DateTime'>
    readonly actualEndDate: FieldRef<"Task", 'DateTime'>
    readonly progress: FieldRef<"Task", 'Decimal'>
    readonly deliverables: FieldRef<"Task", 'String'>
    readonly remarks: FieldRef<"Task", 'String'>
    readonly createdAt: FieldRef<"Task", 'DateTime'>
    readonly updatedAt: FieldRef<"Task", 'DateTime'>
    readonly milestoneId: FieldRef<"Task", 'String'>
    readonly assigneeId: FieldRef<"Task", 'String'>
    readonly createdById: FieldRef<"Task", 'String'>
    readonly updatedById: FieldRef<"Task", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Task findUnique
   */
  export type TaskFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task findUniqueOrThrow
   */
  export type TaskFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task findFirst
   */
  export type TaskFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tasks.
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tasks.
     */
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Task findFirstOrThrow
   */
  export type TaskFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tasks.
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tasks.
     */
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Task findMany
   */
  export type TaskFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Tasks to fetch.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tasks.
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Task create
   */
  export type TaskCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * The data needed to create a Task.
     */
    data: XOR<TaskCreateInput, TaskUncheckedCreateInput>
  }

  /**
   * Task createMany
   */
  export type TaskCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tasks.
     */
    data: TaskCreateManyInput | TaskCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Task createManyAndReturn
   */
  export type TaskCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * The data used to create many Tasks.
     */
    data: TaskCreateManyInput | TaskCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Task update
   */
  export type TaskUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * The data needed to update a Task.
     */
    data: XOR<TaskUpdateInput, TaskUncheckedUpdateInput>
    /**
     * Choose, which Task to update.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task updateMany
   */
  export type TaskUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tasks.
     */
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyInput>
    /**
     * Filter which Tasks to update
     */
    where?: TaskWhereInput
    /**
     * Limit how many Tasks to update.
     */
    limit?: number
  }

  /**
   * Task updateManyAndReturn
   */
  export type TaskUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * The data used to update Tasks.
     */
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyInput>
    /**
     * Filter which Tasks to update
     */
    where?: TaskWhereInput
    /**
     * Limit how many Tasks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Task upsert
   */
  export type TaskUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * The filter to search for the Task to update in case it exists.
     */
    where: TaskWhereUniqueInput
    /**
     * In case the Task found by the `where` argument doesn't exist, create a new Task with this data.
     */
    create: XOR<TaskCreateInput, TaskUncheckedCreateInput>
    /**
     * In case the Task was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TaskUpdateInput, TaskUncheckedUpdateInput>
  }

  /**
   * Task delete
   */
  export type TaskDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter which Task to delete.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task deleteMany
   */
  export type TaskDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tasks to delete
     */
    where?: TaskWhereInput
    /**
     * Limit how many Tasks to delete.
     */
    limit?: number
  }

  /**
   * Task.assignee
   */
  export type Task$assigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Task.createdBy
   */
  export type Task$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Task.updatedBy
   */
  export type Task$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Task.members
   */
  export type Task$membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Task.notes
   */
  export type Task$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Task.stages
   */
  export type Task$stagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    where?: StageWhereInput
    orderBy?: StageOrderByWithRelationInput | StageOrderByWithRelationInput[]
    cursor?: StageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StageScalarFieldEnum | StageScalarFieldEnum[]
  }

  /**
   * Task.events
   */
  export type Task$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    where?: EventWhereInput
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    cursor?: EventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Task.expenses
   */
  export type Task$expensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    where?: ExpenseWhereInput
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    cursor?: ExpenseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }

  /**
   * Task.funds
   */
  export type Task$fundsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    where?: FundWhereInput
    orderBy?: FundOrderByWithRelationInput | FundOrderByWithRelationInput[]
    cursor?: FundWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FundScalarFieldEnum | FundScalarFieldEnum[]
  }

  /**
   * Task without action
   */
  export type TaskDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    username: string | null
    password: string | null
    createdAt: Date | null
    updatedAt: Date | null
    status: string | null
    roleId: string | null
    organizationId: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    username: string | null
    password: string | null
    createdAt: Date | null
    updatedAt: Date | null
    status: string | null
    roleId: string | null
    organizationId: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    username: number
    password: number
    createdAt: number
    updatedAt: number
    status: number
    roleId: number
    organizationId: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    createdAt?: true
    updatedAt?: true
    status?: true
    roleId?: true
    organizationId?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    createdAt?: true
    updatedAt?: true
    status?: true
    roleId?: true
    organizationId?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    createdAt?: true
    updatedAt?: true
    status?: true
    roleId?: true
    organizationId?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    username: string
    password: string
    createdAt: Date | null
    updatedAt: Date | null
    status: string
    roleId: string | null
    organizationId: string | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
    roleId?: boolean
    organizationId?: boolean
    role?: boolean | User$roleArgs<ExtArgs>
    organization?: boolean | User$organizationArgs<ExtArgs>
    profile?: boolean | User$profileArgs<ExtArgs>
    BudgetAssignee?: boolean | User$BudgetAssigneeArgs<ExtArgs>
    CreatorBudget?: boolean | User$CreatorBudgetArgs<ExtArgs>
    UpdaterBudget?: boolean | User$UpdaterBudgetArgs<ExtArgs>
    CreatorClient?: boolean | User$CreatorClientArgs<ExtArgs>
    UpdaterClient?: boolean | User$UpdaterClientArgs<ExtArgs>
    CreatorEvent?: boolean | User$CreatorEventArgs<ExtArgs>
    UpdaterEvent?: boolean | User$UpdaterEventArgs<ExtArgs>
    CreatorExpense?: boolean | User$CreatorExpenseArgs<ExtArgs>
    UpdaterExpense?: boolean | User$UpdaterExpenseArgs<ExtArgs>
    FundAssignee?: boolean | User$FundAssigneeArgs<ExtArgs>
    CreatorFund?: boolean | User$CreatorFundArgs<ExtArgs>
    UpdaterFund?: boolean | User$UpdaterFundArgs<ExtArgs>
    MilestoneAssignee?: boolean | User$MilestoneAssigneeArgs<ExtArgs>
    CreatorMilestone?: boolean | User$CreatorMilestoneArgs<ExtArgs>
    UpdaterMilestone?: boolean | User$UpdaterMilestoneArgs<ExtArgs>
    CreatorNote?: boolean | User$CreatorNoteArgs<ExtArgs>
    UpdaterNote?: boolean | User$UpdaterNoteArgs<ExtArgs>
    CreatorProduct?: boolean | User$CreatorProductArgs<ExtArgs>
    UpdaterProduct?: boolean | User$UpdaterProductArgs<ExtArgs>
    ProjectAssignee?: boolean | User$ProjectAssigneeArgs<ExtArgs>
    CreatorProject?: boolean | User$CreatorProjectArgs<ExtArgs>
    UpdaterProject?: boolean | User$UpdaterProjectArgs<ExtArgs>
    ProjectMember?: boolean | User$ProjectMemberArgs<ExtArgs>
    CreatorStage?: boolean | User$CreatorStageArgs<ExtArgs>
    UpdaterStage?: boolean | User$UpdaterStageArgs<ExtArgs>
    TaskAssignee?: boolean | User$TaskAssigneeArgs<ExtArgs>
    CreatorTask?: boolean | User$CreatorTaskArgs<ExtArgs>
    UpdaterTask?: boolean | User$UpdaterTaskArgs<ExtArgs>
    TaskMember?: boolean | User$TaskMemberArgs<ExtArgs>
    PipelineAssignee?: boolean | User$PipelineAssigneeArgs<ExtArgs>
    CreatorPipeline?: boolean | User$CreatorPipelineArgs<ExtArgs>
    UpdaterPipeline?: boolean | User$UpdaterPipelineArgs<ExtArgs>
    PipelineMember?: boolean | User$PipelineMemberArgs<ExtArgs>
    CreatorVendor?: boolean | User$CreatorVendorArgs<ExtArgs>
    UpdaterVendor?: boolean | User$UpdaterVendorArgs<ExtArgs>
    CreatorProfile?: boolean | User$CreatorProfileArgs<ExtArgs>
    UpdaterProfile?: boolean | User$UpdaterProfileArgs<ExtArgs>
    CreatorCostType?: boolean | User$CreatorCostTypeArgs<ExtArgs>
    UpdaterCostType?: boolean | User$UpdaterCostTypeArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
    roleId?: boolean
    organizationId?: boolean
    role?: boolean | User$roleArgs<ExtArgs>
    organization?: boolean | User$organizationArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
    roleId?: boolean
    organizationId?: boolean
    role?: boolean | User$roleArgs<ExtArgs>
    organization?: boolean | User$organizationArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
    roleId?: boolean
    organizationId?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "password" | "createdAt" | "updatedAt" | "status" | "roleId" | "organizationId", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | User$roleArgs<ExtArgs>
    organization?: boolean | User$organizationArgs<ExtArgs>
    profile?: boolean | User$profileArgs<ExtArgs>
    BudgetAssignee?: boolean | User$BudgetAssigneeArgs<ExtArgs>
    CreatorBudget?: boolean | User$CreatorBudgetArgs<ExtArgs>
    UpdaterBudget?: boolean | User$UpdaterBudgetArgs<ExtArgs>
    CreatorClient?: boolean | User$CreatorClientArgs<ExtArgs>
    UpdaterClient?: boolean | User$UpdaterClientArgs<ExtArgs>
    CreatorEvent?: boolean | User$CreatorEventArgs<ExtArgs>
    UpdaterEvent?: boolean | User$UpdaterEventArgs<ExtArgs>
    CreatorExpense?: boolean | User$CreatorExpenseArgs<ExtArgs>
    UpdaterExpense?: boolean | User$UpdaterExpenseArgs<ExtArgs>
    FundAssignee?: boolean | User$FundAssigneeArgs<ExtArgs>
    CreatorFund?: boolean | User$CreatorFundArgs<ExtArgs>
    UpdaterFund?: boolean | User$UpdaterFundArgs<ExtArgs>
    MilestoneAssignee?: boolean | User$MilestoneAssigneeArgs<ExtArgs>
    CreatorMilestone?: boolean | User$CreatorMilestoneArgs<ExtArgs>
    UpdaterMilestone?: boolean | User$UpdaterMilestoneArgs<ExtArgs>
    CreatorNote?: boolean | User$CreatorNoteArgs<ExtArgs>
    UpdaterNote?: boolean | User$UpdaterNoteArgs<ExtArgs>
    CreatorProduct?: boolean | User$CreatorProductArgs<ExtArgs>
    UpdaterProduct?: boolean | User$UpdaterProductArgs<ExtArgs>
    ProjectAssignee?: boolean | User$ProjectAssigneeArgs<ExtArgs>
    CreatorProject?: boolean | User$CreatorProjectArgs<ExtArgs>
    UpdaterProject?: boolean | User$UpdaterProjectArgs<ExtArgs>
    ProjectMember?: boolean | User$ProjectMemberArgs<ExtArgs>
    CreatorStage?: boolean | User$CreatorStageArgs<ExtArgs>
    UpdaterStage?: boolean | User$UpdaterStageArgs<ExtArgs>
    TaskAssignee?: boolean | User$TaskAssigneeArgs<ExtArgs>
    CreatorTask?: boolean | User$CreatorTaskArgs<ExtArgs>
    UpdaterTask?: boolean | User$UpdaterTaskArgs<ExtArgs>
    TaskMember?: boolean | User$TaskMemberArgs<ExtArgs>
    PipelineAssignee?: boolean | User$PipelineAssigneeArgs<ExtArgs>
    CreatorPipeline?: boolean | User$CreatorPipelineArgs<ExtArgs>
    UpdaterPipeline?: boolean | User$UpdaterPipelineArgs<ExtArgs>
    PipelineMember?: boolean | User$PipelineMemberArgs<ExtArgs>
    CreatorVendor?: boolean | User$CreatorVendorArgs<ExtArgs>
    UpdaterVendor?: boolean | User$UpdaterVendorArgs<ExtArgs>
    CreatorProfile?: boolean | User$CreatorProfileArgs<ExtArgs>
    UpdaterProfile?: boolean | User$UpdaterProfileArgs<ExtArgs>
    CreatorCostType?: boolean | User$CreatorCostTypeArgs<ExtArgs>
    UpdaterCostType?: boolean | User$UpdaterCostTypeArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | User$roleArgs<ExtArgs>
    organization?: boolean | User$organizationArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | User$roleArgs<ExtArgs>
    organization?: boolean | User$organizationArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      role: Prisma.$RolePayload<ExtArgs> | null
      organization: Prisma.$OrganizationPayload<ExtArgs> | null
      profile: Prisma.$ProfilePayload<ExtArgs> | null
      BudgetAssignee: Prisma.$BudgetPayload<ExtArgs>[]
      CreatorBudget: Prisma.$BudgetPayload<ExtArgs>[]
      UpdaterBudget: Prisma.$BudgetPayload<ExtArgs>[]
      CreatorClient: Prisma.$ClientPayload<ExtArgs>[]
      UpdaterClient: Prisma.$ClientPayload<ExtArgs>[]
      CreatorEvent: Prisma.$EventPayload<ExtArgs>[]
      UpdaterEvent: Prisma.$EventPayload<ExtArgs>[]
      CreatorExpense: Prisma.$ExpensePayload<ExtArgs>[]
      UpdaterExpense: Prisma.$ExpensePayload<ExtArgs>[]
      FundAssignee: Prisma.$FundPayload<ExtArgs>[]
      CreatorFund: Prisma.$FundPayload<ExtArgs>[]
      UpdaterFund: Prisma.$FundPayload<ExtArgs>[]
      MilestoneAssignee: Prisma.$MilestonePayload<ExtArgs>[]
      CreatorMilestone: Prisma.$MilestonePayload<ExtArgs>[]
      UpdaterMilestone: Prisma.$MilestonePayload<ExtArgs>[]
      CreatorNote: Prisma.$NotePayload<ExtArgs>[]
      UpdaterNote: Prisma.$NotePayload<ExtArgs>[]
      CreatorProduct: Prisma.$ProductPayload<ExtArgs>[]
      UpdaterProduct: Prisma.$ProductPayload<ExtArgs>[]
      ProjectAssignee: Prisma.$ProjectPayload<ExtArgs>[]
      CreatorProject: Prisma.$ProjectPayload<ExtArgs>[]
      UpdaterProject: Prisma.$ProjectPayload<ExtArgs>[]
      ProjectMember: Prisma.$ProjectPayload<ExtArgs>[]
      CreatorStage: Prisma.$StagePayload<ExtArgs>[]
      UpdaterStage: Prisma.$StagePayload<ExtArgs>[]
      TaskAssignee: Prisma.$TaskPayload<ExtArgs>[]
      CreatorTask: Prisma.$TaskPayload<ExtArgs>[]
      UpdaterTask: Prisma.$TaskPayload<ExtArgs>[]
      TaskMember: Prisma.$TaskPayload<ExtArgs>[]
      PipelineAssignee: Prisma.$PipelinePayload<ExtArgs>[]
      CreatorPipeline: Prisma.$PipelinePayload<ExtArgs>[]
      UpdaterPipeline: Prisma.$PipelinePayload<ExtArgs>[]
      PipelineMember: Prisma.$PipelinePayload<ExtArgs>[]
      CreatorVendor: Prisma.$VendorPayload<ExtArgs>[]
      UpdaterVendor: Prisma.$VendorPayload<ExtArgs>[]
      CreatorProfile: Prisma.$ProfilePayload<ExtArgs>[]
      UpdaterProfile: Prisma.$ProfilePayload<ExtArgs>[]
      CreatorCostType: Prisma.$CostTypePayload<ExtArgs>[]
      UpdaterCostType: Prisma.$CostTypePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      username: string
      password: string
      createdAt: Date | null
      updatedAt: Date | null
      status: string
      roleId: string | null
      organizationId: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    role<T extends User$roleArgs<ExtArgs> = {}>(args?: Subset<T, User$roleArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    organization<T extends User$organizationArgs<ExtArgs> = {}>(args?: Subset<T, User$organizationArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    profile<T extends User$profileArgs<ExtArgs> = {}>(args?: Subset<T, User$profileArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    BudgetAssignee<T extends User$BudgetAssigneeArgs<ExtArgs> = {}>(args?: Subset<T, User$BudgetAssigneeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatorBudget<T extends User$CreatorBudgetArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatorBudgetArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdaterBudget<T extends User$UpdaterBudgetArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdaterBudgetArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BudgetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatorClient<T extends User$CreatorClientArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatorClientArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdaterClient<T extends User$UpdaterClientArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdaterClientArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatorEvent<T extends User$CreatorEventArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatorEventArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdaterEvent<T extends User$UpdaterEventArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdaterEventArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatorExpense<T extends User$CreatorExpenseArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatorExpenseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdaterExpense<T extends User$UpdaterExpenseArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdaterExpenseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    FundAssignee<T extends User$FundAssigneeArgs<ExtArgs> = {}>(args?: Subset<T, User$FundAssigneeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatorFund<T extends User$CreatorFundArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatorFundArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdaterFund<T extends User$UpdaterFundArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdaterFundArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FundPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    MilestoneAssignee<T extends User$MilestoneAssigneeArgs<ExtArgs> = {}>(args?: Subset<T, User$MilestoneAssigneeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatorMilestone<T extends User$CreatorMilestoneArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatorMilestoneArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdaterMilestone<T extends User$UpdaterMilestoneArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdaterMilestoneArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatorNote<T extends User$CreatorNoteArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatorNoteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdaterNote<T extends User$UpdaterNoteArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdaterNoteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatorProduct<T extends User$CreatorProductArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatorProductArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdaterProduct<T extends User$UpdaterProductArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdaterProductArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ProjectAssignee<T extends User$ProjectAssigneeArgs<ExtArgs> = {}>(args?: Subset<T, User$ProjectAssigneeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatorProject<T extends User$CreatorProjectArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatorProjectArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdaterProject<T extends User$UpdaterProjectArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdaterProjectArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ProjectMember<T extends User$ProjectMemberArgs<ExtArgs> = {}>(args?: Subset<T, User$ProjectMemberArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatorStage<T extends User$CreatorStageArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatorStageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdaterStage<T extends User$UpdaterStageArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdaterStageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    TaskAssignee<T extends User$TaskAssigneeArgs<ExtArgs> = {}>(args?: Subset<T, User$TaskAssigneeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatorTask<T extends User$CreatorTaskArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatorTaskArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdaterTask<T extends User$UpdaterTaskArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdaterTaskArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    TaskMember<T extends User$TaskMemberArgs<ExtArgs> = {}>(args?: Subset<T, User$TaskMemberArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    PipelineAssignee<T extends User$PipelineAssigneeArgs<ExtArgs> = {}>(args?: Subset<T, User$PipelineAssigneeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatorPipeline<T extends User$CreatorPipelineArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatorPipelineArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdaterPipeline<T extends User$UpdaterPipelineArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdaterPipelineArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    PipelineMember<T extends User$PipelineMemberArgs<ExtArgs> = {}>(args?: Subset<T, User$PipelineMemberArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PipelinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatorVendor<T extends User$CreatorVendorArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatorVendorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdaterVendor<T extends User$UpdaterVendorArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdaterVendorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatorProfile<T extends User$CreatorProfileArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatorProfileArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdaterProfile<T extends User$UpdaterProfileArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdaterProfileArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatorCostType<T extends User$CreatorCostTypeArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatorCostTypeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdaterCostType<T extends User$UpdaterCostTypeArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdaterCostTypeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CostTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly status: FieldRef<"User", 'String'>
    readonly roleId: FieldRef<"User", 'String'>
    readonly organizationId: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.role
   */
  export type User$roleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    where?: RoleWhereInput
  }

  /**
   * User.organization
   */
  export type User$organizationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    where?: OrganizationWhereInput
  }

  /**
   * User.profile
   */
  export type User$profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
  }

  /**
   * User.BudgetAssignee
   */
  export type User$BudgetAssigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
    where?: BudgetWhereInput
    orderBy?: BudgetOrderByWithRelationInput | BudgetOrderByWithRelationInput[]
    cursor?: BudgetWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BudgetScalarFieldEnum | BudgetScalarFieldEnum[]
  }

  /**
   * User.CreatorBudget
   */
  export type User$CreatorBudgetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
    where?: BudgetWhereInput
    orderBy?: BudgetOrderByWithRelationInput | BudgetOrderByWithRelationInput[]
    cursor?: BudgetWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BudgetScalarFieldEnum | BudgetScalarFieldEnum[]
  }

  /**
   * User.UpdaterBudget
   */
  export type User$UpdaterBudgetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Budget
     */
    select?: BudgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Budget
     */
    omit?: BudgetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BudgetInclude<ExtArgs> | null
    where?: BudgetWhereInput
    orderBy?: BudgetOrderByWithRelationInput | BudgetOrderByWithRelationInput[]
    cursor?: BudgetWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BudgetScalarFieldEnum | BudgetScalarFieldEnum[]
  }

  /**
   * User.CreatorClient
   */
  export type User$CreatorClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    cursor?: ClientWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * User.UpdaterClient
   */
  export type User$UpdaterClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    cursor?: ClientWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * User.CreatorEvent
   */
  export type User$CreatorEventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    where?: EventWhereInput
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    cursor?: EventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * User.UpdaterEvent
   */
  export type User$UpdaterEventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    where?: EventWhereInput
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    cursor?: EventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * User.CreatorExpense
   */
  export type User$CreatorExpenseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    where?: ExpenseWhereInput
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    cursor?: ExpenseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }

  /**
   * User.UpdaterExpense
   */
  export type User$UpdaterExpenseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Expense
     */
    omit?: ExpenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    where?: ExpenseWhereInput
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    cursor?: ExpenseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }

  /**
   * User.FundAssignee
   */
  export type User$FundAssigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    where?: FundWhereInput
    orderBy?: FundOrderByWithRelationInput | FundOrderByWithRelationInput[]
    cursor?: FundWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FundScalarFieldEnum | FundScalarFieldEnum[]
  }

  /**
   * User.CreatorFund
   */
  export type User$CreatorFundArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    where?: FundWhereInput
    orderBy?: FundOrderByWithRelationInput | FundOrderByWithRelationInput[]
    cursor?: FundWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FundScalarFieldEnum | FundScalarFieldEnum[]
  }

  /**
   * User.UpdaterFund
   */
  export type User$UpdaterFundArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fund
     */
    select?: FundSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fund
     */
    omit?: FundOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FundInclude<ExtArgs> | null
    where?: FundWhereInput
    orderBy?: FundOrderByWithRelationInput | FundOrderByWithRelationInput[]
    cursor?: FundWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FundScalarFieldEnum | FundScalarFieldEnum[]
  }

  /**
   * User.MilestoneAssignee
   */
  export type User$MilestoneAssigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    where?: MilestoneWhereInput
    orderBy?: MilestoneOrderByWithRelationInput | MilestoneOrderByWithRelationInput[]
    cursor?: MilestoneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MilestoneScalarFieldEnum | MilestoneScalarFieldEnum[]
  }

  /**
   * User.CreatorMilestone
   */
  export type User$CreatorMilestoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    where?: MilestoneWhereInput
    orderBy?: MilestoneOrderByWithRelationInput | MilestoneOrderByWithRelationInput[]
    cursor?: MilestoneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MilestoneScalarFieldEnum | MilestoneScalarFieldEnum[]
  }

  /**
   * User.UpdaterMilestone
   */
  export type User$UpdaterMilestoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Milestone
     */
    select?: MilestoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Milestone
     */
    omit?: MilestoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MilestoneInclude<ExtArgs> | null
    where?: MilestoneWhereInput
    orderBy?: MilestoneOrderByWithRelationInput | MilestoneOrderByWithRelationInput[]
    cursor?: MilestoneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MilestoneScalarFieldEnum | MilestoneScalarFieldEnum[]
  }

  /**
   * User.CreatorNote
   */
  export type User$CreatorNoteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * User.UpdaterNote
   */
  export type User$UpdaterNoteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * User.CreatorProduct
   */
  export type User$CreatorProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * User.UpdaterProduct
   */
  export type User$UpdaterProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * User.ProjectAssignee
   */
  export type User$ProjectAssigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    cursor?: ProjectWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * User.CreatorProject
   */
  export type User$CreatorProjectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    cursor?: ProjectWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * User.UpdaterProject
   */
  export type User$UpdaterProjectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    cursor?: ProjectWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * User.ProjectMember
   */
  export type User$ProjectMemberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    cursor?: ProjectWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * User.CreatorStage
   */
  export type User$CreatorStageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    where?: StageWhereInput
    orderBy?: StageOrderByWithRelationInput | StageOrderByWithRelationInput[]
    cursor?: StageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StageScalarFieldEnum | StageScalarFieldEnum[]
  }

  /**
   * User.UpdaterStage
   */
  export type User$UpdaterStageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stage
     */
    select?: StageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stage
     */
    omit?: StageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StageInclude<ExtArgs> | null
    where?: StageWhereInput
    orderBy?: StageOrderByWithRelationInput | StageOrderByWithRelationInput[]
    cursor?: StageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StageScalarFieldEnum | StageScalarFieldEnum[]
  }

  /**
   * User.TaskAssignee
   */
  export type User$TaskAssigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * User.CreatorTask
   */
  export type User$CreatorTaskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * User.UpdaterTask
   */
  export type User$UpdaterTaskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * User.TaskMember
   */
  export type User$TaskMemberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * User.PipelineAssignee
   */
  export type User$PipelineAssigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    where?: PipelineWhereInput
    orderBy?: PipelineOrderByWithRelationInput | PipelineOrderByWithRelationInput[]
    cursor?: PipelineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PipelineScalarFieldEnum | PipelineScalarFieldEnum[]
  }

  /**
   * User.CreatorPipeline
   */
  export type User$CreatorPipelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    where?: PipelineWhereInput
    orderBy?: PipelineOrderByWithRelationInput | PipelineOrderByWithRelationInput[]
    cursor?: PipelineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PipelineScalarFieldEnum | PipelineScalarFieldEnum[]
  }

  /**
   * User.UpdaterPipeline
   */
  export type User$UpdaterPipelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    where?: PipelineWhereInput
    orderBy?: PipelineOrderByWithRelationInput | PipelineOrderByWithRelationInput[]
    cursor?: PipelineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PipelineScalarFieldEnum | PipelineScalarFieldEnum[]
  }

  /**
   * User.PipelineMember
   */
  export type User$PipelineMemberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pipeline
     */
    select?: PipelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pipeline
     */
    omit?: PipelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineInclude<ExtArgs> | null
    where?: PipelineWhereInput
    orderBy?: PipelineOrderByWithRelationInput | PipelineOrderByWithRelationInput[]
    cursor?: PipelineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PipelineScalarFieldEnum | PipelineScalarFieldEnum[]
  }

  /**
   * User.CreatorVendor
   */
  export type User$CreatorVendorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendor
     */
    omit?: VendorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    where?: VendorWhereInput
    orderBy?: VendorOrderByWithRelationInput | VendorOrderByWithRelationInput[]
    cursor?: VendorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VendorScalarFieldEnum | VendorScalarFieldEnum[]
  }

  /**
   * User.UpdaterVendor
   */
  export type User$UpdaterVendorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendor
     */
    omit?: VendorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    where?: VendorWhereInput
    orderBy?: VendorOrderByWithRelationInput | VendorOrderByWithRelationInput[]
    cursor?: VendorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VendorScalarFieldEnum | VendorScalarFieldEnum[]
  }

  /**
   * User.CreatorProfile
   */
  export type User$CreatorProfileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    cursor?: ProfileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * User.UpdaterProfile
   */
  export type User$UpdaterProfileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    cursor?: ProfileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * User.CreatorCostType
   */
  export type User$CreatorCostTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
    where?: CostTypeWhereInput
    orderBy?: CostTypeOrderByWithRelationInput | CostTypeOrderByWithRelationInput[]
    cursor?: CostTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CostTypeScalarFieldEnum | CostTypeScalarFieldEnum[]
  }

  /**
   * User.UpdaterCostType
   */
  export type User$UpdaterCostTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostType
     */
    select?: CostTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostType
     */
    omit?: CostTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostTypeInclude<ExtArgs> | null
    where?: CostTypeWhereInput
    orderBy?: CostTypeOrderByWithRelationInput | CostTypeOrderByWithRelationInput[]
    cursor?: CostTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CostTypeScalarFieldEnum | CostTypeScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleAvgAggregateOutputType = {
    level: number | null
  }

  export type RoleSumAggregateOutputType = {
    level: number | null
  }

  export type RoleMinAggregateOutputType = {
    id: string | null
    name: string | null
    level: number | null
  }

  export type RoleMaxAggregateOutputType = {
    id: string | null
    name: string | null
    level: number | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    name: number
    level: number
    _all: number
  }


  export type RoleAvgAggregateInputType = {
    level?: true
  }

  export type RoleSumAggregateInputType = {
    level?: true
  }

  export type RoleMinAggregateInputType = {
    id?: true
    name?: true
    level?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    name?: true
    level?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    name?: true
    level?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Role to aggregate.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithAggregationInput | RoleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _avg?: RoleAvgAggregateInputType
    _sum?: RoleSumAggregateInputType
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: string
    name: string
    level: number
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    level?: boolean
    users?: boolean | Role$usersArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    level?: boolean
  }, ExtArgs["result"]["role"]>

  export type RoleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    level?: boolean
  }, ExtArgs["result"]["role"]>

  export type RoleSelectScalar = {
    id?: boolean
    name?: boolean
    level?: boolean
  }

  export type RoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "level", ExtArgs["result"]["role"]>
  export type RoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Role$usersArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RoleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RoleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Role"
    objects: {
      users: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      level: number
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type RoleGetPayload<S extends boolean | null | undefined | RoleDefaultArgs> = $Result.GetResult<Prisma.$RolePayload, S>

  type RoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface RoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Role'], meta: { name: 'Role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleFindUniqueArgs>(args: SelectSubset<T, RoleFindUniqueArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleFindFirstArgs>(args?: SelectSubset<T, RoleFindFirstArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleFindManyArgs>(args?: SelectSubset<T, RoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends RoleCreateArgs>(args: SelectSubset<T, RoleCreateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleCreateManyArgs>(args?: SelectSubset<T, RoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {RoleCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RoleCreateManyAndReturnArgs>(args?: SelectSubset<T, RoleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends RoleDeleteArgs>(args: SelectSubset<T, RoleDeleteArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUpdateArgs>(args: SelectSubset<T, RoleUpdateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleDeleteManyArgs>(args?: SelectSubset<T, RoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUpdateManyArgs>(args: SelectSubset<T, RoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles and returns the data updated in the database.
     * @param {RoleUpdateManyAndReturnArgs} args - Arguments to update many Roles.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RoleUpdateManyAndReturnArgs>(args: SelectSubset<T, RoleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends RoleUpsertArgs>(args: SelectSubset<T, RoleUpsertArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Role model
   */
  readonly fields: RoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends Role$usersArgs<ExtArgs> = {}>(args?: Subset<T, Role$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Role model
   */
  interface RoleFieldRefs {
    readonly id: FieldRef<"Role", 'String'>
    readonly name: FieldRef<"Role", 'String'>
    readonly level: FieldRef<"Role", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Role findUnique
   */
  export type RoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findFirst
   */
  export type RoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findMany
   */
  export type RoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role create
   */
  export type RoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to create a Role.
     */
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }

  /**
   * Role createMany
   */
  export type RoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role createManyAndReturn
   */
  export type RoleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role update
   */
  export type RoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to update a Role.
     */
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role updateManyAndReturn
   */
  export type RoleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role upsert
   */
  export type RoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The filter to search for the Role to update in case it exists.
     */
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     */
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }

  /**
   * Role delete
   */
  export type RoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter which Role to delete.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to delete.
     */
    limit?: number
  }

  /**
   * Role.users
   */
  export type Role$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Role without action
   */
  export type RoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
  }


  /**
   * Model Organization
   */

  export type AggregateOrganization = {
    _count: OrganizationCountAggregateOutputType | null
    _min: OrganizationMinAggregateOutputType | null
    _max: OrganizationMaxAggregateOutputType | null
  }

  export type OrganizationMinAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
  }

  export type OrganizationMaxAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
  }

  export type OrganizationCountAggregateOutputType = {
    id: number
    name: number
    code: number
    _all: number
  }


  export type OrganizationMinAggregateInputType = {
    id?: true
    name?: true
    code?: true
  }

  export type OrganizationMaxAggregateInputType = {
    id?: true
    name?: true
    code?: true
  }

  export type OrganizationCountAggregateInputType = {
    id?: true
    name?: true
    code?: true
    _all?: true
  }

  export type OrganizationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Organization to aggregate.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Organizations
    **/
    _count?: true | OrganizationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrganizationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrganizationMaxAggregateInputType
  }

  export type GetOrganizationAggregateType<T extends OrganizationAggregateArgs> = {
        [P in keyof T & keyof AggregateOrganization]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrganization[P]>
      : GetScalarType<T[P], AggregateOrganization[P]>
  }




  export type OrganizationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganizationWhereInput
    orderBy?: OrganizationOrderByWithAggregationInput | OrganizationOrderByWithAggregationInput[]
    by: OrganizationScalarFieldEnum[] | OrganizationScalarFieldEnum
    having?: OrganizationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrganizationCountAggregateInputType | true
    _min?: OrganizationMinAggregateInputType
    _max?: OrganizationMaxAggregateInputType
  }

  export type OrganizationGroupByOutputType = {
    id: string
    name: string
    code: string | null
    _count: OrganizationCountAggregateOutputType | null
    _min: OrganizationMinAggregateOutputType | null
    _max: OrganizationMaxAggregateOutputType | null
  }

  type GetOrganizationGroupByPayload<T extends OrganizationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrganizationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrganizationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrganizationGroupByOutputType[P]>
            : GetScalarType<T[P], OrganizationGroupByOutputType[P]>
        }
      >
    >


  export type OrganizationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    users?: boolean | Organization$usersArgs<ExtArgs>
    _count?: boolean | OrganizationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["organization"]>

  export type OrganizationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
  }, ExtArgs["result"]["organization"]>

  export type OrganizationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
  }, ExtArgs["result"]["organization"]>

  export type OrganizationSelectScalar = {
    id?: boolean
    name?: boolean
    code?: boolean
  }

  export type OrganizationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "code", ExtArgs["result"]["organization"]>
  export type OrganizationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Organization$usersArgs<ExtArgs>
    _count?: boolean | OrganizationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrganizationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type OrganizationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $OrganizationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Organization"
    objects: {
      users: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      code: string | null
    }, ExtArgs["result"]["organization"]>
    composites: {}
  }

  type OrganizationGetPayload<S extends boolean | null | undefined | OrganizationDefaultArgs> = $Result.GetResult<Prisma.$OrganizationPayload, S>

  type OrganizationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrganizationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrganizationCountAggregateInputType | true
    }

  export interface OrganizationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Organization'], meta: { name: 'Organization' } }
    /**
     * Find zero or one Organization that matches the filter.
     * @param {OrganizationFindUniqueArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrganizationFindUniqueArgs>(args: SelectSubset<T, OrganizationFindUniqueArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Organization that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrganizationFindUniqueOrThrowArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrganizationFindUniqueOrThrowArgs>(args: SelectSubset<T, OrganizationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Organization that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationFindFirstArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrganizationFindFirstArgs>(args?: SelectSubset<T, OrganizationFindFirstArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Organization that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationFindFirstOrThrowArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrganizationFindFirstOrThrowArgs>(args?: SelectSubset<T, OrganizationFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Organizations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Organizations
     * const organizations = await prisma.organization.findMany()
     * 
     * // Get first 10 Organizations
     * const organizations = await prisma.organization.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const organizationWithIdOnly = await prisma.organization.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrganizationFindManyArgs>(args?: SelectSubset<T, OrganizationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Organization.
     * @param {OrganizationCreateArgs} args - Arguments to create a Organization.
     * @example
     * // Create one Organization
     * const Organization = await prisma.organization.create({
     *   data: {
     *     // ... data to create a Organization
     *   }
     * })
     * 
     */
    create<T extends OrganizationCreateArgs>(args: SelectSubset<T, OrganizationCreateArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Organizations.
     * @param {OrganizationCreateManyArgs} args - Arguments to create many Organizations.
     * @example
     * // Create many Organizations
     * const organization = await prisma.organization.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrganizationCreateManyArgs>(args?: SelectSubset<T, OrganizationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Organizations and returns the data saved in the database.
     * @param {OrganizationCreateManyAndReturnArgs} args - Arguments to create many Organizations.
     * @example
     * // Create many Organizations
     * const organization = await prisma.organization.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Organizations and only return the `id`
     * const organizationWithIdOnly = await prisma.organization.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrganizationCreateManyAndReturnArgs>(args?: SelectSubset<T, OrganizationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Organization.
     * @param {OrganizationDeleteArgs} args - Arguments to delete one Organization.
     * @example
     * // Delete one Organization
     * const Organization = await prisma.organization.delete({
     *   where: {
     *     // ... filter to delete one Organization
     *   }
     * })
     * 
     */
    delete<T extends OrganizationDeleteArgs>(args: SelectSubset<T, OrganizationDeleteArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Organization.
     * @param {OrganizationUpdateArgs} args - Arguments to update one Organization.
     * @example
     * // Update one Organization
     * const organization = await prisma.organization.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrganizationUpdateArgs>(args: SelectSubset<T, OrganizationUpdateArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Organizations.
     * @param {OrganizationDeleteManyArgs} args - Arguments to filter Organizations to delete.
     * @example
     * // Delete a few Organizations
     * const { count } = await prisma.organization.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrganizationDeleteManyArgs>(args?: SelectSubset<T, OrganizationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Organizations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Organizations
     * const organization = await prisma.organization.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrganizationUpdateManyArgs>(args: SelectSubset<T, OrganizationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Organizations and returns the data updated in the database.
     * @param {OrganizationUpdateManyAndReturnArgs} args - Arguments to update many Organizations.
     * @example
     * // Update many Organizations
     * const organization = await prisma.organization.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Organizations and only return the `id`
     * const organizationWithIdOnly = await prisma.organization.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrganizationUpdateManyAndReturnArgs>(args: SelectSubset<T, OrganizationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Organization.
     * @param {OrganizationUpsertArgs} args - Arguments to update or create a Organization.
     * @example
     * // Update or create a Organization
     * const organization = await prisma.organization.upsert({
     *   create: {
     *     // ... data to create a Organization
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Organization we want to update
     *   }
     * })
     */
    upsert<T extends OrganizationUpsertArgs>(args: SelectSubset<T, OrganizationUpsertArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Organizations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationCountArgs} args - Arguments to filter Organizations to count.
     * @example
     * // Count the number of Organizations
     * const count = await prisma.organization.count({
     *   where: {
     *     // ... the filter for the Organizations we want to count
     *   }
     * })
    **/
    count<T extends OrganizationCountArgs>(
      args?: Subset<T, OrganizationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrganizationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Organization.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrganizationAggregateArgs>(args: Subset<T, OrganizationAggregateArgs>): Prisma.PrismaPromise<GetOrganizationAggregateType<T>>

    /**
     * Group by Organization.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrganizationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrganizationGroupByArgs['orderBy'] }
        : { orderBy?: OrganizationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrganizationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrganizationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Organization model
   */
  readonly fields: OrganizationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Organization.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrganizationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends Organization$usersArgs<ExtArgs> = {}>(args?: Subset<T, Organization$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Organization model
   */
  interface OrganizationFieldRefs {
    readonly id: FieldRef<"Organization", 'String'>
    readonly name: FieldRef<"Organization", 'String'>
    readonly code: FieldRef<"Organization", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Organization findUnique
   */
  export type OrganizationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization findUniqueOrThrow
   */
  export type OrganizationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization findFirst
   */
  export type OrganizationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Organizations.
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Organizations.
     */
    distinct?: OrganizationScalarFieldEnum | OrganizationScalarFieldEnum[]
  }

  /**
   * Organization findFirstOrThrow
   */
  export type OrganizationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Organizations.
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Organizations.
     */
    distinct?: OrganizationScalarFieldEnum | OrganizationScalarFieldEnum[]
  }

  /**
   * Organization findMany
   */
  export type OrganizationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organizations to fetch.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Organizations.
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    distinct?: OrganizationScalarFieldEnum | OrganizationScalarFieldEnum[]
  }

  /**
   * Organization create
   */
  export type OrganizationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * The data needed to create a Organization.
     */
    data: XOR<OrganizationCreateInput, OrganizationUncheckedCreateInput>
  }

  /**
   * Organization createMany
   */
  export type OrganizationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Organizations.
     */
    data: OrganizationCreateManyInput | OrganizationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Organization createManyAndReturn
   */
  export type OrganizationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * The data used to create many Organizations.
     */
    data: OrganizationCreateManyInput | OrganizationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Organization update
   */
  export type OrganizationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * The data needed to update a Organization.
     */
    data: XOR<OrganizationUpdateInput, OrganizationUncheckedUpdateInput>
    /**
     * Choose, which Organization to update.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization updateMany
   */
  export type OrganizationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Organizations.
     */
    data: XOR<OrganizationUpdateManyMutationInput, OrganizationUncheckedUpdateManyInput>
    /**
     * Filter which Organizations to update
     */
    where?: OrganizationWhereInput
    /**
     * Limit how many Organizations to update.
     */
    limit?: number
  }

  /**
   * Organization updateManyAndReturn
   */
  export type OrganizationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * The data used to update Organizations.
     */
    data: XOR<OrganizationUpdateManyMutationInput, OrganizationUncheckedUpdateManyInput>
    /**
     * Filter which Organizations to update
     */
    where?: OrganizationWhereInput
    /**
     * Limit how many Organizations to update.
     */
    limit?: number
  }

  /**
   * Organization upsert
   */
  export type OrganizationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * The filter to search for the Organization to update in case it exists.
     */
    where: OrganizationWhereUniqueInput
    /**
     * In case the Organization found by the `where` argument doesn't exist, create a new Organization with this data.
     */
    create: XOR<OrganizationCreateInput, OrganizationUncheckedCreateInput>
    /**
     * In case the Organization was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrganizationUpdateInput, OrganizationUncheckedUpdateInput>
  }

  /**
   * Organization delete
   */
  export type OrganizationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter which Organization to delete.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization deleteMany
   */
  export type OrganizationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Organizations to delete
     */
    where?: OrganizationWhereInput
    /**
     * Limit how many Organizations to delete.
     */
    limit?: number
  }

  /**
   * Organization.users
   */
  export type Organization$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Organization without action
   */
  export type OrganizationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
  }


  /**
   * Model Profile
   */

  export type AggregateProfile = {
    _count: ProfileCountAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  export type ProfileMinAggregateOutputType = {
    id: string | null
    name: string | null
    joinDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    userId: string | null
  }

  export type ProfileMaxAggregateOutputType = {
    id: string | null
    name: string | null
    joinDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    userId: string | null
  }

  export type ProfileCountAggregateOutputType = {
    id: number
    name: number
    joinDate: number
    createdAt: number
    updatedAt: number
    createdById: number
    updatedById: number
    userId: number
    _all: number
  }


  export type ProfileMinAggregateInputType = {
    id?: true
    name?: true
    joinDate?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    userId?: true
  }

  export type ProfileMaxAggregateInputType = {
    id?: true
    name?: true
    joinDate?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    userId?: true
  }

  export type ProfileCountAggregateInputType = {
    id?: true
    name?: true
    joinDate?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    userId?: true
    _all?: true
  }

  export type ProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Profile to aggregate.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Profiles
    **/
    _count?: true | ProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProfileMaxAggregateInputType
  }

  export type GetProfileAggregateType<T extends ProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfile[P]>
      : GetScalarType<T[P], AggregateProfile[P]>
  }




  export type ProfileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfileWhereInput
    orderBy?: ProfileOrderByWithAggregationInput | ProfileOrderByWithAggregationInput[]
    by: ProfileScalarFieldEnum[] | ProfileScalarFieldEnum
    having?: ProfileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProfileCountAggregateInputType | true
    _min?: ProfileMinAggregateInputType
    _max?: ProfileMaxAggregateInputType
  }

  export type ProfileGroupByOutputType = {
    id: string
    name: string | null
    joinDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    userId: string
    _count: ProfileCountAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  type GetProfileGroupByPayload<T extends ProfileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProfileGroupByOutputType[P]>
            : GetScalarType<T[P], ProfileGroupByOutputType[P]>
        }
      >
    >


  export type ProfileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    joinDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    userId?: boolean
    createdBy?: boolean | Profile$createdByArgs<ExtArgs>
    updatedBy?: boolean | Profile$updatedByArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>

  export type ProfileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    joinDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    userId?: boolean
    createdBy?: boolean | Profile$createdByArgs<ExtArgs>
    updatedBy?: boolean | Profile$updatedByArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>

  export type ProfileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    joinDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    userId?: boolean
    createdBy?: boolean | Profile$createdByArgs<ExtArgs>
    updatedBy?: boolean | Profile$updatedByArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>

  export type ProfileSelectScalar = {
    id?: boolean
    name?: boolean
    joinDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    userId?: boolean
  }

  export type ProfileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "joinDate" | "createdAt" | "updatedAt" | "createdById" | "updatedById" | "userId", ExtArgs["result"]["profile"]>
  export type ProfileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Profile$createdByArgs<ExtArgs>
    updatedBy?: boolean | Profile$updatedByArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProfileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Profile$createdByArgs<ExtArgs>
    updatedBy?: boolean | Profile$updatedByArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProfileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Profile$createdByArgs<ExtArgs>
    updatedBy?: boolean | Profile$updatedByArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ProfilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Profile"
    objects: {
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string | null
      joinDate: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      createdById: string | null
      updatedById: string | null
      userId: string
    }, ExtArgs["result"]["profile"]>
    composites: {}
  }

  type ProfileGetPayload<S extends boolean | null | undefined | ProfileDefaultArgs> = $Result.GetResult<Prisma.$ProfilePayload, S>

  type ProfileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProfileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProfileCountAggregateInputType | true
    }

  export interface ProfileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Profile'], meta: { name: 'Profile' } }
    /**
     * Find zero or one Profile that matches the filter.
     * @param {ProfileFindUniqueArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProfileFindUniqueArgs>(args: SelectSubset<T, ProfileFindUniqueArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Profile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProfileFindUniqueOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProfileFindUniqueOrThrowArgs>(args: SelectSubset<T, ProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindFirstArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProfileFindFirstArgs>(args?: SelectSubset<T, ProfileFindFirstArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindFirstOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProfileFindFirstOrThrowArgs>(args?: SelectSubset<T, ProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Profiles
     * const profiles = await prisma.profile.findMany()
     * 
     * // Get first 10 Profiles
     * const profiles = await prisma.profile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const profileWithIdOnly = await prisma.profile.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProfileFindManyArgs>(args?: SelectSubset<T, ProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Profile.
     * @param {ProfileCreateArgs} args - Arguments to create a Profile.
     * @example
     * // Create one Profile
     * const Profile = await prisma.profile.create({
     *   data: {
     *     // ... data to create a Profile
     *   }
     * })
     * 
     */
    create<T extends ProfileCreateArgs>(args: SelectSubset<T, ProfileCreateArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Profiles.
     * @param {ProfileCreateManyArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProfileCreateManyArgs>(args?: SelectSubset<T, ProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Profiles and returns the data saved in the database.
     * @param {ProfileCreateManyAndReturnArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Profiles and only return the `id`
     * const profileWithIdOnly = await prisma.profile.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProfileCreateManyAndReturnArgs>(args?: SelectSubset<T, ProfileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Profile.
     * @param {ProfileDeleteArgs} args - Arguments to delete one Profile.
     * @example
     * // Delete one Profile
     * const Profile = await prisma.profile.delete({
     *   where: {
     *     // ... filter to delete one Profile
     *   }
     * })
     * 
     */
    delete<T extends ProfileDeleteArgs>(args: SelectSubset<T, ProfileDeleteArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Profile.
     * @param {ProfileUpdateArgs} args - Arguments to update one Profile.
     * @example
     * // Update one Profile
     * const profile = await prisma.profile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProfileUpdateArgs>(args: SelectSubset<T, ProfileUpdateArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Profiles.
     * @param {ProfileDeleteManyArgs} args - Arguments to filter Profiles to delete.
     * @example
     * // Delete a few Profiles
     * const { count } = await prisma.profile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProfileDeleteManyArgs>(args?: SelectSubset<T, ProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Profiles
     * const profile = await prisma.profile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProfileUpdateManyArgs>(args: SelectSubset<T, ProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles and returns the data updated in the database.
     * @param {ProfileUpdateManyAndReturnArgs} args - Arguments to update many Profiles.
     * @example
     * // Update many Profiles
     * const profile = await prisma.profile.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Profiles and only return the `id`
     * const profileWithIdOnly = await prisma.profile.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProfileUpdateManyAndReturnArgs>(args: SelectSubset<T, ProfileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Profile.
     * @param {ProfileUpsertArgs} args - Arguments to update or create a Profile.
     * @example
     * // Update or create a Profile
     * const profile = await prisma.profile.upsert({
     *   create: {
     *     // ... data to create a Profile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Profile we want to update
     *   }
     * })
     */
    upsert<T extends ProfileUpsertArgs>(args: SelectSubset<T, ProfileUpsertArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileCountArgs} args - Arguments to filter Profiles to count.
     * @example
     * // Count the number of Profiles
     * const count = await prisma.profile.count({
     *   where: {
     *     // ... the filter for the Profiles we want to count
     *   }
     * })
    **/
    count<T extends ProfileCountArgs>(
      args?: Subset<T, ProfileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProfileAggregateArgs>(args: Subset<T, ProfileAggregateArgs>): Prisma.PrismaPromise<GetProfileAggregateType<T>>

    /**
     * Group by Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProfileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProfileGroupByArgs['orderBy'] }
        : { orderBy?: ProfileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Profile model
   */
  readonly fields: ProfileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Profile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProfileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createdBy<T extends Profile$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Profile$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Profile$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Profile$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Profile model
   */
  interface ProfileFieldRefs {
    readonly id: FieldRef<"Profile", 'String'>
    readonly name: FieldRef<"Profile", 'String'>
    readonly joinDate: FieldRef<"Profile", 'DateTime'>
    readonly createdAt: FieldRef<"Profile", 'DateTime'>
    readonly updatedAt: FieldRef<"Profile", 'DateTime'>
    readonly createdById: FieldRef<"Profile", 'String'>
    readonly updatedById: FieldRef<"Profile", 'String'>
    readonly userId: FieldRef<"Profile", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Profile findUnique
   */
  export type ProfileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile findUniqueOrThrow
   */
  export type ProfileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile findFirst
   */
  export type ProfileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile findFirstOrThrow
   */
  export type ProfileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile findMany
   */
  export type ProfileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profiles to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile create
   */
  export type ProfileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The data needed to create a Profile.
     */
    data: XOR<ProfileCreateInput, ProfileUncheckedCreateInput>
  }

  /**
   * Profile createMany
   */
  export type ProfileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Profiles.
     */
    data: ProfileCreateManyInput | ProfileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Profile createManyAndReturn
   */
  export type ProfileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * The data used to create many Profiles.
     */
    data: ProfileCreateManyInput | ProfileCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Profile update
   */
  export type ProfileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The data needed to update a Profile.
     */
    data: XOR<ProfileUpdateInput, ProfileUncheckedUpdateInput>
    /**
     * Choose, which Profile to update.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile updateMany
   */
  export type ProfileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Profiles.
     */
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyInput>
    /**
     * Filter which Profiles to update
     */
    where?: ProfileWhereInput
    /**
     * Limit how many Profiles to update.
     */
    limit?: number
  }

  /**
   * Profile updateManyAndReturn
   */
  export type ProfileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * The data used to update Profiles.
     */
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyInput>
    /**
     * Filter which Profiles to update
     */
    where?: ProfileWhereInput
    /**
     * Limit how many Profiles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Profile upsert
   */
  export type ProfileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The filter to search for the Profile to update in case it exists.
     */
    where: ProfileWhereUniqueInput
    /**
     * In case the Profile found by the `where` argument doesn't exist, create a new Profile with this data.
     */
    create: XOR<ProfileCreateInput, ProfileUncheckedCreateInput>
    /**
     * In case the Profile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProfileUpdateInput, ProfileUncheckedUpdateInput>
  }

  /**
   * Profile delete
   */
  export type ProfileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter which Profile to delete.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile deleteMany
   */
  export type ProfileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Profiles to delete
     */
    where?: ProfileWhereInput
    /**
     * Limit how many Profiles to delete.
     */
    limit?: number
  }

  /**
   * Profile.createdBy
   */
  export type Profile$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Profile.updatedBy
   */
  export type Profile$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Profile without action
   */
  export type ProfileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionMinAggregateOutputType = {
    sid: string | null
    expire: Date | null
  }

  export type SessionMaxAggregateOutputType = {
    sid: string | null
    expire: Date | null
  }

  export type SessionCountAggregateOutputType = {
    sid: number
    sess: number
    expire: number
    _all: number
  }


  export type SessionMinAggregateInputType = {
    sid?: true
    expire?: true
  }

  export type SessionMaxAggregateInputType = {
    sid?: true
    expire?: true
  }

  export type SessionCountAggregateInputType = {
    sid?: true
    sess?: true
    expire?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    sid: string
    sess: JsonValue
    expire: Date
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sid?: boolean
    sess?: boolean
    expire?: boolean
  }, ExtArgs["result"]["session"]>

  export type SessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sid?: boolean
    sess?: boolean
    expire?: boolean
  }, ExtArgs["result"]["session"]>

  export type SessionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sid?: boolean
    sess?: boolean
    expire?: boolean
  }, ExtArgs["result"]["session"]>

  export type SessionSelectScalar = {
    sid?: boolean
    sess?: boolean
    expire?: boolean
  }

  export type SessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"sid" | "sess" | "expire", ExtArgs["result"]["session"]>

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      sid: string
      sess: Prisma.JsonValue
      expire: Date
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `sid`
     * const sessionWithSidOnly = await prisma.session.findMany({ select: { sid: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {SessionCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `sid`
     * const sessionWithSidOnly = await prisma.session.createManyAndReturn({
     *   select: { sid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SessionCreateManyAndReturnArgs>(args?: SelectSubset<T, SessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions and returns the data updated in the database.
     * @param {SessionUpdateManyAndReturnArgs} args - Arguments to update many Sessions.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sessions and only return the `sid`
     * const sessionWithSidOnly = await prisma.session.updateManyAndReturn({
     *   select: { sid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SessionUpdateManyAndReturnArgs>(args: SelectSubset<T, SessionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */
  interface SessionFieldRefs {
    readonly sid: FieldRef<"Session", 'String'>
    readonly sess: FieldRef<"Session", 'Json'>
    readonly expire: FieldRef<"Session", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session createManyAndReturn
   */
  export type SessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session updateManyAndReturn
   */
  export type SessionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to delete.
     */
    limit?: number
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const BudgetScalarFieldEnum: {
    id: 'id',
    regNumber: 'regNumber',
    description: 'description',
    amount: 'amount',
    approvedDate: 'approvedDate',
    revision: 'revision',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    assigneeId: 'assigneeId',
    createdById: 'createdById',
    updatedById: 'updatedById',
    projectId: 'projectId'
  };

  export type BudgetScalarFieldEnum = (typeof BudgetScalarFieldEnum)[keyof typeof BudgetScalarFieldEnum]


  export const BudgetItemScalarFieldEnum: {
    id: 'id',
    budgetId: 'budgetId',
    categoryId: 'categoryId',
    description: 'description',
    quantity: 'quantity',
    timeUnit: 'timeUnit',
    unitPrice: 'unitPrice',
    amount: 'amount',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BudgetItemScalarFieldEnum = (typeof BudgetItemScalarFieldEnum)[keyof typeof BudgetItemScalarFieldEnum]


  export const FundScalarFieldEnum: {
    id: 'id',
    regNumber: 'regNumber',
    description: 'description',
    amount: 'amount',
    requestDate: 'requestDate',
    approvedDate: 'approvedDate',
    closedDate: 'closedDate',
    expiredDate: 'expiredDate',
    voidDate: 'voidDate',
    plannedPaymentDate: 'plannedPaymentDate',
    type: 'type',
    revision: 'revision',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    assigneeId: 'assigneeId',
    createdById: 'createdById',
    updatedById: 'updatedById',
    taskId: 'taskId'
  };

  export type FundScalarFieldEnum = (typeof FundScalarFieldEnum)[keyof typeof FundScalarFieldEnum]


  export const FundItemScalarFieldEnum: {
    id: 'id',
    fundId: 'fundId',
    categoryId: 'categoryId',
    description: 'description',
    quantity: 'quantity',
    timeUnit: 'timeUnit',
    unitPrice: 'unitPrice',
    amount: 'amount',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FundItemScalarFieldEnum = (typeof FundItemScalarFieldEnum)[keyof typeof FundItemScalarFieldEnum]


  export const ExpenseScalarFieldEnum: {
    id: 'id',
    regNumber: 'regNumber',
    categoryId: 'categoryId',
    description: 'description',
    amount: 'amount',
    date: 'date',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdById: 'createdById',
    updatedById: 'updatedById',
    fundId: 'fundId',
    taskId: 'taskId',
    projectId: 'projectId'
  };

  export type ExpenseScalarFieldEnum = (typeof ExpenseScalarFieldEnum)[keyof typeof ExpenseScalarFieldEnum]


  export const CostTypeScalarFieldEnum: {
    id: 'id',
    order: 'order',
    name: 'name',
    parentId: 'parentId',
    createdById: 'createdById',
    updatedById: 'updatedById'
  };

  export type CostTypeScalarFieldEnum = (typeof CostTypeScalarFieldEnum)[keyof typeof CostTypeScalarFieldEnum]


  export const PipelineScalarFieldEnum: {
    id: 'id',
    regNumber: 'regNumber',
    category: 'category',
    leadId: 'leadId',
    opportunityId: 'opportunityId',
    quoteId: 'quoteId',
    contractId: 'contractId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    assigneeId: 'assigneeId',
    createdById: 'createdById',
    updatedById: 'updatedById'
  };

  export type PipelineScalarFieldEnum = (typeof PipelineScalarFieldEnum)[keyof typeof PipelineScalarFieldEnum]


  export const LeadScalarFieldEnum: {
    id: 'id',
    regNumber: 'regNumber',
    name: 'name',
    role: 'role',
    email: 'email',
    phone: 'phone',
    leadSource: 'leadSource',
    leadDate: 'leadDate',
    leadAddress: 'leadAddress',
    description: 'description',
    prospectLocation: 'prospectLocation',
    approvedDate: 'approvedDate',
    expectedCloseDate: 'expectedCloseDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    clientId: 'clientId'
  };

  export type LeadScalarFieldEnum = (typeof LeadScalarFieldEnum)[keyof typeof LeadScalarFieldEnum]


  export const OpportunityScalarFieldEnum: {
    id: 'id',
    regNumber: 'regNumber',
    title: 'title',
    currency: 'currency',
    baseAmount: 'baseAmount',
    exchangeRate: 'exchangeRate',
    amount: 'amount',
    expectedCloseDate: 'expectedCloseDate',
    description: 'description',
    approvedDate: 'approvedDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    clientId: 'clientId',
    leadId: 'leadId'
  };

  export type OpportunityScalarFieldEnum = (typeof OpportunityScalarFieldEnum)[keyof typeof OpportunityScalarFieldEnum]


  export const QuoteScalarFieldEnum: {
    id: 'id',
    regNumber: 'regNumber',
    title: 'title',
    currency: 'currency',
    baseAmount: 'baseAmount',
    exchangeRate: 'exchangeRate',
    amount: 'amount',
    releasedDate: 'releasedDate',
    approvedDate: 'approvedDate',
    expiredDate: 'expiredDate',
    expectedCloseDate: 'expectedCloseDate',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    clientId: 'clientId',
    opportunityId: 'opportunityId'
  };

  export type QuoteScalarFieldEnum = (typeof QuoteScalarFieldEnum)[keyof typeof QuoteScalarFieldEnum]


  export const ContractScalarFieldEnum: {
    id: 'id',
    regNumber: 'regNumber',
    title: 'title',
    signedDate: 'signedDate',
    startDate: 'startDate',
    endDate: 'endDate',
    description: 'description',
    penalty: 'penalty',
    currency: 'currency',
    baseAmount: 'baseAmount',
    exchangeRate: 'exchangeRate',
    amount: 'amount',
    clientPicName: 'clientPicName',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    clientId: 'clientId',
    quoteId: 'quoteId'
  };

  export type ContractScalarFieldEnum = (typeof ContractScalarFieldEnum)[keyof typeof ContractScalarFieldEnum]


  export const EventScalarFieldEnum: {
    id: 'id',
    title: 'title',
    category: 'category',
    description: 'description',
    startDate: 'startDate',
    endDate: 'endDate',
    url: 'url',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdById: 'createdById',
    updatedById: 'updatedById',
    pipelineId: 'pipelineId',
    projectId: 'projectId',
    milestoneId: 'milestoneId',
    taskId: 'taskId'
  };

  export type EventScalarFieldEnum = (typeof EventScalarFieldEnum)[keyof typeof EventScalarFieldEnum]


  export const NoteScalarFieldEnum: {
    id: 'id',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdById: 'createdById',
    updatedById: 'updatedById',
    pipelineId: 'pipelineId',
    projectId: 'projectId',
    milestoneId: 'milestoneId',
    taskId: 'taskId',
    budgetId: 'budgetId',
    fundId: 'fundId',
    expenseId: 'expenseId',
    clientId: 'clientId',
    vendorId: 'vendorId'
  };

  export type NoteScalarFieldEnum = (typeof NoteScalarFieldEnum)[keyof typeof NoteScalarFieldEnum]


  export const StageScalarFieldEnum: {
    id: 'id',
    stageTypeId: 'stageTypeId',
    comment: 'comment',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdById: 'createdById',
    updatedById: 'updatedById',
    pipelineId: 'pipelineId',
    projectId: 'projectId',
    milestoneId: 'milestoneId',
    taskId: 'taskId',
    budgetId: 'budgetId',
    fundId: 'fundId'
  };

  export type StageScalarFieldEnum = (typeof StageScalarFieldEnum)[keyof typeof StageScalarFieldEnum]


  export const StageTypeScalarFieldEnum: {
    id: 'id',
    model: 'model',
    order: 'order',
    value: 'value'
  };

  export type StageTypeScalarFieldEnum = (typeof StageTypeScalarFieldEnum)[keyof typeof StageTypeScalarFieldEnum]


  export const ClientScalarFieldEnum: {
    id: 'id',
    regNumber: 'regNumber',
    name: 'name',
    address: 'address',
    phone: 'phone',
    email: 'email',
    legal: 'legal',
    category: 'category',
    country: 'country',
    contactName: 'contactName',
    contactRole: 'contactRole',
    contactPhone: 'contactPhone',
    contactEmail: 'contactEmail',
    taxNumber: 'taxNumber',
    taxAddress: 'taxAddress',
    taxStatus: 'taxStatus',
    procurementName: 'procurementName',
    procurementRole: 'procurementRole',
    procurementPhone: 'procurementPhone',
    procurementEmail: 'procurementEmail',
    billingAddress: 'billingAddress',
    paymentName: 'paymentName',
    paymentRole: 'paymentRole',
    paymentPhone: 'paymentPhone',
    paymentEmail: 'paymentEmail',
    bankName: 'bankName',
    accountReferenceNumber: 'accountReferenceNumber',
    accountOwnerName: 'accountOwnerName',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdById: 'createdById',
    updatedById: 'updatedById'
  };

  export type ClientScalarFieldEnum = (typeof ClientScalarFieldEnum)[keyof typeof ClientScalarFieldEnum]


  export const VendorScalarFieldEnum: {
    id: 'id',
    regNumber: 'regNumber',
    name: 'name',
    address: 'address',
    phone: 'phone',
    email: 'email',
    city: 'city',
    postalCode: 'postalCode',
    legal: 'legal',
    vendorCategory: 'vendorCategory',
    contactName: 'contactName',
    contactRole: 'contactRole',
    contactPhone: 'contactPhone',
    contactEmail: 'contactEmail',
    taxNumber: 'taxNumber',
    taxStatus: 'taxStatus',
    siupNumber: 'siupNumber',
    nibNumber: 'nibNumber',
    pkpNumber: 'pkpNumber',
    productType: 'productType',
    description: 'description',
    bankName: 'bankName',
    accountReferenceNumber: 'accountReferenceNumber',
    accountOwnerName: 'accountOwnerName',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdById: 'createdById',
    updatedById: 'updatedById'
  };

  export type VendorScalarFieldEnum = (typeof VendorScalarFieldEnum)[keyof typeof VendorScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    id: 'id',
    regNumber: 'regNumber',
    name: 'name',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdById: 'createdById',
    updatedById: 'updatedById'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    id: 'id',
    key: 'key',
    value: 'value',
    label: 'label'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const CountryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    code: 'code'
  };

  export type CountryScalarFieldEnum = (typeof CountryScalarFieldEnum)[keyof typeof CountryScalarFieldEnum]


  export const ProjectScalarFieldEnum: {
    id: 'id',
    regNumber: 'regNumber',
    progress: 'progress',
    plannedStartDate: 'plannedStartDate',
    plannedEndDate: 'plannedEndDate',
    actualStartDate: 'actualStartDate',
    actualEndDate: 'actualEndDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    contractId: 'contractId',
    assigneeId: 'assigneeId',
    createdById: 'createdById',
    updatedById: 'updatedById'
  };

  export type ProjectScalarFieldEnum = (typeof ProjectScalarFieldEnum)[keyof typeof ProjectScalarFieldEnum]


  export const MilestoneScalarFieldEnum: {
    id: 'id',
    order: 'order',
    title: 'title',
    description: 'description',
    plannedStartDate: 'plannedStartDate',
    plannedEndDate: 'plannedEndDate',
    actualStartDate: 'actualStartDate',
    actualEndDate: 'actualEndDate',
    approvedDate: 'approvedDate',
    share: 'share',
    amount: 'amount',
    deliverables: 'deliverables',
    progress: 'progress',
    revision: 'revision',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    projectId: 'projectId',
    assigneeId: 'assigneeId',
    createdById: 'createdById',
    updatedById: 'updatedById'
  };

  export type MilestoneScalarFieldEnum = (typeof MilestoneScalarFieldEnum)[keyof typeof MilestoneScalarFieldEnum]


  export const TaskScalarFieldEnum: {
    id: 'id',
    order: 'order',
    title: 'title',
    plannedStartDate: 'plannedStartDate',
    plannedEndDate: 'plannedEndDate',
    actualStartDate: 'actualStartDate',
    actualEndDate: 'actualEndDate',
    progress: 'progress',
    deliverables: 'deliverables',
    remarks: 'remarks',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    milestoneId: 'milestoneId',
    assigneeId: 'assigneeId',
    createdById: 'createdById',
    updatedById: 'updatedById'
  };

  export type TaskScalarFieldEnum = (typeof TaskScalarFieldEnum)[keyof typeof TaskScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    status: 'status',
    roleId: 'roleId',
    organizationId: 'organizationId'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    level: 'level'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const OrganizationScalarFieldEnum: {
    id: 'id',
    name: 'name',
    code: 'code'
  };

  export type OrganizationScalarFieldEnum = (typeof OrganizationScalarFieldEnum)[keyof typeof OrganizationScalarFieldEnum]


  export const ProfileScalarFieldEnum: {
    id: 'id',
    name: 'name',
    joinDate: 'joinDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdById: 'createdById',
    updatedById: 'updatedById',
    userId: 'userId'
  };

  export type ProfileScalarFieldEnum = (typeof ProfileScalarFieldEnum)[keyof typeof ProfileScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    sid: 'sid',
    sess: 'sess',
    expire: 'expire'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type BudgetWhereInput = {
    AND?: BudgetWhereInput | BudgetWhereInput[]
    OR?: BudgetWhereInput[]
    NOT?: BudgetWhereInput | BudgetWhereInput[]
    id?: StringFilter<"Budget"> | string
    regNumber?: StringNullableFilter<"Budget"> | string | null
    description?: StringNullableFilter<"Budget"> | string | null
    amount?: DecimalNullableFilter<"Budget"> | Decimal | DecimalJsLike | number | string | null
    approvedDate?: DateTimeNullableFilter<"Budget"> | Date | string | null
    revision?: DecimalNullableFilter<"Budget"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"Budget"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Budget"> | Date | string | null
    assigneeId?: StringNullableFilter<"Budget"> | string | null
    createdById?: StringNullableFilter<"Budget"> | string | null
    updatedById?: StringNullableFilter<"Budget"> | string | null
    projectId?: StringNullableFilter<"Budget"> | string | null
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    items?: BudgetItemListRelationFilter
    project?: XOR<ProjectNullableScalarRelationFilter, ProjectWhereInput> | null
    notes?: NoteListRelationFilter
    stages?: StageListRelationFilter
  }

  export type BudgetOrderByWithRelationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    approvedDate?: SortOrderInput | SortOrder
    revision?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    assigneeId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    projectId?: SortOrderInput | SortOrder
    assignee?: UserOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    items?: BudgetItemOrderByRelationAggregateInput
    project?: ProjectOrderByWithRelationInput
    notes?: NoteOrderByRelationAggregateInput
    stages?: StageOrderByRelationAggregateInput
  }

  export type BudgetWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BudgetWhereInput | BudgetWhereInput[]
    OR?: BudgetWhereInput[]
    NOT?: BudgetWhereInput | BudgetWhereInput[]
    regNumber?: StringNullableFilter<"Budget"> | string | null
    description?: StringNullableFilter<"Budget"> | string | null
    amount?: DecimalNullableFilter<"Budget"> | Decimal | DecimalJsLike | number | string | null
    approvedDate?: DateTimeNullableFilter<"Budget"> | Date | string | null
    revision?: DecimalNullableFilter<"Budget"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"Budget"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Budget"> | Date | string | null
    assigneeId?: StringNullableFilter<"Budget"> | string | null
    createdById?: StringNullableFilter<"Budget"> | string | null
    updatedById?: StringNullableFilter<"Budget"> | string | null
    projectId?: StringNullableFilter<"Budget"> | string | null
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    items?: BudgetItemListRelationFilter
    project?: XOR<ProjectNullableScalarRelationFilter, ProjectWhereInput> | null
    notes?: NoteListRelationFilter
    stages?: StageListRelationFilter
  }, "id">

  export type BudgetOrderByWithAggregationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    approvedDate?: SortOrderInput | SortOrder
    revision?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    assigneeId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    projectId?: SortOrderInput | SortOrder
    _count?: BudgetCountOrderByAggregateInput
    _avg?: BudgetAvgOrderByAggregateInput
    _max?: BudgetMaxOrderByAggregateInput
    _min?: BudgetMinOrderByAggregateInput
    _sum?: BudgetSumOrderByAggregateInput
  }

  export type BudgetScalarWhereWithAggregatesInput = {
    AND?: BudgetScalarWhereWithAggregatesInput | BudgetScalarWhereWithAggregatesInput[]
    OR?: BudgetScalarWhereWithAggregatesInput[]
    NOT?: BudgetScalarWhereWithAggregatesInput | BudgetScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Budget"> | string
    regNumber?: StringNullableWithAggregatesFilter<"Budget"> | string | null
    description?: StringNullableWithAggregatesFilter<"Budget"> | string | null
    amount?: DecimalNullableWithAggregatesFilter<"Budget"> | Decimal | DecimalJsLike | number | string | null
    approvedDate?: DateTimeNullableWithAggregatesFilter<"Budget"> | Date | string | null
    revision?: DecimalNullableWithAggregatesFilter<"Budget"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Budget"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Budget"> | Date | string | null
    assigneeId?: StringNullableWithAggregatesFilter<"Budget"> | string | null
    createdById?: StringNullableWithAggregatesFilter<"Budget"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Budget"> | string | null
    projectId?: StringNullableWithAggregatesFilter<"Budget"> | string | null
  }

  export type BudgetItemWhereInput = {
    AND?: BudgetItemWhereInput | BudgetItemWhereInput[]
    OR?: BudgetItemWhereInput[]
    NOT?: BudgetItemWhereInput | BudgetItemWhereInput[]
    id?: StringFilter<"BudgetItem"> | string
    budgetId?: StringFilter<"BudgetItem"> | string
    categoryId?: StringNullableFilter<"BudgetItem"> | string | null
    description?: StringFilter<"BudgetItem"> | string
    quantity?: DecimalFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string
    timeUnit?: DecimalNullableFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string
    amount?: DecimalFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeNullableFilter<"BudgetItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"BudgetItem"> | Date | string | null
    budget?: XOR<BudgetScalarRelationFilter, BudgetWhereInput>
    category?: XOR<CostTypeNullableScalarRelationFilter, CostTypeWhereInput> | null
  }

  export type BudgetItemOrderByWithRelationInput = {
    id?: SortOrder
    budgetId?: SortOrder
    categoryId?: SortOrderInput | SortOrder
    description?: SortOrder
    quantity?: SortOrder
    timeUnit?: SortOrderInput | SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    budget?: BudgetOrderByWithRelationInput
    category?: CostTypeOrderByWithRelationInput
  }

  export type BudgetItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BudgetItemWhereInput | BudgetItemWhereInput[]
    OR?: BudgetItemWhereInput[]
    NOT?: BudgetItemWhereInput | BudgetItemWhereInput[]
    budgetId?: StringFilter<"BudgetItem"> | string
    categoryId?: StringNullableFilter<"BudgetItem"> | string | null
    description?: StringFilter<"BudgetItem"> | string
    quantity?: DecimalFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string
    timeUnit?: DecimalNullableFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string
    amount?: DecimalFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeNullableFilter<"BudgetItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"BudgetItem"> | Date | string | null
    budget?: XOR<BudgetScalarRelationFilter, BudgetWhereInput>
    category?: XOR<CostTypeNullableScalarRelationFilter, CostTypeWhereInput> | null
  }, "id">

  export type BudgetItemOrderByWithAggregationInput = {
    id?: SortOrder
    budgetId?: SortOrder
    categoryId?: SortOrderInput | SortOrder
    description?: SortOrder
    quantity?: SortOrder
    timeUnit?: SortOrderInput | SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: BudgetItemCountOrderByAggregateInput
    _avg?: BudgetItemAvgOrderByAggregateInput
    _max?: BudgetItemMaxOrderByAggregateInput
    _min?: BudgetItemMinOrderByAggregateInput
    _sum?: BudgetItemSumOrderByAggregateInput
  }

  export type BudgetItemScalarWhereWithAggregatesInput = {
    AND?: BudgetItemScalarWhereWithAggregatesInput | BudgetItemScalarWhereWithAggregatesInput[]
    OR?: BudgetItemScalarWhereWithAggregatesInput[]
    NOT?: BudgetItemScalarWhereWithAggregatesInput | BudgetItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BudgetItem"> | string
    budgetId?: StringWithAggregatesFilter<"BudgetItem"> | string
    categoryId?: StringNullableWithAggregatesFilter<"BudgetItem"> | string | null
    description?: StringWithAggregatesFilter<"BudgetItem"> | string
    quantity?: DecimalWithAggregatesFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string
    timeUnit?: DecimalNullableWithAggregatesFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalWithAggregatesFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string
    amount?: DecimalWithAggregatesFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"BudgetItem"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"BudgetItem"> | Date | string | null
  }

  export type FundWhereInput = {
    AND?: FundWhereInput | FundWhereInput[]
    OR?: FundWhereInput[]
    NOT?: FundWhereInput | FundWhereInput[]
    id?: StringFilter<"Fund"> | string
    regNumber?: StringNullableFilter<"Fund"> | string | null
    description?: StringFilter<"Fund"> | string
    amount?: DecimalNullableFilter<"Fund"> | Decimal | DecimalJsLike | number | string | null
    requestDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    approvedDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    closedDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    expiredDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    voidDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    plannedPaymentDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    type?: StringNullableFilter<"Fund"> | string | null
    revision?: DecimalNullableFilter<"Fund"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"Fund"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Fund"> | Date | string | null
    assigneeId?: StringNullableFilter<"Fund"> | string | null
    createdById?: StringNullableFilter<"Fund"> | string | null
    updatedById?: StringNullableFilter<"Fund"> | string | null
    taskId?: StringNullableFilter<"Fund"> | string | null
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    items?: FundItemListRelationFilter
    task?: XOR<TaskNullableScalarRelationFilter, TaskWhereInput> | null
    expenses?: ExpenseListRelationFilter
    notes?: NoteListRelationFilter
    stages?: StageListRelationFilter
  }

  export type FundOrderByWithRelationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    description?: SortOrder
    amount?: SortOrderInput | SortOrder
    requestDate?: SortOrderInput | SortOrder
    approvedDate?: SortOrderInput | SortOrder
    closedDate?: SortOrderInput | SortOrder
    expiredDate?: SortOrderInput | SortOrder
    voidDate?: SortOrderInput | SortOrder
    plannedPaymentDate?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    revision?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    assigneeId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    taskId?: SortOrderInput | SortOrder
    assignee?: UserOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    items?: FundItemOrderByRelationAggregateInput
    task?: TaskOrderByWithRelationInput
    expenses?: ExpenseOrderByRelationAggregateInput
    notes?: NoteOrderByRelationAggregateInput
    stages?: StageOrderByRelationAggregateInput
  }

  export type FundWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FundWhereInput | FundWhereInput[]
    OR?: FundWhereInput[]
    NOT?: FundWhereInput | FundWhereInput[]
    regNumber?: StringNullableFilter<"Fund"> | string | null
    description?: StringFilter<"Fund"> | string
    amount?: DecimalNullableFilter<"Fund"> | Decimal | DecimalJsLike | number | string | null
    requestDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    approvedDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    closedDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    expiredDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    voidDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    plannedPaymentDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    type?: StringNullableFilter<"Fund"> | string | null
    revision?: DecimalNullableFilter<"Fund"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"Fund"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Fund"> | Date | string | null
    assigneeId?: StringNullableFilter<"Fund"> | string | null
    createdById?: StringNullableFilter<"Fund"> | string | null
    updatedById?: StringNullableFilter<"Fund"> | string | null
    taskId?: StringNullableFilter<"Fund"> | string | null
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    items?: FundItemListRelationFilter
    task?: XOR<TaskNullableScalarRelationFilter, TaskWhereInput> | null
    expenses?: ExpenseListRelationFilter
    notes?: NoteListRelationFilter
    stages?: StageListRelationFilter
  }, "id">

  export type FundOrderByWithAggregationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    description?: SortOrder
    amount?: SortOrderInput | SortOrder
    requestDate?: SortOrderInput | SortOrder
    approvedDate?: SortOrderInput | SortOrder
    closedDate?: SortOrderInput | SortOrder
    expiredDate?: SortOrderInput | SortOrder
    voidDate?: SortOrderInput | SortOrder
    plannedPaymentDate?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    revision?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    assigneeId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    taskId?: SortOrderInput | SortOrder
    _count?: FundCountOrderByAggregateInput
    _avg?: FundAvgOrderByAggregateInput
    _max?: FundMaxOrderByAggregateInput
    _min?: FundMinOrderByAggregateInput
    _sum?: FundSumOrderByAggregateInput
  }

  export type FundScalarWhereWithAggregatesInput = {
    AND?: FundScalarWhereWithAggregatesInput | FundScalarWhereWithAggregatesInput[]
    OR?: FundScalarWhereWithAggregatesInput[]
    NOT?: FundScalarWhereWithAggregatesInput | FundScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Fund"> | string
    regNumber?: StringNullableWithAggregatesFilter<"Fund"> | string | null
    description?: StringWithAggregatesFilter<"Fund"> | string
    amount?: DecimalNullableWithAggregatesFilter<"Fund"> | Decimal | DecimalJsLike | number | string | null
    requestDate?: DateTimeNullableWithAggregatesFilter<"Fund"> | Date | string | null
    approvedDate?: DateTimeNullableWithAggregatesFilter<"Fund"> | Date | string | null
    closedDate?: DateTimeNullableWithAggregatesFilter<"Fund"> | Date | string | null
    expiredDate?: DateTimeNullableWithAggregatesFilter<"Fund"> | Date | string | null
    voidDate?: DateTimeNullableWithAggregatesFilter<"Fund"> | Date | string | null
    plannedPaymentDate?: DateTimeNullableWithAggregatesFilter<"Fund"> | Date | string | null
    type?: StringNullableWithAggregatesFilter<"Fund"> | string | null
    revision?: DecimalNullableWithAggregatesFilter<"Fund"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Fund"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Fund"> | Date | string | null
    assigneeId?: StringNullableWithAggregatesFilter<"Fund"> | string | null
    createdById?: StringNullableWithAggregatesFilter<"Fund"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Fund"> | string | null
    taskId?: StringNullableWithAggregatesFilter<"Fund"> | string | null
  }

  export type FundItemWhereInput = {
    AND?: FundItemWhereInput | FundItemWhereInput[]
    OR?: FundItemWhereInput[]
    NOT?: FundItemWhereInput | FundItemWhereInput[]
    id?: StringFilter<"FundItem"> | string
    fundId?: StringFilter<"FundItem"> | string
    categoryId?: StringNullableFilter<"FundItem"> | string | null
    description?: StringFilter<"FundItem"> | string
    quantity?: DecimalFilter<"FundItem"> | Decimal | DecimalJsLike | number | string
    timeUnit?: DecimalNullableFilter<"FundItem"> | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFilter<"FundItem"> | Decimal | DecimalJsLike | number | string
    amount?: DecimalFilter<"FundItem"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeNullableFilter<"FundItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"FundItem"> | Date | string | null
    fund?: XOR<FundScalarRelationFilter, FundWhereInput>
    category?: XOR<CostTypeNullableScalarRelationFilter, CostTypeWhereInput> | null
  }

  export type FundItemOrderByWithRelationInput = {
    id?: SortOrder
    fundId?: SortOrder
    categoryId?: SortOrderInput | SortOrder
    description?: SortOrder
    quantity?: SortOrder
    timeUnit?: SortOrderInput | SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    fund?: FundOrderByWithRelationInput
    category?: CostTypeOrderByWithRelationInput
  }

  export type FundItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FundItemWhereInput | FundItemWhereInput[]
    OR?: FundItemWhereInput[]
    NOT?: FundItemWhereInput | FundItemWhereInput[]
    fundId?: StringFilter<"FundItem"> | string
    categoryId?: StringNullableFilter<"FundItem"> | string | null
    description?: StringFilter<"FundItem"> | string
    quantity?: DecimalFilter<"FundItem"> | Decimal | DecimalJsLike | number | string
    timeUnit?: DecimalNullableFilter<"FundItem"> | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFilter<"FundItem"> | Decimal | DecimalJsLike | number | string
    amount?: DecimalFilter<"FundItem"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeNullableFilter<"FundItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"FundItem"> | Date | string | null
    fund?: XOR<FundScalarRelationFilter, FundWhereInput>
    category?: XOR<CostTypeNullableScalarRelationFilter, CostTypeWhereInput> | null
  }, "id">

  export type FundItemOrderByWithAggregationInput = {
    id?: SortOrder
    fundId?: SortOrder
    categoryId?: SortOrderInput | SortOrder
    description?: SortOrder
    quantity?: SortOrder
    timeUnit?: SortOrderInput | SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: FundItemCountOrderByAggregateInput
    _avg?: FundItemAvgOrderByAggregateInput
    _max?: FundItemMaxOrderByAggregateInput
    _min?: FundItemMinOrderByAggregateInput
    _sum?: FundItemSumOrderByAggregateInput
  }

  export type FundItemScalarWhereWithAggregatesInput = {
    AND?: FundItemScalarWhereWithAggregatesInput | FundItemScalarWhereWithAggregatesInput[]
    OR?: FundItemScalarWhereWithAggregatesInput[]
    NOT?: FundItemScalarWhereWithAggregatesInput | FundItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FundItem"> | string
    fundId?: StringWithAggregatesFilter<"FundItem"> | string
    categoryId?: StringNullableWithAggregatesFilter<"FundItem"> | string | null
    description?: StringWithAggregatesFilter<"FundItem"> | string
    quantity?: DecimalWithAggregatesFilter<"FundItem"> | Decimal | DecimalJsLike | number | string
    timeUnit?: DecimalNullableWithAggregatesFilter<"FundItem"> | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalWithAggregatesFilter<"FundItem"> | Decimal | DecimalJsLike | number | string
    amount?: DecimalWithAggregatesFilter<"FundItem"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"FundItem"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"FundItem"> | Date | string | null
  }

  export type ExpenseWhereInput = {
    AND?: ExpenseWhereInput | ExpenseWhereInput[]
    OR?: ExpenseWhereInput[]
    NOT?: ExpenseWhereInput | ExpenseWhereInput[]
    id?: StringFilter<"Expense"> | string
    regNumber?: StringNullableFilter<"Expense"> | string | null
    categoryId?: StringFilter<"Expense"> | string
    description?: StringNullableFilter<"Expense"> | string | null
    amount?: DecimalFilter<"Expense"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeNullableFilter<"Expense"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Expense"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Expense"> | Date | string | null
    createdById?: StringNullableFilter<"Expense"> | string | null
    updatedById?: StringNullableFilter<"Expense"> | string | null
    fundId?: StringNullableFilter<"Expense"> | string | null
    taskId?: StringNullableFilter<"Expense"> | string | null
    projectId?: StringNullableFilter<"Expense"> | string | null
    category?: XOR<CostTypeScalarRelationFilter, CostTypeWhereInput>
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    fund?: XOR<FundNullableScalarRelationFilter, FundWhereInput> | null
    task?: XOR<TaskNullableScalarRelationFilter, TaskWhereInput> | null
    project?: XOR<ProjectNullableScalarRelationFilter, ProjectWhereInput> | null
    notes?: NoteListRelationFilter
  }

  export type ExpenseOrderByWithRelationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    categoryId?: SortOrder
    description?: SortOrderInput | SortOrder
    amount?: SortOrder
    date?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    fundId?: SortOrderInput | SortOrder
    taskId?: SortOrderInput | SortOrder
    projectId?: SortOrderInput | SortOrder
    category?: CostTypeOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    fund?: FundOrderByWithRelationInput
    task?: TaskOrderByWithRelationInput
    project?: ProjectOrderByWithRelationInput
    notes?: NoteOrderByRelationAggregateInput
  }

  export type ExpenseWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ExpenseWhereInput | ExpenseWhereInput[]
    OR?: ExpenseWhereInput[]
    NOT?: ExpenseWhereInput | ExpenseWhereInput[]
    regNumber?: StringNullableFilter<"Expense"> | string | null
    categoryId?: StringFilter<"Expense"> | string
    description?: StringNullableFilter<"Expense"> | string | null
    amount?: DecimalFilter<"Expense"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeNullableFilter<"Expense"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Expense"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Expense"> | Date | string | null
    createdById?: StringNullableFilter<"Expense"> | string | null
    updatedById?: StringNullableFilter<"Expense"> | string | null
    fundId?: StringNullableFilter<"Expense"> | string | null
    taskId?: StringNullableFilter<"Expense"> | string | null
    projectId?: StringNullableFilter<"Expense"> | string | null
    category?: XOR<CostTypeScalarRelationFilter, CostTypeWhereInput>
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    fund?: XOR<FundNullableScalarRelationFilter, FundWhereInput> | null
    task?: XOR<TaskNullableScalarRelationFilter, TaskWhereInput> | null
    project?: XOR<ProjectNullableScalarRelationFilter, ProjectWhereInput> | null
    notes?: NoteListRelationFilter
  }, "id">

  export type ExpenseOrderByWithAggregationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    categoryId?: SortOrder
    description?: SortOrderInput | SortOrder
    amount?: SortOrder
    date?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    fundId?: SortOrderInput | SortOrder
    taskId?: SortOrderInput | SortOrder
    projectId?: SortOrderInput | SortOrder
    _count?: ExpenseCountOrderByAggregateInput
    _avg?: ExpenseAvgOrderByAggregateInput
    _max?: ExpenseMaxOrderByAggregateInput
    _min?: ExpenseMinOrderByAggregateInput
    _sum?: ExpenseSumOrderByAggregateInput
  }

  export type ExpenseScalarWhereWithAggregatesInput = {
    AND?: ExpenseScalarWhereWithAggregatesInput | ExpenseScalarWhereWithAggregatesInput[]
    OR?: ExpenseScalarWhereWithAggregatesInput[]
    NOT?: ExpenseScalarWhereWithAggregatesInput | ExpenseScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Expense"> | string
    regNumber?: StringNullableWithAggregatesFilter<"Expense"> | string | null
    categoryId?: StringWithAggregatesFilter<"Expense"> | string
    description?: StringNullableWithAggregatesFilter<"Expense"> | string | null
    amount?: DecimalWithAggregatesFilter<"Expense"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeNullableWithAggregatesFilter<"Expense"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Expense"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Expense"> | Date | string | null
    createdById?: StringNullableWithAggregatesFilter<"Expense"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Expense"> | string | null
    fundId?: StringNullableWithAggregatesFilter<"Expense"> | string | null
    taskId?: StringNullableWithAggregatesFilter<"Expense"> | string | null
    projectId?: StringNullableWithAggregatesFilter<"Expense"> | string | null
  }

  export type CostTypeWhereInput = {
    AND?: CostTypeWhereInput | CostTypeWhereInput[]
    OR?: CostTypeWhereInput[]
    NOT?: CostTypeWhereInput | CostTypeWhereInput[]
    id?: StringFilter<"CostType"> | string
    order?: IntNullableFilter<"CostType"> | number | null
    name?: StringFilter<"CostType"> | string
    parentId?: StringNullableFilter<"CostType"> | string | null
    createdById?: StringNullableFilter<"CostType"> | string | null
    updatedById?: StringNullableFilter<"CostType"> | string | null
    parent?: XOR<CostTypeNullableScalarRelationFilter, CostTypeWhereInput> | null
    children?: CostTypeListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    budgetItems?: BudgetItemListRelationFilter
    fundItems?: FundItemListRelationFilter
    expenses?: ExpenseListRelationFilter
  }

  export type CostTypeOrderByWithRelationInput = {
    id?: SortOrder
    order?: SortOrderInput | SortOrder
    name?: SortOrder
    parentId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    parent?: CostTypeOrderByWithRelationInput
    children?: CostTypeOrderByRelationAggregateInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    budgetItems?: BudgetItemOrderByRelationAggregateInput
    fundItems?: FundItemOrderByRelationAggregateInput
    expenses?: ExpenseOrderByRelationAggregateInput
  }

  export type CostTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CostTypeWhereInput | CostTypeWhereInput[]
    OR?: CostTypeWhereInput[]
    NOT?: CostTypeWhereInput | CostTypeWhereInput[]
    order?: IntNullableFilter<"CostType"> | number | null
    name?: StringFilter<"CostType"> | string
    parentId?: StringNullableFilter<"CostType"> | string | null
    createdById?: StringNullableFilter<"CostType"> | string | null
    updatedById?: StringNullableFilter<"CostType"> | string | null
    parent?: XOR<CostTypeNullableScalarRelationFilter, CostTypeWhereInput> | null
    children?: CostTypeListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    budgetItems?: BudgetItemListRelationFilter
    fundItems?: FundItemListRelationFilter
    expenses?: ExpenseListRelationFilter
  }, "id">

  export type CostTypeOrderByWithAggregationInput = {
    id?: SortOrder
    order?: SortOrderInput | SortOrder
    name?: SortOrder
    parentId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    _count?: CostTypeCountOrderByAggregateInput
    _avg?: CostTypeAvgOrderByAggregateInput
    _max?: CostTypeMaxOrderByAggregateInput
    _min?: CostTypeMinOrderByAggregateInput
    _sum?: CostTypeSumOrderByAggregateInput
  }

  export type CostTypeScalarWhereWithAggregatesInput = {
    AND?: CostTypeScalarWhereWithAggregatesInput | CostTypeScalarWhereWithAggregatesInput[]
    OR?: CostTypeScalarWhereWithAggregatesInput[]
    NOT?: CostTypeScalarWhereWithAggregatesInput | CostTypeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CostType"> | string
    order?: IntNullableWithAggregatesFilter<"CostType"> | number | null
    name?: StringWithAggregatesFilter<"CostType"> | string
    parentId?: StringNullableWithAggregatesFilter<"CostType"> | string | null
    createdById?: StringNullableWithAggregatesFilter<"CostType"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"CostType"> | string | null
  }

  export type PipelineWhereInput = {
    AND?: PipelineWhereInput | PipelineWhereInput[]
    OR?: PipelineWhereInput[]
    NOT?: PipelineWhereInput | PipelineWhereInput[]
    id?: StringFilter<"Pipeline"> | string
    regNumber?: StringNullableFilter<"Pipeline"> | string | null
    category?: StringNullableFilter<"Pipeline"> | string | null
    leadId?: StringNullableFilter<"Pipeline"> | string | null
    opportunityId?: StringNullableFilter<"Pipeline"> | string | null
    quoteId?: StringNullableFilter<"Pipeline"> | string | null
    contractId?: StringNullableFilter<"Pipeline"> | string | null
    createdAt?: DateTimeNullableFilter<"Pipeline"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Pipeline"> | Date | string | null
    assigneeId?: StringNullableFilter<"Pipeline"> | string | null
    createdById?: StringNullableFilter<"Pipeline"> | string | null
    updatedById?: StringNullableFilter<"Pipeline"> | string | null
    lead?: XOR<LeadNullableScalarRelationFilter, LeadWhereInput> | null
    opportunity?: XOR<OpportunityNullableScalarRelationFilter, OpportunityWhereInput> | null
    quote?: XOR<QuoteNullableScalarRelationFilter, QuoteWhereInput> | null
    contract?: XOR<ContractNullableScalarRelationFilter, ContractWhereInput> | null
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    members?: UserListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    stages?: StageListRelationFilter
    notes?: NoteListRelationFilter
    events?: EventListRelationFilter
  }

  export type PipelineOrderByWithRelationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    leadId?: SortOrderInput | SortOrder
    opportunityId?: SortOrderInput | SortOrder
    quoteId?: SortOrderInput | SortOrder
    contractId?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    assigneeId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    lead?: LeadOrderByWithRelationInput
    opportunity?: OpportunityOrderByWithRelationInput
    quote?: QuoteOrderByWithRelationInput
    contract?: ContractOrderByWithRelationInput
    assignee?: UserOrderByWithRelationInput
    members?: UserOrderByRelationAggregateInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    stages?: StageOrderByRelationAggregateInput
    notes?: NoteOrderByRelationAggregateInput
    events?: EventOrderByRelationAggregateInput
  }

  export type PipelineWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PipelineWhereInput | PipelineWhereInput[]
    OR?: PipelineWhereInput[]
    NOT?: PipelineWhereInput | PipelineWhereInput[]
    regNumber?: StringNullableFilter<"Pipeline"> | string | null
    category?: StringNullableFilter<"Pipeline"> | string | null
    leadId?: StringNullableFilter<"Pipeline"> | string | null
    opportunityId?: StringNullableFilter<"Pipeline"> | string | null
    quoteId?: StringNullableFilter<"Pipeline"> | string | null
    contractId?: StringNullableFilter<"Pipeline"> | string | null
    createdAt?: DateTimeNullableFilter<"Pipeline"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Pipeline"> | Date | string | null
    assigneeId?: StringNullableFilter<"Pipeline"> | string | null
    createdById?: StringNullableFilter<"Pipeline"> | string | null
    updatedById?: StringNullableFilter<"Pipeline"> | string | null
    lead?: XOR<LeadNullableScalarRelationFilter, LeadWhereInput> | null
    opportunity?: XOR<OpportunityNullableScalarRelationFilter, OpportunityWhereInput> | null
    quote?: XOR<QuoteNullableScalarRelationFilter, QuoteWhereInput> | null
    contract?: XOR<ContractNullableScalarRelationFilter, ContractWhereInput> | null
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    members?: UserListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    stages?: StageListRelationFilter
    notes?: NoteListRelationFilter
    events?: EventListRelationFilter
  }, "id">

  export type PipelineOrderByWithAggregationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    leadId?: SortOrderInput | SortOrder
    opportunityId?: SortOrderInput | SortOrder
    quoteId?: SortOrderInput | SortOrder
    contractId?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    assigneeId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    _count?: PipelineCountOrderByAggregateInput
    _max?: PipelineMaxOrderByAggregateInput
    _min?: PipelineMinOrderByAggregateInput
  }

  export type PipelineScalarWhereWithAggregatesInput = {
    AND?: PipelineScalarWhereWithAggregatesInput | PipelineScalarWhereWithAggregatesInput[]
    OR?: PipelineScalarWhereWithAggregatesInput[]
    NOT?: PipelineScalarWhereWithAggregatesInput | PipelineScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Pipeline"> | string
    regNumber?: StringNullableWithAggregatesFilter<"Pipeline"> | string | null
    category?: StringNullableWithAggregatesFilter<"Pipeline"> | string | null
    leadId?: StringNullableWithAggregatesFilter<"Pipeline"> | string | null
    opportunityId?: StringNullableWithAggregatesFilter<"Pipeline"> | string | null
    quoteId?: StringNullableWithAggregatesFilter<"Pipeline"> | string | null
    contractId?: StringNullableWithAggregatesFilter<"Pipeline"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Pipeline"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Pipeline"> | Date | string | null
    assigneeId?: StringNullableWithAggregatesFilter<"Pipeline"> | string | null
    createdById?: StringNullableWithAggregatesFilter<"Pipeline"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Pipeline"> | string | null
  }

  export type LeadWhereInput = {
    AND?: LeadWhereInput | LeadWhereInput[]
    OR?: LeadWhereInput[]
    NOT?: LeadWhereInput | LeadWhereInput[]
    id?: StringFilter<"Lead"> | string
    regNumber?: StringNullableFilter<"Lead"> | string | null
    name?: StringNullableFilter<"Lead"> | string | null
    role?: StringNullableFilter<"Lead"> | string | null
    email?: StringNullableFilter<"Lead"> | string | null
    phone?: StringNullableFilter<"Lead"> | string | null
    leadSource?: StringNullableFilter<"Lead"> | string | null
    leadDate?: DateTimeNullableFilter<"Lead"> | Date | string | null
    leadAddress?: StringNullableFilter<"Lead"> | string | null
    description?: StringNullableFilter<"Lead"> | string | null
    prospectLocation?: StringNullableFilter<"Lead"> | string | null
    approvedDate?: DateTimeNullableFilter<"Lead"> | Date | string | null
    expectedCloseDate?: DateTimeNullableFilter<"Lead"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Lead"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Lead"> | Date | string | null
    clientId?: StringNullableFilter<"Lead"> | string | null
    products?: ProductListRelationFilter
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    opportunities?: OpportunityListRelationFilter
    pipeline?: PipelineListRelationFilter
  }

  export type LeadOrderByWithRelationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    leadSource?: SortOrderInput | SortOrder
    leadDate?: SortOrderInput | SortOrder
    leadAddress?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    prospectLocation?: SortOrderInput | SortOrder
    approvedDate?: SortOrderInput | SortOrder
    expectedCloseDate?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    products?: ProductOrderByRelationAggregateInput
    client?: ClientOrderByWithRelationInput
    opportunities?: OpportunityOrderByRelationAggregateInput
    pipeline?: PipelineOrderByRelationAggregateInput
  }

  export type LeadWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: LeadWhereInput | LeadWhereInput[]
    OR?: LeadWhereInput[]
    NOT?: LeadWhereInput | LeadWhereInput[]
    regNumber?: StringNullableFilter<"Lead"> | string | null
    name?: StringNullableFilter<"Lead"> | string | null
    role?: StringNullableFilter<"Lead"> | string | null
    email?: StringNullableFilter<"Lead"> | string | null
    phone?: StringNullableFilter<"Lead"> | string | null
    leadSource?: StringNullableFilter<"Lead"> | string | null
    leadDate?: DateTimeNullableFilter<"Lead"> | Date | string | null
    leadAddress?: StringNullableFilter<"Lead"> | string | null
    description?: StringNullableFilter<"Lead"> | string | null
    prospectLocation?: StringNullableFilter<"Lead"> | string | null
    approvedDate?: DateTimeNullableFilter<"Lead"> | Date | string | null
    expectedCloseDate?: DateTimeNullableFilter<"Lead"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Lead"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Lead"> | Date | string | null
    clientId?: StringNullableFilter<"Lead"> | string | null
    products?: ProductListRelationFilter
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    opportunities?: OpportunityListRelationFilter
    pipeline?: PipelineListRelationFilter
  }, "id">

  export type LeadOrderByWithAggregationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    leadSource?: SortOrderInput | SortOrder
    leadDate?: SortOrderInput | SortOrder
    leadAddress?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    prospectLocation?: SortOrderInput | SortOrder
    approvedDate?: SortOrderInput | SortOrder
    expectedCloseDate?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    _count?: LeadCountOrderByAggregateInput
    _max?: LeadMaxOrderByAggregateInput
    _min?: LeadMinOrderByAggregateInput
  }

  export type LeadScalarWhereWithAggregatesInput = {
    AND?: LeadScalarWhereWithAggregatesInput | LeadScalarWhereWithAggregatesInput[]
    OR?: LeadScalarWhereWithAggregatesInput[]
    NOT?: LeadScalarWhereWithAggregatesInput | LeadScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Lead"> | string
    regNumber?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    name?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    role?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    email?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    leadSource?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    leadDate?: DateTimeNullableWithAggregatesFilter<"Lead"> | Date | string | null
    leadAddress?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    description?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    prospectLocation?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    approvedDate?: DateTimeNullableWithAggregatesFilter<"Lead"> | Date | string | null
    expectedCloseDate?: DateTimeNullableWithAggregatesFilter<"Lead"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Lead"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Lead"> | Date | string | null
    clientId?: StringNullableWithAggregatesFilter<"Lead"> | string | null
  }

  export type OpportunityWhereInput = {
    AND?: OpportunityWhereInput | OpportunityWhereInput[]
    OR?: OpportunityWhereInput[]
    NOT?: OpportunityWhereInput | OpportunityWhereInput[]
    id?: StringFilter<"Opportunity"> | string
    regNumber?: StringNullableFilter<"Opportunity"> | string | null
    title?: StringFilter<"Opportunity"> | string
    currency?: StringNullableFilter<"Opportunity"> | string | null
    baseAmount?: DecimalNullableFilter<"Opportunity"> | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: DecimalNullableFilter<"Opportunity"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableFilter<"Opportunity"> | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: DateTimeNullableFilter<"Opportunity"> | Date | string | null
    description?: StringNullableFilter<"Opportunity"> | string | null
    approvedDate?: DateTimeNullableFilter<"Opportunity"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Opportunity"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Opportunity"> | Date | string | null
    clientId?: StringNullableFilter<"Opportunity"> | string | null
    leadId?: StringNullableFilter<"Opportunity"> | string | null
    products?: ProductListRelationFilter
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    lead?: XOR<LeadNullableScalarRelationFilter, LeadWhereInput> | null
    quotes?: QuoteListRelationFilter
    pipeline?: PipelineListRelationFilter
  }

  export type OpportunityOrderByWithRelationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    title?: SortOrder
    currency?: SortOrderInput | SortOrder
    baseAmount?: SortOrderInput | SortOrder
    exchangeRate?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    expectedCloseDate?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    approvedDate?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    leadId?: SortOrderInput | SortOrder
    products?: ProductOrderByRelationAggregateInput
    client?: ClientOrderByWithRelationInput
    lead?: LeadOrderByWithRelationInput
    quotes?: QuoteOrderByRelationAggregateInput
    pipeline?: PipelineOrderByRelationAggregateInput
  }

  export type OpportunityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OpportunityWhereInput | OpportunityWhereInput[]
    OR?: OpportunityWhereInput[]
    NOT?: OpportunityWhereInput | OpportunityWhereInput[]
    regNumber?: StringNullableFilter<"Opportunity"> | string | null
    title?: StringFilter<"Opportunity"> | string
    currency?: StringNullableFilter<"Opportunity"> | string | null
    baseAmount?: DecimalNullableFilter<"Opportunity"> | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: DecimalNullableFilter<"Opportunity"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableFilter<"Opportunity"> | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: DateTimeNullableFilter<"Opportunity"> | Date | string | null
    description?: StringNullableFilter<"Opportunity"> | string | null
    approvedDate?: DateTimeNullableFilter<"Opportunity"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Opportunity"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Opportunity"> | Date | string | null
    clientId?: StringNullableFilter<"Opportunity"> | string | null
    leadId?: StringNullableFilter<"Opportunity"> | string | null
    products?: ProductListRelationFilter
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    lead?: XOR<LeadNullableScalarRelationFilter, LeadWhereInput> | null
    quotes?: QuoteListRelationFilter
    pipeline?: PipelineListRelationFilter
  }, "id">

  export type OpportunityOrderByWithAggregationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    title?: SortOrder
    currency?: SortOrderInput | SortOrder
    baseAmount?: SortOrderInput | SortOrder
    exchangeRate?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    expectedCloseDate?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    approvedDate?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    leadId?: SortOrderInput | SortOrder
    _count?: OpportunityCountOrderByAggregateInput
    _avg?: OpportunityAvgOrderByAggregateInput
    _max?: OpportunityMaxOrderByAggregateInput
    _min?: OpportunityMinOrderByAggregateInput
    _sum?: OpportunitySumOrderByAggregateInput
  }

  export type OpportunityScalarWhereWithAggregatesInput = {
    AND?: OpportunityScalarWhereWithAggregatesInput | OpportunityScalarWhereWithAggregatesInput[]
    OR?: OpportunityScalarWhereWithAggregatesInput[]
    NOT?: OpportunityScalarWhereWithAggregatesInput | OpportunityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Opportunity"> | string
    regNumber?: StringNullableWithAggregatesFilter<"Opportunity"> | string | null
    title?: StringWithAggregatesFilter<"Opportunity"> | string
    currency?: StringNullableWithAggregatesFilter<"Opportunity"> | string | null
    baseAmount?: DecimalNullableWithAggregatesFilter<"Opportunity"> | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: DecimalNullableWithAggregatesFilter<"Opportunity"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableWithAggregatesFilter<"Opportunity"> | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: DateTimeNullableWithAggregatesFilter<"Opportunity"> | Date | string | null
    description?: StringNullableWithAggregatesFilter<"Opportunity"> | string | null
    approvedDate?: DateTimeNullableWithAggregatesFilter<"Opportunity"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Opportunity"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Opportunity"> | Date | string | null
    clientId?: StringNullableWithAggregatesFilter<"Opportunity"> | string | null
    leadId?: StringNullableWithAggregatesFilter<"Opportunity"> | string | null
  }

  export type QuoteWhereInput = {
    AND?: QuoteWhereInput | QuoteWhereInput[]
    OR?: QuoteWhereInput[]
    NOT?: QuoteWhereInput | QuoteWhereInput[]
    id?: StringFilter<"Quote"> | string
    regNumber?: StringNullableFilter<"Quote"> | string | null
    title?: StringFilter<"Quote"> | string
    currency?: StringNullableFilter<"Quote"> | string | null
    baseAmount?: DecimalNullableFilter<"Quote"> | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: DecimalNullableFilter<"Quote"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableFilter<"Quote"> | Decimal | DecimalJsLike | number | string | null
    releasedDate?: DateTimeNullableFilter<"Quote"> | Date | string | null
    approvedDate?: DateTimeNullableFilter<"Quote"> | Date | string | null
    expiredDate?: DateTimeNullableFilter<"Quote"> | Date | string | null
    expectedCloseDate?: DateTimeNullableFilter<"Quote"> | Date | string | null
    description?: StringNullableFilter<"Quote"> | string | null
    createdAt?: DateTimeNullableFilter<"Quote"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Quote"> | Date | string | null
    clientId?: StringNullableFilter<"Quote"> | string | null
    opportunityId?: StringNullableFilter<"Quote"> | string | null
    products?: ProductListRelationFilter
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    opportunity?: XOR<OpportunityNullableScalarRelationFilter, OpportunityWhereInput> | null
    contracts?: ContractListRelationFilter
    pipeline?: PipelineListRelationFilter
  }

  export type QuoteOrderByWithRelationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    title?: SortOrder
    currency?: SortOrderInput | SortOrder
    baseAmount?: SortOrderInput | SortOrder
    exchangeRate?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    releasedDate?: SortOrderInput | SortOrder
    approvedDate?: SortOrderInput | SortOrder
    expiredDate?: SortOrderInput | SortOrder
    expectedCloseDate?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    opportunityId?: SortOrderInput | SortOrder
    products?: ProductOrderByRelationAggregateInput
    client?: ClientOrderByWithRelationInput
    opportunity?: OpportunityOrderByWithRelationInput
    contracts?: ContractOrderByRelationAggregateInput
    pipeline?: PipelineOrderByRelationAggregateInput
  }

  export type QuoteWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: QuoteWhereInput | QuoteWhereInput[]
    OR?: QuoteWhereInput[]
    NOT?: QuoteWhereInput | QuoteWhereInput[]
    regNumber?: StringNullableFilter<"Quote"> | string | null
    title?: StringFilter<"Quote"> | string
    currency?: StringNullableFilter<"Quote"> | string | null
    baseAmount?: DecimalNullableFilter<"Quote"> | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: DecimalNullableFilter<"Quote"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableFilter<"Quote"> | Decimal | DecimalJsLike | number | string | null
    releasedDate?: DateTimeNullableFilter<"Quote"> | Date | string | null
    approvedDate?: DateTimeNullableFilter<"Quote"> | Date | string | null
    expiredDate?: DateTimeNullableFilter<"Quote"> | Date | string | null
    expectedCloseDate?: DateTimeNullableFilter<"Quote"> | Date | string | null
    description?: StringNullableFilter<"Quote"> | string | null
    createdAt?: DateTimeNullableFilter<"Quote"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Quote"> | Date | string | null
    clientId?: StringNullableFilter<"Quote"> | string | null
    opportunityId?: StringNullableFilter<"Quote"> | string | null
    products?: ProductListRelationFilter
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    opportunity?: XOR<OpportunityNullableScalarRelationFilter, OpportunityWhereInput> | null
    contracts?: ContractListRelationFilter
    pipeline?: PipelineListRelationFilter
  }, "id">

  export type QuoteOrderByWithAggregationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    title?: SortOrder
    currency?: SortOrderInput | SortOrder
    baseAmount?: SortOrderInput | SortOrder
    exchangeRate?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    releasedDate?: SortOrderInput | SortOrder
    approvedDate?: SortOrderInput | SortOrder
    expiredDate?: SortOrderInput | SortOrder
    expectedCloseDate?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    opportunityId?: SortOrderInput | SortOrder
    _count?: QuoteCountOrderByAggregateInput
    _avg?: QuoteAvgOrderByAggregateInput
    _max?: QuoteMaxOrderByAggregateInput
    _min?: QuoteMinOrderByAggregateInput
    _sum?: QuoteSumOrderByAggregateInput
  }

  export type QuoteScalarWhereWithAggregatesInput = {
    AND?: QuoteScalarWhereWithAggregatesInput | QuoteScalarWhereWithAggregatesInput[]
    OR?: QuoteScalarWhereWithAggregatesInput[]
    NOT?: QuoteScalarWhereWithAggregatesInput | QuoteScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Quote"> | string
    regNumber?: StringNullableWithAggregatesFilter<"Quote"> | string | null
    title?: StringWithAggregatesFilter<"Quote"> | string
    currency?: StringNullableWithAggregatesFilter<"Quote"> | string | null
    baseAmount?: DecimalNullableWithAggregatesFilter<"Quote"> | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: DecimalNullableWithAggregatesFilter<"Quote"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableWithAggregatesFilter<"Quote"> | Decimal | DecimalJsLike | number | string | null
    releasedDate?: DateTimeNullableWithAggregatesFilter<"Quote"> | Date | string | null
    approvedDate?: DateTimeNullableWithAggregatesFilter<"Quote"> | Date | string | null
    expiredDate?: DateTimeNullableWithAggregatesFilter<"Quote"> | Date | string | null
    expectedCloseDate?: DateTimeNullableWithAggregatesFilter<"Quote"> | Date | string | null
    description?: StringNullableWithAggregatesFilter<"Quote"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Quote"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Quote"> | Date | string | null
    clientId?: StringNullableWithAggregatesFilter<"Quote"> | string | null
    opportunityId?: StringNullableWithAggregatesFilter<"Quote"> | string | null
  }

  export type ContractWhereInput = {
    AND?: ContractWhereInput | ContractWhereInput[]
    OR?: ContractWhereInput[]
    NOT?: ContractWhereInput | ContractWhereInput[]
    id?: StringFilter<"Contract"> | string
    regNumber?: StringNullableFilter<"Contract"> | string | null
    title?: StringFilter<"Contract"> | string
    signedDate?: DateTimeNullableFilter<"Contract"> | Date | string | null
    startDate?: DateTimeNullableFilter<"Contract"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Contract"> | Date | string | null
    description?: StringNullableFilter<"Contract"> | string | null
    penalty?: BoolNullableFilter<"Contract"> | boolean | null
    currency?: StringNullableFilter<"Contract"> | string | null
    baseAmount?: DecimalNullableFilter<"Contract"> | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: DecimalNullableFilter<"Contract"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableFilter<"Contract"> | Decimal | DecimalJsLike | number | string | null
    clientPicName?: StringNullableFilter<"Contract"> | string | null
    createdAt?: DateTimeNullableFilter<"Contract"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Contract"> | Date | string | null
    clientId?: StringNullableFilter<"Contract"> | string | null
    quoteId?: StringNullableFilter<"Contract"> | string | null
    products?: ProductListRelationFilter
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    quote?: XOR<QuoteNullableScalarRelationFilter, QuoteWhereInput> | null
    project?: XOR<ProjectNullableScalarRelationFilter, ProjectWhereInput> | null
    pipeline?: PipelineListRelationFilter
  }

  export type ContractOrderByWithRelationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    title?: SortOrder
    signedDate?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    penalty?: SortOrderInput | SortOrder
    currency?: SortOrderInput | SortOrder
    baseAmount?: SortOrderInput | SortOrder
    exchangeRate?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    clientPicName?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    quoteId?: SortOrderInput | SortOrder
    products?: ProductOrderByRelationAggregateInput
    client?: ClientOrderByWithRelationInput
    quote?: QuoteOrderByWithRelationInput
    project?: ProjectOrderByWithRelationInput
    pipeline?: PipelineOrderByRelationAggregateInput
  }

  export type ContractWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ContractWhereInput | ContractWhereInput[]
    OR?: ContractWhereInput[]
    NOT?: ContractWhereInput | ContractWhereInput[]
    regNumber?: StringNullableFilter<"Contract"> | string | null
    title?: StringFilter<"Contract"> | string
    signedDate?: DateTimeNullableFilter<"Contract"> | Date | string | null
    startDate?: DateTimeNullableFilter<"Contract"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Contract"> | Date | string | null
    description?: StringNullableFilter<"Contract"> | string | null
    penalty?: BoolNullableFilter<"Contract"> | boolean | null
    currency?: StringNullableFilter<"Contract"> | string | null
    baseAmount?: DecimalNullableFilter<"Contract"> | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: DecimalNullableFilter<"Contract"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableFilter<"Contract"> | Decimal | DecimalJsLike | number | string | null
    clientPicName?: StringNullableFilter<"Contract"> | string | null
    createdAt?: DateTimeNullableFilter<"Contract"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Contract"> | Date | string | null
    clientId?: StringNullableFilter<"Contract"> | string | null
    quoteId?: StringNullableFilter<"Contract"> | string | null
    products?: ProductListRelationFilter
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    quote?: XOR<QuoteNullableScalarRelationFilter, QuoteWhereInput> | null
    project?: XOR<ProjectNullableScalarRelationFilter, ProjectWhereInput> | null
    pipeline?: PipelineListRelationFilter
  }, "id">

  export type ContractOrderByWithAggregationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    title?: SortOrder
    signedDate?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    penalty?: SortOrderInput | SortOrder
    currency?: SortOrderInput | SortOrder
    baseAmount?: SortOrderInput | SortOrder
    exchangeRate?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    clientPicName?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    quoteId?: SortOrderInput | SortOrder
    _count?: ContractCountOrderByAggregateInput
    _avg?: ContractAvgOrderByAggregateInput
    _max?: ContractMaxOrderByAggregateInput
    _min?: ContractMinOrderByAggregateInput
    _sum?: ContractSumOrderByAggregateInput
  }

  export type ContractScalarWhereWithAggregatesInput = {
    AND?: ContractScalarWhereWithAggregatesInput | ContractScalarWhereWithAggregatesInput[]
    OR?: ContractScalarWhereWithAggregatesInput[]
    NOT?: ContractScalarWhereWithAggregatesInput | ContractScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Contract"> | string
    regNumber?: StringNullableWithAggregatesFilter<"Contract"> | string | null
    title?: StringWithAggregatesFilter<"Contract"> | string
    signedDate?: DateTimeNullableWithAggregatesFilter<"Contract"> | Date | string | null
    startDate?: DateTimeNullableWithAggregatesFilter<"Contract"> | Date | string | null
    endDate?: DateTimeNullableWithAggregatesFilter<"Contract"> | Date | string | null
    description?: StringNullableWithAggregatesFilter<"Contract"> | string | null
    penalty?: BoolNullableWithAggregatesFilter<"Contract"> | boolean | null
    currency?: StringNullableWithAggregatesFilter<"Contract"> | string | null
    baseAmount?: DecimalNullableWithAggregatesFilter<"Contract"> | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: DecimalNullableWithAggregatesFilter<"Contract"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableWithAggregatesFilter<"Contract"> | Decimal | DecimalJsLike | number | string | null
    clientPicName?: StringNullableWithAggregatesFilter<"Contract"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Contract"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Contract"> | Date | string | null
    clientId?: StringNullableWithAggregatesFilter<"Contract"> | string | null
    quoteId?: StringNullableWithAggregatesFilter<"Contract"> | string | null
  }

  export type EventWhereInput = {
    AND?: EventWhereInput | EventWhereInput[]
    OR?: EventWhereInput[]
    NOT?: EventWhereInput | EventWhereInput[]
    id?: StringFilter<"Event"> | string
    title?: StringFilter<"Event"> | string
    category?: StringNullableFilter<"Event"> | string | null
    description?: StringNullableFilter<"Event"> | string | null
    startDate?: DateTimeNullableFilter<"Event"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Event"> | Date | string | null
    url?: StringNullableFilter<"Event"> | string | null
    createdAt?: DateTimeNullableFilter<"Event"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Event"> | Date | string | null
    createdById?: StringNullableFilter<"Event"> | string | null
    updatedById?: StringNullableFilter<"Event"> | string | null
    pipelineId?: StringNullableFilter<"Event"> | string | null
    projectId?: StringNullableFilter<"Event"> | string | null
    milestoneId?: StringNullableFilter<"Event"> | string | null
    taskId?: StringNullableFilter<"Event"> | string | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    pipeline?: XOR<PipelineNullableScalarRelationFilter, PipelineWhereInput> | null
    project?: XOR<ProjectNullableScalarRelationFilter, ProjectWhereInput> | null
    milestone?: XOR<MilestoneNullableScalarRelationFilter, MilestoneWhereInput> | null
    task?: XOR<TaskNullableScalarRelationFilter, TaskWhereInput> | null
  }

  export type EventOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    category?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    pipelineId?: SortOrderInput | SortOrder
    projectId?: SortOrderInput | SortOrder
    milestoneId?: SortOrderInput | SortOrder
    taskId?: SortOrderInput | SortOrder
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    pipeline?: PipelineOrderByWithRelationInput
    project?: ProjectOrderByWithRelationInput
    milestone?: MilestoneOrderByWithRelationInput
    task?: TaskOrderByWithRelationInput
  }

  export type EventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EventWhereInput | EventWhereInput[]
    OR?: EventWhereInput[]
    NOT?: EventWhereInput | EventWhereInput[]
    title?: StringFilter<"Event"> | string
    category?: StringNullableFilter<"Event"> | string | null
    description?: StringNullableFilter<"Event"> | string | null
    startDate?: DateTimeNullableFilter<"Event"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Event"> | Date | string | null
    url?: StringNullableFilter<"Event"> | string | null
    createdAt?: DateTimeNullableFilter<"Event"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Event"> | Date | string | null
    createdById?: StringNullableFilter<"Event"> | string | null
    updatedById?: StringNullableFilter<"Event"> | string | null
    pipelineId?: StringNullableFilter<"Event"> | string | null
    projectId?: StringNullableFilter<"Event"> | string | null
    milestoneId?: StringNullableFilter<"Event"> | string | null
    taskId?: StringNullableFilter<"Event"> | string | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    pipeline?: XOR<PipelineNullableScalarRelationFilter, PipelineWhereInput> | null
    project?: XOR<ProjectNullableScalarRelationFilter, ProjectWhereInput> | null
    milestone?: XOR<MilestoneNullableScalarRelationFilter, MilestoneWhereInput> | null
    task?: XOR<TaskNullableScalarRelationFilter, TaskWhereInput> | null
  }, "id">

  export type EventOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    category?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    pipelineId?: SortOrderInput | SortOrder
    projectId?: SortOrderInput | SortOrder
    milestoneId?: SortOrderInput | SortOrder
    taskId?: SortOrderInput | SortOrder
    _count?: EventCountOrderByAggregateInput
    _max?: EventMaxOrderByAggregateInput
    _min?: EventMinOrderByAggregateInput
  }

  export type EventScalarWhereWithAggregatesInput = {
    AND?: EventScalarWhereWithAggregatesInput | EventScalarWhereWithAggregatesInput[]
    OR?: EventScalarWhereWithAggregatesInput[]
    NOT?: EventScalarWhereWithAggregatesInput | EventScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Event"> | string
    title?: StringWithAggregatesFilter<"Event"> | string
    category?: StringNullableWithAggregatesFilter<"Event"> | string | null
    description?: StringNullableWithAggregatesFilter<"Event"> | string | null
    startDate?: DateTimeNullableWithAggregatesFilter<"Event"> | Date | string | null
    endDate?: DateTimeNullableWithAggregatesFilter<"Event"> | Date | string | null
    url?: StringNullableWithAggregatesFilter<"Event"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Event"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Event"> | Date | string | null
    createdById?: StringNullableWithAggregatesFilter<"Event"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Event"> | string | null
    pipelineId?: StringNullableWithAggregatesFilter<"Event"> | string | null
    projectId?: StringNullableWithAggregatesFilter<"Event"> | string | null
    milestoneId?: StringNullableWithAggregatesFilter<"Event"> | string | null
    taskId?: StringNullableWithAggregatesFilter<"Event"> | string | null
  }

  export type NoteWhereInput = {
    AND?: NoteWhereInput | NoteWhereInput[]
    OR?: NoteWhereInput[]
    NOT?: NoteWhereInput | NoteWhereInput[]
    id?: StringFilter<"Note"> | string
    description?: StringNullableFilter<"Note"> | string | null
    createdAt?: DateTimeNullableFilter<"Note"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Note"> | Date | string | null
    createdById?: StringNullableFilter<"Note"> | string | null
    updatedById?: StringNullableFilter<"Note"> | string | null
    pipelineId?: StringNullableFilter<"Note"> | string | null
    projectId?: StringNullableFilter<"Note"> | string | null
    milestoneId?: StringNullableFilter<"Note"> | string | null
    taskId?: StringNullableFilter<"Note"> | string | null
    budgetId?: StringNullableFilter<"Note"> | string | null
    fundId?: StringNullableFilter<"Note"> | string | null
    expenseId?: StringNullableFilter<"Note"> | string | null
    clientId?: StringNullableFilter<"Note"> | string | null
    vendorId?: StringNullableFilter<"Note"> | string | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    pipeline?: XOR<PipelineNullableScalarRelationFilter, PipelineWhereInput> | null
    project?: XOR<ProjectNullableScalarRelationFilter, ProjectWhereInput> | null
    milestone?: XOR<MilestoneNullableScalarRelationFilter, MilestoneWhereInput> | null
    task?: XOR<TaskNullableScalarRelationFilter, TaskWhereInput> | null
    budget?: XOR<BudgetNullableScalarRelationFilter, BudgetWhereInput> | null
    fund?: XOR<FundNullableScalarRelationFilter, FundWhereInput> | null
    expense?: XOR<ExpenseNullableScalarRelationFilter, ExpenseWhereInput> | null
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    vendor?: XOR<VendorNullableScalarRelationFilter, VendorWhereInput> | null
  }

  export type NoteOrderByWithRelationInput = {
    id?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    pipelineId?: SortOrderInput | SortOrder
    projectId?: SortOrderInput | SortOrder
    milestoneId?: SortOrderInput | SortOrder
    taskId?: SortOrderInput | SortOrder
    budgetId?: SortOrderInput | SortOrder
    fundId?: SortOrderInput | SortOrder
    expenseId?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    vendorId?: SortOrderInput | SortOrder
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    pipeline?: PipelineOrderByWithRelationInput
    project?: ProjectOrderByWithRelationInput
    milestone?: MilestoneOrderByWithRelationInput
    task?: TaskOrderByWithRelationInput
    budget?: BudgetOrderByWithRelationInput
    fund?: FundOrderByWithRelationInput
    expense?: ExpenseOrderByWithRelationInput
    client?: ClientOrderByWithRelationInput
    vendor?: VendorOrderByWithRelationInput
  }

  export type NoteWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NoteWhereInput | NoteWhereInput[]
    OR?: NoteWhereInput[]
    NOT?: NoteWhereInput | NoteWhereInput[]
    description?: StringNullableFilter<"Note"> | string | null
    createdAt?: DateTimeNullableFilter<"Note"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Note"> | Date | string | null
    createdById?: StringNullableFilter<"Note"> | string | null
    updatedById?: StringNullableFilter<"Note"> | string | null
    pipelineId?: StringNullableFilter<"Note"> | string | null
    projectId?: StringNullableFilter<"Note"> | string | null
    milestoneId?: StringNullableFilter<"Note"> | string | null
    taskId?: StringNullableFilter<"Note"> | string | null
    budgetId?: StringNullableFilter<"Note"> | string | null
    fundId?: StringNullableFilter<"Note"> | string | null
    expenseId?: StringNullableFilter<"Note"> | string | null
    clientId?: StringNullableFilter<"Note"> | string | null
    vendorId?: StringNullableFilter<"Note"> | string | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    pipeline?: XOR<PipelineNullableScalarRelationFilter, PipelineWhereInput> | null
    project?: XOR<ProjectNullableScalarRelationFilter, ProjectWhereInput> | null
    milestone?: XOR<MilestoneNullableScalarRelationFilter, MilestoneWhereInput> | null
    task?: XOR<TaskNullableScalarRelationFilter, TaskWhereInput> | null
    budget?: XOR<BudgetNullableScalarRelationFilter, BudgetWhereInput> | null
    fund?: XOR<FundNullableScalarRelationFilter, FundWhereInput> | null
    expense?: XOR<ExpenseNullableScalarRelationFilter, ExpenseWhereInput> | null
    client?: XOR<ClientNullableScalarRelationFilter, ClientWhereInput> | null
    vendor?: XOR<VendorNullableScalarRelationFilter, VendorWhereInput> | null
  }, "id">

  export type NoteOrderByWithAggregationInput = {
    id?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    pipelineId?: SortOrderInput | SortOrder
    projectId?: SortOrderInput | SortOrder
    milestoneId?: SortOrderInput | SortOrder
    taskId?: SortOrderInput | SortOrder
    budgetId?: SortOrderInput | SortOrder
    fundId?: SortOrderInput | SortOrder
    expenseId?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    vendorId?: SortOrderInput | SortOrder
    _count?: NoteCountOrderByAggregateInput
    _max?: NoteMaxOrderByAggregateInput
    _min?: NoteMinOrderByAggregateInput
  }

  export type NoteScalarWhereWithAggregatesInput = {
    AND?: NoteScalarWhereWithAggregatesInput | NoteScalarWhereWithAggregatesInput[]
    OR?: NoteScalarWhereWithAggregatesInput[]
    NOT?: NoteScalarWhereWithAggregatesInput | NoteScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Note"> | string
    description?: StringNullableWithAggregatesFilter<"Note"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Note"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Note"> | Date | string | null
    createdById?: StringNullableWithAggregatesFilter<"Note"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Note"> | string | null
    pipelineId?: StringNullableWithAggregatesFilter<"Note"> | string | null
    projectId?: StringNullableWithAggregatesFilter<"Note"> | string | null
    milestoneId?: StringNullableWithAggregatesFilter<"Note"> | string | null
    taskId?: StringNullableWithAggregatesFilter<"Note"> | string | null
    budgetId?: StringNullableWithAggregatesFilter<"Note"> | string | null
    fundId?: StringNullableWithAggregatesFilter<"Note"> | string | null
    expenseId?: StringNullableWithAggregatesFilter<"Note"> | string | null
    clientId?: StringNullableWithAggregatesFilter<"Note"> | string | null
    vendorId?: StringNullableWithAggregatesFilter<"Note"> | string | null
  }

  export type StageWhereInput = {
    AND?: StageWhereInput | StageWhereInput[]
    OR?: StageWhereInput[]
    NOT?: StageWhereInput | StageWhereInput[]
    id?: StringFilter<"Stage"> | string
    stageTypeId?: StringFilter<"Stage"> | string
    comment?: StringNullableFilter<"Stage"> | string | null
    createdAt?: DateTimeNullableFilter<"Stage"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Stage"> | Date | string | null
    createdById?: StringNullableFilter<"Stage"> | string | null
    updatedById?: StringNullableFilter<"Stage"> | string | null
    pipelineId?: StringNullableFilter<"Stage"> | string | null
    projectId?: StringNullableFilter<"Stage"> | string | null
    milestoneId?: StringNullableFilter<"Stage"> | string | null
    taskId?: StringNullableFilter<"Stage"> | string | null
    budgetId?: StringNullableFilter<"Stage"> | string | null
    fundId?: StringNullableFilter<"Stage"> | string | null
    type?: XOR<StageTypeScalarRelationFilter, StageTypeWhereInput>
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    pipeline?: XOR<PipelineNullableScalarRelationFilter, PipelineWhereInput> | null
    project?: XOR<ProjectNullableScalarRelationFilter, ProjectWhereInput> | null
    milestone?: XOR<MilestoneNullableScalarRelationFilter, MilestoneWhereInput> | null
    task?: XOR<TaskNullableScalarRelationFilter, TaskWhereInput> | null
    budget?: XOR<BudgetNullableScalarRelationFilter, BudgetWhereInput> | null
    fund?: XOR<FundNullableScalarRelationFilter, FundWhereInput> | null
  }

  export type StageOrderByWithRelationInput = {
    id?: SortOrder
    stageTypeId?: SortOrder
    comment?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    pipelineId?: SortOrderInput | SortOrder
    projectId?: SortOrderInput | SortOrder
    milestoneId?: SortOrderInput | SortOrder
    taskId?: SortOrderInput | SortOrder
    budgetId?: SortOrderInput | SortOrder
    fundId?: SortOrderInput | SortOrder
    type?: StageTypeOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    pipeline?: PipelineOrderByWithRelationInput
    project?: ProjectOrderByWithRelationInput
    milestone?: MilestoneOrderByWithRelationInput
    task?: TaskOrderByWithRelationInput
    budget?: BudgetOrderByWithRelationInput
    fund?: FundOrderByWithRelationInput
  }

  export type StageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: StageWhereInput | StageWhereInput[]
    OR?: StageWhereInput[]
    NOT?: StageWhereInput | StageWhereInput[]
    stageTypeId?: StringFilter<"Stage"> | string
    comment?: StringNullableFilter<"Stage"> | string | null
    createdAt?: DateTimeNullableFilter<"Stage"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Stage"> | Date | string | null
    createdById?: StringNullableFilter<"Stage"> | string | null
    updatedById?: StringNullableFilter<"Stage"> | string | null
    pipelineId?: StringNullableFilter<"Stage"> | string | null
    projectId?: StringNullableFilter<"Stage"> | string | null
    milestoneId?: StringNullableFilter<"Stage"> | string | null
    taskId?: StringNullableFilter<"Stage"> | string | null
    budgetId?: StringNullableFilter<"Stage"> | string | null
    fundId?: StringNullableFilter<"Stage"> | string | null
    type?: XOR<StageTypeScalarRelationFilter, StageTypeWhereInput>
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    pipeline?: XOR<PipelineNullableScalarRelationFilter, PipelineWhereInput> | null
    project?: XOR<ProjectNullableScalarRelationFilter, ProjectWhereInput> | null
    milestone?: XOR<MilestoneNullableScalarRelationFilter, MilestoneWhereInput> | null
    task?: XOR<TaskNullableScalarRelationFilter, TaskWhereInput> | null
    budget?: XOR<BudgetNullableScalarRelationFilter, BudgetWhereInput> | null
    fund?: XOR<FundNullableScalarRelationFilter, FundWhereInput> | null
  }, "id">

  export type StageOrderByWithAggregationInput = {
    id?: SortOrder
    stageTypeId?: SortOrder
    comment?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    pipelineId?: SortOrderInput | SortOrder
    projectId?: SortOrderInput | SortOrder
    milestoneId?: SortOrderInput | SortOrder
    taskId?: SortOrderInput | SortOrder
    budgetId?: SortOrderInput | SortOrder
    fundId?: SortOrderInput | SortOrder
    _count?: StageCountOrderByAggregateInput
    _max?: StageMaxOrderByAggregateInput
    _min?: StageMinOrderByAggregateInput
  }

  export type StageScalarWhereWithAggregatesInput = {
    AND?: StageScalarWhereWithAggregatesInput | StageScalarWhereWithAggregatesInput[]
    OR?: StageScalarWhereWithAggregatesInput[]
    NOT?: StageScalarWhereWithAggregatesInput | StageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Stage"> | string
    stageTypeId?: StringWithAggregatesFilter<"Stage"> | string
    comment?: StringNullableWithAggregatesFilter<"Stage"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Stage"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Stage"> | Date | string | null
    createdById?: StringNullableWithAggregatesFilter<"Stage"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Stage"> | string | null
    pipelineId?: StringNullableWithAggregatesFilter<"Stage"> | string | null
    projectId?: StringNullableWithAggregatesFilter<"Stage"> | string | null
    milestoneId?: StringNullableWithAggregatesFilter<"Stage"> | string | null
    taskId?: StringNullableWithAggregatesFilter<"Stage"> | string | null
    budgetId?: StringNullableWithAggregatesFilter<"Stage"> | string | null
    fundId?: StringNullableWithAggregatesFilter<"Stage"> | string | null
  }

  export type StageTypeWhereInput = {
    AND?: StageTypeWhereInput | StageTypeWhereInput[]
    OR?: StageTypeWhereInput[]
    NOT?: StageTypeWhereInput | StageTypeWhereInput[]
    id?: StringFilter<"StageType"> | string
    model?: StringFilter<"StageType"> | string
    order?: DecimalFilter<"StageType"> | Decimal | DecimalJsLike | number | string
    value?: StringFilter<"StageType"> | string
    stages?: StageListRelationFilter
  }

  export type StageTypeOrderByWithRelationInput = {
    id?: SortOrder
    model?: SortOrder
    order?: SortOrder
    value?: SortOrder
    stages?: StageOrderByRelationAggregateInput
  }

  export type StageTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: StageTypeWhereInput | StageTypeWhereInput[]
    OR?: StageTypeWhereInput[]
    NOT?: StageTypeWhereInput | StageTypeWhereInput[]
    model?: StringFilter<"StageType"> | string
    order?: DecimalFilter<"StageType"> | Decimal | DecimalJsLike | number | string
    value?: StringFilter<"StageType"> | string
    stages?: StageListRelationFilter
  }, "id">

  export type StageTypeOrderByWithAggregationInput = {
    id?: SortOrder
    model?: SortOrder
    order?: SortOrder
    value?: SortOrder
    _count?: StageTypeCountOrderByAggregateInput
    _avg?: StageTypeAvgOrderByAggregateInput
    _max?: StageTypeMaxOrderByAggregateInput
    _min?: StageTypeMinOrderByAggregateInput
    _sum?: StageTypeSumOrderByAggregateInput
  }

  export type StageTypeScalarWhereWithAggregatesInput = {
    AND?: StageTypeScalarWhereWithAggregatesInput | StageTypeScalarWhereWithAggregatesInput[]
    OR?: StageTypeScalarWhereWithAggregatesInput[]
    NOT?: StageTypeScalarWhereWithAggregatesInput | StageTypeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"StageType"> | string
    model?: StringWithAggregatesFilter<"StageType"> | string
    order?: DecimalWithAggregatesFilter<"StageType"> | Decimal | DecimalJsLike | number | string
    value?: StringWithAggregatesFilter<"StageType"> | string
  }

  export type ClientWhereInput = {
    AND?: ClientWhereInput | ClientWhereInput[]
    OR?: ClientWhereInput[]
    NOT?: ClientWhereInput | ClientWhereInput[]
    id?: StringFilter<"Client"> | string
    regNumber?: StringNullableFilter<"Client"> | string | null
    name?: StringFilter<"Client"> | string
    address?: StringNullableFilter<"Client"> | string | null
    phone?: StringNullableFilter<"Client"> | string | null
    email?: StringNullableFilter<"Client"> | string | null
    legal?: StringNullableFilter<"Client"> | string | null
    category?: StringNullableFilter<"Client"> | string | null
    country?: StringNullableFilter<"Client"> | string | null
    contactName?: StringNullableFilter<"Client"> | string | null
    contactRole?: StringNullableFilter<"Client"> | string | null
    contactPhone?: StringNullableFilter<"Client"> | string | null
    contactEmail?: StringNullableFilter<"Client"> | string | null
    taxNumber?: StringNullableFilter<"Client"> | string | null
    taxAddress?: StringNullableFilter<"Client"> | string | null
    taxStatus?: BoolFilter<"Client"> | boolean
    procurementName?: StringNullableFilter<"Client"> | string | null
    procurementRole?: StringNullableFilter<"Client"> | string | null
    procurementPhone?: StringNullableFilter<"Client"> | string | null
    procurementEmail?: StringNullableFilter<"Client"> | string | null
    billingAddress?: StringNullableFilter<"Client"> | string | null
    paymentName?: StringNullableFilter<"Client"> | string | null
    paymentRole?: StringNullableFilter<"Client"> | string | null
    paymentPhone?: StringNullableFilter<"Client"> | string | null
    paymentEmail?: StringNullableFilter<"Client"> | string | null
    bankName?: StringNullableFilter<"Client"> | string | null
    accountReferenceNumber?: StringNullableFilter<"Client"> | string | null
    accountOwnerName?: StringNullableFilter<"Client"> | string | null
    createdAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    createdById?: StringNullableFilter<"Client"> | string | null
    updatedById?: StringNullableFilter<"Client"> | string | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    notes?: NoteListRelationFilter
    leads?: LeadListRelationFilter
    opportunities?: OpportunityListRelationFilter
    quotes?: QuoteListRelationFilter
    contracts?: ContractListRelationFilter
  }

  export type ClientOrderByWithRelationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    name?: SortOrder
    address?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    legal?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    contactName?: SortOrderInput | SortOrder
    contactRole?: SortOrderInput | SortOrder
    contactPhone?: SortOrderInput | SortOrder
    contactEmail?: SortOrderInput | SortOrder
    taxNumber?: SortOrderInput | SortOrder
    taxAddress?: SortOrderInput | SortOrder
    taxStatus?: SortOrder
    procurementName?: SortOrderInput | SortOrder
    procurementRole?: SortOrderInput | SortOrder
    procurementPhone?: SortOrderInput | SortOrder
    procurementEmail?: SortOrderInput | SortOrder
    billingAddress?: SortOrderInput | SortOrder
    paymentName?: SortOrderInput | SortOrder
    paymentRole?: SortOrderInput | SortOrder
    paymentPhone?: SortOrderInput | SortOrder
    paymentEmail?: SortOrderInput | SortOrder
    bankName?: SortOrderInput | SortOrder
    accountReferenceNumber?: SortOrderInput | SortOrder
    accountOwnerName?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    notes?: NoteOrderByRelationAggregateInput
    leads?: LeadOrderByRelationAggregateInput
    opportunities?: OpportunityOrderByRelationAggregateInput
    quotes?: QuoteOrderByRelationAggregateInput
    contracts?: ContractOrderByRelationAggregateInput
  }

  export type ClientWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ClientWhereInput | ClientWhereInput[]
    OR?: ClientWhereInput[]
    NOT?: ClientWhereInput | ClientWhereInput[]
    regNumber?: StringNullableFilter<"Client"> | string | null
    name?: StringFilter<"Client"> | string
    address?: StringNullableFilter<"Client"> | string | null
    phone?: StringNullableFilter<"Client"> | string | null
    email?: StringNullableFilter<"Client"> | string | null
    legal?: StringNullableFilter<"Client"> | string | null
    category?: StringNullableFilter<"Client"> | string | null
    country?: StringNullableFilter<"Client"> | string | null
    contactName?: StringNullableFilter<"Client"> | string | null
    contactRole?: StringNullableFilter<"Client"> | string | null
    contactPhone?: StringNullableFilter<"Client"> | string | null
    contactEmail?: StringNullableFilter<"Client"> | string | null
    taxNumber?: StringNullableFilter<"Client"> | string | null
    taxAddress?: StringNullableFilter<"Client"> | string | null
    taxStatus?: BoolFilter<"Client"> | boolean
    procurementName?: StringNullableFilter<"Client"> | string | null
    procurementRole?: StringNullableFilter<"Client"> | string | null
    procurementPhone?: StringNullableFilter<"Client"> | string | null
    procurementEmail?: StringNullableFilter<"Client"> | string | null
    billingAddress?: StringNullableFilter<"Client"> | string | null
    paymentName?: StringNullableFilter<"Client"> | string | null
    paymentRole?: StringNullableFilter<"Client"> | string | null
    paymentPhone?: StringNullableFilter<"Client"> | string | null
    paymentEmail?: StringNullableFilter<"Client"> | string | null
    bankName?: StringNullableFilter<"Client"> | string | null
    accountReferenceNumber?: StringNullableFilter<"Client"> | string | null
    accountOwnerName?: StringNullableFilter<"Client"> | string | null
    createdAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    createdById?: StringNullableFilter<"Client"> | string | null
    updatedById?: StringNullableFilter<"Client"> | string | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    notes?: NoteListRelationFilter
    leads?: LeadListRelationFilter
    opportunities?: OpportunityListRelationFilter
    quotes?: QuoteListRelationFilter
    contracts?: ContractListRelationFilter
  }, "id">

  export type ClientOrderByWithAggregationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    name?: SortOrder
    address?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    legal?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    contactName?: SortOrderInput | SortOrder
    contactRole?: SortOrderInput | SortOrder
    contactPhone?: SortOrderInput | SortOrder
    contactEmail?: SortOrderInput | SortOrder
    taxNumber?: SortOrderInput | SortOrder
    taxAddress?: SortOrderInput | SortOrder
    taxStatus?: SortOrder
    procurementName?: SortOrderInput | SortOrder
    procurementRole?: SortOrderInput | SortOrder
    procurementPhone?: SortOrderInput | SortOrder
    procurementEmail?: SortOrderInput | SortOrder
    billingAddress?: SortOrderInput | SortOrder
    paymentName?: SortOrderInput | SortOrder
    paymentRole?: SortOrderInput | SortOrder
    paymentPhone?: SortOrderInput | SortOrder
    paymentEmail?: SortOrderInput | SortOrder
    bankName?: SortOrderInput | SortOrder
    accountReferenceNumber?: SortOrderInput | SortOrder
    accountOwnerName?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    _count?: ClientCountOrderByAggregateInput
    _max?: ClientMaxOrderByAggregateInput
    _min?: ClientMinOrderByAggregateInput
  }

  export type ClientScalarWhereWithAggregatesInput = {
    AND?: ClientScalarWhereWithAggregatesInput | ClientScalarWhereWithAggregatesInput[]
    OR?: ClientScalarWhereWithAggregatesInput[]
    NOT?: ClientScalarWhereWithAggregatesInput | ClientScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Client"> | string
    regNumber?: StringNullableWithAggregatesFilter<"Client"> | string | null
    name?: StringWithAggregatesFilter<"Client"> | string
    address?: StringNullableWithAggregatesFilter<"Client"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Client"> | string | null
    email?: StringNullableWithAggregatesFilter<"Client"> | string | null
    legal?: StringNullableWithAggregatesFilter<"Client"> | string | null
    category?: StringNullableWithAggregatesFilter<"Client"> | string | null
    country?: StringNullableWithAggregatesFilter<"Client"> | string | null
    contactName?: StringNullableWithAggregatesFilter<"Client"> | string | null
    contactRole?: StringNullableWithAggregatesFilter<"Client"> | string | null
    contactPhone?: StringNullableWithAggregatesFilter<"Client"> | string | null
    contactEmail?: StringNullableWithAggregatesFilter<"Client"> | string | null
    taxNumber?: StringNullableWithAggregatesFilter<"Client"> | string | null
    taxAddress?: StringNullableWithAggregatesFilter<"Client"> | string | null
    taxStatus?: BoolWithAggregatesFilter<"Client"> | boolean
    procurementName?: StringNullableWithAggregatesFilter<"Client"> | string | null
    procurementRole?: StringNullableWithAggregatesFilter<"Client"> | string | null
    procurementPhone?: StringNullableWithAggregatesFilter<"Client"> | string | null
    procurementEmail?: StringNullableWithAggregatesFilter<"Client"> | string | null
    billingAddress?: StringNullableWithAggregatesFilter<"Client"> | string | null
    paymentName?: StringNullableWithAggregatesFilter<"Client"> | string | null
    paymentRole?: StringNullableWithAggregatesFilter<"Client"> | string | null
    paymentPhone?: StringNullableWithAggregatesFilter<"Client"> | string | null
    paymentEmail?: StringNullableWithAggregatesFilter<"Client"> | string | null
    bankName?: StringNullableWithAggregatesFilter<"Client"> | string | null
    accountReferenceNumber?: StringNullableWithAggregatesFilter<"Client"> | string | null
    accountOwnerName?: StringNullableWithAggregatesFilter<"Client"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Client"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Client"> | Date | string | null
    createdById?: StringNullableWithAggregatesFilter<"Client"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Client"> | string | null
  }

  export type VendorWhereInput = {
    AND?: VendorWhereInput | VendorWhereInput[]
    OR?: VendorWhereInput[]
    NOT?: VendorWhereInput | VendorWhereInput[]
    id?: StringFilter<"Vendor"> | string
    regNumber?: StringNullableFilter<"Vendor"> | string | null
    name?: StringFilter<"Vendor"> | string
    address?: StringNullableFilter<"Vendor"> | string | null
    phone?: StringNullableFilter<"Vendor"> | string | null
    email?: StringNullableFilter<"Vendor"> | string | null
    city?: StringNullableFilter<"Vendor"> | string | null
    postalCode?: StringNullableFilter<"Vendor"> | string | null
    legal?: StringNullableFilter<"Vendor"> | string | null
    vendorCategory?: StringNullableFilter<"Vendor"> | string | null
    contactName?: StringNullableFilter<"Vendor"> | string | null
    contactRole?: StringNullableFilter<"Vendor"> | string | null
    contactPhone?: StringNullableFilter<"Vendor"> | string | null
    contactEmail?: StringNullableFilter<"Vendor"> | string | null
    taxNumber?: StringNullableFilter<"Vendor"> | string | null
    taxStatus?: BoolFilter<"Vendor"> | boolean
    siupNumber?: StringNullableFilter<"Vendor"> | string | null
    nibNumber?: StringNullableFilter<"Vendor"> | string | null
    pkpNumber?: StringNullableFilter<"Vendor"> | string | null
    productType?: StringNullableFilter<"Vendor"> | string | null
    description?: StringNullableFilter<"Vendor"> | string | null
    bankName?: StringNullableFilter<"Vendor"> | string | null
    accountReferenceNumber?: StringNullableFilter<"Vendor"> | string | null
    accountOwnerName?: StringNullableFilter<"Vendor"> | string | null
    createdAt?: DateTimeNullableFilter<"Vendor"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Vendor"> | Date | string | null
    createdById?: StringNullableFilter<"Vendor"> | string | null
    updatedById?: StringNullableFilter<"Vendor"> | string | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    notes?: NoteListRelationFilter
  }

  export type VendorOrderByWithRelationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    name?: SortOrder
    address?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    postalCode?: SortOrderInput | SortOrder
    legal?: SortOrderInput | SortOrder
    vendorCategory?: SortOrderInput | SortOrder
    contactName?: SortOrderInput | SortOrder
    contactRole?: SortOrderInput | SortOrder
    contactPhone?: SortOrderInput | SortOrder
    contactEmail?: SortOrderInput | SortOrder
    taxNumber?: SortOrderInput | SortOrder
    taxStatus?: SortOrder
    siupNumber?: SortOrderInput | SortOrder
    nibNumber?: SortOrderInput | SortOrder
    pkpNumber?: SortOrderInput | SortOrder
    productType?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    bankName?: SortOrderInput | SortOrder
    accountReferenceNumber?: SortOrderInput | SortOrder
    accountOwnerName?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    notes?: NoteOrderByRelationAggregateInput
  }

  export type VendorWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: VendorWhereInput | VendorWhereInput[]
    OR?: VendorWhereInput[]
    NOT?: VendorWhereInput | VendorWhereInput[]
    regNumber?: StringNullableFilter<"Vendor"> | string | null
    name?: StringFilter<"Vendor"> | string
    address?: StringNullableFilter<"Vendor"> | string | null
    phone?: StringNullableFilter<"Vendor"> | string | null
    email?: StringNullableFilter<"Vendor"> | string | null
    city?: StringNullableFilter<"Vendor"> | string | null
    postalCode?: StringNullableFilter<"Vendor"> | string | null
    legal?: StringNullableFilter<"Vendor"> | string | null
    vendorCategory?: StringNullableFilter<"Vendor"> | string | null
    contactName?: StringNullableFilter<"Vendor"> | string | null
    contactRole?: StringNullableFilter<"Vendor"> | string | null
    contactPhone?: StringNullableFilter<"Vendor"> | string | null
    contactEmail?: StringNullableFilter<"Vendor"> | string | null
    taxNumber?: StringNullableFilter<"Vendor"> | string | null
    taxStatus?: BoolFilter<"Vendor"> | boolean
    siupNumber?: StringNullableFilter<"Vendor"> | string | null
    nibNumber?: StringNullableFilter<"Vendor"> | string | null
    pkpNumber?: StringNullableFilter<"Vendor"> | string | null
    productType?: StringNullableFilter<"Vendor"> | string | null
    description?: StringNullableFilter<"Vendor"> | string | null
    bankName?: StringNullableFilter<"Vendor"> | string | null
    accountReferenceNumber?: StringNullableFilter<"Vendor"> | string | null
    accountOwnerName?: StringNullableFilter<"Vendor"> | string | null
    createdAt?: DateTimeNullableFilter<"Vendor"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Vendor"> | Date | string | null
    createdById?: StringNullableFilter<"Vendor"> | string | null
    updatedById?: StringNullableFilter<"Vendor"> | string | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    notes?: NoteListRelationFilter
  }, "id">

  export type VendorOrderByWithAggregationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    name?: SortOrder
    address?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    postalCode?: SortOrderInput | SortOrder
    legal?: SortOrderInput | SortOrder
    vendorCategory?: SortOrderInput | SortOrder
    contactName?: SortOrderInput | SortOrder
    contactRole?: SortOrderInput | SortOrder
    contactPhone?: SortOrderInput | SortOrder
    contactEmail?: SortOrderInput | SortOrder
    taxNumber?: SortOrderInput | SortOrder
    taxStatus?: SortOrder
    siupNumber?: SortOrderInput | SortOrder
    nibNumber?: SortOrderInput | SortOrder
    pkpNumber?: SortOrderInput | SortOrder
    productType?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    bankName?: SortOrderInput | SortOrder
    accountReferenceNumber?: SortOrderInput | SortOrder
    accountOwnerName?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    _count?: VendorCountOrderByAggregateInput
    _max?: VendorMaxOrderByAggregateInput
    _min?: VendorMinOrderByAggregateInput
  }

  export type VendorScalarWhereWithAggregatesInput = {
    AND?: VendorScalarWhereWithAggregatesInput | VendorScalarWhereWithAggregatesInput[]
    OR?: VendorScalarWhereWithAggregatesInput[]
    NOT?: VendorScalarWhereWithAggregatesInput | VendorScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Vendor"> | string
    regNumber?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    name?: StringWithAggregatesFilter<"Vendor"> | string
    address?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    email?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    city?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    postalCode?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    legal?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    vendorCategory?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    contactName?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    contactRole?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    contactPhone?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    contactEmail?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    taxNumber?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    taxStatus?: BoolWithAggregatesFilter<"Vendor"> | boolean
    siupNumber?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    nibNumber?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    pkpNumber?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    productType?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    description?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    bankName?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    accountReferenceNumber?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    accountOwnerName?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Vendor"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Vendor"> | Date | string | null
    createdById?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
  }

  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    id?: StringFilter<"Product"> | string
    regNumber?: StringNullableFilter<"Product"> | string | null
    name?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    createdAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    createdById?: StringNullableFilter<"Product"> | string | null
    updatedById?: StringNullableFilter<"Product"> | string | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    leads?: LeadListRelationFilter
    opportunities?: OpportunityListRelationFilter
    quotes?: QuoteListRelationFilter
    contracts?: ContractListRelationFilter
  }

  export type ProductOrderByWithRelationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    leads?: LeadOrderByRelationAggregateInput
    opportunities?: OpportunityOrderByRelationAggregateInput
    quotes?: QuoteOrderByRelationAggregateInput
    contracts?: ContractOrderByRelationAggregateInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    regNumber?: StringNullableFilter<"Product"> | string | null
    name?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    createdAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    createdById?: StringNullableFilter<"Product"> | string | null
    updatedById?: StringNullableFilter<"Product"> | string | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    leads?: LeadListRelationFilter
    opportunities?: OpportunityListRelationFilter
    quotes?: QuoteListRelationFilter
    contracts?: ContractListRelationFilter
  }, "id">

  export type ProductOrderByWithAggregationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    _count?: ProductCountOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Product"> | string
    regNumber?: StringNullableWithAggregatesFilter<"Product"> | string | null
    name?: StringWithAggregatesFilter<"Product"> | string
    description?: StringNullableWithAggregatesFilter<"Product"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
    createdById?: StringNullableWithAggregatesFilter<"Product"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Product"> | string | null
  }

  export type CategoryWhereInput = {
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    id?: StringFilter<"Category"> | string
    key?: StringFilter<"Category"> | string
    value?: StringFilter<"Category"> | string
    label?: StringFilter<"Category"> | string
  }

  export type CategoryOrderByWithRelationInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    label?: SortOrder
  }

  export type CategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    key?: StringFilter<"Category"> | string
    value?: StringFilter<"Category"> | string
    label?: StringFilter<"Category"> | string
  }, "id">

  export type CategoryOrderByWithAggregationInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    label?: SortOrder
    _count?: CategoryCountOrderByAggregateInput
    _max?: CategoryMaxOrderByAggregateInput
    _min?: CategoryMinOrderByAggregateInput
  }

  export type CategoryScalarWhereWithAggregatesInput = {
    AND?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    OR?: CategoryScalarWhereWithAggregatesInput[]
    NOT?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Category"> | string
    key?: StringWithAggregatesFilter<"Category"> | string
    value?: StringWithAggregatesFilter<"Category"> | string
    label?: StringWithAggregatesFilter<"Category"> | string
  }

  export type CountryWhereInput = {
    AND?: CountryWhereInput | CountryWhereInput[]
    OR?: CountryWhereInput[]
    NOT?: CountryWhereInput | CountryWhereInput[]
    id?: StringFilter<"Country"> | string
    name?: StringNullableFilter<"Country"> | string | null
    code?: StringNullableFilter<"Country"> | string | null
  }

  export type CountryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    code?: SortOrderInput | SortOrder
  }

  export type CountryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CountryWhereInput | CountryWhereInput[]
    OR?: CountryWhereInput[]
    NOT?: CountryWhereInput | CountryWhereInput[]
    name?: StringNullableFilter<"Country"> | string | null
    code?: StringNullableFilter<"Country"> | string | null
  }, "id">

  export type CountryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    code?: SortOrderInput | SortOrder
    _count?: CountryCountOrderByAggregateInput
    _max?: CountryMaxOrderByAggregateInput
    _min?: CountryMinOrderByAggregateInput
  }

  export type CountryScalarWhereWithAggregatesInput = {
    AND?: CountryScalarWhereWithAggregatesInput | CountryScalarWhereWithAggregatesInput[]
    OR?: CountryScalarWhereWithAggregatesInput[]
    NOT?: CountryScalarWhereWithAggregatesInput | CountryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Country"> | string
    name?: StringNullableWithAggregatesFilter<"Country"> | string | null
    code?: StringNullableWithAggregatesFilter<"Country"> | string | null
  }

  export type ProjectWhereInput = {
    AND?: ProjectWhereInput | ProjectWhereInput[]
    OR?: ProjectWhereInput[]
    NOT?: ProjectWhereInput | ProjectWhereInput[]
    id?: StringFilter<"Project"> | string
    regNumber?: StringNullableFilter<"Project"> | string | null
    progress?: DecimalNullableFilter<"Project"> | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    plannedEndDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    actualStartDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    actualEndDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Project"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Project"> | Date | string | null
    contractId?: StringNullableFilter<"Project"> | string | null
    assigneeId?: StringNullableFilter<"Project"> | string | null
    createdById?: StringNullableFilter<"Project"> | string | null
    updatedById?: StringNullableFilter<"Project"> | string | null
    contract?: XOR<ContractNullableScalarRelationFilter, ContractWhereInput> | null
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    members?: UserListRelationFilter
    milestones?: MilestoneListRelationFilter
    notes?: NoteListRelationFilter
    stages?: StageListRelationFilter
    events?: EventListRelationFilter
    budgets?: BudgetListRelationFilter
    expenses?: ExpenseListRelationFilter
  }

  export type ProjectOrderByWithRelationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    progress?: SortOrderInput | SortOrder
    plannedStartDate?: SortOrderInput | SortOrder
    plannedEndDate?: SortOrderInput | SortOrder
    actualStartDate?: SortOrderInput | SortOrder
    actualEndDate?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    contractId?: SortOrderInput | SortOrder
    assigneeId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    contract?: ContractOrderByWithRelationInput
    assignee?: UserOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    members?: UserOrderByRelationAggregateInput
    milestones?: MilestoneOrderByRelationAggregateInput
    notes?: NoteOrderByRelationAggregateInput
    stages?: StageOrderByRelationAggregateInput
    events?: EventOrderByRelationAggregateInput
    budgets?: BudgetOrderByRelationAggregateInput
    expenses?: ExpenseOrderByRelationAggregateInput
  }

  export type ProjectWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    contractId?: string
    AND?: ProjectWhereInput | ProjectWhereInput[]
    OR?: ProjectWhereInput[]
    NOT?: ProjectWhereInput | ProjectWhereInput[]
    regNumber?: StringNullableFilter<"Project"> | string | null
    progress?: DecimalNullableFilter<"Project"> | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    plannedEndDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    actualStartDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    actualEndDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Project"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Project"> | Date | string | null
    assigneeId?: StringNullableFilter<"Project"> | string | null
    createdById?: StringNullableFilter<"Project"> | string | null
    updatedById?: StringNullableFilter<"Project"> | string | null
    contract?: XOR<ContractNullableScalarRelationFilter, ContractWhereInput> | null
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    members?: UserListRelationFilter
    milestones?: MilestoneListRelationFilter
    notes?: NoteListRelationFilter
    stages?: StageListRelationFilter
    events?: EventListRelationFilter
    budgets?: BudgetListRelationFilter
    expenses?: ExpenseListRelationFilter
  }, "id" | "contractId">

  export type ProjectOrderByWithAggregationInput = {
    id?: SortOrder
    regNumber?: SortOrderInput | SortOrder
    progress?: SortOrderInput | SortOrder
    plannedStartDate?: SortOrderInput | SortOrder
    plannedEndDate?: SortOrderInput | SortOrder
    actualStartDate?: SortOrderInput | SortOrder
    actualEndDate?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    contractId?: SortOrderInput | SortOrder
    assigneeId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    _count?: ProjectCountOrderByAggregateInput
    _avg?: ProjectAvgOrderByAggregateInput
    _max?: ProjectMaxOrderByAggregateInput
    _min?: ProjectMinOrderByAggregateInput
    _sum?: ProjectSumOrderByAggregateInput
  }

  export type ProjectScalarWhereWithAggregatesInput = {
    AND?: ProjectScalarWhereWithAggregatesInput | ProjectScalarWhereWithAggregatesInput[]
    OR?: ProjectScalarWhereWithAggregatesInput[]
    NOT?: ProjectScalarWhereWithAggregatesInput | ProjectScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Project"> | string
    regNumber?: StringNullableWithAggregatesFilter<"Project"> | string | null
    progress?: DecimalNullableWithAggregatesFilter<"Project"> | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: DateTimeNullableWithAggregatesFilter<"Project"> | Date | string | null
    plannedEndDate?: DateTimeNullableWithAggregatesFilter<"Project"> | Date | string | null
    actualStartDate?: DateTimeNullableWithAggregatesFilter<"Project"> | Date | string | null
    actualEndDate?: DateTimeNullableWithAggregatesFilter<"Project"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Project"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Project"> | Date | string | null
    contractId?: StringNullableWithAggregatesFilter<"Project"> | string | null
    assigneeId?: StringNullableWithAggregatesFilter<"Project"> | string | null
    createdById?: StringNullableWithAggregatesFilter<"Project"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Project"> | string | null
  }

  export type MilestoneWhereInput = {
    AND?: MilestoneWhereInput | MilestoneWhereInput[]
    OR?: MilestoneWhereInput[]
    NOT?: MilestoneWhereInput | MilestoneWhereInput[]
    id?: StringFilter<"Milestone"> | string
    order?: DecimalNullableFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    title?: StringNullableFilter<"Milestone"> | string | null
    description?: StringNullableFilter<"Milestone"> | string | null
    plannedStartDate?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    plannedEndDate?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    actualStartDate?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    actualEndDate?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    approvedDate?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    share?: DecimalNullableFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    deliverables?: StringNullableFilter<"Milestone"> | string | null
    progress?: DecimalNullableFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    revision?: DecimalNullableFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    projectId?: StringNullableFilter<"Milestone"> | string | null
    assigneeId?: StringNullableFilter<"Milestone"> | string | null
    createdById?: StringNullableFilter<"Milestone"> | string | null
    updatedById?: StringNullableFilter<"Milestone"> | string | null
    project?: XOR<ProjectNullableScalarRelationFilter, ProjectWhereInput> | null
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    tasks?: TaskListRelationFilter
    notes?: NoteListRelationFilter
    stages?: StageListRelationFilter
    events?: EventListRelationFilter
  }

  export type MilestoneOrderByWithRelationInput = {
    id?: SortOrder
    order?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    plannedStartDate?: SortOrderInput | SortOrder
    plannedEndDate?: SortOrderInput | SortOrder
    actualStartDate?: SortOrderInput | SortOrder
    actualEndDate?: SortOrderInput | SortOrder
    approvedDate?: SortOrderInput | SortOrder
    share?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    deliverables?: SortOrderInput | SortOrder
    progress?: SortOrderInput | SortOrder
    revision?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    projectId?: SortOrderInput | SortOrder
    assigneeId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    project?: ProjectOrderByWithRelationInput
    assignee?: UserOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    tasks?: TaskOrderByRelationAggregateInput
    notes?: NoteOrderByRelationAggregateInput
    stages?: StageOrderByRelationAggregateInput
    events?: EventOrderByRelationAggregateInput
  }

  export type MilestoneWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MilestoneWhereInput | MilestoneWhereInput[]
    OR?: MilestoneWhereInput[]
    NOT?: MilestoneWhereInput | MilestoneWhereInput[]
    order?: DecimalNullableFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    title?: StringNullableFilter<"Milestone"> | string | null
    description?: StringNullableFilter<"Milestone"> | string | null
    plannedStartDate?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    plannedEndDate?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    actualStartDate?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    actualEndDate?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    approvedDate?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    share?: DecimalNullableFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    deliverables?: StringNullableFilter<"Milestone"> | string | null
    progress?: DecimalNullableFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    revision?: DecimalNullableFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    projectId?: StringNullableFilter<"Milestone"> | string | null
    assigneeId?: StringNullableFilter<"Milestone"> | string | null
    createdById?: StringNullableFilter<"Milestone"> | string | null
    updatedById?: StringNullableFilter<"Milestone"> | string | null
    project?: XOR<ProjectNullableScalarRelationFilter, ProjectWhereInput> | null
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    tasks?: TaskListRelationFilter
    notes?: NoteListRelationFilter
    stages?: StageListRelationFilter
    events?: EventListRelationFilter
  }, "id">

  export type MilestoneOrderByWithAggregationInput = {
    id?: SortOrder
    order?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    plannedStartDate?: SortOrderInput | SortOrder
    plannedEndDate?: SortOrderInput | SortOrder
    actualStartDate?: SortOrderInput | SortOrder
    actualEndDate?: SortOrderInput | SortOrder
    approvedDate?: SortOrderInput | SortOrder
    share?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    deliverables?: SortOrderInput | SortOrder
    progress?: SortOrderInput | SortOrder
    revision?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    projectId?: SortOrderInput | SortOrder
    assigneeId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    _count?: MilestoneCountOrderByAggregateInput
    _avg?: MilestoneAvgOrderByAggregateInput
    _max?: MilestoneMaxOrderByAggregateInput
    _min?: MilestoneMinOrderByAggregateInput
    _sum?: MilestoneSumOrderByAggregateInput
  }

  export type MilestoneScalarWhereWithAggregatesInput = {
    AND?: MilestoneScalarWhereWithAggregatesInput | MilestoneScalarWhereWithAggregatesInput[]
    OR?: MilestoneScalarWhereWithAggregatesInput[]
    NOT?: MilestoneScalarWhereWithAggregatesInput | MilestoneScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Milestone"> | string
    order?: DecimalNullableWithAggregatesFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    title?: StringNullableWithAggregatesFilter<"Milestone"> | string | null
    description?: StringNullableWithAggregatesFilter<"Milestone"> | string | null
    plannedStartDate?: DateTimeNullableWithAggregatesFilter<"Milestone"> | Date | string | null
    plannedEndDate?: DateTimeNullableWithAggregatesFilter<"Milestone"> | Date | string | null
    actualStartDate?: DateTimeNullableWithAggregatesFilter<"Milestone"> | Date | string | null
    actualEndDate?: DateTimeNullableWithAggregatesFilter<"Milestone"> | Date | string | null
    approvedDate?: DateTimeNullableWithAggregatesFilter<"Milestone"> | Date | string | null
    share?: DecimalNullableWithAggregatesFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableWithAggregatesFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    deliverables?: StringNullableWithAggregatesFilter<"Milestone"> | string | null
    progress?: DecimalNullableWithAggregatesFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    revision?: DecimalNullableWithAggregatesFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Milestone"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Milestone"> | Date | string | null
    projectId?: StringNullableWithAggregatesFilter<"Milestone"> | string | null
    assigneeId?: StringNullableWithAggregatesFilter<"Milestone"> | string | null
    createdById?: StringNullableWithAggregatesFilter<"Milestone"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Milestone"> | string | null
  }

  export type TaskWhereInput = {
    AND?: TaskWhereInput | TaskWhereInput[]
    OR?: TaskWhereInput[]
    NOT?: TaskWhereInput | TaskWhereInput[]
    id?: StringFilter<"Task"> | string
    order?: DecimalNullableFilter<"Task"> | Decimal | DecimalJsLike | number | string | null
    title?: StringFilter<"Task"> | string
    plannedStartDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    plannedEndDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    actualStartDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    actualEndDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    progress?: DecimalNullableFilter<"Task"> | Decimal | DecimalJsLike | number | string | null
    deliverables?: StringNullableFilter<"Task"> | string | null
    remarks?: StringNullableFilter<"Task"> | string | null
    createdAt?: DateTimeNullableFilter<"Task"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Task"> | Date | string | null
    milestoneId?: StringFilter<"Task"> | string
    assigneeId?: StringNullableFilter<"Task"> | string | null
    createdById?: StringNullableFilter<"Task"> | string | null
    updatedById?: StringNullableFilter<"Task"> | string | null
    milestone?: XOR<MilestoneScalarRelationFilter, MilestoneWhereInput>
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    members?: UserListRelationFilter
    notes?: NoteListRelationFilter
    stages?: StageListRelationFilter
    events?: EventListRelationFilter
    expenses?: ExpenseListRelationFilter
    funds?: FundListRelationFilter
  }

  export type TaskOrderByWithRelationInput = {
    id?: SortOrder
    order?: SortOrderInput | SortOrder
    title?: SortOrder
    plannedStartDate?: SortOrderInput | SortOrder
    plannedEndDate?: SortOrderInput | SortOrder
    actualStartDate?: SortOrderInput | SortOrder
    actualEndDate?: SortOrderInput | SortOrder
    progress?: SortOrderInput | SortOrder
    deliverables?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    milestoneId?: SortOrder
    assigneeId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    milestone?: MilestoneOrderByWithRelationInput
    assignee?: UserOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    members?: UserOrderByRelationAggregateInput
    notes?: NoteOrderByRelationAggregateInput
    stages?: StageOrderByRelationAggregateInput
    events?: EventOrderByRelationAggregateInput
    expenses?: ExpenseOrderByRelationAggregateInput
    funds?: FundOrderByRelationAggregateInput
  }

  export type TaskWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TaskWhereInput | TaskWhereInput[]
    OR?: TaskWhereInput[]
    NOT?: TaskWhereInput | TaskWhereInput[]
    order?: DecimalNullableFilter<"Task"> | Decimal | DecimalJsLike | number | string | null
    title?: StringFilter<"Task"> | string
    plannedStartDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    plannedEndDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    actualStartDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    actualEndDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    progress?: DecimalNullableFilter<"Task"> | Decimal | DecimalJsLike | number | string | null
    deliverables?: StringNullableFilter<"Task"> | string | null
    remarks?: StringNullableFilter<"Task"> | string | null
    createdAt?: DateTimeNullableFilter<"Task"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Task"> | Date | string | null
    milestoneId?: StringFilter<"Task"> | string
    assigneeId?: StringNullableFilter<"Task"> | string | null
    createdById?: StringNullableFilter<"Task"> | string | null
    updatedById?: StringNullableFilter<"Task"> | string | null
    milestone?: XOR<MilestoneScalarRelationFilter, MilestoneWhereInput>
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    members?: UserListRelationFilter
    notes?: NoteListRelationFilter
    stages?: StageListRelationFilter
    events?: EventListRelationFilter
    expenses?: ExpenseListRelationFilter
    funds?: FundListRelationFilter
  }, "id">

  export type TaskOrderByWithAggregationInput = {
    id?: SortOrder
    order?: SortOrderInput | SortOrder
    title?: SortOrder
    plannedStartDate?: SortOrderInput | SortOrder
    plannedEndDate?: SortOrderInput | SortOrder
    actualStartDate?: SortOrderInput | SortOrder
    actualEndDate?: SortOrderInput | SortOrder
    progress?: SortOrderInput | SortOrder
    deliverables?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    milestoneId?: SortOrder
    assigneeId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    _count?: TaskCountOrderByAggregateInput
    _avg?: TaskAvgOrderByAggregateInput
    _max?: TaskMaxOrderByAggregateInput
    _min?: TaskMinOrderByAggregateInput
    _sum?: TaskSumOrderByAggregateInput
  }

  export type TaskScalarWhereWithAggregatesInput = {
    AND?: TaskScalarWhereWithAggregatesInput | TaskScalarWhereWithAggregatesInput[]
    OR?: TaskScalarWhereWithAggregatesInput[]
    NOT?: TaskScalarWhereWithAggregatesInput | TaskScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Task"> | string
    order?: DecimalNullableWithAggregatesFilter<"Task"> | Decimal | DecimalJsLike | number | string | null
    title?: StringWithAggregatesFilter<"Task"> | string
    plannedStartDate?: DateTimeNullableWithAggregatesFilter<"Task"> | Date | string | null
    plannedEndDate?: DateTimeNullableWithAggregatesFilter<"Task"> | Date | string | null
    actualStartDate?: DateTimeNullableWithAggregatesFilter<"Task"> | Date | string | null
    actualEndDate?: DateTimeNullableWithAggregatesFilter<"Task"> | Date | string | null
    progress?: DecimalNullableWithAggregatesFilter<"Task"> | Decimal | DecimalJsLike | number | string | null
    deliverables?: StringNullableWithAggregatesFilter<"Task"> | string | null
    remarks?: StringNullableWithAggregatesFilter<"Task"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Task"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Task"> | Date | string | null
    milestoneId?: StringWithAggregatesFilter<"Task"> | string
    assigneeId?: StringNullableWithAggregatesFilter<"Task"> | string | null
    createdById?: StringNullableWithAggregatesFilter<"Task"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Task"> | string | null
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    createdAt?: DateTimeNullableFilter<"User"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    status?: StringFilter<"User"> | string
    roleId?: StringNullableFilter<"User"> | string | null
    organizationId?: StringNullableFilter<"User"> | string | null
    role?: XOR<RoleNullableScalarRelationFilter, RoleWhereInput> | null
    organization?: XOR<OrganizationNullableScalarRelationFilter, OrganizationWhereInput> | null
    profile?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
    BudgetAssignee?: BudgetListRelationFilter
    CreatorBudget?: BudgetListRelationFilter
    UpdaterBudget?: BudgetListRelationFilter
    CreatorClient?: ClientListRelationFilter
    UpdaterClient?: ClientListRelationFilter
    CreatorEvent?: EventListRelationFilter
    UpdaterEvent?: EventListRelationFilter
    CreatorExpense?: ExpenseListRelationFilter
    UpdaterExpense?: ExpenseListRelationFilter
    FundAssignee?: FundListRelationFilter
    CreatorFund?: FundListRelationFilter
    UpdaterFund?: FundListRelationFilter
    MilestoneAssignee?: MilestoneListRelationFilter
    CreatorMilestone?: MilestoneListRelationFilter
    UpdaterMilestone?: MilestoneListRelationFilter
    CreatorNote?: NoteListRelationFilter
    UpdaterNote?: NoteListRelationFilter
    CreatorProduct?: ProductListRelationFilter
    UpdaterProduct?: ProductListRelationFilter
    ProjectAssignee?: ProjectListRelationFilter
    CreatorProject?: ProjectListRelationFilter
    UpdaterProject?: ProjectListRelationFilter
    ProjectMember?: ProjectListRelationFilter
    CreatorStage?: StageListRelationFilter
    UpdaterStage?: StageListRelationFilter
    TaskAssignee?: TaskListRelationFilter
    CreatorTask?: TaskListRelationFilter
    UpdaterTask?: TaskListRelationFilter
    TaskMember?: TaskListRelationFilter
    PipelineAssignee?: PipelineListRelationFilter
    CreatorPipeline?: PipelineListRelationFilter
    UpdaterPipeline?: PipelineListRelationFilter
    PipelineMember?: PipelineListRelationFilter
    CreatorVendor?: VendorListRelationFilter
    UpdaterVendor?: VendorListRelationFilter
    CreatorProfile?: ProfileListRelationFilter
    UpdaterProfile?: ProfileListRelationFilter
    CreatorCostType?: CostTypeListRelationFilter
    UpdaterCostType?: CostTypeListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    status?: SortOrder
    roleId?: SortOrderInput | SortOrder
    organizationId?: SortOrderInput | SortOrder
    role?: RoleOrderByWithRelationInput
    organization?: OrganizationOrderByWithRelationInput
    profile?: ProfileOrderByWithRelationInput
    BudgetAssignee?: BudgetOrderByRelationAggregateInput
    CreatorBudget?: BudgetOrderByRelationAggregateInput
    UpdaterBudget?: BudgetOrderByRelationAggregateInput
    CreatorClient?: ClientOrderByRelationAggregateInput
    UpdaterClient?: ClientOrderByRelationAggregateInput
    CreatorEvent?: EventOrderByRelationAggregateInput
    UpdaterEvent?: EventOrderByRelationAggregateInput
    CreatorExpense?: ExpenseOrderByRelationAggregateInput
    UpdaterExpense?: ExpenseOrderByRelationAggregateInput
    FundAssignee?: FundOrderByRelationAggregateInput
    CreatorFund?: FundOrderByRelationAggregateInput
    UpdaterFund?: FundOrderByRelationAggregateInput
    MilestoneAssignee?: MilestoneOrderByRelationAggregateInput
    CreatorMilestone?: MilestoneOrderByRelationAggregateInput
    UpdaterMilestone?: MilestoneOrderByRelationAggregateInput
    CreatorNote?: NoteOrderByRelationAggregateInput
    UpdaterNote?: NoteOrderByRelationAggregateInput
    CreatorProduct?: ProductOrderByRelationAggregateInput
    UpdaterProduct?: ProductOrderByRelationAggregateInput
    ProjectAssignee?: ProjectOrderByRelationAggregateInput
    CreatorProject?: ProjectOrderByRelationAggregateInput
    UpdaterProject?: ProjectOrderByRelationAggregateInput
    ProjectMember?: ProjectOrderByRelationAggregateInput
    CreatorStage?: StageOrderByRelationAggregateInput
    UpdaterStage?: StageOrderByRelationAggregateInput
    TaskAssignee?: TaskOrderByRelationAggregateInput
    CreatorTask?: TaskOrderByRelationAggregateInput
    UpdaterTask?: TaskOrderByRelationAggregateInput
    TaskMember?: TaskOrderByRelationAggregateInput
    PipelineAssignee?: PipelineOrderByRelationAggregateInput
    CreatorPipeline?: PipelineOrderByRelationAggregateInput
    UpdaterPipeline?: PipelineOrderByRelationAggregateInput
    PipelineMember?: PipelineOrderByRelationAggregateInput
    CreatorVendor?: VendorOrderByRelationAggregateInput
    UpdaterVendor?: VendorOrderByRelationAggregateInput
    CreatorProfile?: ProfileOrderByRelationAggregateInput
    UpdaterProfile?: ProfileOrderByRelationAggregateInput
    CreatorCostType?: CostTypeOrderByRelationAggregateInput
    UpdaterCostType?: CostTypeOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    createdAt?: DateTimeNullableFilter<"User"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    status?: StringFilter<"User"> | string
    roleId?: StringNullableFilter<"User"> | string | null
    organizationId?: StringNullableFilter<"User"> | string | null
    role?: XOR<RoleNullableScalarRelationFilter, RoleWhereInput> | null
    organization?: XOR<OrganizationNullableScalarRelationFilter, OrganizationWhereInput> | null
    profile?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
    BudgetAssignee?: BudgetListRelationFilter
    CreatorBudget?: BudgetListRelationFilter
    UpdaterBudget?: BudgetListRelationFilter
    CreatorClient?: ClientListRelationFilter
    UpdaterClient?: ClientListRelationFilter
    CreatorEvent?: EventListRelationFilter
    UpdaterEvent?: EventListRelationFilter
    CreatorExpense?: ExpenseListRelationFilter
    UpdaterExpense?: ExpenseListRelationFilter
    FundAssignee?: FundListRelationFilter
    CreatorFund?: FundListRelationFilter
    UpdaterFund?: FundListRelationFilter
    MilestoneAssignee?: MilestoneListRelationFilter
    CreatorMilestone?: MilestoneListRelationFilter
    UpdaterMilestone?: MilestoneListRelationFilter
    CreatorNote?: NoteListRelationFilter
    UpdaterNote?: NoteListRelationFilter
    CreatorProduct?: ProductListRelationFilter
    UpdaterProduct?: ProductListRelationFilter
    ProjectAssignee?: ProjectListRelationFilter
    CreatorProject?: ProjectListRelationFilter
    UpdaterProject?: ProjectListRelationFilter
    ProjectMember?: ProjectListRelationFilter
    CreatorStage?: StageListRelationFilter
    UpdaterStage?: StageListRelationFilter
    TaskAssignee?: TaskListRelationFilter
    CreatorTask?: TaskListRelationFilter
    UpdaterTask?: TaskListRelationFilter
    TaskMember?: TaskListRelationFilter
    PipelineAssignee?: PipelineListRelationFilter
    CreatorPipeline?: PipelineListRelationFilter
    UpdaterPipeline?: PipelineListRelationFilter
    PipelineMember?: PipelineListRelationFilter
    CreatorVendor?: VendorListRelationFilter
    UpdaterVendor?: VendorListRelationFilter
    CreatorProfile?: ProfileListRelationFilter
    UpdaterProfile?: ProfileListRelationFilter
    CreatorCostType?: CostTypeListRelationFilter
    UpdaterCostType?: CostTypeListRelationFilter
  }, "id" | "username">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    status?: SortOrder
    roleId?: SortOrderInput | SortOrder
    organizationId?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    username?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    status?: StringWithAggregatesFilter<"User"> | string
    roleId?: StringNullableWithAggregatesFilter<"User"> | string | null
    organizationId?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type RoleWhereInput = {
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    id?: StringFilter<"Role"> | string
    name?: StringFilter<"Role"> | string
    level?: IntFilter<"Role"> | number
    users?: UserListRelationFilter
  }

  export type RoleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    level?: SortOrder
    users?: UserOrderByRelationAggregateInput
  }

  export type RoleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    level?: IntFilter<"Role"> | number
    users?: UserListRelationFilter
  }, "id" | "name">

  export type RoleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    level?: SortOrder
    _count?: RoleCountOrderByAggregateInput
    _avg?: RoleAvgOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
    _sum?: RoleSumOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    OR?: RoleScalarWhereWithAggregatesInput[]
    NOT?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Role"> | string
    name?: StringWithAggregatesFilter<"Role"> | string
    level?: IntWithAggregatesFilter<"Role"> | number
  }

  export type OrganizationWhereInput = {
    AND?: OrganizationWhereInput | OrganizationWhereInput[]
    OR?: OrganizationWhereInput[]
    NOT?: OrganizationWhereInput | OrganizationWhereInput[]
    id?: StringFilter<"Organization"> | string
    name?: StringFilter<"Organization"> | string
    code?: StringNullableFilter<"Organization"> | string | null
    users?: UserListRelationFilter
  }

  export type OrganizationOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrderInput | SortOrder
    users?: UserOrderByRelationAggregateInput
  }

  export type OrganizationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    code?: string
    AND?: OrganizationWhereInput | OrganizationWhereInput[]
    OR?: OrganizationWhereInput[]
    NOT?: OrganizationWhereInput | OrganizationWhereInput[]
    users?: UserListRelationFilter
  }, "id" | "name" | "code">

  export type OrganizationOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrderInput | SortOrder
    _count?: OrganizationCountOrderByAggregateInput
    _max?: OrganizationMaxOrderByAggregateInput
    _min?: OrganizationMinOrderByAggregateInput
  }

  export type OrganizationScalarWhereWithAggregatesInput = {
    AND?: OrganizationScalarWhereWithAggregatesInput | OrganizationScalarWhereWithAggregatesInput[]
    OR?: OrganizationScalarWhereWithAggregatesInput[]
    NOT?: OrganizationScalarWhereWithAggregatesInput | OrganizationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Organization"> | string
    name?: StringWithAggregatesFilter<"Organization"> | string
    code?: StringNullableWithAggregatesFilter<"Organization"> | string | null
  }

  export type ProfileWhereInput = {
    AND?: ProfileWhereInput | ProfileWhereInput[]
    OR?: ProfileWhereInput[]
    NOT?: ProfileWhereInput | ProfileWhereInput[]
    id?: StringFilter<"Profile"> | string
    name?: StringNullableFilter<"Profile"> | string | null
    joinDate?: DateTimeNullableFilter<"Profile"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Profile"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Profile"> | Date | string | null
    createdById?: StringNullableFilter<"Profile"> | string | null
    updatedById?: StringNullableFilter<"Profile"> | string | null
    userId?: StringFilter<"Profile"> | string
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ProfileOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    joinDate?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    userId?: SortOrder
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type ProfileWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: ProfileWhereInput | ProfileWhereInput[]
    OR?: ProfileWhereInput[]
    NOT?: ProfileWhereInput | ProfileWhereInput[]
    name?: StringNullableFilter<"Profile"> | string | null
    joinDate?: DateTimeNullableFilter<"Profile"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Profile"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Profile"> | Date | string | null
    createdById?: StringNullableFilter<"Profile"> | string | null
    updatedById?: StringNullableFilter<"Profile"> | string | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "userId">

  export type ProfileOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    joinDate?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    userId?: SortOrder
    _count?: ProfileCountOrderByAggregateInput
    _max?: ProfileMaxOrderByAggregateInput
    _min?: ProfileMinOrderByAggregateInput
  }

  export type ProfileScalarWhereWithAggregatesInput = {
    AND?: ProfileScalarWhereWithAggregatesInput | ProfileScalarWhereWithAggregatesInput[]
    OR?: ProfileScalarWhereWithAggregatesInput[]
    NOT?: ProfileScalarWhereWithAggregatesInput | ProfileScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Profile"> | string
    name?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    joinDate?: DateTimeNullableWithAggregatesFilter<"Profile"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Profile"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Profile"> | Date | string | null
    createdById?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    userId?: StringWithAggregatesFilter<"Profile"> | string
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    sid?: StringFilter<"Session"> | string
    sess?: JsonFilter<"Session">
    expire?: DateTimeFilter<"Session"> | Date | string
  }

  export type SessionOrderByWithRelationInput = {
    sid?: SortOrder
    sess?: SortOrder
    expire?: SortOrder
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    sid?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    sess?: JsonFilter<"Session">
    expire?: DateTimeFilter<"Session"> | Date | string
  }, "sid">

  export type SessionOrderByWithAggregationInput = {
    sid?: SortOrder
    sess?: SortOrder
    expire?: SortOrder
    _count?: SessionCountOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    sid?: StringWithAggregatesFilter<"Session"> | string
    sess?: JsonWithAggregatesFilter<"Session">
    expire?: DateTimeWithAggregatesFilter<"Session"> | Date | string
  }

  export type BudgetCreateInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutBudgetAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorBudgetInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterBudgetInput
    items?: BudgetItemCreateNestedManyWithoutBudgetInput
    project?: ProjectCreateNestedOneWithoutBudgetsInput
    notes?: NoteCreateNestedManyWithoutBudgetInput
    stages?: StageCreateNestedManyWithoutBudgetInput
  }

  export type BudgetUncheckedCreateInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    projectId?: string | null
    items?: BudgetItemUncheckedCreateNestedManyWithoutBudgetInput
    notes?: NoteUncheckedCreateNestedManyWithoutBudgetInput
    stages?: StageUncheckedCreateNestedManyWithoutBudgetInput
  }

  export type BudgetUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutBudgetAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorBudgetNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterBudgetNestedInput
    items?: BudgetItemUpdateManyWithoutBudgetNestedInput
    project?: ProjectUpdateOneWithoutBudgetsNestedInput
    notes?: NoteUpdateManyWithoutBudgetNestedInput
    stages?: StageUpdateManyWithoutBudgetNestedInput
  }

  export type BudgetUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: BudgetItemUncheckedUpdateManyWithoutBudgetNestedInput
    notes?: NoteUncheckedUpdateManyWithoutBudgetNestedInput
    stages?: StageUncheckedUpdateManyWithoutBudgetNestedInput
  }

  export type BudgetCreateManyInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    projectId?: string | null
  }

  export type BudgetUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BudgetUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BudgetItemCreateInput = {
    id?: string
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    budget: BudgetCreateNestedOneWithoutItemsInput
    category?: CostTypeCreateNestedOneWithoutBudgetItemsInput
  }

  export type BudgetItemUncheckedCreateInput = {
    id?: string
    budgetId: string
    categoryId?: string | null
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type BudgetItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    budget?: BudgetUpdateOneRequiredWithoutItemsNestedInput
    category?: CostTypeUpdateOneWithoutBudgetItemsNestedInput
  }

  export type BudgetItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    budgetId?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BudgetItemCreateManyInput = {
    id?: string
    budgetId: string
    categoryId?: string | null
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type BudgetItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BudgetItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    budgetId?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FundCreateInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutFundAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorFundInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterFundInput
    items?: FundItemCreateNestedManyWithoutFundInput
    task?: TaskCreateNestedOneWithoutFundsInput
    expenses?: ExpenseCreateNestedManyWithoutFundInput
    notes?: NoteCreateNestedManyWithoutFundInput
    stages?: StageCreateNestedManyWithoutFundInput
  }

  export type FundUncheckedCreateInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    taskId?: string | null
    items?: FundItemUncheckedCreateNestedManyWithoutFundInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutFundInput
    notes?: NoteUncheckedCreateNestedManyWithoutFundInput
    stages?: StageUncheckedCreateNestedManyWithoutFundInput
  }

  export type FundUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutFundAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorFundNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterFundNestedInput
    items?: FundItemUpdateManyWithoutFundNestedInput
    task?: TaskUpdateOneWithoutFundsNestedInput
    expenses?: ExpenseUpdateManyWithoutFundNestedInput
    notes?: NoteUpdateManyWithoutFundNestedInput
    stages?: StageUpdateManyWithoutFundNestedInput
  }

  export type FundUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: FundItemUncheckedUpdateManyWithoutFundNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutFundNestedInput
    notes?: NoteUncheckedUpdateManyWithoutFundNestedInput
    stages?: StageUncheckedUpdateManyWithoutFundNestedInput
  }

  export type FundCreateManyInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    taskId?: string | null
  }

  export type FundUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FundUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FundItemCreateInput = {
    id?: string
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    fund: FundCreateNestedOneWithoutItemsInput
    category?: CostTypeCreateNestedOneWithoutFundItemsInput
  }

  export type FundItemUncheckedCreateInput = {
    id?: string
    fundId: string
    categoryId?: string | null
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type FundItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fund?: FundUpdateOneRequiredWithoutItemsNestedInput
    category?: CostTypeUpdateOneWithoutFundItemsNestedInput
  }

  export type FundItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fundId?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FundItemCreateManyInput = {
    id?: string
    fundId: string
    categoryId?: string | null
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type FundItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FundItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    fundId?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ExpenseCreateInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    category: CostTypeCreateNestedOneWithoutExpensesInput
    createdBy?: UserCreateNestedOneWithoutCreatorExpenseInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterExpenseInput
    fund?: FundCreateNestedOneWithoutExpensesInput
    task?: TaskCreateNestedOneWithoutExpensesInput
    project?: ProjectCreateNestedOneWithoutExpensesInput
    notes?: NoteCreateNestedManyWithoutExpenseInput
  }

  export type ExpenseUncheckedCreateInput = {
    id?: string
    regNumber?: string | null
    categoryId: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    fundId?: string | null
    taskId?: string | null
    projectId?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutExpenseInput
  }

  export type ExpenseUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: CostTypeUpdateOneRequiredWithoutExpensesNestedInput
    createdBy?: UserUpdateOneWithoutCreatorExpenseNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterExpenseNestedInput
    fund?: FundUpdateOneWithoutExpensesNestedInput
    task?: TaskUpdateOneWithoutExpensesNestedInput
    project?: ProjectUpdateOneWithoutExpensesNestedInput
    notes?: NoteUpdateManyWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutExpenseNestedInput
  }

  export type ExpenseCreateManyInput = {
    id?: string
    regNumber?: string | null
    categoryId: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    fundId?: string | null
    taskId?: string | null
    projectId?: string | null
  }

  export type ExpenseUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ExpenseUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CostTypeCreateInput = {
    id?: string
    order?: number | null
    name: string
    parent?: CostTypeCreateNestedOneWithoutChildrenInput
    children?: CostTypeCreateNestedManyWithoutParentInput
    createdBy?: UserCreateNestedOneWithoutCreatorCostTypeInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterCostTypeInput
    budgetItems?: BudgetItemCreateNestedManyWithoutCategoryInput
    fundItems?: FundItemCreateNestedManyWithoutCategoryInput
    expenses?: ExpenseCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeUncheckedCreateInput = {
    id?: string
    order?: number | null
    name: string
    parentId?: string | null
    createdById?: string | null
    updatedById?: string | null
    children?: CostTypeUncheckedCreateNestedManyWithoutParentInput
    budgetItems?: BudgetItemUncheckedCreateNestedManyWithoutCategoryInput
    fundItems?: FundItemUncheckedCreateNestedManyWithoutCategoryInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parent?: CostTypeUpdateOneWithoutChildrenNestedInput
    children?: CostTypeUpdateManyWithoutParentNestedInput
    createdBy?: UserUpdateOneWithoutCreatorCostTypeNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterCostTypeNestedInput
    budgetItems?: BudgetItemUpdateManyWithoutCategoryNestedInput
    fundItems?: FundItemUpdateManyWithoutCategoryNestedInput
    expenses?: ExpenseUpdateManyWithoutCategoryNestedInput
  }

  export type CostTypeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CostTypeUncheckedUpdateManyWithoutParentNestedInput
    budgetItems?: BudgetItemUncheckedUpdateManyWithoutCategoryNestedInput
    fundItems?: FundItemUncheckedUpdateManyWithoutCategoryNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CostTypeCreateManyInput = {
    id?: string
    order?: number | null
    name: string
    parentId?: string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type CostTypeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
  }

  export type CostTypeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PipelineCreateInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    lead?: LeadCreateNestedOneWithoutPipelineInput
    opportunity?: OpportunityCreateNestedOneWithoutPipelineInput
    quote?: QuoteCreateNestedOneWithoutPipelineInput
    contract?: ContractCreateNestedOneWithoutPipelineInput
    assignee?: UserCreateNestedOneWithoutPipelineAssigneeInput
    members?: UserCreateNestedManyWithoutPipelineMemberInput
    createdBy?: UserCreateNestedOneWithoutCreatorPipelineInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterPipelineInput
    stages?: StageCreateNestedManyWithoutPipelineInput
    notes?: NoteCreateNestedManyWithoutPipelineInput
    events?: EventCreateNestedManyWithoutPipelineInput
  }

  export type PipelineUncheckedCreateInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutPipelineMemberInput
    stages?: StageUncheckedCreateNestedManyWithoutPipelineInput
    notes?: NoteUncheckedCreateNestedManyWithoutPipelineInput
    events?: EventUncheckedCreateNestedManyWithoutPipelineInput
  }

  export type PipelineUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lead?: LeadUpdateOneWithoutPipelineNestedInput
    opportunity?: OpportunityUpdateOneWithoutPipelineNestedInput
    quote?: QuoteUpdateOneWithoutPipelineNestedInput
    contract?: ContractUpdateOneWithoutPipelineNestedInput
    assignee?: UserUpdateOneWithoutPipelineAssigneeNestedInput
    members?: UserUpdateManyWithoutPipelineMemberNestedInput
    createdBy?: UserUpdateOneWithoutCreatorPipelineNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterPipelineNestedInput
    stages?: StageUpdateManyWithoutPipelineNestedInput
    notes?: NoteUpdateManyWithoutPipelineNestedInput
    events?: EventUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutPipelineMemberNestedInput
    stages?: StageUncheckedUpdateManyWithoutPipelineNestedInput
    notes?: NoteUncheckedUpdateManyWithoutPipelineNestedInput
    events?: EventUncheckedUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineCreateManyInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type PipelineUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PipelineUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LeadCreateInput = {
    id?: string
    regNumber?: string | null
    name?: string | null
    role?: string | null
    email?: string | null
    phone?: string | null
    leadSource?: string | null
    leadDate?: Date | string | null
    leadAddress?: string | null
    description?: string | null
    prospectLocation?: string | null
    approvedDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutLeadsInput
    client?: ClientCreateNestedOneWithoutLeadsInput
    opportunities?: OpportunityCreateNestedManyWithoutLeadInput
    pipeline?: PipelineCreateNestedManyWithoutLeadInput
  }

  export type LeadUncheckedCreateInput = {
    id?: string
    regNumber?: string | null
    name?: string | null
    role?: string | null
    email?: string | null
    phone?: string | null
    leadSource?: string | null
    leadDate?: Date | string | null
    leadAddress?: string | null
    description?: string | null
    prospectLocation?: string | null
    approvedDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutLeadsInput
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutLeadInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutLeadInput
  }

  export type LeadUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    leadSource?: NullableStringFieldUpdateOperationsInput | string | null
    leadDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadAddress?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    prospectLocation?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutLeadsNestedInput
    client?: ClientUpdateOneWithoutLeadsNestedInput
    opportunities?: OpportunityUpdateManyWithoutLeadNestedInput
    pipeline?: PipelineUpdateManyWithoutLeadNestedInput
  }

  export type LeadUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    leadSource?: NullableStringFieldUpdateOperationsInput | string | null
    leadDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadAddress?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    prospectLocation?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutLeadsNestedInput
    opportunities?: OpportunityUncheckedUpdateManyWithoutLeadNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutLeadNestedInput
  }

  export type LeadCreateManyInput = {
    id?: string
    regNumber?: string | null
    name?: string | null
    role?: string | null
    email?: string | null
    phone?: string | null
    leadSource?: string | null
    leadDate?: Date | string | null
    leadAddress?: string | null
    description?: string | null
    prospectLocation?: string | null
    approvedDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
  }

  export type LeadUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    leadSource?: NullableStringFieldUpdateOperationsInput | string | null
    leadDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadAddress?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    prospectLocation?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LeadUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    leadSource?: NullableStringFieldUpdateOperationsInput | string | null
    leadDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadAddress?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    prospectLocation?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OpportunityCreateInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    approvedDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutOpportunitiesInput
    client?: ClientCreateNestedOneWithoutOpportunitiesInput
    lead?: LeadCreateNestedOneWithoutOpportunitiesInput
    quotes?: QuoteCreateNestedManyWithoutOpportunityInput
    pipeline?: PipelineCreateNestedManyWithoutOpportunityInput
  }

  export type OpportunityUncheckedCreateInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    approvedDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    leadId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutOpportunitiesInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutOpportunityInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutOpportunityInput
  }

  export type OpportunityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutOpportunitiesNestedInput
    client?: ClientUpdateOneWithoutOpportunitiesNestedInput
    lead?: LeadUpdateOneWithoutOpportunitiesNestedInput
    quotes?: QuoteUpdateManyWithoutOpportunityNestedInput
    pipeline?: PipelineUpdateManyWithoutOpportunityNestedInput
  }

  export type OpportunityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutOpportunitiesNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutOpportunityNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutOpportunityNestedInput
  }

  export type OpportunityCreateManyInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    approvedDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    leadId?: string | null
  }

  export type OpportunityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OpportunityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type QuoteCreateInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    releasedDate?: Date | string | null
    approvedDate?: Date | string | null
    expiredDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutQuotesInput
    client?: ClientCreateNestedOneWithoutQuotesInput
    opportunity?: OpportunityCreateNestedOneWithoutQuotesInput
    contracts?: ContractCreateNestedManyWithoutQuoteInput
    pipeline?: PipelineCreateNestedManyWithoutQuoteInput
  }

  export type QuoteUncheckedCreateInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    releasedDate?: Date | string | null
    approvedDate?: Date | string | null
    expiredDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    opportunityId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutQuotesInput
    contracts?: ContractUncheckedCreateNestedManyWithoutQuoteInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutQuoteInput
  }

  export type QuoteUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutQuotesNestedInput
    client?: ClientUpdateOneWithoutQuotesNestedInput
    opportunity?: OpportunityUpdateOneWithoutQuotesNestedInput
    contracts?: ContractUpdateManyWithoutQuoteNestedInput
    pipeline?: PipelineUpdateManyWithoutQuoteNestedInput
  }

  export type QuoteUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutQuotesNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutQuoteNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutQuoteNestedInput
  }

  export type QuoteCreateManyInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    releasedDate?: Date | string | null
    approvedDate?: Date | string | null
    expiredDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    opportunityId?: string | null
  }

  export type QuoteUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type QuoteUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContractCreateInput = {
    id?: string
    regNumber?: string | null
    title: string
    signedDate?: Date | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    penalty?: boolean | null
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    clientPicName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutContractsInput
    client?: ClientCreateNestedOneWithoutContractsInput
    quote?: QuoteCreateNestedOneWithoutContractsInput
    project?: ProjectCreateNestedOneWithoutContractInput
    pipeline?: PipelineCreateNestedManyWithoutContractInput
  }

  export type ContractUncheckedCreateInput = {
    id?: string
    regNumber?: string | null
    title: string
    signedDate?: Date | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    penalty?: boolean | null
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    clientPicName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    quoteId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutContractsInput
    project?: ProjectUncheckedCreateNestedOneWithoutContractInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutContractInput
  }

  export type ContractUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutContractsNestedInput
    client?: ClientUpdateOneWithoutContractsNestedInput
    quote?: QuoteUpdateOneWithoutContractsNestedInput
    project?: ProjectUpdateOneWithoutContractNestedInput
    pipeline?: PipelineUpdateManyWithoutContractNestedInput
  }

  export type ContractUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutContractsNestedInput
    project?: ProjectUncheckedUpdateOneWithoutContractNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutContractNestedInput
  }

  export type ContractCreateManyInput = {
    id?: string
    regNumber?: string | null
    title: string
    signedDate?: Date | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    penalty?: boolean | null
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    clientPicName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    quoteId?: string | null
  }

  export type ContractUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ContractUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventCreateInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorEventInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterEventInput
    pipeline?: PipelineCreateNestedOneWithoutEventsInput
    project?: ProjectCreateNestedOneWithoutEventsInput
    milestone?: MilestoneCreateNestedOneWithoutEventsInput
    task?: TaskCreateNestedOneWithoutEventsInput
  }

  export type EventUncheckedCreateInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
  }

  export type EventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorEventNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterEventNestedInput
    pipeline?: PipelineUpdateOneWithoutEventsNestedInput
    project?: ProjectUpdateOneWithoutEventsNestedInput
    milestone?: MilestoneUpdateOneWithoutEventsNestedInput
    task?: TaskUpdateOneWithoutEventsNestedInput
  }

  export type EventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventCreateManyInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
  }

  export type EventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteCreateInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorNoteInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterNoteInput
    pipeline?: PipelineCreateNestedOneWithoutNotesInput
    project?: ProjectCreateNestedOneWithoutNotesInput
    milestone?: MilestoneCreateNestedOneWithoutNotesInput
    task?: TaskCreateNestedOneWithoutNotesInput
    budget?: BudgetCreateNestedOneWithoutNotesInput
    fund?: FundCreateNestedOneWithoutNotesInput
    expense?: ExpenseCreateNestedOneWithoutNotesInput
    client?: ClientCreateNestedOneWithoutNotesInput
    vendor?: VendorCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type NoteUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorNoteNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterNoteNestedInput
    pipeline?: PipelineUpdateOneWithoutNotesNestedInput
    project?: ProjectUpdateOneWithoutNotesNestedInput
    milestone?: MilestoneUpdateOneWithoutNotesNestedInput
    task?: TaskUpdateOneWithoutNotesNestedInput
    budget?: BudgetUpdateOneWithoutNotesNestedInput
    fund?: FundUpdateOneWithoutNotesNestedInput
    expense?: ExpenseUpdateOneWithoutNotesNestedInput
    client?: ClientUpdateOneWithoutNotesNestedInput
    vendor?: VendorUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteCreateManyInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type NoteUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NoteUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageCreateInput = {
    id?: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    type: StageTypeCreateNestedOneWithoutStagesInput
    createdBy?: UserCreateNestedOneWithoutCreatorStageInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterStageInput
    pipeline?: PipelineCreateNestedOneWithoutStagesInput
    project?: ProjectCreateNestedOneWithoutStagesInput
    milestone?: MilestoneCreateNestedOneWithoutStagesInput
    task?: TaskCreateNestedOneWithoutStagesInput
    budget?: BudgetCreateNestedOneWithoutStagesInput
    fund?: FundCreateNestedOneWithoutStagesInput
  }

  export type StageUncheckedCreateInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type StageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StageTypeUpdateOneRequiredWithoutStagesNestedInput
    createdBy?: UserUpdateOneWithoutCreatorStageNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterStageNestedInput
    pipeline?: PipelineUpdateOneWithoutStagesNestedInput
    project?: ProjectUpdateOneWithoutStagesNestedInput
    milestone?: MilestoneUpdateOneWithoutStagesNestedInput
    task?: TaskUpdateOneWithoutStagesNestedInput
    budget?: BudgetUpdateOneWithoutStagesNestedInput
    fund?: FundUpdateOneWithoutStagesNestedInput
  }

  export type StageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageCreateManyInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type StageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type StageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageTypeCreateInput = {
    id?: string
    model: string
    order: Decimal | DecimalJsLike | number | string
    value: string
    stages?: StageCreateNestedManyWithoutTypeInput
  }

  export type StageTypeUncheckedCreateInput = {
    id?: string
    model: string
    order: Decimal | DecimalJsLike | number | string
    value: string
    stages?: StageUncheckedCreateNestedManyWithoutTypeInput
  }

  export type StageTypeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    order?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    value?: StringFieldUpdateOperationsInput | string
    stages?: StageUpdateManyWithoutTypeNestedInput
  }

  export type StageTypeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    order?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    value?: StringFieldUpdateOperationsInput | string
    stages?: StageUncheckedUpdateManyWithoutTypeNestedInput
  }

  export type StageTypeCreateManyInput = {
    id?: string
    model: string
    order: Decimal | DecimalJsLike | number | string
    value: string
  }

  export type StageTypeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    order?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    value?: StringFieldUpdateOperationsInput | string
  }

  export type StageTypeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    order?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    value?: StringFieldUpdateOperationsInput | string
  }

  export type ClientCreateInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorClientInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterClientInput
    notes?: NoteCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
    opportunities?: OpportunityCreateNestedManyWithoutClientInput
    quotes?: QuoteCreateNestedManyWithoutClientInput
    contracts?: ContractCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutClientInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutClientInput
    contracts?: ContractUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorClientNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterClientNestedInput
    notes?: NoteUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
    opportunities?: OpportunityUpdateManyWithoutClientNestedInput
    quotes?: QuoteUpdateManyWithoutClientNestedInput
    contracts?: ContractUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
    opportunities?: OpportunityUncheckedUpdateManyWithoutClientNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutClientNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ClientCreateManyInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type ClientUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VendorCreateInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    city?: string | null
    postalCode?: string | null
    legal?: string | null
    vendorCategory?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxStatus?: boolean
    siupNumber?: string | null
    nibNumber?: string | null
    pkpNumber?: string | null
    productType?: string | null
    description?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorVendorInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterVendorInput
    notes?: NoteCreateNestedManyWithoutVendorInput
  }

  export type VendorUncheckedCreateInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    city?: string | null
    postalCode?: string | null
    legal?: string | null
    vendorCategory?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxStatus?: boolean
    siupNumber?: string | null
    nibNumber?: string | null
    pkpNumber?: string | null
    productType?: string | null
    description?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutVendorInput
  }

  export type VendorUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    vendorCategory?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    siupNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nibNumber?: NullableStringFieldUpdateOperationsInput | string | null
    pkpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    productType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorVendorNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterVendorNestedInput
    notes?: NoteUpdateManyWithoutVendorNestedInput
  }

  export type VendorUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    vendorCategory?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    siupNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nibNumber?: NullableStringFieldUpdateOperationsInput | string | null
    pkpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    productType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutVendorNestedInput
  }

  export type VendorCreateManyInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    city?: string | null
    postalCode?: string | null
    legal?: string | null
    vendorCategory?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxStatus?: boolean
    siupNumber?: string | null
    nibNumber?: string | null
    pkpNumber?: string | null
    productType?: string | null
    description?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type VendorUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    vendorCategory?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    siupNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nibNumber?: NullableStringFieldUpdateOperationsInput | string | null
    pkpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    productType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VendorUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    vendorCategory?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    siupNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nibNumber?: NullableStringFieldUpdateOperationsInput | string | null
    pkpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    productType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCreateInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorProductInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProductInput
    leads?: LeadCreateNestedManyWithoutProductsInput
    opportunities?: OpportunityCreateNestedManyWithoutProductsInput
    quotes?: QuoteCreateNestedManyWithoutProductsInput
    contracts?: ContractCreateNestedManyWithoutProductsInput
  }

  export type ProductUncheckedCreateInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    leads?: LeadUncheckedCreateNestedManyWithoutProductsInput
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutProductsInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutProductsInput
    contracts?: ContractUncheckedCreateNestedManyWithoutProductsInput
  }

  export type ProductUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorProductNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProductNestedInput
    leads?: LeadUpdateManyWithoutProductsNestedInput
    opportunities?: OpportunityUpdateManyWithoutProductsNestedInput
    quotes?: QuoteUpdateManyWithoutProductsNestedInput
    contracts?: ContractUpdateManyWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    leads?: LeadUncheckedUpdateManyWithoutProductsNestedInput
    opportunities?: OpportunityUncheckedUpdateManyWithoutProductsNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutProductsNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type ProductCreateManyInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type ProductUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProductUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoryCreateInput = {
    id?: string
    key: string
    value: string
    label: string
  }

  export type CategoryUncheckedCreateInput = {
    id?: string
    key: string
    value: string
    label: string
  }

  export type CategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: StringFieldUpdateOperationsInput | string
  }

  export type CategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: StringFieldUpdateOperationsInput | string
  }

  export type CategoryCreateManyInput = {
    id?: string
    key: string
    value: string
    label: string
  }

  export type CategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: StringFieldUpdateOperationsInput | string
  }

  export type CategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: StringFieldUpdateOperationsInput | string
  }

  export type CountryCreateInput = {
    id?: string
    name?: string | null
    code?: string | null
  }

  export type CountryUncheckedCreateInput = {
    id?: string
    name?: string | null
    code?: string | null
  }

  export type CountryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CountryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CountryCreateManyInput = {
    id?: string
    name?: string | null
    code?: string | null
  }

  export type CountryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CountryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProjectCreateInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contract?: ContractCreateNestedOneWithoutProjectInput
    assignee?: UserCreateNestedOneWithoutProjectAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorProjectInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProjectInput
    members?: UserCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneCreateNestedManyWithoutProjectInput
    notes?: NoteCreateNestedManyWithoutProjectInput
    stages?: StageCreateNestedManyWithoutProjectInput
    events?: EventCreateNestedManyWithoutProjectInput
    budgets?: BudgetCreateNestedManyWithoutProjectInput
    expenses?: ExpenseCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contractId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneUncheckedCreateNestedManyWithoutProjectInput
    notes?: NoteUncheckedCreateNestedManyWithoutProjectInput
    stages?: StageUncheckedCreateNestedManyWithoutProjectInput
    events?: EventUncheckedCreateNestedManyWithoutProjectInput
    budgets?: BudgetUncheckedCreateNestedManyWithoutProjectInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contract?: ContractUpdateOneWithoutProjectNestedInput
    assignee?: UserUpdateOneWithoutProjectAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorProjectNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProjectNestedInput
    members?: UserUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUpdateManyWithoutProjectNestedInput
    notes?: NoteUpdateManyWithoutProjectNestedInput
    stages?: StageUpdateManyWithoutProjectNestedInput
    events?: EventUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUncheckedUpdateManyWithoutProjectNestedInput
    notes?: NoteUncheckedUpdateManyWithoutProjectNestedInput
    stages?: StageUncheckedUpdateManyWithoutProjectNestedInput
    events?: EventUncheckedUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUncheckedUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectCreateManyInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contractId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type ProjectUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProjectUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MilestoneCreateInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    project?: ProjectCreateNestedOneWithoutMilestonesInput
    assignee?: UserCreateNestedOneWithoutMilestoneAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorMilestoneInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterMilestoneInput
    tasks?: TaskCreateNestedManyWithoutMilestoneInput
    notes?: NoteCreateNestedManyWithoutMilestoneInput
    stages?: StageCreateNestedManyWithoutMilestoneInput
    events?: EventCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneUncheckedCreateInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    projectId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    tasks?: TaskUncheckedCreateNestedManyWithoutMilestoneInput
    notes?: NoteUncheckedCreateNestedManyWithoutMilestoneInput
    stages?: StageUncheckedCreateNestedManyWithoutMilestoneInput
    events?: EventUncheckedCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project?: ProjectUpdateOneWithoutMilestonesNestedInput
    assignee?: UserUpdateOneWithoutMilestoneAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorMilestoneNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterMilestoneNestedInput
    tasks?: TaskUpdateManyWithoutMilestoneNestedInput
    notes?: NoteUpdateManyWithoutMilestoneNestedInput
    stages?: StageUpdateManyWithoutMilestoneNestedInput
    events?: EventUpdateManyWithoutMilestoneNestedInput
  }

  export type MilestoneUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    tasks?: TaskUncheckedUpdateManyWithoutMilestoneNestedInput
    notes?: NoteUncheckedUpdateManyWithoutMilestoneNestedInput
    stages?: StageUncheckedUpdateManyWithoutMilestoneNestedInput
    events?: EventUncheckedUpdateManyWithoutMilestoneNestedInput
  }

  export type MilestoneCreateManyInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    projectId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type MilestoneUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MilestoneUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskCreateInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestone: MilestoneCreateNestedOneWithoutTasksInput
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorTaskInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterTaskInput
    members?: UserCreateNestedManyWithoutTaskMemberInput
    notes?: NoteCreateNestedManyWithoutTaskInput
    stages?: StageCreateNestedManyWithoutTaskInput
    events?: EventCreateNestedManyWithoutTaskInput
    expenses?: ExpenseCreateNestedManyWithoutTaskInput
    funds?: FundCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestoneId: string
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutTaskMemberInput
    notes?: NoteUncheckedCreateNestedManyWithoutTaskInput
    stages?: StageUncheckedCreateNestedManyWithoutTaskInput
    events?: EventUncheckedCreateNestedManyWithoutTaskInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutTaskInput
    funds?: FundUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestone?: MilestoneUpdateOneRequiredWithoutTasksNestedInput
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorTaskNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterTaskNestedInput
    members?: UserUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUpdateManyWithoutTaskNestedInput
    stages?: StageUpdateManyWithoutTaskNestedInput
    events?: EventUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUpdateManyWithoutTaskNestedInput
    funds?: FundUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestoneId?: StringFieldUpdateOperationsInput | string
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUncheckedUpdateManyWithoutTaskNestedInput
    stages?: StageUncheckedUpdateManyWithoutTaskNestedInput
    events?: EventUncheckedUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutTaskNestedInput
    funds?: FundUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskCreateManyInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestoneId: string
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type TaskUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TaskUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestoneId?: StringFieldUpdateOperationsInput | string
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RoleCreateInput = {
    id?: string
    name: string
    level: number
    users?: UserCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateInput = {
    id?: string
    name: string
    level: number
    users?: UserUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    users?: UserUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    users?: UserUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleCreateManyInput = {
    id?: string
    name: string
    level: number
  }

  export type RoleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
  }

  export type RoleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
  }

  export type OrganizationCreateInput = {
    id?: string
    name: string
    code?: string | null
    users?: UserCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateInput = {
    id?: string
    name: string
    code?: string | null
    users?: UserUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationCreateManyInput = {
    id?: string
    name: string
    code?: string | null
  }

  export type OrganizationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrganizationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProfileCreateInput = {
    id?: string
    name?: string | null
    joinDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorProfileInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProfileInput
    user: UserCreateNestedOneWithoutProfileInput
  }

  export type ProfileUncheckedCreateInput = {
    id?: string
    name?: string | null
    joinDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    userId: string
  }

  export type ProfileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    joinDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorProfileNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProfileNestedInput
    user?: UserUpdateOneRequiredWithoutProfileNestedInput
  }

  export type ProfileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    joinDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type ProfileCreateManyInput = {
    id?: string
    name?: string | null
    joinDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    userId: string
  }

  export type ProfileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    joinDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProfileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    joinDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type SessionCreateInput = {
    sid: string
    sess: JsonNullValueInput | InputJsonValue
    expire: Date | string
  }

  export type SessionUncheckedCreateInput = {
    sid: string
    sess: JsonNullValueInput | InputJsonValue
    expire: Date | string
  }

  export type SessionUpdateInput = {
    sid?: StringFieldUpdateOperationsInput | string
    sess?: JsonNullValueInput | InputJsonValue
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateInput = {
    sid?: StringFieldUpdateOperationsInput | string
    sess?: JsonNullValueInput | InputJsonValue
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateManyInput = {
    sid: string
    sess: JsonNullValueInput | InputJsonValue
    expire: Date | string
  }

  export type SessionUpdateManyMutationInput = {
    sid?: StringFieldUpdateOperationsInput | string
    sess?: JsonNullValueInput | InputJsonValue
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyInput = {
    sid?: StringFieldUpdateOperationsInput | string
    sess?: JsonNullValueInput | InputJsonValue
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type BudgetItemListRelationFilter = {
    every?: BudgetItemWhereInput
    some?: BudgetItemWhereInput
    none?: BudgetItemWhereInput
  }

  export type ProjectNullableScalarRelationFilter = {
    is?: ProjectWhereInput | null
    isNot?: ProjectWhereInput | null
  }

  export type NoteListRelationFilter = {
    every?: NoteWhereInput
    some?: NoteWhereInput
    none?: NoteWhereInput
  }

  export type StageListRelationFilter = {
    every?: StageWhereInput
    some?: StageWhereInput
    none?: StageWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type BudgetItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NoteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BudgetCountOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    approvedDate?: SortOrder
    revision?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    projectId?: SortOrder
  }

  export type BudgetAvgOrderByAggregateInput = {
    amount?: SortOrder
    revision?: SortOrder
  }

  export type BudgetMaxOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    approvedDate?: SortOrder
    revision?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    projectId?: SortOrder
  }

  export type BudgetMinOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    approvedDate?: SortOrder
    revision?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    projectId?: SortOrder
  }

  export type BudgetSumOrderByAggregateInput = {
    amount?: SortOrder
    revision?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type BudgetScalarRelationFilter = {
    is?: BudgetWhereInput
    isNot?: BudgetWhereInput
  }

  export type CostTypeNullableScalarRelationFilter = {
    is?: CostTypeWhereInput | null
    isNot?: CostTypeWhereInput | null
  }

  export type BudgetItemCountOrderByAggregateInput = {
    id?: SortOrder
    budgetId?: SortOrder
    categoryId?: SortOrder
    description?: SortOrder
    quantity?: SortOrder
    timeUnit?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BudgetItemAvgOrderByAggregateInput = {
    quantity?: SortOrder
    timeUnit?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
  }

  export type BudgetItemMaxOrderByAggregateInput = {
    id?: SortOrder
    budgetId?: SortOrder
    categoryId?: SortOrder
    description?: SortOrder
    quantity?: SortOrder
    timeUnit?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BudgetItemMinOrderByAggregateInput = {
    id?: SortOrder
    budgetId?: SortOrder
    categoryId?: SortOrder
    description?: SortOrder
    quantity?: SortOrder
    timeUnit?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BudgetItemSumOrderByAggregateInput = {
    quantity?: SortOrder
    timeUnit?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type FundItemListRelationFilter = {
    every?: FundItemWhereInput
    some?: FundItemWhereInput
    none?: FundItemWhereInput
  }

  export type TaskNullableScalarRelationFilter = {
    is?: TaskWhereInput | null
    isNot?: TaskWhereInput | null
  }

  export type ExpenseListRelationFilter = {
    every?: ExpenseWhereInput
    some?: ExpenseWhereInput
    none?: ExpenseWhereInput
  }

  export type FundItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ExpenseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FundCountOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    requestDate?: SortOrder
    approvedDate?: SortOrder
    closedDate?: SortOrder
    expiredDate?: SortOrder
    voidDate?: SortOrder
    plannedPaymentDate?: SortOrder
    type?: SortOrder
    revision?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    taskId?: SortOrder
  }

  export type FundAvgOrderByAggregateInput = {
    amount?: SortOrder
    revision?: SortOrder
  }

  export type FundMaxOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    requestDate?: SortOrder
    approvedDate?: SortOrder
    closedDate?: SortOrder
    expiredDate?: SortOrder
    voidDate?: SortOrder
    plannedPaymentDate?: SortOrder
    type?: SortOrder
    revision?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    taskId?: SortOrder
  }

  export type FundMinOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    requestDate?: SortOrder
    approvedDate?: SortOrder
    closedDate?: SortOrder
    expiredDate?: SortOrder
    voidDate?: SortOrder
    plannedPaymentDate?: SortOrder
    type?: SortOrder
    revision?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    taskId?: SortOrder
  }

  export type FundSumOrderByAggregateInput = {
    amount?: SortOrder
    revision?: SortOrder
  }

  export type FundScalarRelationFilter = {
    is?: FundWhereInput
    isNot?: FundWhereInput
  }

  export type FundItemCountOrderByAggregateInput = {
    id?: SortOrder
    fundId?: SortOrder
    categoryId?: SortOrder
    description?: SortOrder
    quantity?: SortOrder
    timeUnit?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FundItemAvgOrderByAggregateInput = {
    quantity?: SortOrder
    timeUnit?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
  }

  export type FundItemMaxOrderByAggregateInput = {
    id?: SortOrder
    fundId?: SortOrder
    categoryId?: SortOrder
    description?: SortOrder
    quantity?: SortOrder
    timeUnit?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FundItemMinOrderByAggregateInput = {
    id?: SortOrder
    fundId?: SortOrder
    categoryId?: SortOrder
    description?: SortOrder
    quantity?: SortOrder
    timeUnit?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FundItemSumOrderByAggregateInput = {
    quantity?: SortOrder
    timeUnit?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
  }

  export type CostTypeScalarRelationFilter = {
    is?: CostTypeWhereInput
    isNot?: CostTypeWhereInput
  }

  export type FundNullableScalarRelationFilter = {
    is?: FundWhereInput | null
    isNot?: FundWhereInput | null
  }

  export type ExpenseCountOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    categoryId?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    fundId?: SortOrder
    taskId?: SortOrder
    projectId?: SortOrder
  }

  export type ExpenseAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type ExpenseMaxOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    categoryId?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    fundId?: SortOrder
    taskId?: SortOrder
    projectId?: SortOrder
  }

  export type ExpenseMinOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    categoryId?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    fundId?: SortOrder
    taskId?: SortOrder
    projectId?: SortOrder
  }

  export type ExpenseSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type CostTypeListRelationFilter = {
    every?: CostTypeWhereInput
    some?: CostTypeWhereInput
    none?: CostTypeWhereInput
  }

  export type CostTypeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CostTypeCountOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    name?: SortOrder
    parentId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type CostTypeAvgOrderByAggregateInput = {
    order?: SortOrder
  }

  export type CostTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    name?: SortOrder
    parentId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type CostTypeMinOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    name?: SortOrder
    parentId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type CostTypeSumOrderByAggregateInput = {
    order?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type LeadNullableScalarRelationFilter = {
    is?: LeadWhereInput | null
    isNot?: LeadWhereInput | null
  }

  export type OpportunityNullableScalarRelationFilter = {
    is?: OpportunityWhereInput | null
    isNot?: OpportunityWhereInput | null
  }

  export type QuoteNullableScalarRelationFilter = {
    is?: QuoteWhereInput | null
    isNot?: QuoteWhereInput | null
  }

  export type ContractNullableScalarRelationFilter = {
    is?: ContractWhereInput | null
    isNot?: ContractWhereInput | null
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type EventListRelationFilter = {
    every?: EventWhereInput
    some?: EventWhereInput
    none?: EventWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PipelineCountOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    category?: SortOrder
    leadId?: SortOrder
    opportunityId?: SortOrder
    quoteId?: SortOrder
    contractId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type PipelineMaxOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    category?: SortOrder
    leadId?: SortOrder
    opportunityId?: SortOrder
    quoteId?: SortOrder
    contractId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type PipelineMinOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    category?: SortOrder
    leadId?: SortOrder
    opportunityId?: SortOrder
    quoteId?: SortOrder
    contractId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type ProductListRelationFilter = {
    every?: ProductWhereInput
    some?: ProductWhereInput
    none?: ProductWhereInput
  }

  export type ClientNullableScalarRelationFilter = {
    is?: ClientWhereInput | null
    isNot?: ClientWhereInput | null
  }

  export type OpportunityListRelationFilter = {
    every?: OpportunityWhereInput
    some?: OpportunityWhereInput
    none?: OpportunityWhereInput
  }

  export type PipelineListRelationFilter = {
    every?: PipelineWhereInput
    some?: PipelineWhereInput
    none?: PipelineWhereInput
  }

  export type ProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OpportunityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PipelineOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LeadCountOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    name?: SortOrder
    role?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    leadSource?: SortOrder
    leadDate?: SortOrder
    leadAddress?: SortOrder
    description?: SortOrder
    prospectLocation?: SortOrder
    approvedDate?: SortOrder
    expectedCloseDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    clientId?: SortOrder
  }

  export type LeadMaxOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    name?: SortOrder
    role?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    leadSource?: SortOrder
    leadDate?: SortOrder
    leadAddress?: SortOrder
    description?: SortOrder
    prospectLocation?: SortOrder
    approvedDate?: SortOrder
    expectedCloseDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    clientId?: SortOrder
  }

  export type LeadMinOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    name?: SortOrder
    role?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    leadSource?: SortOrder
    leadDate?: SortOrder
    leadAddress?: SortOrder
    description?: SortOrder
    prospectLocation?: SortOrder
    approvedDate?: SortOrder
    expectedCloseDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    clientId?: SortOrder
  }

  export type QuoteListRelationFilter = {
    every?: QuoteWhereInput
    some?: QuoteWhereInput
    none?: QuoteWhereInput
  }

  export type QuoteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OpportunityCountOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    title?: SortOrder
    currency?: SortOrder
    baseAmount?: SortOrder
    exchangeRate?: SortOrder
    amount?: SortOrder
    expectedCloseDate?: SortOrder
    description?: SortOrder
    approvedDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    clientId?: SortOrder
    leadId?: SortOrder
  }

  export type OpportunityAvgOrderByAggregateInput = {
    baseAmount?: SortOrder
    exchangeRate?: SortOrder
    amount?: SortOrder
  }

  export type OpportunityMaxOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    title?: SortOrder
    currency?: SortOrder
    baseAmount?: SortOrder
    exchangeRate?: SortOrder
    amount?: SortOrder
    expectedCloseDate?: SortOrder
    description?: SortOrder
    approvedDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    clientId?: SortOrder
    leadId?: SortOrder
  }

  export type OpportunityMinOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    title?: SortOrder
    currency?: SortOrder
    baseAmount?: SortOrder
    exchangeRate?: SortOrder
    amount?: SortOrder
    expectedCloseDate?: SortOrder
    description?: SortOrder
    approvedDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    clientId?: SortOrder
    leadId?: SortOrder
  }

  export type OpportunitySumOrderByAggregateInput = {
    baseAmount?: SortOrder
    exchangeRate?: SortOrder
    amount?: SortOrder
  }

  export type ContractListRelationFilter = {
    every?: ContractWhereInput
    some?: ContractWhereInput
    none?: ContractWhereInput
  }

  export type ContractOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type QuoteCountOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    title?: SortOrder
    currency?: SortOrder
    baseAmount?: SortOrder
    exchangeRate?: SortOrder
    amount?: SortOrder
    releasedDate?: SortOrder
    approvedDate?: SortOrder
    expiredDate?: SortOrder
    expectedCloseDate?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    clientId?: SortOrder
    opportunityId?: SortOrder
  }

  export type QuoteAvgOrderByAggregateInput = {
    baseAmount?: SortOrder
    exchangeRate?: SortOrder
    amount?: SortOrder
  }

  export type QuoteMaxOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    title?: SortOrder
    currency?: SortOrder
    baseAmount?: SortOrder
    exchangeRate?: SortOrder
    amount?: SortOrder
    releasedDate?: SortOrder
    approvedDate?: SortOrder
    expiredDate?: SortOrder
    expectedCloseDate?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    clientId?: SortOrder
    opportunityId?: SortOrder
  }

  export type QuoteMinOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    title?: SortOrder
    currency?: SortOrder
    baseAmount?: SortOrder
    exchangeRate?: SortOrder
    amount?: SortOrder
    releasedDate?: SortOrder
    approvedDate?: SortOrder
    expiredDate?: SortOrder
    expectedCloseDate?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    clientId?: SortOrder
    opportunityId?: SortOrder
  }

  export type QuoteSumOrderByAggregateInput = {
    baseAmount?: SortOrder
    exchangeRate?: SortOrder
    amount?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type ContractCountOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    title?: SortOrder
    signedDate?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    description?: SortOrder
    penalty?: SortOrder
    currency?: SortOrder
    baseAmount?: SortOrder
    exchangeRate?: SortOrder
    amount?: SortOrder
    clientPicName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    clientId?: SortOrder
    quoteId?: SortOrder
  }

  export type ContractAvgOrderByAggregateInput = {
    baseAmount?: SortOrder
    exchangeRate?: SortOrder
    amount?: SortOrder
  }

  export type ContractMaxOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    title?: SortOrder
    signedDate?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    description?: SortOrder
    penalty?: SortOrder
    currency?: SortOrder
    baseAmount?: SortOrder
    exchangeRate?: SortOrder
    amount?: SortOrder
    clientPicName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    clientId?: SortOrder
    quoteId?: SortOrder
  }

  export type ContractMinOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    title?: SortOrder
    signedDate?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    description?: SortOrder
    penalty?: SortOrder
    currency?: SortOrder
    baseAmount?: SortOrder
    exchangeRate?: SortOrder
    amount?: SortOrder
    clientPicName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    clientId?: SortOrder
    quoteId?: SortOrder
  }

  export type ContractSumOrderByAggregateInput = {
    baseAmount?: SortOrder
    exchangeRate?: SortOrder
    amount?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type PipelineNullableScalarRelationFilter = {
    is?: PipelineWhereInput | null
    isNot?: PipelineWhereInput | null
  }

  export type MilestoneNullableScalarRelationFilter = {
    is?: MilestoneWhereInput | null
    isNot?: MilestoneWhereInput | null
  }

  export type EventCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    category?: SortOrder
    description?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    url?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    pipelineId?: SortOrder
    projectId?: SortOrder
    milestoneId?: SortOrder
    taskId?: SortOrder
  }

  export type EventMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    category?: SortOrder
    description?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    url?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    pipelineId?: SortOrder
    projectId?: SortOrder
    milestoneId?: SortOrder
    taskId?: SortOrder
  }

  export type EventMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    category?: SortOrder
    description?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    url?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    pipelineId?: SortOrder
    projectId?: SortOrder
    milestoneId?: SortOrder
    taskId?: SortOrder
  }

  export type BudgetNullableScalarRelationFilter = {
    is?: BudgetWhereInput | null
    isNot?: BudgetWhereInput | null
  }

  export type ExpenseNullableScalarRelationFilter = {
    is?: ExpenseWhereInput | null
    isNot?: ExpenseWhereInput | null
  }

  export type VendorNullableScalarRelationFilter = {
    is?: VendorWhereInput | null
    isNot?: VendorWhereInput | null
  }

  export type NoteCountOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    pipelineId?: SortOrder
    projectId?: SortOrder
    milestoneId?: SortOrder
    taskId?: SortOrder
    budgetId?: SortOrder
    fundId?: SortOrder
    expenseId?: SortOrder
    clientId?: SortOrder
    vendorId?: SortOrder
  }

  export type NoteMaxOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    pipelineId?: SortOrder
    projectId?: SortOrder
    milestoneId?: SortOrder
    taskId?: SortOrder
    budgetId?: SortOrder
    fundId?: SortOrder
    expenseId?: SortOrder
    clientId?: SortOrder
    vendorId?: SortOrder
  }

  export type NoteMinOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    pipelineId?: SortOrder
    projectId?: SortOrder
    milestoneId?: SortOrder
    taskId?: SortOrder
    budgetId?: SortOrder
    fundId?: SortOrder
    expenseId?: SortOrder
    clientId?: SortOrder
    vendorId?: SortOrder
  }

  export type StageTypeScalarRelationFilter = {
    is?: StageTypeWhereInput
    isNot?: StageTypeWhereInput
  }

  export type StageCountOrderByAggregateInput = {
    id?: SortOrder
    stageTypeId?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    pipelineId?: SortOrder
    projectId?: SortOrder
    milestoneId?: SortOrder
    taskId?: SortOrder
    budgetId?: SortOrder
    fundId?: SortOrder
  }

  export type StageMaxOrderByAggregateInput = {
    id?: SortOrder
    stageTypeId?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    pipelineId?: SortOrder
    projectId?: SortOrder
    milestoneId?: SortOrder
    taskId?: SortOrder
    budgetId?: SortOrder
    fundId?: SortOrder
  }

  export type StageMinOrderByAggregateInput = {
    id?: SortOrder
    stageTypeId?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    pipelineId?: SortOrder
    projectId?: SortOrder
    milestoneId?: SortOrder
    taskId?: SortOrder
    budgetId?: SortOrder
    fundId?: SortOrder
  }

  export type StageTypeCountOrderByAggregateInput = {
    id?: SortOrder
    model?: SortOrder
    order?: SortOrder
    value?: SortOrder
  }

  export type StageTypeAvgOrderByAggregateInput = {
    order?: SortOrder
  }

  export type StageTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    model?: SortOrder
    order?: SortOrder
    value?: SortOrder
  }

  export type StageTypeMinOrderByAggregateInput = {
    id?: SortOrder
    model?: SortOrder
    order?: SortOrder
    value?: SortOrder
  }

  export type StageTypeSumOrderByAggregateInput = {
    order?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type LeadListRelationFilter = {
    every?: LeadWhereInput
    some?: LeadWhereInput
    none?: LeadWhereInput
  }

  export type LeadOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClientCountOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    name?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    legal?: SortOrder
    category?: SortOrder
    country?: SortOrder
    contactName?: SortOrder
    contactRole?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    taxNumber?: SortOrder
    taxAddress?: SortOrder
    taxStatus?: SortOrder
    procurementName?: SortOrder
    procurementRole?: SortOrder
    procurementPhone?: SortOrder
    procurementEmail?: SortOrder
    billingAddress?: SortOrder
    paymentName?: SortOrder
    paymentRole?: SortOrder
    paymentPhone?: SortOrder
    paymentEmail?: SortOrder
    bankName?: SortOrder
    accountReferenceNumber?: SortOrder
    accountOwnerName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type ClientMaxOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    name?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    legal?: SortOrder
    category?: SortOrder
    country?: SortOrder
    contactName?: SortOrder
    contactRole?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    taxNumber?: SortOrder
    taxAddress?: SortOrder
    taxStatus?: SortOrder
    procurementName?: SortOrder
    procurementRole?: SortOrder
    procurementPhone?: SortOrder
    procurementEmail?: SortOrder
    billingAddress?: SortOrder
    paymentName?: SortOrder
    paymentRole?: SortOrder
    paymentPhone?: SortOrder
    paymentEmail?: SortOrder
    bankName?: SortOrder
    accountReferenceNumber?: SortOrder
    accountOwnerName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type ClientMinOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    name?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    legal?: SortOrder
    category?: SortOrder
    country?: SortOrder
    contactName?: SortOrder
    contactRole?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    taxNumber?: SortOrder
    taxAddress?: SortOrder
    taxStatus?: SortOrder
    procurementName?: SortOrder
    procurementRole?: SortOrder
    procurementPhone?: SortOrder
    procurementEmail?: SortOrder
    billingAddress?: SortOrder
    paymentName?: SortOrder
    paymentRole?: SortOrder
    paymentPhone?: SortOrder
    paymentEmail?: SortOrder
    bankName?: SortOrder
    accountReferenceNumber?: SortOrder
    accountOwnerName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type VendorCountOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    name?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    city?: SortOrder
    postalCode?: SortOrder
    legal?: SortOrder
    vendorCategory?: SortOrder
    contactName?: SortOrder
    contactRole?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    taxNumber?: SortOrder
    taxStatus?: SortOrder
    siupNumber?: SortOrder
    nibNumber?: SortOrder
    pkpNumber?: SortOrder
    productType?: SortOrder
    description?: SortOrder
    bankName?: SortOrder
    accountReferenceNumber?: SortOrder
    accountOwnerName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type VendorMaxOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    name?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    city?: SortOrder
    postalCode?: SortOrder
    legal?: SortOrder
    vendorCategory?: SortOrder
    contactName?: SortOrder
    contactRole?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    taxNumber?: SortOrder
    taxStatus?: SortOrder
    siupNumber?: SortOrder
    nibNumber?: SortOrder
    pkpNumber?: SortOrder
    productType?: SortOrder
    description?: SortOrder
    bankName?: SortOrder
    accountReferenceNumber?: SortOrder
    accountOwnerName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type VendorMinOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    name?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    city?: SortOrder
    postalCode?: SortOrder
    legal?: SortOrder
    vendorCategory?: SortOrder
    contactName?: SortOrder
    contactRole?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    taxNumber?: SortOrder
    taxStatus?: SortOrder
    siupNumber?: SortOrder
    nibNumber?: SortOrder
    pkpNumber?: SortOrder
    productType?: SortOrder
    description?: SortOrder
    bankName?: SortOrder
    accountReferenceNumber?: SortOrder
    accountOwnerName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type ProductCountOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type CategoryCountOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    label?: SortOrder
  }

  export type CategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    label?: SortOrder
  }

  export type CategoryMinOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    label?: SortOrder
  }

  export type CountryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
  }

  export type CountryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
  }

  export type CountryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
  }

  export type MilestoneListRelationFilter = {
    every?: MilestoneWhereInput
    some?: MilestoneWhereInput
    none?: MilestoneWhereInput
  }

  export type BudgetListRelationFilter = {
    every?: BudgetWhereInput
    some?: BudgetWhereInput
    none?: BudgetWhereInput
  }

  export type MilestoneOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BudgetOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProjectCountOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    progress?: SortOrder
    plannedStartDate?: SortOrder
    plannedEndDate?: SortOrder
    actualStartDate?: SortOrder
    actualEndDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    contractId?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type ProjectAvgOrderByAggregateInput = {
    progress?: SortOrder
  }

  export type ProjectMaxOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    progress?: SortOrder
    plannedStartDate?: SortOrder
    plannedEndDate?: SortOrder
    actualStartDate?: SortOrder
    actualEndDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    contractId?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type ProjectMinOrderByAggregateInput = {
    id?: SortOrder
    regNumber?: SortOrder
    progress?: SortOrder
    plannedStartDate?: SortOrder
    plannedEndDate?: SortOrder
    actualStartDate?: SortOrder
    actualEndDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    contractId?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type ProjectSumOrderByAggregateInput = {
    progress?: SortOrder
  }

  export type TaskListRelationFilter = {
    every?: TaskWhereInput
    some?: TaskWhereInput
    none?: TaskWhereInput
  }

  export type TaskOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MilestoneCountOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    title?: SortOrder
    description?: SortOrder
    plannedStartDate?: SortOrder
    plannedEndDate?: SortOrder
    actualStartDate?: SortOrder
    actualEndDate?: SortOrder
    approvedDate?: SortOrder
    share?: SortOrder
    amount?: SortOrder
    deliverables?: SortOrder
    progress?: SortOrder
    revision?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    projectId?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type MilestoneAvgOrderByAggregateInput = {
    order?: SortOrder
    share?: SortOrder
    amount?: SortOrder
    progress?: SortOrder
    revision?: SortOrder
  }

  export type MilestoneMaxOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    title?: SortOrder
    description?: SortOrder
    plannedStartDate?: SortOrder
    plannedEndDate?: SortOrder
    actualStartDate?: SortOrder
    actualEndDate?: SortOrder
    approvedDate?: SortOrder
    share?: SortOrder
    amount?: SortOrder
    deliverables?: SortOrder
    progress?: SortOrder
    revision?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    projectId?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type MilestoneMinOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    title?: SortOrder
    description?: SortOrder
    plannedStartDate?: SortOrder
    plannedEndDate?: SortOrder
    actualStartDate?: SortOrder
    actualEndDate?: SortOrder
    approvedDate?: SortOrder
    share?: SortOrder
    amount?: SortOrder
    deliverables?: SortOrder
    progress?: SortOrder
    revision?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    projectId?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type MilestoneSumOrderByAggregateInput = {
    order?: SortOrder
    share?: SortOrder
    amount?: SortOrder
    progress?: SortOrder
    revision?: SortOrder
  }

  export type MilestoneScalarRelationFilter = {
    is?: MilestoneWhereInput
    isNot?: MilestoneWhereInput
  }

  export type FundListRelationFilter = {
    every?: FundWhereInput
    some?: FundWhereInput
    none?: FundWhereInput
  }

  export type FundOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TaskCountOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    title?: SortOrder
    plannedStartDate?: SortOrder
    plannedEndDate?: SortOrder
    actualStartDate?: SortOrder
    actualEndDate?: SortOrder
    progress?: SortOrder
    deliverables?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    milestoneId?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type TaskAvgOrderByAggregateInput = {
    order?: SortOrder
    progress?: SortOrder
  }

  export type TaskMaxOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    title?: SortOrder
    plannedStartDate?: SortOrder
    plannedEndDate?: SortOrder
    actualStartDate?: SortOrder
    actualEndDate?: SortOrder
    progress?: SortOrder
    deliverables?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    milestoneId?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type TaskMinOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    title?: SortOrder
    plannedStartDate?: SortOrder
    plannedEndDate?: SortOrder
    actualStartDate?: SortOrder
    actualEndDate?: SortOrder
    progress?: SortOrder
    deliverables?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    milestoneId?: SortOrder
    assigneeId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type TaskSumOrderByAggregateInput = {
    order?: SortOrder
    progress?: SortOrder
  }

  export type RoleNullableScalarRelationFilter = {
    is?: RoleWhereInput | null
    isNot?: RoleWhereInput | null
  }

  export type OrganizationNullableScalarRelationFilter = {
    is?: OrganizationWhereInput | null
    isNot?: OrganizationWhereInput | null
  }

  export type ProfileNullableScalarRelationFilter = {
    is?: ProfileWhereInput | null
    isNot?: ProfileWhereInput | null
  }

  export type ClientListRelationFilter = {
    every?: ClientWhereInput
    some?: ClientWhereInput
    none?: ClientWhereInput
  }

  export type ProjectListRelationFilter = {
    every?: ProjectWhereInput
    some?: ProjectWhereInput
    none?: ProjectWhereInput
  }

  export type VendorListRelationFilter = {
    every?: VendorWhereInput
    some?: VendorWhereInput
    none?: VendorWhereInput
  }

  export type ProfileListRelationFilter = {
    every?: ProfileWhereInput
    some?: ProfileWhereInput
    none?: ProfileWhereInput
  }

  export type ClientOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProjectOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VendorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProfileOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
    roleId?: SortOrder
    organizationId?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
    roleId?: SortOrder
    organizationId?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
    roleId?: SortOrder
    organizationId?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type RoleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    level?: SortOrder
  }

  export type RoleAvgOrderByAggregateInput = {
    level?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    level?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    level?: SortOrder
  }

  export type RoleSumOrderByAggregateInput = {
    level?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type OrganizationCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
  }

  export type OrganizationMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
  }

  export type OrganizationMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type ProfileCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    joinDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    userId?: SortOrder
  }

  export type ProfileMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    joinDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    userId?: SortOrder
  }

  export type ProfileMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    joinDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    userId?: SortOrder
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type SessionCountOrderByAggregateInput = {
    sid?: SortOrder
    sess?: SortOrder
    expire?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    sid?: SortOrder
    expire?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    sid?: SortOrder
    expire?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UserCreateNestedOneWithoutBudgetAssigneeInput = {
    create?: XOR<UserCreateWithoutBudgetAssigneeInput, UserUncheckedCreateWithoutBudgetAssigneeInput>
    connectOrCreate?: UserCreateOrConnectWithoutBudgetAssigneeInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatorBudgetInput = {
    create?: XOR<UserCreateWithoutCreatorBudgetInput, UserUncheckedCreateWithoutCreatorBudgetInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorBudgetInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdaterBudgetInput = {
    create?: XOR<UserCreateWithoutUpdaterBudgetInput, UserUncheckedCreateWithoutUpdaterBudgetInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterBudgetInput
    connect?: UserWhereUniqueInput
  }

  export type BudgetItemCreateNestedManyWithoutBudgetInput = {
    create?: XOR<BudgetItemCreateWithoutBudgetInput, BudgetItemUncheckedCreateWithoutBudgetInput> | BudgetItemCreateWithoutBudgetInput[] | BudgetItemUncheckedCreateWithoutBudgetInput[]
    connectOrCreate?: BudgetItemCreateOrConnectWithoutBudgetInput | BudgetItemCreateOrConnectWithoutBudgetInput[]
    createMany?: BudgetItemCreateManyBudgetInputEnvelope
    connect?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
  }

  export type ProjectCreateNestedOneWithoutBudgetsInput = {
    create?: XOR<ProjectCreateWithoutBudgetsInput, ProjectUncheckedCreateWithoutBudgetsInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutBudgetsInput
    connect?: ProjectWhereUniqueInput
  }

  export type NoteCreateNestedManyWithoutBudgetInput = {
    create?: XOR<NoteCreateWithoutBudgetInput, NoteUncheckedCreateWithoutBudgetInput> | NoteCreateWithoutBudgetInput[] | NoteUncheckedCreateWithoutBudgetInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutBudgetInput | NoteCreateOrConnectWithoutBudgetInput[]
    createMany?: NoteCreateManyBudgetInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type StageCreateNestedManyWithoutBudgetInput = {
    create?: XOR<StageCreateWithoutBudgetInput, StageUncheckedCreateWithoutBudgetInput> | StageCreateWithoutBudgetInput[] | StageUncheckedCreateWithoutBudgetInput[]
    connectOrCreate?: StageCreateOrConnectWithoutBudgetInput | StageCreateOrConnectWithoutBudgetInput[]
    createMany?: StageCreateManyBudgetInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type BudgetItemUncheckedCreateNestedManyWithoutBudgetInput = {
    create?: XOR<BudgetItemCreateWithoutBudgetInput, BudgetItemUncheckedCreateWithoutBudgetInput> | BudgetItemCreateWithoutBudgetInput[] | BudgetItemUncheckedCreateWithoutBudgetInput[]
    connectOrCreate?: BudgetItemCreateOrConnectWithoutBudgetInput | BudgetItemCreateOrConnectWithoutBudgetInput[]
    createMany?: BudgetItemCreateManyBudgetInputEnvelope
    connect?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutBudgetInput = {
    create?: XOR<NoteCreateWithoutBudgetInput, NoteUncheckedCreateWithoutBudgetInput> | NoteCreateWithoutBudgetInput[] | NoteUncheckedCreateWithoutBudgetInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutBudgetInput | NoteCreateOrConnectWithoutBudgetInput[]
    createMany?: NoteCreateManyBudgetInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type StageUncheckedCreateNestedManyWithoutBudgetInput = {
    create?: XOR<StageCreateWithoutBudgetInput, StageUncheckedCreateWithoutBudgetInput> | StageCreateWithoutBudgetInput[] | StageUncheckedCreateWithoutBudgetInput[]
    connectOrCreate?: StageCreateOrConnectWithoutBudgetInput | StageCreateOrConnectWithoutBudgetInput[]
    createMany?: StageCreateManyBudgetInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UserUpdateOneWithoutBudgetAssigneeNestedInput = {
    create?: XOR<UserCreateWithoutBudgetAssigneeInput, UserUncheckedCreateWithoutBudgetAssigneeInput>
    connectOrCreate?: UserCreateOrConnectWithoutBudgetAssigneeInput
    upsert?: UserUpsertWithoutBudgetAssigneeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBudgetAssigneeInput, UserUpdateWithoutBudgetAssigneeInput>, UserUncheckedUpdateWithoutBudgetAssigneeInput>
  }

  export type UserUpdateOneWithoutCreatorBudgetNestedInput = {
    create?: XOR<UserCreateWithoutCreatorBudgetInput, UserUncheckedCreateWithoutCreatorBudgetInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorBudgetInput
    upsert?: UserUpsertWithoutCreatorBudgetInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatorBudgetInput, UserUpdateWithoutCreatorBudgetInput>, UserUncheckedUpdateWithoutCreatorBudgetInput>
  }

  export type UserUpdateOneWithoutUpdaterBudgetNestedInput = {
    create?: XOR<UserCreateWithoutUpdaterBudgetInput, UserUncheckedCreateWithoutUpdaterBudgetInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterBudgetInput
    upsert?: UserUpsertWithoutUpdaterBudgetInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdaterBudgetInput, UserUpdateWithoutUpdaterBudgetInput>, UserUncheckedUpdateWithoutUpdaterBudgetInput>
  }

  export type BudgetItemUpdateManyWithoutBudgetNestedInput = {
    create?: XOR<BudgetItemCreateWithoutBudgetInput, BudgetItemUncheckedCreateWithoutBudgetInput> | BudgetItemCreateWithoutBudgetInput[] | BudgetItemUncheckedCreateWithoutBudgetInput[]
    connectOrCreate?: BudgetItemCreateOrConnectWithoutBudgetInput | BudgetItemCreateOrConnectWithoutBudgetInput[]
    upsert?: BudgetItemUpsertWithWhereUniqueWithoutBudgetInput | BudgetItemUpsertWithWhereUniqueWithoutBudgetInput[]
    createMany?: BudgetItemCreateManyBudgetInputEnvelope
    set?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    disconnect?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    delete?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    connect?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    update?: BudgetItemUpdateWithWhereUniqueWithoutBudgetInput | BudgetItemUpdateWithWhereUniqueWithoutBudgetInput[]
    updateMany?: BudgetItemUpdateManyWithWhereWithoutBudgetInput | BudgetItemUpdateManyWithWhereWithoutBudgetInput[]
    deleteMany?: BudgetItemScalarWhereInput | BudgetItemScalarWhereInput[]
  }

  export type ProjectUpdateOneWithoutBudgetsNestedInput = {
    create?: XOR<ProjectCreateWithoutBudgetsInput, ProjectUncheckedCreateWithoutBudgetsInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutBudgetsInput
    upsert?: ProjectUpsertWithoutBudgetsInput
    disconnect?: ProjectWhereInput | boolean
    delete?: ProjectWhereInput | boolean
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutBudgetsInput, ProjectUpdateWithoutBudgetsInput>, ProjectUncheckedUpdateWithoutBudgetsInput>
  }

  export type NoteUpdateManyWithoutBudgetNestedInput = {
    create?: XOR<NoteCreateWithoutBudgetInput, NoteUncheckedCreateWithoutBudgetInput> | NoteCreateWithoutBudgetInput[] | NoteUncheckedCreateWithoutBudgetInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutBudgetInput | NoteCreateOrConnectWithoutBudgetInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutBudgetInput | NoteUpsertWithWhereUniqueWithoutBudgetInput[]
    createMany?: NoteCreateManyBudgetInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutBudgetInput | NoteUpdateWithWhereUniqueWithoutBudgetInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutBudgetInput | NoteUpdateManyWithWhereWithoutBudgetInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type StageUpdateManyWithoutBudgetNestedInput = {
    create?: XOR<StageCreateWithoutBudgetInput, StageUncheckedCreateWithoutBudgetInput> | StageCreateWithoutBudgetInput[] | StageUncheckedCreateWithoutBudgetInput[]
    connectOrCreate?: StageCreateOrConnectWithoutBudgetInput | StageCreateOrConnectWithoutBudgetInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutBudgetInput | StageUpsertWithWhereUniqueWithoutBudgetInput[]
    createMany?: StageCreateManyBudgetInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutBudgetInput | StageUpdateWithWhereUniqueWithoutBudgetInput[]
    updateMany?: StageUpdateManyWithWhereWithoutBudgetInput | StageUpdateManyWithWhereWithoutBudgetInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type BudgetItemUncheckedUpdateManyWithoutBudgetNestedInput = {
    create?: XOR<BudgetItemCreateWithoutBudgetInput, BudgetItemUncheckedCreateWithoutBudgetInput> | BudgetItemCreateWithoutBudgetInput[] | BudgetItemUncheckedCreateWithoutBudgetInput[]
    connectOrCreate?: BudgetItemCreateOrConnectWithoutBudgetInput | BudgetItemCreateOrConnectWithoutBudgetInput[]
    upsert?: BudgetItemUpsertWithWhereUniqueWithoutBudgetInput | BudgetItemUpsertWithWhereUniqueWithoutBudgetInput[]
    createMany?: BudgetItemCreateManyBudgetInputEnvelope
    set?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    disconnect?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    delete?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    connect?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    update?: BudgetItemUpdateWithWhereUniqueWithoutBudgetInput | BudgetItemUpdateWithWhereUniqueWithoutBudgetInput[]
    updateMany?: BudgetItemUpdateManyWithWhereWithoutBudgetInput | BudgetItemUpdateManyWithWhereWithoutBudgetInput[]
    deleteMany?: BudgetItemScalarWhereInput | BudgetItemScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutBudgetNestedInput = {
    create?: XOR<NoteCreateWithoutBudgetInput, NoteUncheckedCreateWithoutBudgetInput> | NoteCreateWithoutBudgetInput[] | NoteUncheckedCreateWithoutBudgetInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutBudgetInput | NoteCreateOrConnectWithoutBudgetInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutBudgetInput | NoteUpsertWithWhereUniqueWithoutBudgetInput[]
    createMany?: NoteCreateManyBudgetInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutBudgetInput | NoteUpdateWithWhereUniqueWithoutBudgetInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutBudgetInput | NoteUpdateManyWithWhereWithoutBudgetInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type StageUncheckedUpdateManyWithoutBudgetNestedInput = {
    create?: XOR<StageCreateWithoutBudgetInput, StageUncheckedCreateWithoutBudgetInput> | StageCreateWithoutBudgetInput[] | StageUncheckedCreateWithoutBudgetInput[]
    connectOrCreate?: StageCreateOrConnectWithoutBudgetInput | StageCreateOrConnectWithoutBudgetInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutBudgetInput | StageUpsertWithWhereUniqueWithoutBudgetInput[]
    createMany?: StageCreateManyBudgetInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutBudgetInput | StageUpdateWithWhereUniqueWithoutBudgetInput[]
    updateMany?: StageUpdateManyWithWhereWithoutBudgetInput | StageUpdateManyWithWhereWithoutBudgetInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type BudgetCreateNestedOneWithoutItemsInput = {
    create?: XOR<BudgetCreateWithoutItemsInput, BudgetUncheckedCreateWithoutItemsInput>
    connectOrCreate?: BudgetCreateOrConnectWithoutItemsInput
    connect?: BudgetWhereUniqueInput
  }

  export type CostTypeCreateNestedOneWithoutBudgetItemsInput = {
    create?: XOR<CostTypeCreateWithoutBudgetItemsInput, CostTypeUncheckedCreateWithoutBudgetItemsInput>
    connectOrCreate?: CostTypeCreateOrConnectWithoutBudgetItemsInput
    connect?: CostTypeWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type BudgetUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<BudgetCreateWithoutItemsInput, BudgetUncheckedCreateWithoutItemsInput>
    connectOrCreate?: BudgetCreateOrConnectWithoutItemsInput
    upsert?: BudgetUpsertWithoutItemsInput
    connect?: BudgetWhereUniqueInput
    update?: XOR<XOR<BudgetUpdateToOneWithWhereWithoutItemsInput, BudgetUpdateWithoutItemsInput>, BudgetUncheckedUpdateWithoutItemsInput>
  }

  export type CostTypeUpdateOneWithoutBudgetItemsNestedInput = {
    create?: XOR<CostTypeCreateWithoutBudgetItemsInput, CostTypeUncheckedCreateWithoutBudgetItemsInput>
    connectOrCreate?: CostTypeCreateOrConnectWithoutBudgetItemsInput
    upsert?: CostTypeUpsertWithoutBudgetItemsInput
    disconnect?: CostTypeWhereInput | boolean
    delete?: CostTypeWhereInput | boolean
    connect?: CostTypeWhereUniqueInput
    update?: XOR<XOR<CostTypeUpdateToOneWithWhereWithoutBudgetItemsInput, CostTypeUpdateWithoutBudgetItemsInput>, CostTypeUncheckedUpdateWithoutBudgetItemsInput>
  }

  export type UserCreateNestedOneWithoutFundAssigneeInput = {
    create?: XOR<UserCreateWithoutFundAssigneeInput, UserUncheckedCreateWithoutFundAssigneeInput>
    connectOrCreate?: UserCreateOrConnectWithoutFundAssigneeInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatorFundInput = {
    create?: XOR<UserCreateWithoutCreatorFundInput, UserUncheckedCreateWithoutCreatorFundInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorFundInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdaterFundInput = {
    create?: XOR<UserCreateWithoutUpdaterFundInput, UserUncheckedCreateWithoutUpdaterFundInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterFundInput
    connect?: UserWhereUniqueInput
  }

  export type FundItemCreateNestedManyWithoutFundInput = {
    create?: XOR<FundItemCreateWithoutFundInput, FundItemUncheckedCreateWithoutFundInput> | FundItemCreateWithoutFundInput[] | FundItemUncheckedCreateWithoutFundInput[]
    connectOrCreate?: FundItemCreateOrConnectWithoutFundInput | FundItemCreateOrConnectWithoutFundInput[]
    createMany?: FundItemCreateManyFundInputEnvelope
    connect?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
  }

  export type TaskCreateNestedOneWithoutFundsInput = {
    create?: XOR<TaskCreateWithoutFundsInput, TaskUncheckedCreateWithoutFundsInput>
    connectOrCreate?: TaskCreateOrConnectWithoutFundsInput
    connect?: TaskWhereUniqueInput
  }

  export type ExpenseCreateNestedManyWithoutFundInput = {
    create?: XOR<ExpenseCreateWithoutFundInput, ExpenseUncheckedCreateWithoutFundInput> | ExpenseCreateWithoutFundInput[] | ExpenseUncheckedCreateWithoutFundInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutFundInput | ExpenseCreateOrConnectWithoutFundInput[]
    createMany?: ExpenseCreateManyFundInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type NoteCreateNestedManyWithoutFundInput = {
    create?: XOR<NoteCreateWithoutFundInput, NoteUncheckedCreateWithoutFundInput> | NoteCreateWithoutFundInput[] | NoteUncheckedCreateWithoutFundInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutFundInput | NoteCreateOrConnectWithoutFundInput[]
    createMany?: NoteCreateManyFundInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type StageCreateNestedManyWithoutFundInput = {
    create?: XOR<StageCreateWithoutFundInput, StageUncheckedCreateWithoutFundInput> | StageCreateWithoutFundInput[] | StageUncheckedCreateWithoutFundInput[]
    connectOrCreate?: StageCreateOrConnectWithoutFundInput | StageCreateOrConnectWithoutFundInput[]
    createMany?: StageCreateManyFundInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type FundItemUncheckedCreateNestedManyWithoutFundInput = {
    create?: XOR<FundItemCreateWithoutFundInput, FundItemUncheckedCreateWithoutFundInput> | FundItemCreateWithoutFundInput[] | FundItemUncheckedCreateWithoutFundInput[]
    connectOrCreate?: FundItemCreateOrConnectWithoutFundInput | FundItemCreateOrConnectWithoutFundInput[]
    createMany?: FundItemCreateManyFundInputEnvelope
    connect?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
  }

  export type ExpenseUncheckedCreateNestedManyWithoutFundInput = {
    create?: XOR<ExpenseCreateWithoutFundInput, ExpenseUncheckedCreateWithoutFundInput> | ExpenseCreateWithoutFundInput[] | ExpenseUncheckedCreateWithoutFundInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutFundInput | ExpenseCreateOrConnectWithoutFundInput[]
    createMany?: ExpenseCreateManyFundInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutFundInput = {
    create?: XOR<NoteCreateWithoutFundInput, NoteUncheckedCreateWithoutFundInput> | NoteCreateWithoutFundInput[] | NoteUncheckedCreateWithoutFundInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutFundInput | NoteCreateOrConnectWithoutFundInput[]
    createMany?: NoteCreateManyFundInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type StageUncheckedCreateNestedManyWithoutFundInput = {
    create?: XOR<StageCreateWithoutFundInput, StageUncheckedCreateWithoutFundInput> | StageCreateWithoutFundInput[] | StageUncheckedCreateWithoutFundInput[]
    connectOrCreate?: StageCreateOrConnectWithoutFundInput | StageCreateOrConnectWithoutFundInput[]
    createMany?: StageCreateManyFundInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutFundAssigneeNestedInput = {
    create?: XOR<UserCreateWithoutFundAssigneeInput, UserUncheckedCreateWithoutFundAssigneeInput>
    connectOrCreate?: UserCreateOrConnectWithoutFundAssigneeInput
    upsert?: UserUpsertWithoutFundAssigneeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFundAssigneeInput, UserUpdateWithoutFundAssigneeInput>, UserUncheckedUpdateWithoutFundAssigneeInput>
  }

  export type UserUpdateOneWithoutCreatorFundNestedInput = {
    create?: XOR<UserCreateWithoutCreatorFundInput, UserUncheckedCreateWithoutCreatorFundInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorFundInput
    upsert?: UserUpsertWithoutCreatorFundInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatorFundInput, UserUpdateWithoutCreatorFundInput>, UserUncheckedUpdateWithoutCreatorFundInput>
  }

  export type UserUpdateOneWithoutUpdaterFundNestedInput = {
    create?: XOR<UserCreateWithoutUpdaterFundInput, UserUncheckedCreateWithoutUpdaterFundInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterFundInput
    upsert?: UserUpsertWithoutUpdaterFundInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdaterFundInput, UserUpdateWithoutUpdaterFundInput>, UserUncheckedUpdateWithoutUpdaterFundInput>
  }

  export type FundItemUpdateManyWithoutFundNestedInput = {
    create?: XOR<FundItemCreateWithoutFundInput, FundItemUncheckedCreateWithoutFundInput> | FundItemCreateWithoutFundInput[] | FundItemUncheckedCreateWithoutFundInput[]
    connectOrCreate?: FundItemCreateOrConnectWithoutFundInput | FundItemCreateOrConnectWithoutFundInput[]
    upsert?: FundItemUpsertWithWhereUniqueWithoutFundInput | FundItemUpsertWithWhereUniqueWithoutFundInput[]
    createMany?: FundItemCreateManyFundInputEnvelope
    set?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    disconnect?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    delete?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    connect?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    update?: FundItemUpdateWithWhereUniqueWithoutFundInput | FundItemUpdateWithWhereUniqueWithoutFundInput[]
    updateMany?: FundItemUpdateManyWithWhereWithoutFundInput | FundItemUpdateManyWithWhereWithoutFundInput[]
    deleteMany?: FundItemScalarWhereInput | FundItemScalarWhereInput[]
  }

  export type TaskUpdateOneWithoutFundsNestedInput = {
    create?: XOR<TaskCreateWithoutFundsInput, TaskUncheckedCreateWithoutFundsInput>
    connectOrCreate?: TaskCreateOrConnectWithoutFundsInput
    upsert?: TaskUpsertWithoutFundsInput
    disconnect?: TaskWhereInput | boolean
    delete?: TaskWhereInput | boolean
    connect?: TaskWhereUniqueInput
    update?: XOR<XOR<TaskUpdateToOneWithWhereWithoutFundsInput, TaskUpdateWithoutFundsInput>, TaskUncheckedUpdateWithoutFundsInput>
  }

  export type ExpenseUpdateManyWithoutFundNestedInput = {
    create?: XOR<ExpenseCreateWithoutFundInput, ExpenseUncheckedCreateWithoutFundInput> | ExpenseCreateWithoutFundInput[] | ExpenseUncheckedCreateWithoutFundInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutFundInput | ExpenseCreateOrConnectWithoutFundInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutFundInput | ExpenseUpsertWithWhereUniqueWithoutFundInput[]
    createMany?: ExpenseCreateManyFundInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutFundInput | ExpenseUpdateWithWhereUniqueWithoutFundInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutFundInput | ExpenseUpdateManyWithWhereWithoutFundInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type NoteUpdateManyWithoutFundNestedInput = {
    create?: XOR<NoteCreateWithoutFundInput, NoteUncheckedCreateWithoutFundInput> | NoteCreateWithoutFundInput[] | NoteUncheckedCreateWithoutFundInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutFundInput | NoteCreateOrConnectWithoutFundInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutFundInput | NoteUpsertWithWhereUniqueWithoutFundInput[]
    createMany?: NoteCreateManyFundInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutFundInput | NoteUpdateWithWhereUniqueWithoutFundInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutFundInput | NoteUpdateManyWithWhereWithoutFundInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type StageUpdateManyWithoutFundNestedInput = {
    create?: XOR<StageCreateWithoutFundInput, StageUncheckedCreateWithoutFundInput> | StageCreateWithoutFundInput[] | StageUncheckedCreateWithoutFundInput[]
    connectOrCreate?: StageCreateOrConnectWithoutFundInput | StageCreateOrConnectWithoutFundInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutFundInput | StageUpsertWithWhereUniqueWithoutFundInput[]
    createMany?: StageCreateManyFundInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutFundInput | StageUpdateWithWhereUniqueWithoutFundInput[]
    updateMany?: StageUpdateManyWithWhereWithoutFundInput | StageUpdateManyWithWhereWithoutFundInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type FundItemUncheckedUpdateManyWithoutFundNestedInput = {
    create?: XOR<FundItemCreateWithoutFundInput, FundItemUncheckedCreateWithoutFundInput> | FundItemCreateWithoutFundInput[] | FundItemUncheckedCreateWithoutFundInput[]
    connectOrCreate?: FundItemCreateOrConnectWithoutFundInput | FundItemCreateOrConnectWithoutFundInput[]
    upsert?: FundItemUpsertWithWhereUniqueWithoutFundInput | FundItemUpsertWithWhereUniqueWithoutFundInput[]
    createMany?: FundItemCreateManyFundInputEnvelope
    set?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    disconnect?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    delete?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    connect?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    update?: FundItemUpdateWithWhereUniqueWithoutFundInput | FundItemUpdateWithWhereUniqueWithoutFundInput[]
    updateMany?: FundItemUpdateManyWithWhereWithoutFundInput | FundItemUpdateManyWithWhereWithoutFundInput[]
    deleteMany?: FundItemScalarWhereInput | FundItemScalarWhereInput[]
  }

  export type ExpenseUncheckedUpdateManyWithoutFundNestedInput = {
    create?: XOR<ExpenseCreateWithoutFundInput, ExpenseUncheckedCreateWithoutFundInput> | ExpenseCreateWithoutFundInput[] | ExpenseUncheckedCreateWithoutFundInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutFundInput | ExpenseCreateOrConnectWithoutFundInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutFundInput | ExpenseUpsertWithWhereUniqueWithoutFundInput[]
    createMany?: ExpenseCreateManyFundInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutFundInput | ExpenseUpdateWithWhereUniqueWithoutFundInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutFundInput | ExpenseUpdateManyWithWhereWithoutFundInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutFundNestedInput = {
    create?: XOR<NoteCreateWithoutFundInput, NoteUncheckedCreateWithoutFundInput> | NoteCreateWithoutFundInput[] | NoteUncheckedCreateWithoutFundInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutFundInput | NoteCreateOrConnectWithoutFundInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutFundInput | NoteUpsertWithWhereUniqueWithoutFundInput[]
    createMany?: NoteCreateManyFundInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutFundInput | NoteUpdateWithWhereUniqueWithoutFundInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutFundInput | NoteUpdateManyWithWhereWithoutFundInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type StageUncheckedUpdateManyWithoutFundNestedInput = {
    create?: XOR<StageCreateWithoutFundInput, StageUncheckedCreateWithoutFundInput> | StageCreateWithoutFundInput[] | StageUncheckedCreateWithoutFundInput[]
    connectOrCreate?: StageCreateOrConnectWithoutFundInput | StageCreateOrConnectWithoutFundInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutFundInput | StageUpsertWithWhereUniqueWithoutFundInput[]
    createMany?: StageCreateManyFundInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutFundInput | StageUpdateWithWhereUniqueWithoutFundInput[]
    updateMany?: StageUpdateManyWithWhereWithoutFundInput | StageUpdateManyWithWhereWithoutFundInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type FundCreateNestedOneWithoutItemsInput = {
    create?: XOR<FundCreateWithoutItemsInput, FundUncheckedCreateWithoutItemsInput>
    connectOrCreate?: FundCreateOrConnectWithoutItemsInput
    connect?: FundWhereUniqueInput
  }

  export type CostTypeCreateNestedOneWithoutFundItemsInput = {
    create?: XOR<CostTypeCreateWithoutFundItemsInput, CostTypeUncheckedCreateWithoutFundItemsInput>
    connectOrCreate?: CostTypeCreateOrConnectWithoutFundItemsInput
    connect?: CostTypeWhereUniqueInput
  }

  export type FundUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<FundCreateWithoutItemsInput, FundUncheckedCreateWithoutItemsInput>
    connectOrCreate?: FundCreateOrConnectWithoutItemsInput
    upsert?: FundUpsertWithoutItemsInput
    connect?: FundWhereUniqueInput
    update?: XOR<XOR<FundUpdateToOneWithWhereWithoutItemsInput, FundUpdateWithoutItemsInput>, FundUncheckedUpdateWithoutItemsInput>
  }

  export type CostTypeUpdateOneWithoutFundItemsNestedInput = {
    create?: XOR<CostTypeCreateWithoutFundItemsInput, CostTypeUncheckedCreateWithoutFundItemsInput>
    connectOrCreate?: CostTypeCreateOrConnectWithoutFundItemsInput
    upsert?: CostTypeUpsertWithoutFundItemsInput
    disconnect?: CostTypeWhereInput | boolean
    delete?: CostTypeWhereInput | boolean
    connect?: CostTypeWhereUniqueInput
    update?: XOR<XOR<CostTypeUpdateToOneWithWhereWithoutFundItemsInput, CostTypeUpdateWithoutFundItemsInput>, CostTypeUncheckedUpdateWithoutFundItemsInput>
  }

  export type CostTypeCreateNestedOneWithoutExpensesInput = {
    create?: XOR<CostTypeCreateWithoutExpensesInput, CostTypeUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: CostTypeCreateOrConnectWithoutExpensesInput
    connect?: CostTypeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatorExpenseInput = {
    create?: XOR<UserCreateWithoutCreatorExpenseInput, UserUncheckedCreateWithoutCreatorExpenseInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorExpenseInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdaterExpenseInput = {
    create?: XOR<UserCreateWithoutUpdaterExpenseInput, UserUncheckedCreateWithoutUpdaterExpenseInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterExpenseInput
    connect?: UserWhereUniqueInput
  }

  export type FundCreateNestedOneWithoutExpensesInput = {
    create?: XOR<FundCreateWithoutExpensesInput, FundUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: FundCreateOrConnectWithoutExpensesInput
    connect?: FundWhereUniqueInput
  }

  export type TaskCreateNestedOneWithoutExpensesInput = {
    create?: XOR<TaskCreateWithoutExpensesInput, TaskUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: TaskCreateOrConnectWithoutExpensesInput
    connect?: TaskWhereUniqueInput
  }

  export type ProjectCreateNestedOneWithoutExpensesInput = {
    create?: XOR<ProjectCreateWithoutExpensesInput, ProjectUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutExpensesInput
    connect?: ProjectWhereUniqueInput
  }

  export type NoteCreateNestedManyWithoutExpenseInput = {
    create?: XOR<NoteCreateWithoutExpenseInput, NoteUncheckedCreateWithoutExpenseInput> | NoteCreateWithoutExpenseInput[] | NoteUncheckedCreateWithoutExpenseInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutExpenseInput | NoteCreateOrConnectWithoutExpenseInput[]
    createMany?: NoteCreateManyExpenseInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutExpenseInput = {
    create?: XOR<NoteCreateWithoutExpenseInput, NoteUncheckedCreateWithoutExpenseInput> | NoteCreateWithoutExpenseInput[] | NoteUncheckedCreateWithoutExpenseInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutExpenseInput | NoteCreateOrConnectWithoutExpenseInput[]
    createMany?: NoteCreateManyExpenseInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type CostTypeUpdateOneRequiredWithoutExpensesNestedInput = {
    create?: XOR<CostTypeCreateWithoutExpensesInput, CostTypeUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: CostTypeCreateOrConnectWithoutExpensesInput
    upsert?: CostTypeUpsertWithoutExpensesInput
    connect?: CostTypeWhereUniqueInput
    update?: XOR<XOR<CostTypeUpdateToOneWithWhereWithoutExpensesInput, CostTypeUpdateWithoutExpensesInput>, CostTypeUncheckedUpdateWithoutExpensesInput>
  }

  export type UserUpdateOneWithoutCreatorExpenseNestedInput = {
    create?: XOR<UserCreateWithoutCreatorExpenseInput, UserUncheckedCreateWithoutCreatorExpenseInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorExpenseInput
    upsert?: UserUpsertWithoutCreatorExpenseInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatorExpenseInput, UserUpdateWithoutCreatorExpenseInput>, UserUncheckedUpdateWithoutCreatorExpenseInput>
  }

  export type UserUpdateOneWithoutUpdaterExpenseNestedInput = {
    create?: XOR<UserCreateWithoutUpdaterExpenseInput, UserUncheckedCreateWithoutUpdaterExpenseInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterExpenseInput
    upsert?: UserUpsertWithoutUpdaterExpenseInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdaterExpenseInput, UserUpdateWithoutUpdaterExpenseInput>, UserUncheckedUpdateWithoutUpdaterExpenseInput>
  }

  export type FundUpdateOneWithoutExpensesNestedInput = {
    create?: XOR<FundCreateWithoutExpensesInput, FundUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: FundCreateOrConnectWithoutExpensesInput
    upsert?: FundUpsertWithoutExpensesInput
    disconnect?: FundWhereInput | boolean
    delete?: FundWhereInput | boolean
    connect?: FundWhereUniqueInput
    update?: XOR<XOR<FundUpdateToOneWithWhereWithoutExpensesInput, FundUpdateWithoutExpensesInput>, FundUncheckedUpdateWithoutExpensesInput>
  }

  export type TaskUpdateOneWithoutExpensesNestedInput = {
    create?: XOR<TaskCreateWithoutExpensesInput, TaskUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: TaskCreateOrConnectWithoutExpensesInput
    upsert?: TaskUpsertWithoutExpensesInput
    disconnect?: TaskWhereInput | boolean
    delete?: TaskWhereInput | boolean
    connect?: TaskWhereUniqueInput
    update?: XOR<XOR<TaskUpdateToOneWithWhereWithoutExpensesInput, TaskUpdateWithoutExpensesInput>, TaskUncheckedUpdateWithoutExpensesInput>
  }

  export type ProjectUpdateOneWithoutExpensesNestedInput = {
    create?: XOR<ProjectCreateWithoutExpensesInput, ProjectUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutExpensesInput
    upsert?: ProjectUpsertWithoutExpensesInput
    disconnect?: ProjectWhereInput | boolean
    delete?: ProjectWhereInput | boolean
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutExpensesInput, ProjectUpdateWithoutExpensesInput>, ProjectUncheckedUpdateWithoutExpensesInput>
  }

  export type NoteUpdateManyWithoutExpenseNestedInput = {
    create?: XOR<NoteCreateWithoutExpenseInput, NoteUncheckedCreateWithoutExpenseInput> | NoteCreateWithoutExpenseInput[] | NoteUncheckedCreateWithoutExpenseInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutExpenseInput | NoteCreateOrConnectWithoutExpenseInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutExpenseInput | NoteUpsertWithWhereUniqueWithoutExpenseInput[]
    createMany?: NoteCreateManyExpenseInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutExpenseInput | NoteUpdateWithWhereUniqueWithoutExpenseInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutExpenseInput | NoteUpdateManyWithWhereWithoutExpenseInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutExpenseNestedInput = {
    create?: XOR<NoteCreateWithoutExpenseInput, NoteUncheckedCreateWithoutExpenseInput> | NoteCreateWithoutExpenseInput[] | NoteUncheckedCreateWithoutExpenseInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutExpenseInput | NoteCreateOrConnectWithoutExpenseInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutExpenseInput | NoteUpsertWithWhereUniqueWithoutExpenseInput[]
    createMany?: NoteCreateManyExpenseInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutExpenseInput | NoteUpdateWithWhereUniqueWithoutExpenseInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutExpenseInput | NoteUpdateManyWithWhereWithoutExpenseInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type CostTypeCreateNestedOneWithoutChildrenInput = {
    create?: XOR<CostTypeCreateWithoutChildrenInput, CostTypeUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: CostTypeCreateOrConnectWithoutChildrenInput
    connect?: CostTypeWhereUniqueInput
  }

  export type CostTypeCreateNestedManyWithoutParentInput = {
    create?: XOR<CostTypeCreateWithoutParentInput, CostTypeUncheckedCreateWithoutParentInput> | CostTypeCreateWithoutParentInput[] | CostTypeUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CostTypeCreateOrConnectWithoutParentInput | CostTypeCreateOrConnectWithoutParentInput[]
    createMany?: CostTypeCreateManyParentInputEnvelope
    connect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCreatorCostTypeInput = {
    create?: XOR<UserCreateWithoutCreatorCostTypeInput, UserUncheckedCreateWithoutCreatorCostTypeInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorCostTypeInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdaterCostTypeInput = {
    create?: XOR<UserCreateWithoutUpdaterCostTypeInput, UserUncheckedCreateWithoutUpdaterCostTypeInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterCostTypeInput
    connect?: UserWhereUniqueInput
  }

  export type BudgetItemCreateNestedManyWithoutCategoryInput = {
    create?: XOR<BudgetItemCreateWithoutCategoryInput, BudgetItemUncheckedCreateWithoutCategoryInput> | BudgetItemCreateWithoutCategoryInput[] | BudgetItemUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: BudgetItemCreateOrConnectWithoutCategoryInput | BudgetItemCreateOrConnectWithoutCategoryInput[]
    createMany?: BudgetItemCreateManyCategoryInputEnvelope
    connect?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
  }

  export type FundItemCreateNestedManyWithoutCategoryInput = {
    create?: XOR<FundItemCreateWithoutCategoryInput, FundItemUncheckedCreateWithoutCategoryInput> | FundItemCreateWithoutCategoryInput[] | FundItemUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: FundItemCreateOrConnectWithoutCategoryInput | FundItemCreateOrConnectWithoutCategoryInput[]
    createMany?: FundItemCreateManyCategoryInputEnvelope
    connect?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
  }

  export type ExpenseCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ExpenseCreateWithoutCategoryInput, ExpenseUncheckedCreateWithoutCategoryInput> | ExpenseCreateWithoutCategoryInput[] | ExpenseUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCategoryInput | ExpenseCreateOrConnectWithoutCategoryInput[]
    createMany?: ExpenseCreateManyCategoryInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type CostTypeUncheckedCreateNestedManyWithoutParentInput = {
    create?: XOR<CostTypeCreateWithoutParentInput, CostTypeUncheckedCreateWithoutParentInput> | CostTypeCreateWithoutParentInput[] | CostTypeUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CostTypeCreateOrConnectWithoutParentInput | CostTypeCreateOrConnectWithoutParentInput[]
    createMany?: CostTypeCreateManyParentInputEnvelope
    connect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
  }

  export type BudgetItemUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<BudgetItemCreateWithoutCategoryInput, BudgetItemUncheckedCreateWithoutCategoryInput> | BudgetItemCreateWithoutCategoryInput[] | BudgetItemUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: BudgetItemCreateOrConnectWithoutCategoryInput | BudgetItemCreateOrConnectWithoutCategoryInput[]
    createMany?: BudgetItemCreateManyCategoryInputEnvelope
    connect?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
  }

  export type FundItemUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<FundItemCreateWithoutCategoryInput, FundItemUncheckedCreateWithoutCategoryInput> | FundItemCreateWithoutCategoryInput[] | FundItemUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: FundItemCreateOrConnectWithoutCategoryInput | FundItemCreateOrConnectWithoutCategoryInput[]
    createMany?: FundItemCreateManyCategoryInputEnvelope
    connect?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
  }

  export type ExpenseUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ExpenseCreateWithoutCategoryInput, ExpenseUncheckedCreateWithoutCategoryInput> | ExpenseCreateWithoutCategoryInput[] | ExpenseUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCategoryInput | ExpenseCreateOrConnectWithoutCategoryInput[]
    createMany?: ExpenseCreateManyCategoryInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CostTypeUpdateOneWithoutChildrenNestedInput = {
    create?: XOR<CostTypeCreateWithoutChildrenInput, CostTypeUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: CostTypeCreateOrConnectWithoutChildrenInput
    upsert?: CostTypeUpsertWithoutChildrenInput
    disconnect?: CostTypeWhereInput | boolean
    delete?: CostTypeWhereInput | boolean
    connect?: CostTypeWhereUniqueInput
    update?: XOR<XOR<CostTypeUpdateToOneWithWhereWithoutChildrenInput, CostTypeUpdateWithoutChildrenInput>, CostTypeUncheckedUpdateWithoutChildrenInput>
  }

  export type CostTypeUpdateManyWithoutParentNestedInput = {
    create?: XOR<CostTypeCreateWithoutParentInput, CostTypeUncheckedCreateWithoutParentInput> | CostTypeCreateWithoutParentInput[] | CostTypeUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CostTypeCreateOrConnectWithoutParentInput | CostTypeCreateOrConnectWithoutParentInput[]
    upsert?: CostTypeUpsertWithWhereUniqueWithoutParentInput | CostTypeUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: CostTypeCreateManyParentInputEnvelope
    set?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    disconnect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    delete?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    connect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    update?: CostTypeUpdateWithWhereUniqueWithoutParentInput | CostTypeUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: CostTypeUpdateManyWithWhereWithoutParentInput | CostTypeUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: CostTypeScalarWhereInput | CostTypeScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCreatorCostTypeNestedInput = {
    create?: XOR<UserCreateWithoutCreatorCostTypeInput, UserUncheckedCreateWithoutCreatorCostTypeInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorCostTypeInput
    upsert?: UserUpsertWithoutCreatorCostTypeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatorCostTypeInput, UserUpdateWithoutCreatorCostTypeInput>, UserUncheckedUpdateWithoutCreatorCostTypeInput>
  }

  export type UserUpdateOneWithoutUpdaterCostTypeNestedInput = {
    create?: XOR<UserCreateWithoutUpdaterCostTypeInput, UserUncheckedCreateWithoutUpdaterCostTypeInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterCostTypeInput
    upsert?: UserUpsertWithoutUpdaterCostTypeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdaterCostTypeInput, UserUpdateWithoutUpdaterCostTypeInput>, UserUncheckedUpdateWithoutUpdaterCostTypeInput>
  }

  export type BudgetItemUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<BudgetItemCreateWithoutCategoryInput, BudgetItemUncheckedCreateWithoutCategoryInput> | BudgetItemCreateWithoutCategoryInput[] | BudgetItemUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: BudgetItemCreateOrConnectWithoutCategoryInput | BudgetItemCreateOrConnectWithoutCategoryInput[]
    upsert?: BudgetItemUpsertWithWhereUniqueWithoutCategoryInput | BudgetItemUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: BudgetItemCreateManyCategoryInputEnvelope
    set?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    disconnect?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    delete?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    connect?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    update?: BudgetItemUpdateWithWhereUniqueWithoutCategoryInput | BudgetItemUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: BudgetItemUpdateManyWithWhereWithoutCategoryInput | BudgetItemUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: BudgetItemScalarWhereInput | BudgetItemScalarWhereInput[]
  }

  export type FundItemUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<FundItemCreateWithoutCategoryInput, FundItemUncheckedCreateWithoutCategoryInput> | FundItemCreateWithoutCategoryInput[] | FundItemUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: FundItemCreateOrConnectWithoutCategoryInput | FundItemCreateOrConnectWithoutCategoryInput[]
    upsert?: FundItemUpsertWithWhereUniqueWithoutCategoryInput | FundItemUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: FundItemCreateManyCategoryInputEnvelope
    set?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    disconnect?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    delete?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    connect?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    update?: FundItemUpdateWithWhereUniqueWithoutCategoryInput | FundItemUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: FundItemUpdateManyWithWhereWithoutCategoryInput | FundItemUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: FundItemScalarWhereInput | FundItemScalarWhereInput[]
  }

  export type ExpenseUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ExpenseCreateWithoutCategoryInput, ExpenseUncheckedCreateWithoutCategoryInput> | ExpenseCreateWithoutCategoryInput[] | ExpenseUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCategoryInput | ExpenseCreateOrConnectWithoutCategoryInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutCategoryInput | ExpenseUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ExpenseCreateManyCategoryInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutCategoryInput | ExpenseUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutCategoryInput | ExpenseUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type CostTypeUncheckedUpdateManyWithoutParentNestedInput = {
    create?: XOR<CostTypeCreateWithoutParentInput, CostTypeUncheckedCreateWithoutParentInput> | CostTypeCreateWithoutParentInput[] | CostTypeUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CostTypeCreateOrConnectWithoutParentInput | CostTypeCreateOrConnectWithoutParentInput[]
    upsert?: CostTypeUpsertWithWhereUniqueWithoutParentInput | CostTypeUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: CostTypeCreateManyParentInputEnvelope
    set?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    disconnect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    delete?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    connect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    update?: CostTypeUpdateWithWhereUniqueWithoutParentInput | CostTypeUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: CostTypeUpdateManyWithWhereWithoutParentInput | CostTypeUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: CostTypeScalarWhereInput | CostTypeScalarWhereInput[]
  }

  export type BudgetItemUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<BudgetItemCreateWithoutCategoryInput, BudgetItemUncheckedCreateWithoutCategoryInput> | BudgetItemCreateWithoutCategoryInput[] | BudgetItemUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: BudgetItemCreateOrConnectWithoutCategoryInput | BudgetItemCreateOrConnectWithoutCategoryInput[]
    upsert?: BudgetItemUpsertWithWhereUniqueWithoutCategoryInput | BudgetItemUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: BudgetItemCreateManyCategoryInputEnvelope
    set?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    disconnect?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    delete?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    connect?: BudgetItemWhereUniqueInput | BudgetItemWhereUniqueInput[]
    update?: BudgetItemUpdateWithWhereUniqueWithoutCategoryInput | BudgetItemUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: BudgetItemUpdateManyWithWhereWithoutCategoryInput | BudgetItemUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: BudgetItemScalarWhereInput | BudgetItemScalarWhereInput[]
  }

  export type FundItemUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<FundItemCreateWithoutCategoryInput, FundItemUncheckedCreateWithoutCategoryInput> | FundItemCreateWithoutCategoryInput[] | FundItemUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: FundItemCreateOrConnectWithoutCategoryInput | FundItemCreateOrConnectWithoutCategoryInput[]
    upsert?: FundItemUpsertWithWhereUniqueWithoutCategoryInput | FundItemUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: FundItemCreateManyCategoryInputEnvelope
    set?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    disconnect?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    delete?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    connect?: FundItemWhereUniqueInput | FundItemWhereUniqueInput[]
    update?: FundItemUpdateWithWhereUniqueWithoutCategoryInput | FundItemUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: FundItemUpdateManyWithWhereWithoutCategoryInput | FundItemUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: FundItemScalarWhereInput | FundItemScalarWhereInput[]
  }

  export type ExpenseUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ExpenseCreateWithoutCategoryInput, ExpenseUncheckedCreateWithoutCategoryInput> | ExpenseCreateWithoutCategoryInput[] | ExpenseUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCategoryInput | ExpenseCreateOrConnectWithoutCategoryInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutCategoryInput | ExpenseUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ExpenseCreateManyCategoryInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutCategoryInput | ExpenseUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutCategoryInput | ExpenseUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type LeadCreateNestedOneWithoutPipelineInput = {
    create?: XOR<LeadCreateWithoutPipelineInput, LeadUncheckedCreateWithoutPipelineInput>
    connectOrCreate?: LeadCreateOrConnectWithoutPipelineInput
    connect?: LeadWhereUniqueInput
  }

  export type OpportunityCreateNestedOneWithoutPipelineInput = {
    create?: XOR<OpportunityCreateWithoutPipelineInput, OpportunityUncheckedCreateWithoutPipelineInput>
    connectOrCreate?: OpportunityCreateOrConnectWithoutPipelineInput
    connect?: OpportunityWhereUniqueInput
  }

  export type QuoteCreateNestedOneWithoutPipelineInput = {
    create?: XOR<QuoteCreateWithoutPipelineInput, QuoteUncheckedCreateWithoutPipelineInput>
    connectOrCreate?: QuoteCreateOrConnectWithoutPipelineInput
    connect?: QuoteWhereUniqueInput
  }

  export type ContractCreateNestedOneWithoutPipelineInput = {
    create?: XOR<ContractCreateWithoutPipelineInput, ContractUncheckedCreateWithoutPipelineInput>
    connectOrCreate?: ContractCreateOrConnectWithoutPipelineInput
    connect?: ContractWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutPipelineAssigneeInput = {
    create?: XOR<UserCreateWithoutPipelineAssigneeInput, UserUncheckedCreateWithoutPipelineAssigneeInput>
    connectOrCreate?: UserCreateOrConnectWithoutPipelineAssigneeInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutPipelineMemberInput = {
    create?: XOR<UserCreateWithoutPipelineMemberInput, UserUncheckedCreateWithoutPipelineMemberInput> | UserCreateWithoutPipelineMemberInput[] | UserUncheckedCreateWithoutPipelineMemberInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPipelineMemberInput | UserCreateOrConnectWithoutPipelineMemberInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCreatorPipelineInput = {
    create?: XOR<UserCreateWithoutCreatorPipelineInput, UserUncheckedCreateWithoutCreatorPipelineInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorPipelineInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdaterPipelineInput = {
    create?: XOR<UserCreateWithoutUpdaterPipelineInput, UserUncheckedCreateWithoutUpdaterPipelineInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterPipelineInput
    connect?: UserWhereUniqueInput
  }

  export type StageCreateNestedManyWithoutPipelineInput = {
    create?: XOR<StageCreateWithoutPipelineInput, StageUncheckedCreateWithoutPipelineInput> | StageCreateWithoutPipelineInput[] | StageUncheckedCreateWithoutPipelineInput[]
    connectOrCreate?: StageCreateOrConnectWithoutPipelineInput | StageCreateOrConnectWithoutPipelineInput[]
    createMany?: StageCreateManyPipelineInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type NoteCreateNestedManyWithoutPipelineInput = {
    create?: XOR<NoteCreateWithoutPipelineInput, NoteUncheckedCreateWithoutPipelineInput> | NoteCreateWithoutPipelineInput[] | NoteUncheckedCreateWithoutPipelineInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutPipelineInput | NoteCreateOrConnectWithoutPipelineInput[]
    createMany?: NoteCreateManyPipelineInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type EventCreateNestedManyWithoutPipelineInput = {
    create?: XOR<EventCreateWithoutPipelineInput, EventUncheckedCreateWithoutPipelineInput> | EventCreateWithoutPipelineInput[] | EventUncheckedCreateWithoutPipelineInput[]
    connectOrCreate?: EventCreateOrConnectWithoutPipelineInput | EventCreateOrConnectWithoutPipelineInput[]
    createMany?: EventCreateManyPipelineInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutPipelineMemberInput = {
    create?: XOR<UserCreateWithoutPipelineMemberInput, UserUncheckedCreateWithoutPipelineMemberInput> | UserCreateWithoutPipelineMemberInput[] | UserUncheckedCreateWithoutPipelineMemberInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPipelineMemberInput | UserCreateOrConnectWithoutPipelineMemberInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type StageUncheckedCreateNestedManyWithoutPipelineInput = {
    create?: XOR<StageCreateWithoutPipelineInput, StageUncheckedCreateWithoutPipelineInput> | StageCreateWithoutPipelineInput[] | StageUncheckedCreateWithoutPipelineInput[]
    connectOrCreate?: StageCreateOrConnectWithoutPipelineInput | StageCreateOrConnectWithoutPipelineInput[]
    createMany?: StageCreateManyPipelineInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutPipelineInput = {
    create?: XOR<NoteCreateWithoutPipelineInput, NoteUncheckedCreateWithoutPipelineInput> | NoteCreateWithoutPipelineInput[] | NoteUncheckedCreateWithoutPipelineInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutPipelineInput | NoteCreateOrConnectWithoutPipelineInput[]
    createMany?: NoteCreateManyPipelineInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type EventUncheckedCreateNestedManyWithoutPipelineInput = {
    create?: XOR<EventCreateWithoutPipelineInput, EventUncheckedCreateWithoutPipelineInput> | EventCreateWithoutPipelineInput[] | EventUncheckedCreateWithoutPipelineInput[]
    connectOrCreate?: EventCreateOrConnectWithoutPipelineInput | EventCreateOrConnectWithoutPipelineInput[]
    createMany?: EventCreateManyPipelineInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type LeadUpdateOneWithoutPipelineNestedInput = {
    create?: XOR<LeadCreateWithoutPipelineInput, LeadUncheckedCreateWithoutPipelineInput>
    connectOrCreate?: LeadCreateOrConnectWithoutPipelineInput
    upsert?: LeadUpsertWithoutPipelineInput
    disconnect?: LeadWhereInput | boolean
    delete?: LeadWhereInput | boolean
    connect?: LeadWhereUniqueInput
    update?: XOR<XOR<LeadUpdateToOneWithWhereWithoutPipelineInput, LeadUpdateWithoutPipelineInput>, LeadUncheckedUpdateWithoutPipelineInput>
  }

  export type OpportunityUpdateOneWithoutPipelineNestedInput = {
    create?: XOR<OpportunityCreateWithoutPipelineInput, OpportunityUncheckedCreateWithoutPipelineInput>
    connectOrCreate?: OpportunityCreateOrConnectWithoutPipelineInput
    upsert?: OpportunityUpsertWithoutPipelineInput
    disconnect?: OpportunityWhereInput | boolean
    delete?: OpportunityWhereInput | boolean
    connect?: OpportunityWhereUniqueInput
    update?: XOR<XOR<OpportunityUpdateToOneWithWhereWithoutPipelineInput, OpportunityUpdateWithoutPipelineInput>, OpportunityUncheckedUpdateWithoutPipelineInput>
  }

  export type QuoteUpdateOneWithoutPipelineNestedInput = {
    create?: XOR<QuoteCreateWithoutPipelineInput, QuoteUncheckedCreateWithoutPipelineInput>
    connectOrCreate?: QuoteCreateOrConnectWithoutPipelineInput
    upsert?: QuoteUpsertWithoutPipelineInput
    disconnect?: QuoteWhereInput | boolean
    delete?: QuoteWhereInput | boolean
    connect?: QuoteWhereUniqueInput
    update?: XOR<XOR<QuoteUpdateToOneWithWhereWithoutPipelineInput, QuoteUpdateWithoutPipelineInput>, QuoteUncheckedUpdateWithoutPipelineInput>
  }

  export type ContractUpdateOneWithoutPipelineNestedInput = {
    create?: XOR<ContractCreateWithoutPipelineInput, ContractUncheckedCreateWithoutPipelineInput>
    connectOrCreate?: ContractCreateOrConnectWithoutPipelineInput
    upsert?: ContractUpsertWithoutPipelineInput
    disconnect?: ContractWhereInput | boolean
    delete?: ContractWhereInput | boolean
    connect?: ContractWhereUniqueInput
    update?: XOR<XOR<ContractUpdateToOneWithWhereWithoutPipelineInput, ContractUpdateWithoutPipelineInput>, ContractUncheckedUpdateWithoutPipelineInput>
  }

  export type UserUpdateOneWithoutPipelineAssigneeNestedInput = {
    create?: XOR<UserCreateWithoutPipelineAssigneeInput, UserUncheckedCreateWithoutPipelineAssigneeInput>
    connectOrCreate?: UserCreateOrConnectWithoutPipelineAssigneeInput
    upsert?: UserUpsertWithoutPipelineAssigneeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPipelineAssigneeInput, UserUpdateWithoutPipelineAssigneeInput>, UserUncheckedUpdateWithoutPipelineAssigneeInput>
  }

  export type UserUpdateManyWithoutPipelineMemberNestedInput = {
    create?: XOR<UserCreateWithoutPipelineMemberInput, UserUncheckedCreateWithoutPipelineMemberInput> | UserCreateWithoutPipelineMemberInput[] | UserUncheckedCreateWithoutPipelineMemberInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPipelineMemberInput | UserCreateOrConnectWithoutPipelineMemberInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutPipelineMemberInput | UserUpsertWithWhereUniqueWithoutPipelineMemberInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutPipelineMemberInput | UserUpdateWithWhereUniqueWithoutPipelineMemberInput[]
    updateMany?: UserUpdateManyWithWhereWithoutPipelineMemberInput | UserUpdateManyWithWhereWithoutPipelineMemberInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCreatorPipelineNestedInput = {
    create?: XOR<UserCreateWithoutCreatorPipelineInput, UserUncheckedCreateWithoutCreatorPipelineInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorPipelineInput
    upsert?: UserUpsertWithoutCreatorPipelineInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatorPipelineInput, UserUpdateWithoutCreatorPipelineInput>, UserUncheckedUpdateWithoutCreatorPipelineInput>
  }

  export type UserUpdateOneWithoutUpdaterPipelineNestedInput = {
    create?: XOR<UserCreateWithoutUpdaterPipelineInput, UserUncheckedCreateWithoutUpdaterPipelineInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterPipelineInput
    upsert?: UserUpsertWithoutUpdaterPipelineInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdaterPipelineInput, UserUpdateWithoutUpdaterPipelineInput>, UserUncheckedUpdateWithoutUpdaterPipelineInput>
  }

  export type StageUpdateManyWithoutPipelineNestedInput = {
    create?: XOR<StageCreateWithoutPipelineInput, StageUncheckedCreateWithoutPipelineInput> | StageCreateWithoutPipelineInput[] | StageUncheckedCreateWithoutPipelineInput[]
    connectOrCreate?: StageCreateOrConnectWithoutPipelineInput | StageCreateOrConnectWithoutPipelineInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutPipelineInput | StageUpsertWithWhereUniqueWithoutPipelineInput[]
    createMany?: StageCreateManyPipelineInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutPipelineInput | StageUpdateWithWhereUniqueWithoutPipelineInput[]
    updateMany?: StageUpdateManyWithWhereWithoutPipelineInput | StageUpdateManyWithWhereWithoutPipelineInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type NoteUpdateManyWithoutPipelineNestedInput = {
    create?: XOR<NoteCreateWithoutPipelineInput, NoteUncheckedCreateWithoutPipelineInput> | NoteCreateWithoutPipelineInput[] | NoteUncheckedCreateWithoutPipelineInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutPipelineInput | NoteCreateOrConnectWithoutPipelineInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutPipelineInput | NoteUpsertWithWhereUniqueWithoutPipelineInput[]
    createMany?: NoteCreateManyPipelineInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutPipelineInput | NoteUpdateWithWhereUniqueWithoutPipelineInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutPipelineInput | NoteUpdateManyWithWhereWithoutPipelineInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type EventUpdateManyWithoutPipelineNestedInput = {
    create?: XOR<EventCreateWithoutPipelineInput, EventUncheckedCreateWithoutPipelineInput> | EventCreateWithoutPipelineInput[] | EventUncheckedCreateWithoutPipelineInput[]
    connectOrCreate?: EventCreateOrConnectWithoutPipelineInput | EventCreateOrConnectWithoutPipelineInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutPipelineInput | EventUpsertWithWhereUniqueWithoutPipelineInput[]
    createMany?: EventCreateManyPipelineInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutPipelineInput | EventUpdateWithWhereUniqueWithoutPipelineInput[]
    updateMany?: EventUpdateManyWithWhereWithoutPipelineInput | EventUpdateManyWithWhereWithoutPipelineInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutPipelineMemberNestedInput = {
    create?: XOR<UserCreateWithoutPipelineMemberInput, UserUncheckedCreateWithoutPipelineMemberInput> | UserCreateWithoutPipelineMemberInput[] | UserUncheckedCreateWithoutPipelineMemberInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPipelineMemberInput | UserCreateOrConnectWithoutPipelineMemberInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutPipelineMemberInput | UserUpsertWithWhereUniqueWithoutPipelineMemberInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutPipelineMemberInput | UserUpdateWithWhereUniqueWithoutPipelineMemberInput[]
    updateMany?: UserUpdateManyWithWhereWithoutPipelineMemberInput | UserUpdateManyWithWhereWithoutPipelineMemberInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type StageUncheckedUpdateManyWithoutPipelineNestedInput = {
    create?: XOR<StageCreateWithoutPipelineInput, StageUncheckedCreateWithoutPipelineInput> | StageCreateWithoutPipelineInput[] | StageUncheckedCreateWithoutPipelineInput[]
    connectOrCreate?: StageCreateOrConnectWithoutPipelineInput | StageCreateOrConnectWithoutPipelineInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutPipelineInput | StageUpsertWithWhereUniqueWithoutPipelineInput[]
    createMany?: StageCreateManyPipelineInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutPipelineInput | StageUpdateWithWhereUniqueWithoutPipelineInput[]
    updateMany?: StageUpdateManyWithWhereWithoutPipelineInput | StageUpdateManyWithWhereWithoutPipelineInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutPipelineNestedInput = {
    create?: XOR<NoteCreateWithoutPipelineInput, NoteUncheckedCreateWithoutPipelineInput> | NoteCreateWithoutPipelineInput[] | NoteUncheckedCreateWithoutPipelineInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutPipelineInput | NoteCreateOrConnectWithoutPipelineInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutPipelineInput | NoteUpsertWithWhereUniqueWithoutPipelineInput[]
    createMany?: NoteCreateManyPipelineInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutPipelineInput | NoteUpdateWithWhereUniqueWithoutPipelineInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutPipelineInput | NoteUpdateManyWithWhereWithoutPipelineInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type EventUncheckedUpdateManyWithoutPipelineNestedInput = {
    create?: XOR<EventCreateWithoutPipelineInput, EventUncheckedCreateWithoutPipelineInput> | EventCreateWithoutPipelineInput[] | EventUncheckedCreateWithoutPipelineInput[]
    connectOrCreate?: EventCreateOrConnectWithoutPipelineInput | EventCreateOrConnectWithoutPipelineInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutPipelineInput | EventUpsertWithWhereUniqueWithoutPipelineInput[]
    createMany?: EventCreateManyPipelineInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutPipelineInput | EventUpdateWithWhereUniqueWithoutPipelineInput[]
    updateMany?: EventUpdateManyWithWhereWithoutPipelineInput | EventUpdateManyWithWhereWithoutPipelineInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type ProductCreateNestedManyWithoutLeadsInput = {
    create?: XOR<ProductCreateWithoutLeadsInput, ProductUncheckedCreateWithoutLeadsInput> | ProductCreateWithoutLeadsInput[] | ProductUncheckedCreateWithoutLeadsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutLeadsInput | ProductCreateOrConnectWithoutLeadsInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ClientCreateNestedOneWithoutLeadsInput = {
    create?: XOR<ClientCreateWithoutLeadsInput, ClientUncheckedCreateWithoutLeadsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutLeadsInput
    connect?: ClientWhereUniqueInput
  }

  export type OpportunityCreateNestedManyWithoutLeadInput = {
    create?: XOR<OpportunityCreateWithoutLeadInput, OpportunityUncheckedCreateWithoutLeadInput> | OpportunityCreateWithoutLeadInput[] | OpportunityUncheckedCreateWithoutLeadInput[]
    connectOrCreate?: OpportunityCreateOrConnectWithoutLeadInput | OpportunityCreateOrConnectWithoutLeadInput[]
    createMany?: OpportunityCreateManyLeadInputEnvelope
    connect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
  }

  export type PipelineCreateNestedManyWithoutLeadInput = {
    create?: XOR<PipelineCreateWithoutLeadInput, PipelineUncheckedCreateWithoutLeadInput> | PipelineCreateWithoutLeadInput[] | PipelineUncheckedCreateWithoutLeadInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutLeadInput | PipelineCreateOrConnectWithoutLeadInput[]
    createMany?: PipelineCreateManyLeadInputEnvelope
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutLeadsInput = {
    create?: XOR<ProductCreateWithoutLeadsInput, ProductUncheckedCreateWithoutLeadsInput> | ProductCreateWithoutLeadsInput[] | ProductUncheckedCreateWithoutLeadsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutLeadsInput | ProductCreateOrConnectWithoutLeadsInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type OpportunityUncheckedCreateNestedManyWithoutLeadInput = {
    create?: XOR<OpportunityCreateWithoutLeadInput, OpportunityUncheckedCreateWithoutLeadInput> | OpportunityCreateWithoutLeadInput[] | OpportunityUncheckedCreateWithoutLeadInput[]
    connectOrCreate?: OpportunityCreateOrConnectWithoutLeadInput | OpportunityCreateOrConnectWithoutLeadInput[]
    createMany?: OpportunityCreateManyLeadInputEnvelope
    connect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
  }

  export type PipelineUncheckedCreateNestedManyWithoutLeadInput = {
    create?: XOR<PipelineCreateWithoutLeadInput, PipelineUncheckedCreateWithoutLeadInput> | PipelineCreateWithoutLeadInput[] | PipelineUncheckedCreateWithoutLeadInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutLeadInput | PipelineCreateOrConnectWithoutLeadInput[]
    createMany?: PipelineCreateManyLeadInputEnvelope
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type ProductUpdateManyWithoutLeadsNestedInput = {
    create?: XOR<ProductCreateWithoutLeadsInput, ProductUncheckedCreateWithoutLeadsInput> | ProductCreateWithoutLeadsInput[] | ProductUncheckedCreateWithoutLeadsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutLeadsInput | ProductCreateOrConnectWithoutLeadsInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutLeadsInput | ProductUpsertWithWhereUniqueWithoutLeadsInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutLeadsInput | ProductUpdateWithWhereUniqueWithoutLeadsInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutLeadsInput | ProductUpdateManyWithWhereWithoutLeadsInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ClientUpdateOneWithoutLeadsNestedInput = {
    create?: XOR<ClientCreateWithoutLeadsInput, ClientUncheckedCreateWithoutLeadsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutLeadsInput
    upsert?: ClientUpsertWithoutLeadsInput
    disconnect?: ClientWhereInput | boolean
    delete?: ClientWhereInput | boolean
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutLeadsInput, ClientUpdateWithoutLeadsInput>, ClientUncheckedUpdateWithoutLeadsInput>
  }

  export type OpportunityUpdateManyWithoutLeadNestedInput = {
    create?: XOR<OpportunityCreateWithoutLeadInput, OpportunityUncheckedCreateWithoutLeadInput> | OpportunityCreateWithoutLeadInput[] | OpportunityUncheckedCreateWithoutLeadInput[]
    connectOrCreate?: OpportunityCreateOrConnectWithoutLeadInput | OpportunityCreateOrConnectWithoutLeadInput[]
    upsert?: OpportunityUpsertWithWhereUniqueWithoutLeadInput | OpportunityUpsertWithWhereUniqueWithoutLeadInput[]
    createMany?: OpportunityCreateManyLeadInputEnvelope
    set?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    disconnect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    delete?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    connect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    update?: OpportunityUpdateWithWhereUniqueWithoutLeadInput | OpportunityUpdateWithWhereUniqueWithoutLeadInput[]
    updateMany?: OpportunityUpdateManyWithWhereWithoutLeadInput | OpportunityUpdateManyWithWhereWithoutLeadInput[]
    deleteMany?: OpportunityScalarWhereInput | OpportunityScalarWhereInput[]
  }

  export type PipelineUpdateManyWithoutLeadNestedInput = {
    create?: XOR<PipelineCreateWithoutLeadInput, PipelineUncheckedCreateWithoutLeadInput> | PipelineCreateWithoutLeadInput[] | PipelineUncheckedCreateWithoutLeadInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutLeadInput | PipelineCreateOrConnectWithoutLeadInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutLeadInput | PipelineUpsertWithWhereUniqueWithoutLeadInput[]
    createMany?: PipelineCreateManyLeadInputEnvelope
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutLeadInput | PipelineUpdateWithWhereUniqueWithoutLeadInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutLeadInput | PipelineUpdateManyWithWhereWithoutLeadInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutLeadsNestedInput = {
    create?: XOR<ProductCreateWithoutLeadsInput, ProductUncheckedCreateWithoutLeadsInput> | ProductCreateWithoutLeadsInput[] | ProductUncheckedCreateWithoutLeadsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutLeadsInput | ProductCreateOrConnectWithoutLeadsInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutLeadsInput | ProductUpsertWithWhereUniqueWithoutLeadsInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutLeadsInput | ProductUpdateWithWhereUniqueWithoutLeadsInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutLeadsInput | ProductUpdateManyWithWhereWithoutLeadsInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type OpportunityUncheckedUpdateManyWithoutLeadNestedInput = {
    create?: XOR<OpportunityCreateWithoutLeadInput, OpportunityUncheckedCreateWithoutLeadInput> | OpportunityCreateWithoutLeadInput[] | OpportunityUncheckedCreateWithoutLeadInput[]
    connectOrCreate?: OpportunityCreateOrConnectWithoutLeadInput | OpportunityCreateOrConnectWithoutLeadInput[]
    upsert?: OpportunityUpsertWithWhereUniqueWithoutLeadInput | OpportunityUpsertWithWhereUniqueWithoutLeadInput[]
    createMany?: OpportunityCreateManyLeadInputEnvelope
    set?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    disconnect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    delete?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    connect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    update?: OpportunityUpdateWithWhereUniqueWithoutLeadInput | OpportunityUpdateWithWhereUniqueWithoutLeadInput[]
    updateMany?: OpportunityUpdateManyWithWhereWithoutLeadInput | OpportunityUpdateManyWithWhereWithoutLeadInput[]
    deleteMany?: OpportunityScalarWhereInput | OpportunityScalarWhereInput[]
  }

  export type PipelineUncheckedUpdateManyWithoutLeadNestedInput = {
    create?: XOR<PipelineCreateWithoutLeadInput, PipelineUncheckedCreateWithoutLeadInput> | PipelineCreateWithoutLeadInput[] | PipelineUncheckedCreateWithoutLeadInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutLeadInput | PipelineCreateOrConnectWithoutLeadInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutLeadInput | PipelineUpsertWithWhereUniqueWithoutLeadInput[]
    createMany?: PipelineCreateManyLeadInputEnvelope
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutLeadInput | PipelineUpdateWithWhereUniqueWithoutLeadInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutLeadInput | PipelineUpdateManyWithWhereWithoutLeadInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type ProductCreateNestedManyWithoutOpportunitiesInput = {
    create?: XOR<ProductCreateWithoutOpportunitiesInput, ProductUncheckedCreateWithoutOpportunitiesInput> | ProductCreateWithoutOpportunitiesInput[] | ProductUncheckedCreateWithoutOpportunitiesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOpportunitiesInput | ProductCreateOrConnectWithoutOpportunitiesInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ClientCreateNestedOneWithoutOpportunitiesInput = {
    create?: XOR<ClientCreateWithoutOpportunitiesInput, ClientUncheckedCreateWithoutOpportunitiesInput>
    connectOrCreate?: ClientCreateOrConnectWithoutOpportunitiesInput
    connect?: ClientWhereUniqueInput
  }

  export type LeadCreateNestedOneWithoutOpportunitiesInput = {
    create?: XOR<LeadCreateWithoutOpportunitiesInput, LeadUncheckedCreateWithoutOpportunitiesInput>
    connectOrCreate?: LeadCreateOrConnectWithoutOpportunitiesInput
    connect?: LeadWhereUniqueInput
  }

  export type QuoteCreateNestedManyWithoutOpportunityInput = {
    create?: XOR<QuoteCreateWithoutOpportunityInput, QuoteUncheckedCreateWithoutOpportunityInput> | QuoteCreateWithoutOpportunityInput[] | QuoteUncheckedCreateWithoutOpportunityInput[]
    connectOrCreate?: QuoteCreateOrConnectWithoutOpportunityInput | QuoteCreateOrConnectWithoutOpportunityInput[]
    createMany?: QuoteCreateManyOpportunityInputEnvelope
    connect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
  }

  export type PipelineCreateNestedManyWithoutOpportunityInput = {
    create?: XOR<PipelineCreateWithoutOpportunityInput, PipelineUncheckedCreateWithoutOpportunityInput> | PipelineCreateWithoutOpportunityInput[] | PipelineUncheckedCreateWithoutOpportunityInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutOpportunityInput | PipelineCreateOrConnectWithoutOpportunityInput[]
    createMany?: PipelineCreateManyOpportunityInputEnvelope
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutOpportunitiesInput = {
    create?: XOR<ProductCreateWithoutOpportunitiesInput, ProductUncheckedCreateWithoutOpportunitiesInput> | ProductCreateWithoutOpportunitiesInput[] | ProductUncheckedCreateWithoutOpportunitiesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOpportunitiesInput | ProductCreateOrConnectWithoutOpportunitiesInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type QuoteUncheckedCreateNestedManyWithoutOpportunityInput = {
    create?: XOR<QuoteCreateWithoutOpportunityInput, QuoteUncheckedCreateWithoutOpportunityInput> | QuoteCreateWithoutOpportunityInput[] | QuoteUncheckedCreateWithoutOpportunityInput[]
    connectOrCreate?: QuoteCreateOrConnectWithoutOpportunityInput | QuoteCreateOrConnectWithoutOpportunityInput[]
    createMany?: QuoteCreateManyOpportunityInputEnvelope
    connect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
  }

  export type PipelineUncheckedCreateNestedManyWithoutOpportunityInput = {
    create?: XOR<PipelineCreateWithoutOpportunityInput, PipelineUncheckedCreateWithoutOpportunityInput> | PipelineCreateWithoutOpportunityInput[] | PipelineUncheckedCreateWithoutOpportunityInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutOpportunityInput | PipelineCreateOrConnectWithoutOpportunityInput[]
    createMany?: PipelineCreateManyOpportunityInputEnvelope
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type ProductUpdateManyWithoutOpportunitiesNestedInput = {
    create?: XOR<ProductCreateWithoutOpportunitiesInput, ProductUncheckedCreateWithoutOpportunitiesInput> | ProductCreateWithoutOpportunitiesInput[] | ProductUncheckedCreateWithoutOpportunitiesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOpportunitiesInput | ProductCreateOrConnectWithoutOpportunitiesInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutOpportunitiesInput | ProductUpsertWithWhereUniqueWithoutOpportunitiesInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutOpportunitiesInput | ProductUpdateWithWhereUniqueWithoutOpportunitiesInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutOpportunitiesInput | ProductUpdateManyWithWhereWithoutOpportunitiesInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ClientUpdateOneWithoutOpportunitiesNestedInput = {
    create?: XOR<ClientCreateWithoutOpportunitiesInput, ClientUncheckedCreateWithoutOpportunitiesInput>
    connectOrCreate?: ClientCreateOrConnectWithoutOpportunitiesInput
    upsert?: ClientUpsertWithoutOpportunitiesInput
    disconnect?: ClientWhereInput | boolean
    delete?: ClientWhereInput | boolean
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutOpportunitiesInput, ClientUpdateWithoutOpportunitiesInput>, ClientUncheckedUpdateWithoutOpportunitiesInput>
  }

  export type LeadUpdateOneWithoutOpportunitiesNestedInput = {
    create?: XOR<LeadCreateWithoutOpportunitiesInput, LeadUncheckedCreateWithoutOpportunitiesInput>
    connectOrCreate?: LeadCreateOrConnectWithoutOpportunitiesInput
    upsert?: LeadUpsertWithoutOpportunitiesInput
    disconnect?: LeadWhereInput | boolean
    delete?: LeadWhereInput | boolean
    connect?: LeadWhereUniqueInput
    update?: XOR<XOR<LeadUpdateToOneWithWhereWithoutOpportunitiesInput, LeadUpdateWithoutOpportunitiesInput>, LeadUncheckedUpdateWithoutOpportunitiesInput>
  }

  export type QuoteUpdateManyWithoutOpportunityNestedInput = {
    create?: XOR<QuoteCreateWithoutOpportunityInput, QuoteUncheckedCreateWithoutOpportunityInput> | QuoteCreateWithoutOpportunityInput[] | QuoteUncheckedCreateWithoutOpportunityInput[]
    connectOrCreate?: QuoteCreateOrConnectWithoutOpportunityInput | QuoteCreateOrConnectWithoutOpportunityInput[]
    upsert?: QuoteUpsertWithWhereUniqueWithoutOpportunityInput | QuoteUpsertWithWhereUniqueWithoutOpportunityInput[]
    createMany?: QuoteCreateManyOpportunityInputEnvelope
    set?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    disconnect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    delete?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    connect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    update?: QuoteUpdateWithWhereUniqueWithoutOpportunityInput | QuoteUpdateWithWhereUniqueWithoutOpportunityInput[]
    updateMany?: QuoteUpdateManyWithWhereWithoutOpportunityInput | QuoteUpdateManyWithWhereWithoutOpportunityInput[]
    deleteMany?: QuoteScalarWhereInput | QuoteScalarWhereInput[]
  }

  export type PipelineUpdateManyWithoutOpportunityNestedInput = {
    create?: XOR<PipelineCreateWithoutOpportunityInput, PipelineUncheckedCreateWithoutOpportunityInput> | PipelineCreateWithoutOpportunityInput[] | PipelineUncheckedCreateWithoutOpportunityInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutOpportunityInput | PipelineCreateOrConnectWithoutOpportunityInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutOpportunityInput | PipelineUpsertWithWhereUniqueWithoutOpportunityInput[]
    createMany?: PipelineCreateManyOpportunityInputEnvelope
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutOpportunityInput | PipelineUpdateWithWhereUniqueWithoutOpportunityInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutOpportunityInput | PipelineUpdateManyWithWhereWithoutOpportunityInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutOpportunitiesNestedInput = {
    create?: XOR<ProductCreateWithoutOpportunitiesInput, ProductUncheckedCreateWithoutOpportunitiesInput> | ProductCreateWithoutOpportunitiesInput[] | ProductUncheckedCreateWithoutOpportunitiesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOpportunitiesInput | ProductCreateOrConnectWithoutOpportunitiesInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutOpportunitiesInput | ProductUpsertWithWhereUniqueWithoutOpportunitiesInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutOpportunitiesInput | ProductUpdateWithWhereUniqueWithoutOpportunitiesInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutOpportunitiesInput | ProductUpdateManyWithWhereWithoutOpportunitiesInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type QuoteUncheckedUpdateManyWithoutOpportunityNestedInput = {
    create?: XOR<QuoteCreateWithoutOpportunityInput, QuoteUncheckedCreateWithoutOpportunityInput> | QuoteCreateWithoutOpportunityInput[] | QuoteUncheckedCreateWithoutOpportunityInput[]
    connectOrCreate?: QuoteCreateOrConnectWithoutOpportunityInput | QuoteCreateOrConnectWithoutOpportunityInput[]
    upsert?: QuoteUpsertWithWhereUniqueWithoutOpportunityInput | QuoteUpsertWithWhereUniqueWithoutOpportunityInput[]
    createMany?: QuoteCreateManyOpportunityInputEnvelope
    set?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    disconnect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    delete?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    connect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    update?: QuoteUpdateWithWhereUniqueWithoutOpportunityInput | QuoteUpdateWithWhereUniqueWithoutOpportunityInput[]
    updateMany?: QuoteUpdateManyWithWhereWithoutOpportunityInput | QuoteUpdateManyWithWhereWithoutOpportunityInput[]
    deleteMany?: QuoteScalarWhereInput | QuoteScalarWhereInput[]
  }

  export type PipelineUncheckedUpdateManyWithoutOpportunityNestedInput = {
    create?: XOR<PipelineCreateWithoutOpportunityInput, PipelineUncheckedCreateWithoutOpportunityInput> | PipelineCreateWithoutOpportunityInput[] | PipelineUncheckedCreateWithoutOpportunityInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutOpportunityInput | PipelineCreateOrConnectWithoutOpportunityInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutOpportunityInput | PipelineUpsertWithWhereUniqueWithoutOpportunityInput[]
    createMany?: PipelineCreateManyOpportunityInputEnvelope
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutOpportunityInput | PipelineUpdateWithWhereUniqueWithoutOpportunityInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutOpportunityInput | PipelineUpdateManyWithWhereWithoutOpportunityInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type ProductCreateNestedManyWithoutQuotesInput = {
    create?: XOR<ProductCreateWithoutQuotesInput, ProductUncheckedCreateWithoutQuotesInput> | ProductCreateWithoutQuotesInput[] | ProductUncheckedCreateWithoutQuotesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutQuotesInput | ProductCreateOrConnectWithoutQuotesInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ClientCreateNestedOneWithoutQuotesInput = {
    create?: XOR<ClientCreateWithoutQuotesInput, ClientUncheckedCreateWithoutQuotesInput>
    connectOrCreate?: ClientCreateOrConnectWithoutQuotesInput
    connect?: ClientWhereUniqueInput
  }

  export type OpportunityCreateNestedOneWithoutQuotesInput = {
    create?: XOR<OpportunityCreateWithoutQuotesInput, OpportunityUncheckedCreateWithoutQuotesInput>
    connectOrCreate?: OpportunityCreateOrConnectWithoutQuotesInput
    connect?: OpportunityWhereUniqueInput
  }

  export type ContractCreateNestedManyWithoutQuoteInput = {
    create?: XOR<ContractCreateWithoutQuoteInput, ContractUncheckedCreateWithoutQuoteInput> | ContractCreateWithoutQuoteInput[] | ContractUncheckedCreateWithoutQuoteInput[]
    connectOrCreate?: ContractCreateOrConnectWithoutQuoteInput | ContractCreateOrConnectWithoutQuoteInput[]
    createMany?: ContractCreateManyQuoteInputEnvelope
    connect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
  }

  export type PipelineCreateNestedManyWithoutQuoteInput = {
    create?: XOR<PipelineCreateWithoutQuoteInput, PipelineUncheckedCreateWithoutQuoteInput> | PipelineCreateWithoutQuoteInput[] | PipelineUncheckedCreateWithoutQuoteInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutQuoteInput | PipelineCreateOrConnectWithoutQuoteInput[]
    createMany?: PipelineCreateManyQuoteInputEnvelope
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutQuotesInput = {
    create?: XOR<ProductCreateWithoutQuotesInput, ProductUncheckedCreateWithoutQuotesInput> | ProductCreateWithoutQuotesInput[] | ProductUncheckedCreateWithoutQuotesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutQuotesInput | ProductCreateOrConnectWithoutQuotesInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ContractUncheckedCreateNestedManyWithoutQuoteInput = {
    create?: XOR<ContractCreateWithoutQuoteInput, ContractUncheckedCreateWithoutQuoteInput> | ContractCreateWithoutQuoteInput[] | ContractUncheckedCreateWithoutQuoteInput[]
    connectOrCreate?: ContractCreateOrConnectWithoutQuoteInput | ContractCreateOrConnectWithoutQuoteInput[]
    createMany?: ContractCreateManyQuoteInputEnvelope
    connect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
  }

  export type PipelineUncheckedCreateNestedManyWithoutQuoteInput = {
    create?: XOR<PipelineCreateWithoutQuoteInput, PipelineUncheckedCreateWithoutQuoteInput> | PipelineCreateWithoutQuoteInput[] | PipelineUncheckedCreateWithoutQuoteInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutQuoteInput | PipelineCreateOrConnectWithoutQuoteInput[]
    createMany?: PipelineCreateManyQuoteInputEnvelope
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type ProductUpdateManyWithoutQuotesNestedInput = {
    create?: XOR<ProductCreateWithoutQuotesInput, ProductUncheckedCreateWithoutQuotesInput> | ProductCreateWithoutQuotesInput[] | ProductUncheckedCreateWithoutQuotesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutQuotesInput | ProductCreateOrConnectWithoutQuotesInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutQuotesInput | ProductUpsertWithWhereUniqueWithoutQuotesInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutQuotesInput | ProductUpdateWithWhereUniqueWithoutQuotesInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutQuotesInput | ProductUpdateManyWithWhereWithoutQuotesInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ClientUpdateOneWithoutQuotesNestedInput = {
    create?: XOR<ClientCreateWithoutQuotesInput, ClientUncheckedCreateWithoutQuotesInput>
    connectOrCreate?: ClientCreateOrConnectWithoutQuotesInput
    upsert?: ClientUpsertWithoutQuotesInput
    disconnect?: ClientWhereInput | boolean
    delete?: ClientWhereInput | boolean
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutQuotesInput, ClientUpdateWithoutQuotesInput>, ClientUncheckedUpdateWithoutQuotesInput>
  }

  export type OpportunityUpdateOneWithoutQuotesNestedInput = {
    create?: XOR<OpportunityCreateWithoutQuotesInput, OpportunityUncheckedCreateWithoutQuotesInput>
    connectOrCreate?: OpportunityCreateOrConnectWithoutQuotesInput
    upsert?: OpportunityUpsertWithoutQuotesInput
    disconnect?: OpportunityWhereInput | boolean
    delete?: OpportunityWhereInput | boolean
    connect?: OpportunityWhereUniqueInput
    update?: XOR<XOR<OpportunityUpdateToOneWithWhereWithoutQuotesInput, OpportunityUpdateWithoutQuotesInput>, OpportunityUncheckedUpdateWithoutQuotesInput>
  }

  export type ContractUpdateManyWithoutQuoteNestedInput = {
    create?: XOR<ContractCreateWithoutQuoteInput, ContractUncheckedCreateWithoutQuoteInput> | ContractCreateWithoutQuoteInput[] | ContractUncheckedCreateWithoutQuoteInput[]
    connectOrCreate?: ContractCreateOrConnectWithoutQuoteInput | ContractCreateOrConnectWithoutQuoteInput[]
    upsert?: ContractUpsertWithWhereUniqueWithoutQuoteInput | ContractUpsertWithWhereUniqueWithoutQuoteInput[]
    createMany?: ContractCreateManyQuoteInputEnvelope
    set?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    disconnect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    delete?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    connect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    update?: ContractUpdateWithWhereUniqueWithoutQuoteInput | ContractUpdateWithWhereUniqueWithoutQuoteInput[]
    updateMany?: ContractUpdateManyWithWhereWithoutQuoteInput | ContractUpdateManyWithWhereWithoutQuoteInput[]
    deleteMany?: ContractScalarWhereInput | ContractScalarWhereInput[]
  }

  export type PipelineUpdateManyWithoutQuoteNestedInput = {
    create?: XOR<PipelineCreateWithoutQuoteInput, PipelineUncheckedCreateWithoutQuoteInput> | PipelineCreateWithoutQuoteInput[] | PipelineUncheckedCreateWithoutQuoteInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutQuoteInput | PipelineCreateOrConnectWithoutQuoteInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutQuoteInput | PipelineUpsertWithWhereUniqueWithoutQuoteInput[]
    createMany?: PipelineCreateManyQuoteInputEnvelope
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutQuoteInput | PipelineUpdateWithWhereUniqueWithoutQuoteInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutQuoteInput | PipelineUpdateManyWithWhereWithoutQuoteInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutQuotesNestedInput = {
    create?: XOR<ProductCreateWithoutQuotesInput, ProductUncheckedCreateWithoutQuotesInput> | ProductCreateWithoutQuotesInput[] | ProductUncheckedCreateWithoutQuotesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutQuotesInput | ProductCreateOrConnectWithoutQuotesInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutQuotesInput | ProductUpsertWithWhereUniqueWithoutQuotesInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutQuotesInput | ProductUpdateWithWhereUniqueWithoutQuotesInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutQuotesInput | ProductUpdateManyWithWhereWithoutQuotesInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ContractUncheckedUpdateManyWithoutQuoteNestedInput = {
    create?: XOR<ContractCreateWithoutQuoteInput, ContractUncheckedCreateWithoutQuoteInput> | ContractCreateWithoutQuoteInput[] | ContractUncheckedCreateWithoutQuoteInput[]
    connectOrCreate?: ContractCreateOrConnectWithoutQuoteInput | ContractCreateOrConnectWithoutQuoteInput[]
    upsert?: ContractUpsertWithWhereUniqueWithoutQuoteInput | ContractUpsertWithWhereUniqueWithoutQuoteInput[]
    createMany?: ContractCreateManyQuoteInputEnvelope
    set?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    disconnect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    delete?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    connect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    update?: ContractUpdateWithWhereUniqueWithoutQuoteInput | ContractUpdateWithWhereUniqueWithoutQuoteInput[]
    updateMany?: ContractUpdateManyWithWhereWithoutQuoteInput | ContractUpdateManyWithWhereWithoutQuoteInput[]
    deleteMany?: ContractScalarWhereInput | ContractScalarWhereInput[]
  }

  export type PipelineUncheckedUpdateManyWithoutQuoteNestedInput = {
    create?: XOR<PipelineCreateWithoutQuoteInput, PipelineUncheckedCreateWithoutQuoteInput> | PipelineCreateWithoutQuoteInput[] | PipelineUncheckedCreateWithoutQuoteInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutQuoteInput | PipelineCreateOrConnectWithoutQuoteInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutQuoteInput | PipelineUpsertWithWhereUniqueWithoutQuoteInput[]
    createMany?: PipelineCreateManyQuoteInputEnvelope
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutQuoteInput | PipelineUpdateWithWhereUniqueWithoutQuoteInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutQuoteInput | PipelineUpdateManyWithWhereWithoutQuoteInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type ProductCreateNestedManyWithoutContractsInput = {
    create?: XOR<ProductCreateWithoutContractsInput, ProductUncheckedCreateWithoutContractsInput> | ProductCreateWithoutContractsInput[] | ProductUncheckedCreateWithoutContractsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutContractsInput | ProductCreateOrConnectWithoutContractsInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ClientCreateNestedOneWithoutContractsInput = {
    create?: XOR<ClientCreateWithoutContractsInput, ClientUncheckedCreateWithoutContractsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutContractsInput
    connect?: ClientWhereUniqueInput
  }

  export type QuoteCreateNestedOneWithoutContractsInput = {
    create?: XOR<QuoteCreateWithoutContractsInput, QuoteUncheckedCreateWithoutContractsInput>
    connectOrCreate?: QuoteCreateOrConnectWithoutContractsInput
    connect?: QuoteWhereUniqueInput
  }

  export type ProjectCreateNestedOneWithoutContractInput = {
    create?: XOR<ProjectCreateWithoutContractInput, ProjectUncheckedCreateWithoutContractInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutContractInput
    connect?: ProjectWhereUniqueInput
  }

  export type PipelineCreateNestedManyWithoutContractInput = {
    create?: XOR<PipelineCreateWithoutContractInput, PipelineUncheckedCreateWithoutContractInput> | PipelineCreateWithoutContractInput[] | PipelineUncheckedCreateWithoutContractInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutContractInput | PipelineCreateOrConnectWithoutContractInput[]
    createMany?: PipelineCreateManyContractInputEnvelope
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutContractsInput = {
    create?: XOR<ProductCreateWithoutContractsInput, ProductUncheckedCreateWithoutContractsInput> | ProductCreateWithoutContractsInput[] | ProductUncheckedCreateWithoutContractsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutContractsInput | ProductCreateOrConnectWithoutContractsInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProjectUncheckedCreateNestedOneWithoutContractInput = {
    create?: XOR<ProjectCreateWithoutContractInput, ProjectUncheckedCreateWithoutContractInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutContractInput
    connect?: ProjectWhereUniqueInput
  }

  export type PipelineUncheckedCreateNestedManyWithoutContractInput = {
    create?: XOR<PipelineCreateWithoutContractInput, PipelineUncheckedCreateWithoutContractInput> | PipelineCreateWithoutContractInput[] | PipelineUncheckedCreateWithoutContractInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutContractInput | PipelineCreateOrConnectWithoutContractInput[]
    createMany?: PipelineCreateManyContractInputEnvelope
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type ProductUpdateManyWithoutContractsNestedInput = {
    create?: XOR<ProductCreateWithoutContractsInput, ProductUncheckedCreateWithoutContractsInput> | ProductCreateWithoutContractsInput[] | ProductUncheckedCreateWithoutContractsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutContractsInput | ProductCreateOrConnectWithoutContractsInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutContractsInput | ProductUpsertWithWhereUniqueWithoutContractsInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutContractsInput | ProductUpdateWithWhereUniqueWithoutContractsInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutContractsInput | ProductUpdateManyWithWhereWithoutContractsInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ClientUpdateOneWithoutContractsNestedInput = {
    create?: XOR<ClientCreateWithoutContractsInput, ClientUncheckedCreateWithoutContractsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutContractsInput
    upsert?: ClientUpsertWithoutContractsInput
    disconnect?: ClientWhereInput | boolean
    delete?: ClientWhereInput | boolean
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutContractsInput, ClientUpdateWithoutContractsInput>, ClientUncheckedUpdateWithoutContractsInput>
  }

  export type QuoteUpdateOneWithoutContractsNestedInput = {
    create?: XOR<QuoteCreateWithoutContractsInput, QuoteUncheckedCreateWithoutContractsInput>
    connectOrCreate?: QuoteCreateOrConnectWithoutContractsInput
    upsert?: QuoteUpsertWithoutContractsInput
    disconnect?: QuoteWhereInput | boolean
    delete?: QuoteWhereInput | boolean
    connect?: QuoteWhereUniqueInput
    update?: XOR<XOR<QuoteUpdateToOneWithWhereWithoutContractsInput, QuoteUpdateWithoutContractsInput>, QuoteUncheckedUpdateWithoutContractsInput>
  }

  export type ProjectUpdateOneWithoutContractNestedInput = {
    create?: XOR<ProjectCreateWithoutContractInput, ProjectUncheckedCreateWithoutContractInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutContractInput
    upsert?: ProjectUpsertWithoutContractInput
    disconnect?: ProjectWhereInput | boolean
    delete?: ProjectWhereInput | boolean
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutContractInput, ProjectUpdateWithoutContractInput>, ProjectUncheckedUpdateWithoutContractInput>
  }

  export type PipelineUpdateManyWithoutContractNestedInput = {
    create?: XOR<PipelineCreateWithoutContractInput, PipelineUncheckedCreateWithoutContractInput> | PipelineCreateWithoutContractInput[] | PipelineUncheckedCreateWithoutContractInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutContractInput | PipelineCreateOrConnectWithoutContractInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutContractInput | PipelineUpsertWithWhereUniqueWithoutContractInput[]
    createMany?: PipelineCreateManyContractInputEnvelope
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutContractInput | PipelineUpdateWithWhereUniqueWithoutContractInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutContractInput | PipelineUpdateManyWithWhereWithoutContractInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutContractsNestedInput = {
    create?: XOR<ProductCreateWithoutContractsInput, ProductUncheckedCreateWithoutContractsInput> | ProductCreateWithoutContractsInput[] | ProductUncheckedCreateWithoutContractsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutContractsInput | ProductCreateOrConnectWithoutContractsInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutContractsInput | ProductUpsertWithWhereUniqueWithoutContractsInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutContractsInput | ProductUpdateWithWhereUniqueWithoutContractsInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutContractsInput | ProductUpdateManyWithWhereWithoutContractsInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProjectUncheckedUpdateOneWithoutContractNestedInput = {
    create?: XOR<ProjectCreateWithoutContractInput, ProjectUncheckedCreateWithoutContractInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutContractInput
    upsert?: ProjectUpsertWithoutContractInput
    disconnect?: ProjectWhereInput | boolean
    delete?: ProjectWhereInput | boolean
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutContractInput, ProjectUpdateWithoutContractInput>, ProjectUncheckedUpdateWithoutContractInput>
  }

  export type PipelineUncheckedUpdateManyWithoutContractNestedInput = {
    create?: XOR<PipelineCreateWithoutContractInput, PipelineUncheckedCreateWithoutContractInput> | PipelineCreateWithoutContractInput[] | PipelineUncheckedCreateWithoutContractInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutContractInput | PipelineCreateOrConnectWithoutContractInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutContractInput | PipelineUpsertWithWhereUniqueWithoutContractInput[]
    createMany?: PipelineCreateManyContractInputEnvelope
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutContractInput | PipelineUpdateWithWhereUniqueWithoutContractInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutContractInput | PipelineUpdateManyWithWhereWithoutContractInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCreatorEventInput = {
    create?: XOR<UserCreateWithoutCreatorEventInput, UserUncheckedCreateWithoutCreatorEventInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorEventInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdaterEventInput = {
    create?: XOR<UserCreateWithoutUpdaterEventInput, UserUncheckedCreateWithoutUpdaterEventInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterEventInput
    connect?: UserWhereUniqueInput
  }

  export type PipelineCreateNestedOneWithoutEventsInput = {
    create?: XOR<PipelineCreateWithoutEventsInput, PipelineUncheckedCreateWithoutEventsInput>
    connectOrCreate?: PipelineCreateOrConnectWithoutEventsInput
    connect?: PipelineWhereUniqueInput
  }

  export type ProjectCreateNestedOneWithoutEventsInput = {
    create?: XOR<ProjectCreateWithoutEventsInput, ProjectUncheckedCreateWithoutEventsInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutEventsInput
    connect?: ProjectWhereUniqueInput
  }

  export type MilestoneCreateNestedOneWithoutEventsInput = {
    create?: XOR<MilestoneCreateWithoutEventsInput, MilestoneUncheckedCreateWithoutEventsInput>
    connectOrCreate?: MilestoneCreateOrConnectWithoutEventsInput
    connect?: MilestoneWhereUniqueInput
  }

  export type TaskCreateNestedOneWithoutEventsInput = {
    create?: XOR<TaskCreateWithoutEventsInput, TaskUncheckedCreateWithoutEventsInput>
    connectOrCreate?: TaskCreateOrConnectWithoutEventsInput
    connect?: TaskWhereUniqueInput
  }

  export type UserUpdateOneWithoutCreatorEventNestedInput = {
    create?: XOR<UserCreateWithoutCreatorEventInput, UserUncheckedCreateWithoutCreatorEventInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorEventInput
    upsert?: UserUpsertWithoutCreatorEventInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatorEventInput, UserUpdateWithoutCreatorEventInput>, UserUncheckedUpdateWithoutCreatorEventInput>
  }

  export type UserUpdateOneWithoutUpdaterEventNestedInput = {
    create?: XOR<UserCreateWithoutUpdaterEventInput, UserUncheckedCreateWithoutUpdaterEventInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterEventInput
    upsert?: UserUpsertWithoutUpdaterEventInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdaterEventInput, UserUpdateWithoutUpdaterEventInput>, UserUncheckedUpdateWithoutUpdaterEventInput>
  }

  export type PipelineUpdateOneWithoutEventsNestedInput = {
    create?: XOR<PipelineCreateWithoutEventsInput, PipelineUncheckedCreateWithoutEventsInput>
    connectOrCreate?: PipelineCreateOrConnectWithoutEventsInput
    upsert?: PipelineUpsertWithoutEventsInput
    disconnect?: PipelineWhereInput | boolean
    delete?: PipelineWhereInput | boolean
    connect?: PipelineWhereUniqueInput
    update?: XOR<XOR<PipelineUpdateToOneWithWhereWithoutEventsInput, PipelineUpdateWithoutEventsInput>, PipelineUncheckedUpdateWithoutEventsInput>
  }

  export type ProjectUpdateOneWithoutEventsNestedInput = {
    create?: XOR<ProjectCreateWithoutEventsInput, ProjectUncheckedCreateWithoutEventsInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutEventsInput
    upsert?: ProjectUpsertWithoutEventsInput
    disconnect?: ProjectWhereInput | boolean
    delete?: ProjectWhereInput | boolean
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutEventsInput, ProjectUpdateWithoutEventsInput>, ProjectUncheckedUpdateWithoutEventsInput>
  }

  export type MilestoneUpdateOneWithoutEventsNestedInput = {
    create?: XOR<MilestoneCreateWithoutEventsInput, MilestoneUncheckedCreateWithoutEventsInput>
    connectOrCreate?: MilestoneCreateOrConnectWithoutEventsInput
    upsert?: MilestoneUpsertWithoutEventsInput
    disconnect?: MilestoneWhereInput | boolean
    delete?: MilestoneWhereInput | boolean
    connect?: MilestoneWhereUniqueInput
    update?: XOR<XOR<MilestoneUpdateToOneWithWhereWithoutEventsInput, MilestoneUpdateWithoutEventsInput>, MilestoneUncheckedUpdateWithoutEventsInput>
  }

  export type TaskUpdateOneWithoutEventsNestedInput = {
    create?: XOR<TaskCreateWithoutEventsInput, TaskUncheckedCreateWithoutEventsInput>
    connectOrCreate?: TaskCreateOrConnectWithoutEventsInput
    upsert?: TaskUpsertWithoutEventsInput
    disconnect?: TaskWhereInput | boolean
    delete?: TaskWhereInput | boolean
    connect?: TaskWhereUniqueInput
    update?: XOR<XOR<TaskUpdateToOneWithWhereWithoutEventsInput, TaskUpdateWithoutEventsInput>, TaskUncheckedUpdateWithoutEventsInput>
  }

  export type UserCreateNestedOneWithoutCreatorNoteInput = {
    create?: XOR<UserCreateWithoutCreatorNoteInput, UserUncheckedCreateWithoutCreatorNoteInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorNoteInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdaterNoteInput = {
    create?: XOR<UserCreateWithoutUpdaterNoteInput, UserUncheckedCreateWithoutUpdaterNoteInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterNoteInput
    connect?: UserWhereUniqueInput
  }

  export type PipelineCreateNestedOneWithoutNotesInput = {
    create?: XOR<PipelineCreateWithoutNotesInput, PipelineUncheckedCreateWithoutNotesInput>
    connectOrCreate?: PipelineCreateOrConnectWithoutNotesInput
    connect?: PipelineWhereUniqueInput
  }

  export type ProjectCreateNestedOneWithoutNotesInput = {
    create?: XOR<ProjectCreateWithoutNotesInput, ProjectUncheckedCreateWithoutNotesInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutNotesInput
    connect?: ProjectWhereUniqueInput
  }

  export type MilestoneCreateNestedOneWithoutNotesInput = {
    create?: XOR<MilestoneCreateWithoutNotesInput, MilestoneUncheckedCreateWithoutNotesInput>
    connectOrCreate?: MilestoneCreateOrConnectWithoutNotesInput
    connect?: MilestoneWhereUniqueInput
  }

  export type TaskCreateNestedOneWithoutNotesInput = {
    create?: XOR<TaskCreateWithoutNotesInput, TaskUncheckedCreateWithoutNotesInput>
    connectOrCreate?: TaskCreateOrConnectWithoutNotesInput
    connect?: TaskWhereUniqueInput
  }

  export type BudgetCreateNestedOneWithoutNotesInput = {
    create?: XOR<BudgetCreateWithoutNotesInput, BudgetUncheckedCreateWithoutNotesInput>
    connectOrCreate?: BudgetCreateOrConnectWithoutNotesInput
    connect?: BudgetWhereUniqueInput
  }

  export type FundCreateNestedOneWithoutNotesInput = {
    create?: XOR<FundCreateWithoutNotesInput, FundUncheckedCreateWithoutNotesInput>
    connectOrCreate?: FundCreateOrConnectWithoutNotesInput
    connect?: FundWhereUniqueInput
  }

  export type ExpenseCreateNestedOneWithoutNotesInput = {
    create?: XOR<ExpenseCreateWithoutNotesInput, ExpenseUncheckedCreateWithoutNotesInput>
    connectOrCreate?: ExpenseCreateOrConnectWithoutNotesInput
    connect?: ExpenseWhereUniqueInput
  }

  export type ClientCreateNestedOneWithoutNotesInput = {
    create?: XOR<ClientCreateWithoutNotesInput, ClientUncheckedCreateWithoutNotesInput>
    connectOrCreate?: ClientCreateOrConnectWithoutNotesInput
    connect?: ClientWhereUniqueInput
  }

  export type VendorCreateNestedOneWithoutNotesInput = {
    create?: XOR<VendorCreateWithoutNotesInput, VendorUncheckedCreateWithoutNotesInput>
    connectOrCreate?: VendorCreateOrConnectWithoutNotesInput
    connect?: VendorWhereUniqueInput
  }

  export type UserUpdateOneWithoutCreatorNoteNestedInput = {
    create?: XOR<UserCreateWithoutCreatorNoteInput, UserUncheckedCreateWithoutCreatorNoteInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorNoteInput
    upsert?: UserUpsertWithoutCreatorNoteInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatorNoteInput, UserUpdateWithoutCreatorNoteInput>, UserUncheckedUpdateWithoutCreatorNoteInput>
  }

  export type UserUpdateOneWithoutUpdaterNoteNestedInput = {
    create?: XOR<UserCreateWithoutUpdaterNoteInput, UserUncheckedCreateWithoutUpdaterNoteInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterNoteInput
    upsert?: UserUpsertWithoutUpdaterNoteInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdaterNoteInput, UserUpdateWithoutUpdaterNoteInput>, UserUncheckedUpdateWithoutUpdaterNoteInput>
  }

  export type PipelineUpdateOneWithoutNotesNestedInput = {
    create?: XOR<PipelineCreateWithoutNotesInput, PipelineUncheckedCreateWithoutNotesInput>
    connectOrCreate?: PipelineCreateOrConnectWithoutNotesInput
    upsert?: PipelineUpsertWithoutNotesInput
    disconnect?: PipelineWhereInput | boolean
    delete?: PipelineWhereInput | boolean
    connect?: PipelineWhereUniqueInput
    update?: XOR<XOR<PipelineUpdateToOneWithWhereWithoutNotesInput, PipelineUpdateWithoutNotesInput>, PipelineUncheckedUpdateWithoutNotesInput>
  }

  export type ProjectUpdateOneWithoutNotesNestedInput = {
    create?: XOR<ProjectCreateWithoutNotesInput, ProjectUncheckedCreateWithoutNotesInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutNotesInput
    upsert?: ProjectUpsertWithoutNotesInput
    disconnect?: ProjectWhereInput | boolean
    delete?: ProjectWhereInput | boolean
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutNotesInput, ProjectUpdateWithoutNotesInput>, ProjectUncheckedUpdateWithoutNotesInput>
  }

  export type MilestoneUpdateOneWithoutNotesNestedInput = {
    create?: XOR<MilestoneCreateWithoutNotesInput, MilestoneUncheckedCreateWithoutNotesInput>
    connectOrCreate?: MilestoneCreateOrConnectWithoutNotesInput
    upsert?: MilestoneUpsertWithoutNotesInput
    disconnect?: MilestoneWhereInput | boolean
    delete?: MilestoneWhereInput | boolean
    connect?: MilestoneWhereUniqueInput
    update?: XOR<XOR<MilestoneUpdateToOneWithWhereWithoutNotesInput, MilestoneUpdateWithoutNotesInput>, MilestoneUncheckedUpdateWithoutNotesInput>
  }

  export type TaskUpdateOneWithoutNotesNestedInput = {
    create?: XOR<TaskCreateWithoutNotesInput, TaskUncheckedCreateWithoutNotesInput>
    connectOrCreate?: TaskCreateOrConnectWithoutNotesInput
    upsert?: TaskUpsertWithoutNotesInput
    disconnect?: TaskWhereInput | boolean
    delete?: TaskWhereInput | boolean
    connect?: TaskWhereUniqueInput
    update?: XOR<XOR<TaskUpdateToOneWithWhereWithoutNotesInput, TaskUpdateWithoutNotesInput>, TaskUncheckedUpdateWithoutNotesInput>
  }

  export type BudgetUpdateOneWithoutNotesNestedInput = {
    create?: XOR<BudgetCreateWithoutNotesInput, BudgetUncheckedCreateWithoutNotesInput>
    connectOrCreate?: BudgetCreateOrConnectWithoutNotesInput
    upsert?: BudgetUpsertWithoutNotesInput
    disconnect?: BudgetWhereInput | boolean
    delete?: BudgetWhereInput | boolean
    connect?: BudgetWhereUniqueInput
    update?: XOR<XOR<BudgetUpdateToOneWithWhereWithoutNotesInput, BudgetUpdateWithoutNotesInput>, BudgetUncheckedUpdateWithoutNotesInput>
  }

  export type FundUpdateOneWithoutNotesNestedInput = {
    create?: XOR<FundCreateWithoutNotesInput, FundUncheckedCreateWithoutNotesInput>
    connectOrCreate?: FundCreateOrConnectWithoutNotesInput
    upsert?: FundUpsertWithoutNotesInput
    disconnect?: FundWhereInput | boolean
    delete?: FundWhereInput | boolean
    connect?: FundWhereUniqueInput
    update?: XOR<XOR<FundUpdateToOneWithWhereWithoutNotesInput, FundUpdateWithoutNotesInput>, FundUncheckedUpdateWithoutNotesInput>
  }

  export type ExpenseUpdateOneWithoutNotesNestedInput = {
    create?: XOR<ExpenseCreateWithoutNotesInput, ExpenseUncheckedCreateWithoutNotesInput>
    connectOrCreate?: ExpenseCreateOrConnectWithoutNotesInput
    upsert?: ExpenseUpsertWithoutNotesInput
    disconnect?: ExpenseWhereInput | boolean
    delete?: ExpenseWhereInput | boolean
    connect?: ExpenseWhereUniqueInput
    update?: XOR<XOR<ExpenseUpdateToOneWithWhereWithoutNotesInput, ExpenseUpdateWithoutNotesInput>, ExpenseUncheckedUpdateWithoutNotesInput>
  }

  export type ClientUpdateOneWithoutNotesNestedInput = {
    create?: XOR<ClientCreateWithoutNotesInput, ClientUncheckedCreateWithoutNotesInput>
    connectOrCreate?: ClientCreateOrConnectWithoutNotesInput
    upsert?: ClientUpsertWithoutNotesInput
    disconnect?: ClientWhereInput | boolean
    delete?: ClientWhereInput | boolean
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutNotesInput, ClientUpdateWithoutNotesInput>, ClientUncheckedUpdateWithoutNotesInput>
  }

  export type VendorUpdateOneWithoutNotesNestedInput = {
    create?: XOR<VendorCreateWithoutNotesInput, VendorUncheckedCreateWithoutNotesInput>
    connectOrCreate?: VendorCreateOrConnectWithoutNotesInput
    upsert?: VendorUpsertWithoutNotesInput
    disconnect?: VendorWhereInput | boolean
    delete?: VendorWhereInput | boolean
    connect?: VendorWhereUniqueInput
    update?: XOR<XOR<VendorUpdateToOneWithWhereWithoutNotesInput, VendorUpdateWithoutNotesInput>, VendorUncheckedUpdateWithoutNotesInput>
  }

  export type StageTypeCreateNestedOneWithoutStagesInput = {
    create?: XOR<StageTypeCreateWithoutStagesInput, StageTypeUncheckedCreateWithoutStagesInput>
    connectOrCreate?: StageTypeCreateOrConnectWithoutStagesInput
    connect?: StageTypeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatorStageInput = {
    create?: XOR<UserCreateWithoutCreatorStageInput, UserUncheckedCreateWithoutCreatorStageInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorStageInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdaterStageInput = {
    create?: XOR<UserCreateWithoutUpdaterStageInput, UserUncheckedCreateWithoutUpdaterStageInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterStageInput
    connect?: UserWhereUniqueInput
  }

  export type PipelineCreateNestedOneWithoutStagesInput = {
    create?: XOR<PipelineCreateWithoutStagesInput, PipelineUncheckedCreateWithoutStagesInput>
    connectOrCreate?: PipelineCreateOrConnectWithoutStagesInput
    connect?: PipelineWhereUniqueInput
  }

  export type ProjectCreateNestedOneWithoutStagesInput = {
    create?: XOR<ProjectCreateWithoutStagesInput, ProjectUncheckedCreateWithoutStagesInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutStagesInput
    connect?: ProjectWhereUniqueInput
  }

  export type MilestoneCreateNestedOneWithoutStagesInput = {
    create?: XOR<MilestoneCreateWithoutStagesInput, MilestoneUncheckedCreateWithoutStagesInput>
    connectOrCreate?: MilestoneCreateOrConnectWithoutStagesInput
    connect?: MilestoneWhereUniqueInput
  }

  export type TaskCreateNestedOneWithoutStagesInput = {
    create?: XOR<TaskCreateWithoutStagesInput, TaskUncheckedCreateWithoutStagesInput>
    connectOrCreate?: TaskCreateOrConnectWithoutStagesInput
    connect?: TaskWhereUniqueInput
  }

  export type BudgetCreateNestedOneWithoutStagesInput = {
    create?: XOR<BudgetCreateWithoutStagesInput, BudgetUncheckedCreateWithoutStagesInput>
    connectOrCreate?: BudgetCreateOrConnectWithoutStagesInput
    connect?: BudgetWhereUniqueInput
  }

  export type FundCreateNestedOneWithoutStagesInput = {
    create?: XOR<FundCreateWithoutStagesInput, FundUncheckedCreateWithoutStagesInput>
    connectOrCreate?: FundCreateOrConnectWithoutStagesInput
    connect?: FundWhereUniqueInput
  }

  export type StageTypeUpdateOneRequiredWithoutStagesNestedInput = {
    create?: XOR<StageTypeCreateWithoutStagesInput, StageTypeUncheckedCreateWithoutStagesInput>
    connectOrCreate?: StageTypeCreateOrConnectWithoutStagesInput
    upsert?: StageTypeUpsertWithoutStagesInput
    connect?: StageTypeWhereUniqueInput
    update?: XOR<XOR<StageTypeUpdateToOneWithWhereWithoutStagesInput, StageTypeUpdateWithoutStagesInput>, StageTypeUncheckedUpdateWithoutStagesInput>
  }

  export type UserUpdateOneWithoutCreatorStageNestedInput = {
    create?: XOR<UserCreateWithoutCreatorStageInput, UserUncheckedCreateWithoutCreatorStageInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorStageInput
    upsert?: UserUpsertWithoutCreatorStageInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatorStageInput, UserUpdateWithoutCreatorStageInput>, UserUncheckedUpdateWithoutCreatorStageInput>
  }

  export type UserUpdateOneWithoutUpdaterStageNestedInput = {
    create?: XOR<UserCreateWithoutUpdaterStageInput, UserUncheckedCreateWithoutUpdaterStageInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterStageInput
    upsert?: UserUpsertWithoutUpdaterStageInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdaterStageInput, UserUpdateWithoutUpdaterStageInput>, UserUncheckedUpdateWithoutUpdaterStageInput>
  }

  export type PipelineUpdateOneWithoutStagesNestedInput = {
    create?: XOR<PipelineCreateWithoutStagesInput, PipelineUncheckedCreateWithoutStagesInput>
    connectOrCreate?: PipelineCreateOrConnectWithoutStagesInput
    upsert?: PipelineUpsertWithoutStagesInput
    disconnect?: PipelineWhereInput | boolean
    delete?: PipelineWhereInput | boolean
    connect?: PipelineWhereUniqueInput
    update?: XOR<XOR<PipelineUpdateToOneWithWhereWithoutStagesInput, PipelineUpdateWithoutStagesInput>, PipelineUncheckedUpdateWithoutStagesInput>
  }

  export type ProjectUpdateOneWithoutStagesNestedInput = {
    create?: XOR<ProjectCreateWithoutStagesInput, ProjectUncheckedCreateWithoutStagesInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutStagesInput
    upsert?: ProjectUpsertWithoutStagesInput
    disconnect?: ProjectWhereInput | boolean
    delete?: ProjectWhereInput | boolean
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutStagesInput, ProjectUpdateWithoutStagesInput>, ProjectUncheckedUpdateWithoutStagesInput>
  }

  export type MilestoneUpdateOneWithoutStagesNestedInput = {
    create?: XOR<MilestoneCreateWithoutStagesInput, MilestoneUncheckedCreateWithoutStagesInput>
    connectOrCreate?: MilestoneCreateOrConnectWithoutStagesInput
    upsert?: MilestoneUpsertWithoutStagesInput
    disconnect?: MilestoneWhereInput | boolean
    delete?: MilestoneWhereInput | boolean
    connect?: MilestoneWhereUniqueInput
    update?: XOR<XOR<MilestoneUpdateToOneWithWhereWithoutStagesInput, MilestoneUpdateWithoutStagesInput>, MilestoneUncheckedUpdateWithoutStagesInput>
  }

  export type TaskUpdateOneWithoutStagesNestedInput = {
    create?: XOR<TaskCreateWithoutStagesInput, TaskUncheckedCreateWithoutStagesInput>
    connectOrCreate?: TaskCreateOrConnectWithoutStagesInput
    upsert?: TaskUpsertWithoutStagesInput
    disconnect?: TaskWhereInput | boolean
    delete?: TaskWhereInput | boolean
    connect?: TaskWhereUniqueInput
    update?: XOR<XOR<TaskUpdateToOneWithWhereWithoutStagesInput, TaskUpdateWithoutStagesInput>, TaskUncheckedUpdateWithoutStagesInput>
  }

  export type BudgetUpdateOneWithoutStagesNestedInput = {
    create?: XOR<BudgetCreateWithoutStagesInput, BudgetUncheckedCreateWithoutStagesInput>
    connectOrCreate?: BudgetCreateOrConnectWithoutStagesInput
    upsert?: BudgetUpsertWithoutStagesInput
    disconnect?: BudgetWhereInput | boolean
    delete?: BudgetWhereInput | boolean
    connect?: BudgetWhereUniqueInput
    update?: XOR<XOR<BudgetUpdateToOneWithWhereWithoutStagesInput, BudgetUpdateWithoutStagesInput>, BudgetUncheckedUpdateWithoutStagesInput>
  }

  export type FundUpdateOneWithoutStagesNestedInput = {
    create?: XOR<FundCreateWithoutStagesInput, FundUncheckedCreateWithoutStagesInput>
    connectOrCreate?: FundCreateOrConnectWithoutStagesInput
    upsert?: FundUpsertWithoutStagesInput
    disconnect?: FundWhereInput | boolean
    delete?: FundWhereInput | boolean
    connect?: FundWhereUniqueInput
    update?: XOR<XOR<FundUpdateToOneWithWhereWithoutStagesInput, FundUpdateWithoutStagesInput>, FundUncheckedUpdateWithoutStagesInput>
  }

  export type StageCreateNestedManyWithoutTypeInput = {
    create?: XOR<StageCreateWithoutTypeInput, StageUncheckedCreateWithoutTypeInput> | StageCreateWithoutTypeInput[] | StageUncheckedCreateWithoutTypeInput[]
    connectOrCreate?: StageCreateOrConnectWithoutTypeInput | StageCreateOrConnectWithoutTypeInput[]
    createMany?: StageCreateManyTypeInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type StageUncheckedCreateNestedManyWithoutTypeInput = {
    create?: XOR<StageCreateWithoutTypeInput, StageUncheckedCreateWithoutTypeInput> | StageCreateWithoutTypeInput[] | StageUncheckedCreateWithoutTypeInput[]
    connectOrCreate?: StageCreateOrConnectWithoutTypeInput | StageCreateOrConnectWithoutTypeInput[]
    createMany?: StageCreateManyTypeInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type StageUpdateManyWithoutTypeNestedInput = {
    create?: XOR<StageCreateWithoutTypeInput, StageUncheckedCreateWithoutTypeInput> | StageCreateWithoutTypeInput[] | StageUncheckedCreateWithoutTypeInput[]
    connectOrCreate?: StageCreateOrConnectWithoutTypeInput | StageCreateOrConnectWithoutTypeInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutTypeInput | StageUpsertWithWhereUniqueWithoutTypeInput[]
    createMany?: StageCreateManyTypeInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutTypeInput | StageUpdateWithWhereUniqueWithoutTypeInput[]
    updateMany?: StageUpdateManyWithWhereWithoutTypeInput | StageUpdateManyWithWhereWithoutTypeInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type StageUncheckedUpdateManyWithoutTypeNestedInput = {
    create?: XOR<StageCreateWithoutTypeInput, StageUncheckedCreateWithoutTypeInput> | StageCreateWithoutTypeInput[] | StageUncheckedCreateWithoutTypeInput[]
    connectOrCreate?: StageCreateOrConnectWithoutTypeInput | StageCreateOrConnectWithoutTypeInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutTypeInput | StageUpsertWithWhereUniqueWithoutTypeInput[]
    createMany?: StageCreateManyTypeInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutTypeInput | StageUpdateWithWhereUniqueWithoutTypeInput[]
    updateMany?: StageUpdateManyWithWhereWithoutTypeInput | StageUpdateManyWithWhereWithoutTypeInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCreatorClientInput = {
    create?: XOR<UserCreateWithoutCreatorClientInput, UserUncheckedCreateWithoutCreatorClientInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorClientInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdaterClientInput = {
    create?: XOR<UserCreateWithoutUpdaterClientInput, UserUncheckedCreateWithoutUpdaterClientInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterClientInput
    connect?: UserWhereUniqueInput
  }

  export type NoteCreateNestedManyWithoutClientInput = {
    create?: XOR<NoteCreateWithoutClientInput, NoteUncheckedCreateWithoutClientInput> | NoteCreateWithoutClientInput[] | NoteUncheckedCreateWithoutClientInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutClientInput | NoteCreateOrConnectWithoutClientInput[]
    createMany?: NoteCreateManyClientInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type LeadCreateNestedManyWithoutClientInput = {
    create?: XOR<LeadCreateWithoutClientInput, LeadUncheckedCreateWithoutClientInput> | LeadCreateWithoutClientInput[] | LeadUncheckedCreateWithoutClientInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutClientInput | LeadCreateOrConnectWithoutClientInput[]
    createMany?: LeadCreateManyClientInputEnvelope
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
  }

  export type OpportunityCreateNestedManyWithoutClientInput = {
    create?: XOR<OpportunityCreateWithoutClientInput, OpportunityUncheckedCreateWithoutClientInput> | OpportunityCreateWithoutClientInput[] | OpportunityUncheckedCreateWithoutClientInput[]
    connectOrCreate?: OpportunityCreateOrConnectWithoutClientInput | OpportunityCreateOrConnectWithoutClientInput[]
    createMany?: OpportunityCreateManyClientInputEnvelope
    connect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
  }

  export type QuoteCreateNestedManyWithoutClientInput = {
    create?: XOR<QuoteCreateWithoutClientInput, QuoteUncheckedCreateWithoutClientInput> | QuoteCreateWithoutClientInput[] | QuoteUncheckedCreateWithoutClientInput[]
    connectOrCreate?: QuoteCreateOrConnectWithoutClientInput | QuoteCreateOrConnectWithoutClientInput[]
    createMany?: QuoteCreateManyClientInputEnvelope
    connect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
  }

  export type ContractCreateNestedManyWithoutClientInput = {
    create?: XOR<ContractCreateWithoutClientInput, ContractUncheckedCreateWithoutClientInput> | ContractCreateWithoutClientInput[] | ContractUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ContractCreateOrConnectWithoutClientInput | ContractCreateOrConnectWithoutClientInput[]
    createMany?: ContractCreateManyClientInputEnvelope
    connect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<NoteCreateWithoutClientInput, NoteUncheckedCreateWithoutClientInput> | NoteCreateWithoutClientInput[] | NoteUncheckedCreateWithoutClientInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutClientInput | NoteCreateOrConnectWithoutClientInput[]
    createMany?: NoteCreateManyClientInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type LeadUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<LeadCreateWithoutClientInput, LeadUncheckedCreateWithoutClientInput> | LeadCreateWithoutClientInput[] | LeadUncheckedCreateWithoutClientInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutClientInput | LeadCreateOrConnectWithoutClientInput[]
    createMany?: LeadCreateManyClientInputEnvelope
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
  }

  export type OpportunityUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<OpportunityCreateWithoutClientInput, OpportunityUncheckedCreateWithoutClientInput> | OpportunityCreateWithoutClientInput[] | OpportunityUncheckedCreateWithoutClientInput[]
    connectOrCreate?: OpportunityCreateOrConnectWithoutClientInput | OpportunityCreateOrConnectWithoutClientInput[]
    createMany?: OpportunityCreateManyClientInputEnvelope
    connect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
  }

  export type QuoteUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<QuoteCreateWithoutClientInput, QuoteUncheckedCreateWithoutClientInput> | QuoteCreateWithoutClientInput[] | QuoteUncheckedCreateWithoutClientInput[]
    connectOrCreate?: QuoteCreateOrConnectWithoutClientInput | QuoteCreateOrConnectWithoutClientInput[]
    createMany?: QuoteCreateManyClientInputEnvelope
    connect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
  }

  export type ContractUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<ContractCreateWithoutClientInput, ContractUncheckedCreateWithoutClientInput> | ContractCreateWithoutClientInput[] | ContractUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ContractCreateOrConnectWithoutClientInput | ContractCreateOrConnectWithoutClientInput[]
    createMany?: ContractCreateManyClientInputEnvelope
    connect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type UserUpdateOneWithoutCreatorClientNestedInput = {
    create?: XOR<UserCreateWithoutCreatorClientInput, UserUncheckedCreateWithoutCreatorClientInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorClientInput
    upsert?: UserUpsertWithoutCreatorClientInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatorClientInput, UserUpdateWithoutCreatorClientInput>, UserUncheckedUpdateWithoutCreatorClientInput>
  }

  export type UserUpdateOneWithoutUpdaterClientNestedInput = {
    create?: XOR<UserCreateWithoutUpdaterClientInput, UserUncheckedCreateWithoutUpdaterClientInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterClientInput
    upsert?: UserUpsertWithoutUpdaterClientInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdaterClientInput, UserUpdateWithoutUpdaterClientInput>, UserUncheckedUpdateWithoutUpdaterClientInput>
  }

  export type NoteUpdateManyWithoutClientNestedInput = {
    create?: XOR<NoteCreateWithoutClientInput, NoteUncheckedCreateWithoutClientInput> | NoteCreateWithoutClientInput[] | NoteUncheckedCreateWithoutClientInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutClientInput | NoteCreateOrConnectWithoutClientInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutClientInput | NoteUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: NoteCreateManyClientInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutClientInput | NoteUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutClientInput | NoteUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type LeadUpdateManyWithoutClientNestedInput = {
    create?: XOR<LeadCreateWithoutClientInput, LeadUncheckedCreateWithoutClientInput> | LeadCreateWithoutClientInput[] | LeadUncheckedCreateWithoutClientInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutClientInput | LeadCreateOrConnectWithoutClientInput[]
    upsert?: LeadUpsertWithWhereUniqueWithoutClientInput | LeadUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: LeadCreateManyClientInputEnvelope
    set?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    disconnect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    delete?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    update?: LeadUpdateWithWhereUniqueWithoutClientInput | LeadUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: LeadUpdateManyWithWhereWithoutClientInput | LeadUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: LeadScalarWhereInput | LeadScalarWhereInput[]
  }

  export type OpportunityUpdateManyWithoutClientNestedInput = {
    create?: XOR<OpportunityCreateWithoutClientInput, OpportunityUncheckedCreateWithoutClientInput> | OpportunityCreateWithoutClientInput[] | OpportunityUncheckedCreateWithoutClientInput[]
    connectOrCreate?: OpportunityCreateOrConnectWithoutClientInput | OpportunityCreateOrConnectWithoutClientInput[]
    upsert?: OpportunityUpsertWithWhereUniqueWithoutClientInput | OpportunityUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: OpportunityCreateManyClientInputEnvelope
    set?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    disconnect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    delete?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    connect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    update?: OpportunityUpdateWithWhereUniqueWithoutClientInput | OpportunityUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: OpportunityUpdateManyWithWhereWithoutClientInput | OpportunityUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: OpportunityScalarWhereInput | OpportunityScalarWhereInput[]
  }

  export type QuoteUpdateManyWithoutClientNestedInput = {
    create?: XOR<QuoteCreateWithoutClientInput, QuoteUncheckedCreateWithoutClientInput> | QuoteCreateWithoutClientInput[] | QuoteUncheckedCreateWithoutClientInput[]
    connectOrCreate?: QuoteCreateOrConnectWithoutClientInput | QuoteCreateOrConnectWithoutClientInput[]
    upsert?: QuoteUpsertWithWhereUniqueWithoutClientInput | QuoteUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: QuoteCreateManyClientInputEnvelope
    set?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    disconnect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    delete?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    connect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    update?: QuoteUpdateWithWhereUniqueWithoutClientInput | QuoteUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: QuoteUpdateManyWithWhereWithoutClientInput | QuoteUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: QuoteScalarWhereInput | QuoteScalarWhereInput[]
  }

  export type ContractUpdateManyWithoutClientNestedInput = {
    create?: XOR<ContractCreateWithoutClientInput, ContractUncheckedCreateWithoutClientInput> | ContractCreateWithoutClientInput[] | ContractUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ContractCreateOrConnectWithoutClientInput | ContractCreateOrConnectWithoutClientInput[]
    upsert?: ContractUpsertWithWhereUniqueWithoutClientInput | ContractUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ContractCreateManyClientInputEnvelope
    set?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    disconnect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    delete?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    connect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    update?: ContractUpdateWithWhereUniqueWithoutClientInput | ContractUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ContractUpdateManyWithWhereWithoutClientInput | ContractUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ContractScalarWhereInput | ContractScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<NoteCreateWithoutClientInput, NoteUncheckedCreateWithoutClientInput> | NoteCreateWithoutClientInput[] | NoteUncheckedCreateWithoutClientInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutClientInput | NoteCreateOrConnectWithoutClientInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutClientInput | NoteUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: NoteCreateManyClientInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutClientInput | NoteUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutClientInput | NoteUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type LeadUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<LeadCreateWithoutClientInput, LeadUncheckedCreateWithoutClientInput> | LeadCreateWithoutClientInput[] | LeadUncheckedCreateWithoutClientInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutClientInput | LeadCreateOrConnectWithoutClientInput[]
    upsert?: LeadUpsertWithWhereUniqueWithoutClientInput | LeadUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: LeadCreateManyClientInputEnvelope
    set?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    disconnect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    delete?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    update?: LeadUpdateWithWhereUniqueWithoutClientInput | LeadUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: LeadUpdateManyWithWhereWithoutClientInput | LeadUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: LeadScalarWhereInput | LeadScalarWhereInput[]
  }

  export type OpportunityUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<OpportunityCreateWithoutClientInput, OpportunityUncheckedCreateWithoutClientInput> | OpportunityCreateWithoutClientInput[] | OpportunityUncheckedCreateWithoutClientInput[]
    connectOrCreate?: OpportunityCreateOrConnectWithoutClientInput | OpportunityCreateOrConnectWithoutClientInput[]
    upsert?: OpportunityUpsertWithWhereUniqueWithoutClientInput | OpportunityUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: OpportunityCreateManyClientInputEnvelope
    set?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    disconnect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    delete?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    connect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    update?: OpportunityUpdateWithWhereUniqueWithoutClientInput | OpportunityUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: OpportunityUpdateManyWithWhereWithoutClientInput | OpportunityUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: OpportunityScalarWhereInput | OpportunityScalarWhereInput[]
  }

  export type QuoteUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<QuoteCreateWithoutClientInput, QuoteUncheckedCreateWithoutClientInput> | QuoteCreateWithoutClientInput[] | QuoteUncheckedCreateWithoutClientInput[]
    connectOrCreate?: QuoteCreateOrConnectWithoutClientInput | QuoteCreateOrConnectWithoutClientInput[]
    upsert?: QuoteUpsertWithWhereUniqueWithoutClientInput | QuoteUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: QuoteCreateManyClientInputEnvelope
    set?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    disconnect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    delete?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    connect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    update?: QuoteUpdateWithWhereUniqueWithoutClientInput | QuoteUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: QuoteUpdateManyWithWhereWithoutClientInput | QuoteUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: QuoteScalarWhereInput | QuoteScalarWhereInput[]
  }

  export type ContractUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<ContractCreateWithoutClientInput, ContractUncheckedCreateWithoutClientInput> | ContractCreateWithoutClientInput[] | ContractUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ContractCreateOrConnectWithoutClientInput | ContractCreateOrConnectWithoutClientInput[]
    upsert?: ContractUpsertWithWhereUniqueWithoutClientInput | ContractUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ContractCreateManyClientInputEnvelope
    set?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    disconnect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    delete?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    connect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    update?: ContractUpdateWithWhereUniqueWithoutClientInput | ContractUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ContractUpdateManyWithWhereWithoutClientInput | ContractUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ContractScalarWhereInput | ContractScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCreatorVendorInput = {
    create?: XOR<UserCreateWithoutCreatorVendorInput, UserUncheckedCreateWithoutCreatorVendorInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorVendorInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdaterVendorInput = {
    create?: XOR<UserCreateWithoutUpdaterVendorInput, UserUncheckedCreateWithoutUpdaterVendorInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterVendorInput
    connect?: UserWhereUniqueInput
  }

  export type NoteCreateNestedManyWithoutVendorInput = {
    create?: XOR<NoteCreateWithoutVendorInput, NoteUncheckedCreateWithoutVendorInput> | NoteCreateWithoutVendorInput[] | NoteUncheckedCreateWithoutVendorInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutVendorInput | NoteCreateOrConnectWithoutVendorInput[]
    createMany?: NoteCreateManyVendorInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutVendorInput = {
    create?: XOR<NoteCreateWithoutVendorInput, NoteUncheckedCreateWithoutVendorInput> | NoteCreateWithoutVendorInput[] | NoteUncheckedCreateWithoutVendorInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutVendorInput | NoteCreateOrConnectWithoutVendorInput[]
    createMany?: NoteCreateManyVendorInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutCreatorVendorNestedInput = {
    create?: XOR<UserCreateWithoutCreatorVendorInput, UserUncheckedCreateWithoutCreatorVendorInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorVendorInput
    upsert?: UserUpsertWithoutCreatorVendorInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatorVendorInput, UserUpdateWithoutCreatorVendorInput>, UserUncheckedUpdateWithoutCreatorVendorInput>
  }

  export type UserUpdateOneWithoutUpdaterVendorNestedInput = {
    create?: XOR<UserCreateWithoutUpdaterVendorInput, UserUncheckedCreateWithoutUpdaterVendorInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterVendorInput
    upsert?: UserUpsertWithoutUpdaterVendorInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdaterVendorInput, UserUpdateWithoutUpdaterVendorInput>, UserUncheckedUpdateWithoutUpdaterVendorInput>
  }

  export type NoteUpdateManyWithoutVendorNestedInput = {
    create?: XOR<NoteCreateWithoutVendorInput, NoteUncheckedCreateWithoutVendorInput> | NoteCreateWithoutVendorInput[] | NoteUncheckedCreateWithoutVendorInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutVendorInput | NoteCreateOrConnectWithoutVendorInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutVendorInput | NoteUpsertWithWhereUniqueWithoutVendorInput[]
    createMany?: NoteCreateManyVendorInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutVendorInput | NoteUpdateWithWhereUniqueWithoutVendorInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutVendorInput | NoteUpdateManyWithWhereWithoutVendorInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutVendorNestedInput = {
    create?: XOR<NoteCreateWithoutVendorInput, NoteUncheckedCreateWithoutVendorInput> | NoteCreateWithoutVendorInput[] | NoteUncheckedCreateWithoutVendorInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutVendorInput | NoteCreateOrConnectWithoutVendorInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutVendorInput | NoteUpsertWithWhereUniqueWithoutVendorInput[]
    createMany?: NoteCreateManyVendorInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutVendorInput | NoteUpdateWithWhereUniqueWithoutVendorInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutVendorInput | NoteUpdateManyWithWhereWithoutVendorInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCreatorProductInput = {
    create?: XOR<UserCreateWithoutCreatorProductInput, UserUncheckedCreateWithoutCreatorProductInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorProductInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdaterProductInput = {
    create?: XOR<UserCreateWithoutUpdaterProductInput, UserUncheckedCreateWithoutUpdaterProductInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterProductInput
    connect?: UserWhereUniqueInput
  }

  export type LeadCreateNestedManyWithoutProductsInput = {
    create?: XOR<LeadCreateWithoutProductsInput, LeadUncheckedCreateWithoutProductsInput> | LeadCreateWithoutProductsInput[] | LeadUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutProductsInput | LeadCreateOrConnectWithoutProductsInput[]
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
  }

  export type OpportunityCreateNestedManyWithoutProductsInput = {
    create?: XOR<OpportunityCreateWithoutProductsInput, OpportunityUncheckedCreateWithoutProductsInput> | OpportunityCreateWithoutProductsInput[] | OpportunityUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: OpportunityCreateOrConnectWithoutProductsInput | OpportunityCreateOrConnectWithoutProductsInput[]
    connect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
  }

  export type QuoteCreateNestedManyWithoutProductsInput = {
    create?: XOR<QuoteCreateWithoutProductsInput, QuoteUncheckedCreateWithoutProductsInput> | QuoteCreateWithoutProductsInput[] | QuoteUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: QuoteCreateOrConnectWithoutProductsInput | QuoteCreateOrConnectWithoutProductsInput[]
    connect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
  }

  export type ContractCreateNestedManyWithoutProductsInput = {
    create?: XOR<ContractCreateWithoutProductsInput, ContractUncheckedCreateWithoutProductsInput> | ContractCreateWithoutProductsInput[] | ContractUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ContractCreateOrConnectWithoutProductsInput | ContractCreateOrConnectWithoutProductsInput[]
    connect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
  }

  export type LeadUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<LeadCreateWithoutProductsInput, LeadUncheckedCreateWithoutProductsInput> | LeadCreateWithoutProductsInput[] | LeadUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutProductsInput | LeadCreateOrConnectWithoutProductsInput[]
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
  }

  export type OpportunityUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<OpportunityCreateWithoutProductsInput, OpportunityUncheckedCreateWithoutProductsInput> | OpportunityCreateWithoutProductsInput[] | OpportunityUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: OpportunityCreateOrConnectWithoutProductsInput | OpportunityCreateOrConnectWithoutProductsInput[]
    connect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
  }

  export type QuoteUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<QuoteCreateWithoutProductsInput, QuoteUncheckedCreateWithoutProductsInput> | QuoteCreateWithoutProductsInput[] | QuoteUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: QuoteCreateOrConnectWithoutProductsInput | QuoteCreateOrConnectWithoutProductsInput[]
    connect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
  }

  export type ContractUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<ContractCreateWithoutProductsInput, ContractUncheckedCreateWithoutProductsInput> | ContractCreateWithoutProductsInput[] | ContractUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ContractCreateOrConnectWithoutProductsInput | ContractCreateOrConnectWithoutProductsInput[]
    connect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutCreatorProductNestedInput = {
    create?: XOR<UserCreateWithoutCreatorProductInput, UserUncheckedCreateWithoutCreatorProductInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorProductInput
    upsert?: UserUpsertWithoutCreatorProductInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatorProductInput, UserUpdateWithoutCreatorProductInput>, UserUncheckedUpdateWithoutCreatorProductInput>
  }

  export type UserUpdateOneWithoutUpdaterProductNestedInput = {
    create?: XOR<UserCreateWithoutUpdaterProductInput, UserUncheckedCreateWithoutUpdaterProductInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterProductInput
    upsert?: UserUpsertWithoutUpdaterProductInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdaterProductInput, UserUpdateWithoutUpdaterProductInput>, UserUncheckedUpdateWithoutUpdaterProductInput>
  }

  export type LeadUpdateManyWithoutProductsNestedInput = {
    create?: XOR<LeadCreateWithoutProductsInput, LeadUncheckedCreateWithoutProductsInput> | LeadCreateWithoutProductsInput[] | LeadUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutProductsInput | LeadCreateOrConnectWithoutProductsInput[]
    upsert?: LeadUpsertWithWhereUniqueWithoutProductsInput | LeadUpsertWithWhereUniqueWithoutProductsInput[]
    set?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    disconnect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    delete?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    update?: LeadUpdateWithWhereUniqueWithoutProductsInput | LeadUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: LeadUpdateManyWithWhereWithoutProductsInput | LeadUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: LeadScalarWhereInput | LeadScalarWhereInput[]
  }

  export type OpportunityUpdateManyWithoutProductsNestedInput = {
    create?: XOR<OpportunityCreateWithoutProductsInput, OpportunityUncheckedCreateWithoutProductsInput> | OpportunityCreateWithoutProductsInput[] | OpportunityUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: OpportunityCreateOrConnectWithoutProductsInput | OpportunityCreateOrConnectWithoutProductsInput[]
    upsert?: OpportunityUpsertWithWhereUniqueWithoutProductsInput | OpportunityUpsertWithWhereUniqueWithoutProductsInput[]
    set?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    disconnect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    delete?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    connect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    update?: OpportunityUpdateWithWhereUniqueWithoutProductsInput | OpportunityUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: OpportunityUpdateManyWithWhereWithoutProductsInput | OpportunityUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: OpportunityScalarWhereInput | OpportunityScalarWhereInput[]
  }

  export type QuoteUpdateManyWithoutProductsNestedInput = {
    create?: XOR<QuoteCreateWithoutProductsInput, QuoteUncheckedCreateWithoutProductsInput> | QuoteCreateWithoutProductsInput[] | QuoteUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: QuoteCreateOrConnectWithoutProductsInput | QuoteCreateOrConnectWithoutProductsInput[]
    upsert?: QuoteUpsertWithWhereUniqueWithoutProductsInput | QuoteUpsertWithWhereUniqueWithoutProductsInput[]
    set?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    disconnect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    delete?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    connect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    update?: QuoteUpdateWithWhereUniqueWithoutProductsInput | QuoteUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: QuoteUpdateManyWithWhereWithoutProductsInput | QuoteUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: QuoteScalarWhereInput | QuoteScalarWhereInput[]
  }

  export type ContractUpdateManyWithoutProductsNestedInput = {
    create?: XOR<ContractCreateWithoutProductsInput, ContractUncheckedCreateWithoutProductsInput> | ContractCreateWithoutProductsInput[] | ContractUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ContractCreateOrConnectWithoutProductsInput | ContractCreateOrConnectWithoutProductsInput[]
    upsert?: ContractUpsertWithWhereUniqueWithoutProductsInput | ContractUpsertWithWhereUniqueWithoutProductsInput[]
    set?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    disconnect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    delete?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    connect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    update?: ContractUpdateWithWhereUniqueWithoutProductsInput | ContractUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: ContractUpdateManyWithWhereWithoutProductsInput | ContractUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: ContractScalarWhereInput | ContractScalarWhereInput[]
  }

  export type LeadUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<LeadCreateWithoutProductsInput, LeadUncheckedCreateWithoutProductsInput> | LeadCreateWithoutProductsInput[] | LeadUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutProductsInput | LeadCreateOrConnectWithoutProductsInput[]
    upsert?: LeadUpsertWithWhereUniqueWithoutProductsInput | LeadUpsertWithWhereUniqueWithoutProductsInput[]
    set?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    disconnect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    delete?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    update?: LeadUpdateWithWhereUniqueWithoutProductsInput | LeadUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: LeadUpdateManyWithWhereWithoutProductsInput | LeadUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: LeadScalarWhereInput | LeadScalarWhereInput[]
  }

  export type OpportunityUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<OpportunityCreateWithoutProductsInput, OpportunityUncheckedCreateWithoutProductsInput> | OpportunityCreateWithoutProductsInput[] | OpportunityUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: OpportunityCreateOrConnectWithoutProductsInput | OpportunityCreateOrConnectWithoutProductsInput[]
    upsert?: OpportunityUpsertWithWhereUniqueWithoutProductsInput | OpportunityUpsertWithWhereUniqueWithoutProductsInput[]
    set?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    disconnect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    delete?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    connect?: OpportunityWhereUniqueInput | OpportunityWhereUniqueInput[]
    update?: OpportunityUpdateWithWhereUniqueWithoutProductsInput | OpportunityUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: OpportunityUpdateManyWithWhereWithoutProductsInput | OpportunityUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: OpportunityScalarWhereInput | OpportunityScalarWhereInput[]
  }

  export type QuoteUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<QuoteCreateWithoutProductsInput, QuoteUncheckedCreateWithoutProductsInput> | QuoteCreateWithoutProductsInput[] | QuoteUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: QuoteCreateOrConnectWithoutProductsInput | QuoteCreateOrConnectWithoutProductsInput[]
    upsert?: QuoteUpsertWithWhereUniqueWithoutProductsInput | QuoteUpsertWithWhereUniqueWithoutProductsInput[]
    set?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    disconnect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    delete?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    connect?: QuoteWhereUniqueInput | QuoteWhereUniqueInput[]
    update?: QuoteUpdateWithWhereUniqueWithoutProductsInput | QuoteUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: QuoteUpdateManyWithWhereWithoutProductsInput | QuoteUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: QuoteScalarWhereInput | QuoteScalarWhereInput[]
  }

  export type ContractUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<ContractCreateWithoutProductsInput, ContractUncheckedCreateWithoutProductsInput> | ContractCreateWithoutProductsInput[] | ContractUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ContractCreateOrConnectWithoutProductsInput | ContractCreateOrConnectWithoutProductsInput[]
    upsert?: ContractUpsertWithWhereUniqueWithoutProductsInput | ContractUpsertWithWhereUniqueWithoutProductsInput[]
    set?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    disconnect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    delete?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    connect?: ContractWhereUniqueInput | ContractWhereUniqueInput[]
    update?: ContractUpdateWithWhereUniqueWithoutProductsInput | ContractUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: ContractUpdateManyWithWhereWithoutProductsInput | ContractUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: ContractScalarWhereInput | ContractScalarWhereInput[]
  }

  export type ContractCreateNestedOneWithoutProjectInput = {
    create?: XOR<ContractCreateWithoutProjectInput, ContractUncheckedCreateWithoutProjectInput>
    connectOrCreate?: ContractCreateOrConnectWithoutProjectInput
    connect?: ContractWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutProjectAssigneeInput = {
    create?: XOR<UserCreateWithoutProjectAssigneeInput, UserUncheckedCreateWithoutProjectAssigneeInput>
    connectOrCreate?: UserCreateOrConnectWithoutProjectAssigneeInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatorProjectInput = {
    create?: XOR<UserCreateWithoutCreatorProjectInput, UserUncheckedCreateWithoutCreatorProjectInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorProjectInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdaterProjectInput = {
    create?: XOR<UserCreateWithoutUpdaterProjectInput, UserUncheckedCreateWithoutUpdaterProjectInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterProjectInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutProjectMemberInput = {
    create?: XOR<UserCreateWithoutProjectMemberInput, UserUncheckedCreateWithoutProjectMemberInput> | UserCreateWithoutProjectMemberInput[] | UserUncheckedCreateWithoutProjectMemberInput[]
    connectOrCreate?: UserCreateOrConnectWithoutProjectMemberInput | UserCreateOrConnectWithoutProjectMemberInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type MilestoneCreateNestedManyWithoutProjectInput = {
    create?: XOR<MilestoneCreateWithoutProjectInput, MilestoneUncheckedCreateWithoutProjectInput> | MilestoneCreateWithoutProjectInput[] | MilestoneUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutProjectInput | MilestoneCreateOrConnectWithoutProjectInput[]
    createMany?: MilestoneCreateManyProjectInputEnvelope
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
  }

  export type NoteCreateNestedManyWithoutProjectInput = {
    create?: XOR<NoteCreateWithoutProjectInput, NoteUncheckedCreateWithoutProjectInput> | NoteCreateWithoutProjectInput[] | NoteUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutProjectInput | NoteCreateOrConnectWithoutProjectInput[]
    createMany?: NoteCreateManyProjectInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type StageCreateNestedManyWithoutProjectInput = {
    create?: XOR<StageCreateWithoutProjectInput, StageUncheckedCreateWithoutProjectInput> | StageCreateWithoutProjectInput[] | StageUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: StageCreateOrConnectWithoutProjectInput | StageCreateOrConnectWithoutProjectInput[]
    createMany?: StageCreateManyProjectInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type EventCreateNestedManyWithoutProjectInput = {
    create?: XOR<EventCreateWithoutProjectInput, EventUncheckedCreateWithoutProjectInput> | EventCreateWithoutProjectInput[] | EventUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: EventCreateOrConnectWithoutProjectInput | EventCreateOrConnectWithoutProjectInput[]
    createMany?: EventCreateManyProjectInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type BudgetCreateNestedManyWithoutProjectInput = {
    create?: XOR<BudgetCreateWithoutProjectInput, BudgetUncheckedCreateWithoutProjectInput> | BudgetCreateWithoutProjectInput[] | BudgetUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutProjectInput | BudgetCreateOrConnectWithoutProjectInput[]
    createMany?: BudgetCreateManyProjectInputEnvelope
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
  }

  export type ExpenseCreateNestedManyWithoutProjectInput = {
    create?: XOR<ExpenseCreateWithoutProjectInput, ExpenseUncheckedCreateWithoutProjectInput> | ExpenseCreateWithoutProjectInput[] | ExpenseUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutProjectInput | ExpenseCreateOrConnectWithoutProjectInput[]
    createMany?: ExpenseCreateManyProjectInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutProjectMemberInput = {
    create?: XOR<UserCreateWithoutProjectMemberInput, UserUncheckedCreateWithoutProjectMemberInput> | UserCreateWithoutProjectMemberInput[] | UserUncheckedCreateWithoutProjectMemberInput[]
    connectOrCreate?: UserCreateOrConnectWithoutProjectMemberInput | UserCreateOrConnectWithoutProjectMemberInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type MilestoneUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<MilestoneCreateWithoutProjectInput, MilestoneUncheckedCreateWithoutProjectInput> | MilestoneCreateWithoutProjectInput[] | MilestoneUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutProjectInput | MilestoneCreateOrConnectWithoutProjectInput[]
    createMany?: MilestoneCreateManyProjectInputEnvelope
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<NoteCreateWithoutProjectInput, NoteUncheckedCreateWithoutProjectInput> | NoteCreateWithoutProjectInput[] | NoteUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutProjectInput | NoteCreateOrConnectWithoutProjectInput[]
    createMany?: NoteCreateManyProjectInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type StageUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<StageCreateWithoutProjectInput, StageUncheckedCreateWithoutProjectInput> | StageCreateWithoutProjectInput[] | StageUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: StageCreateOrConnectWithoutProjectInput | StageCreateOrConnectWithoutProjectInput[]
    createMany?: StageCreateManyProjectInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type EventUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<EventCreateWithoutProjectInput, EventUncheckedCreateWithoutProjectInput> | EventCreateWithoutProjectInput[] | EventUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: EventCreateOrConnectWithoutProjectInput | EventCreateOrConnectWithoutProjectInput[]
    createMany?: EventCreateManyProjectInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type BudgetUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<BudgetCreateWithoutProjectInput, BudgetUncheckedCreateWithoutProjectInput> | BudgetCreateWithoutProjectInput[] | BudgetUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutProjectInput | BudgetCreateOrConnectWithoutProjectInput[]
    createMany?: BudgetCreateManyProjectInputEnvelope
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
  }

  export type ExpenseUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<ExpenseCreateWithoutProjectInput, ExpenseUncheckedCreateWithoutProjectInput> | ExpenseCreateWithoutProjectInput[] | ExpenseUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutProjectInput | ExpenseCreateOrConnectWithoutProjectInput[]
    createMany?: ExpenseCreateManyProjectInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type ContractUpdateOneWithoutProjectNestedInput = {
    create?: XOR<ContractCreateWithoutProjectInput, ContractUncheckedCreateWithoutProjectInput>
    connectOrCreate?: ContractCreateOrConnectWithoutProjectInput
    upsert?: ContractUpsertWithoutProjectInput
    disconnect?: ContractWhereInput | boolean
    delete?: ContractWhereInput | boolean
    connect?: ContractWhereUniqueInput
    update?: XOR<XOR<ContractUpdateToOneWithWhereWithoutProjectInput, ContractUpdateWithoutProjectInput>, ContractUncheckedUpdateWithoutProjectInput>
  }

  export type UserUpdateOneWithoutProjectAssigneeNestedInput = {
    create?: XOR<UserCreateWithoutProjectAssigneeInput, UserUncheckedCreateWithoutProjectAssigneeInput>
    connectOrCreate?: UserCreateOrConnectWithoutProjectAssigneeInput
    upsert?: UserUpsertWithoutProjectAssigneeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProjectAssigneeInput, UserUpdateWithoutProjectAssigneeInput>, UserUncheckedUpdateWithoutProjectAssigneeInput>
  }

  export type UserUpdateOneWithoutCreatorProjectNestedInput = {
    create?: XOR<UserCreateWithoutCreatorProjectInput, UserUncheckedCreateWithoutCreatorProjectInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorProjectInput
    upsert?: UserUpsertWithoutCreatorProjectInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatorProjectInput, UserUpdateWithoutCreatorProjectInput>, UserUncheckedUpdateWithoutCreatorProjectInput>
  }

  export type UserUpdateOneWithoutUpdaterProjectNestedInput = {
    create?: XOR<UserCreateWithoutUpdaterProjectInput, UserUncheckedCreateWithoutUpdaterProjectInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterProjectInput
    upsert?: UserUpsertWithoutUpdaterProjectInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdaterProjectInput, UserUpdateWithoutUpdaterProjectInput>, UserUncheckedUpdateWithoutUpdaterProjectInput>
  }

  export type UserUpdateManyWithoutProjectMemberNestedInput = {
    create?: XOR<UserCreateWithoutProjectMemberInput, UserUncheckedCreateWithoutProjectMemberInput> | UserCreateWithoutProjectMemberInput[] | UserUncheckedCreateWithoutProjectMemberInput[]
    connectOrCreate?: UserCreateOrConnectWithoutProjectMemberInput | UserCreateOrConnectWithoutProjectMemberInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutProjectMemberInput | UserUpsertWithWhereUniqueWithoutProjectMemberInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutProjectMemberInput | UserUpdateWithWhereUniqueWithoutProjectMemberInput[]
    updateMany?: UserUpdateManyWithWhereWithoutProjectMemberInput | UserUpdateManyWithWhereWithoutProjectMemberInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type MilestoneUpdateManyWithoutProjectNestedInput = {
    create?: XOR<MilestoneCreateWithoutProjectInput, MilestoneUncheckedCreateWithoutProjectInput> | MilestoneCreateWithoutProjectInput[] | MilestoneUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutProjectInput | MilestoneCreateOrConnectWithoutProjectInput[]
    upsert?: MilestoneUpsertWithWhereUniqueWithoutProjectInput | MilestoneUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: MilestoneCreateManyProjectInputEnvelope
    set?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    disconnect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    delete?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    update?: MilestoneUpdateWithWhereUniqueWithoutProjectInput | MilestoneUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: MilestoneUpdateManyWithWhereWithoutProjectInput | MilestoneUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: MilestoneScalarWhereInput | MilestoneScalarWhereInput[]
  }

  export type NoteUpdateManyWithoutProjectNestedInput = {
    create?: XOR<NoteCreateWithoutProjectInput, NoteUncheckedCreateWithoutProjectInput> | NoteCreateWithoutProjectInput[] | NoteUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutProjectInput | NoteCreateOrConnectWithoutProjectInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutProjectInput | NoteUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: NoteCreateManyProjectInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutProjectInput | NoteUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutProjectInput | NoteUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type StageUpdateManyWithoutProjectNestedInput = {
    create?: XOR<StageCreateWithoutProjectInput, StageUncheckedCreateWithoutProjectInput> | StageCreateWithoutProjectInput[] | StageUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: StageCreateOrConnectWithoutProjectInput | StageCreateOrConnectWithoutProjectInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutProjectInput | StageUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: StageCreateManyProjectInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutProjectInput | StageUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: StageUpdateManyWithWhereWithoutProjectInput | StageUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type EventUpdateManyWithoutProjectNestedInput = {
    create?: XOR<EventCreateWithoutProjectInput, EventUncheckedCreateWithoutProjectInput> | EventCreateWithoutProjectInput[] | EventUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: EventCreateOrConnectWithoutProjectInput | EventCreateOrConnectWithoutProjectInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutProjectInput | EventUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: EventCreateManyProjectInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutProjectInput | EventUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: EventUpdateManyWithWhereWithoutProjectInput | EventUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type BudgetUpdateManyWithoutProjectNestedInput = {
    create?: XOR<BudgetCreateWithoutProjectInput, BudgetUncheckedCreateWithoutProjectInput> | BudgetCreateWithoutProjectInput[] | BudgetUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutProjectInput | BudgetCreateOrConnectWithoutProjectInput[]
    upsert?: BudgetUpsertWithWhereUniqueWithoutProjectInput | BudgetUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: BudgetCreateManyProjectInputEnvelope
    set?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    disconnect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    delete?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    update?: BudgetUpdateWithWhereUniqueWithoutProjectInput | BudgetUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: BudgetUpdateManyWithWhereWithoutProjectInput | BudgetUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: BudgetScalarWhereInput | BudgetScalarWhereInput[]
  }

  export type ExpenseUpdateManyWithoutProjectNestedInput = {
    create?: XOR<ExpenseCreateWithoutProjectInput, ExpenseUncheckedCreateWithoutProjectInput> | ExpenseCreateWithoutProjectInput[] | ExpenseUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutProjectInput | ExpenseCreateOrConnectWithoutProjectInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutProjectInput | ExpenseUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: ExpenseCreateManyProjectInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutProjectInput | ExpenseUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutProjectInput | ExpenseUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutProjectMemberNestedInput = {
    create?: XOR<UserCreateWithoutProjectMemberInput, UserUncheckedCreateWithoutProjectMemberInput> | UserCreateWithoutProjectMemberInput[] | UserUncheckedCreateWithoutProjectMemberInput[]
    connectOrCreate?: UserCreateOrConnectWithoutProjectMemberInput | UserCreateOrConnectWithoutProjectMemberInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutProjectMemberInput | UserUpsertWithWhereUniqueWithoutProjectMemberInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutProjectMemberInput | UserUpdateWithWhereUniqueWithoutProjectMemberInput[]
    updateMany?: UserUpdateManyWithWhereWithoutProjectMemberInput | UserUpdateManyWithWhereWithoutProjectMemberInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type MilestoneUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<MilestoneCreateWithoutProjectInput, MilestoneUncheckedCreateWithoutProjectInput> | MilestoneCreateWithoutProjectInput[] | MilestoneUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutProjectInput | MilestoneCreateOrConnectWithoutProjectInput[]
    upsert?: MilestoneUpsertWithWhereUniqueWithoutProjectInput | MilestoneUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: MilestoneCreateManyProjectInputEnvelope
    set?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    disconnect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    delete?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    update?: MilestoneUpdateWithWhereUniqueWithoutProjectInput | MilestoneUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: MilestoneUpdateManyWithWhereWithoutProjectInput | MilestoneUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: MilestoneScalarWhereInput | MilestoneScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<NoteCreateWithoutProjectInput, NoteUncheckedCreateWithoutProjectInput> | NoteCreateWithoutProjectInput[] | NoteUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutProjectInput | NoteCreateOrConnectWithoutProjectInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutProjectInput | NoteUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: NoteCreateManyProjectInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutProjectInput | NoteUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutProjectInput | NoteUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type StageUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<StageCreateWithoutProjectInput, StageUncheckedCreateWithoutProjectInput> | StageCreateWithoutProjectInput[] | StageUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: StageCreateOrConnectWithoutProjectInput | StageCreateOrConnectWithoutProjectInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutProjectInput | StageUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: StageCreateManyProjectInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutProjectInput | StageUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: StageUpdateManyWithWhereWithoutProjectInput | StageUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type EventUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<EventCreateWithoutProjectInput, EventUncheckedCreateWithoutProjectInput> | EventCreateWithoutProjectInput[] | EventUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: EventCreateOrConnectWithoutProjectInput | EventCreateOrConnectWithoutProjectInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutProjectInput | EventUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: EventCreateManyProjectInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutProjectInput | EventUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: EventUpdateManyWithWhereWithoutProjectInput | EventUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type BudgetUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<BudgetCreateWithoutProjectInput, BudgetUncheckedCreateWithoutProjectInput> | BudgetCreateWithoutProjectInput[] | BudgetUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutProjectInput | BudgetCreateOrConnectWithoutProjectInput[]
    upsert?: BudgetUpsertWithWhereUniqueWithoutProjectInput | BudgetUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: BudgetCreateManyProjectInputEnvelope
    set?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    disconnect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    delete?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    update?: BudgetUpdateWithWhereUniqueWithoutProjectInput | BudgetUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: BudgetUpdateManyWithWhereWithoutProjectInput | BudgetUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: BudgetScalarWhereInput | BudgetScalarWhereInput[]
  }

  export type ExpenseUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<ExpenseCreateWithoutProjectInput, ExpenseUncheckedCreateWithoutProjectInput> | ExpenseCreateWithoutProjectInput[] | ExpenseUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutProjectInput | ExpenseCreateOrConnectWithoutProjectInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutProjectInput | ExpenseUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: ExpenseCreateManyProjectInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutProjectInput | ExpenseUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutProjectInput | ExpenseUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type ProjectCreateNestedOneWithoutMilestonesInput = {
    create?: XOR<ProjectCreateWithoutMilestonesInput, ProjectUncheckedCreateWithoutMilestonesInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutMilestonesInput
    connect?: ProjectWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMilestoneAssigneeInput = {
    create?: XOR<UserCreateWithoutMilestoneAssigneeInput, UserUncheckedCreateWithoutMilestoneAssigneeInput>
    connectOrCreate?: UserCreateOrConnectWithoutMilestoneAssigneeInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatorMilestoneInput = {
    create?: XOR<UserCreateWithoutCreatorMilestoneInput, UserUncheckedCreateWithoutCreatorMilestoneInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorMilestoneInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdaterMilestoneInput = {
    create?: XOR<UserCreateWithoutUpdaterMilestoneInput, UserUncheckedCreateWithoutUpdaterMilestoneInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterMilestoneInput
    connect?: UserWhereUniqueInput
  }

  export type TaskCreateNestedManyWithoutMilestoneInput = {
    create?: XOR<TaskCreateWithoutMilestoneInput, TaskUncheckedCreateWithoutMilestoneInput> | TaskCreateWithoutMilestoneInput[] | TaskUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutMilestoneInput | TaskCreateOrConnectWithoutMilestoneInput[]
    createMany?: TaskCreateManyMilestoneInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type NoteCreateNestedManyWithoutMilestoneInput = {
    create?: XOR<NoteCreateWithoutMilestoneInput, NoteUncheckedCreateWithoutMilestoneInput> | NoteCreateWithoutMilestoneInput[] | NoteUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutMilestoneInput | NoteCreateOrConnectWithoutMilestoneInput[]
    createMany?: NoteCreateManyMilestoneInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type StageCreateNestedManyWithoutMilestoneInput = {
    create?: XOR<StageCreateWithoutMilestoneInput, StageUncheckedCreateWithoutMilestoneInput> | StageCreateWithoutMilestoneInput[] | StageUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: StageCreateOrConnectWithoutMilestoneInput | StageCreateOrConnectWithoutMilestoneInput[]
    createMany?: StageCreateManyMilestoneInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type EventCreateNestedManyWithoutMilestoneInput = {
    create?: XOR<EventCreateWithoutMilestoneInput, EventUncheckedCreateWithoutMilestoneInput> | EventCreateWithoutMilestoneInput[] | EventUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: EventCreateOrConnectWithoutMilestoneInput | EventCreateOrConnectWithoutMilestoneInput[]
    createMany?: EventCreateManyMilestoneInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutMilestoneInput = {
    create?: XOR<TaskCreateWithoutMilestoneInput, TaskUncheckedCreateWithoutMilestoneInput> | TaskCreateWithoutMilestoneInput[] | TaskUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutMilestoneInput | TaskCreateOrConnectWithoutMilestoneInput[]
    createMany?: TaskCreateManyMilestoneInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutMilestoneInput = {
    create?: XOR<NoteCreateWithoutMilestoneInput, NoteUncheckedCreateWithoutMilestoneInput> | NoteCreateWithoutMilestoneInput[] | NoteUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutMilestoneInput | NoteCreateOrConnectWithoutMilestoneInput[]
    createMany?: NoteCreateManyMilestoneInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type StageUncheckedCreateNestedManyWithoutMilestoneInput = {
    create?: XOR<StageCreateWithoutMilestoneInput, StageUncheckedCreateWithoutMilestoneInput> | StageCreateWithoutMilestoneInput[] | StageUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: StageCreateOrConnectWithoutMilestoneInput | StageCreateOrConnectWithoutMilestoneInput[]
    createMany?: StageCreateManyMilestoneInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type EventUncheckedCreateNestedManyWithoutMilestoneInput = {
    create?: XOR<EventCreateWithoutMilestoneInput, EventUncheckedCreateWithoutMilestoneInput> | EventCreateWithoutMilestoneInput[] | EventUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: EventCreateOrConnectWithoutMilestoneInput | EventCreateOrConnectWithoutMilestoneInput[]
    createMany?: EventCreateManyMilestoneInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type ProjectUpdateOneWithoutMilestonesNestedInput = {
    create?: XOR<ProjectCreateWithoutMilestonesInput, ProjectUncheckedCreateWithoutMilestonesInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutMilestonesInput
    upsert?: ProjectUpsertWithoutMilestonesInput
    disconnect?: ProjectWhereInput | boolean
    delete?: ProjectWhereInput | boolean
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutMilestonesInput, ProjectUpdateWithoutMilestonesInput>, ProjectUncheckedUpdateWithoutMilestonesInput>
  }

  export type UserUpdateOneWithoutMilestoneAssigneeNestedInput = {
    create?: XOR<UserCreateWithoutMilestoneAssigneeInput, UserUncheckedCreateWithoutMilestoneAssigneeInput>
    connectOrCreate?: UserCreateOrConnectWithoutMilestoneAssigneeInput
    upsert?: UserUpsertWithoutMilestoneAssigneeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMilestoneAssigneeInput, UserUpdateWithoutMilestoneAssigneeInput>, UserUncheckedUpdateWithoutMilestoneAssigneeInput>
  }

  export type UserUpdateOneWithoutCreatorMilestoneNestedInput = {
    create?: XOR<UserCreateWithoutCreatorMilestoneInput, UserUncheckedCreateWithoutCreatorMilestoneInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorMilestoneInput
    upsert?: UserUpsertWithoutCreatorMilestoneInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatorMilestoneInput, UserUpdateWithoutCreatorMilestoneInput>, UserUncheckedUpdateWithoutCreatorMilestoneInput>
  }

  export type UserUpdateOneWithoutUpdaterMilestoneNestedInput = {
    create?: XOR<UserCreateWithoutUpdaterMilestoneInput, UserUncheckedCreateWithoutUpdaterMilestoneInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterMilestoneInput
    upsert?: UserUpsertWithoutUpdaterMilestoneInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdaterMilestoneInput, UserUpdateWithoutUpdaterMilestoneInput>, UserUncheckedUpdateWithoutUpdaterMilestoneInput>
  }

  export type TaskUpdateManyWithoutMilestoneNestedInput = {
    create?: XOR<TaskCreateWithoutMilestoneInput, TaskUncheckedCreateWithoutMilestoneInput> | TaskCreateWithoutMilestoneInput[] | TaskUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutMilestoneInput | TaskCreateOrConnectWithoutMilestoneInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutMilestoneInput | TaskUpsertWithWhereUniqueWithoutMilestoneInput[]
    createMany?: TaskCreateManyMilestoneInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutMilestoneInput | TaskUpdateWithWhereUniqueWithoutMilestoneInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutMilestoneInput | TaskUpdateManyWithWhereWithoutMilestoneInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type NoteUpdateManyWithoutMilestoneNestedInput = {
    create?: XOR<NoteCreateWithoutMilestoneInput, NoteUncheckedCreateWithoutMilestoneInput> | NoteCreateWithoutMilestoneInput[] | NoteUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutMilestoneInput | NoteCreateOrConnectWithoutMilestoneInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutMilestoneInput | NoteUpsertWithWhereUniqueWithoutMilestoneInput[]
    createMany?: NoteCreateManyMilestoneInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutMilestoneInput | NoteUpdateWithWhereUniqueWithoutMilestoneInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutMilestoneInput | NoteUpdateManyWithWhereWithoutMilestoneInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type StageUpdateManyWithoutMilestoneNestedInput = {
    create?: XOR<StageCreateWithoutMilestoneInput, StageUncheckedCreateWithoutMilestoneInput> | StageCreateWithoutMilestoneInput[] | StageUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: StageCreateOrConnectWithoutMilestoneInput | StageCreateOrConnectWithoutMilestoneInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutMilestoneInput | StageUpsertWithWhereUniqueWithoutMilestoneInput[]
    createMany?: StageCreateManyMilestoneInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutMilestoneInput | StageUpdateWithWhereUniqueWithoutMilestoneInput[]
    updateMany?: StageUpdateManyWithWhereWithoutMilestoneInput | StageUpdateManyWithWhereWithoutMilestoneInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type EventUpdateManyWithoutMilestoneNestedInput = {
    create?: XOR<EventCreateWithoutMilestoneInput, EventUncheckedCreateWithoutMilestoneInput> | EventCreateWithoutMilestoneInput[] | EventUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: EventCreateOrConnectWithoutMilestoneInput | EventCreateOrConnectWithoutMilestoneInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutMilestoneInput | EventUpsertWithWhereUniqueWithoutMilestoneInput[]
    createMany?: EventCreateManyMilestoneInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutMilestoneInput | EventUpdateWithWhereUniqueWithoutMilestoneInput[]
    updateMany?: EventUpdateManyWithWhereWithoutMilestoneInput | EventUpdateManyWithWhereWithoutMilestoneInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutMilestoneNestedInput = {
    create?: XOR<TaskCreateWithoutMilestoneInput, TaskUncheckedCreateWithoutMilestoneInput> | TaskCreateWithoutMilestoneInput[] | TaskUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutMilestoneInput | TaskCreateOrConnectWithoutMilestoneInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutMilestoneInput | TaskUpsertWithWhereUniqueWithoutMilestoneInput[]
    createMany?: TaskCreateManyMilestoneInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutMilestoneInput | TaskUpdateWithWhereUniqueWithoutMilestoneInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutMilestoneInput | TaskUpdateManyWithWhereWithoutMilestoneInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutMilestoneNestedInput = {
    create?: XOR<NoteCreateWithoutMilestoneInput, NoteUncheckedCreateWithoutMilestoneInput> | NoteCreateWithoutMilestoneInput[] | NoteUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutMilestoneInput | NoteCreateOrConnectWithoutMilestoneInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutMilestoneInput | NoteUpsertWithWhereUniqueWithoutMilestoneInput[]
    createMany?: NoteCreateManyMilestoneInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutMilestoneInput | NoteUpdateWithWhereUniqueWithoutMilestoneInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutMilestoneInput | NoteUpdateManyWithWhereWithoutMilestoneInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type StageUncheckedUpdateManyWithoutMilestoneNestedInput = {
    create?: XOR<StageCreateWithoutMilestoneInput, StageUncheckedCreateWithoutMilestoneInput> | StageCreateWithoutMilestoneInput[] | StageUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: StageCreateOrConnectWithoutMilestoneInput | StageCreateOrConnectWithoutMilestoneInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutMilestoneInput | StageUpsertWithWhereUniqueWithoutMilestoneInput[]
    createMany?: StageCreateManyMilestoneInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutMilestoneInput | StageUpdateWithWhereUniqueWithoutMilestoneInput[]
    updateMany?: StageUpdateManyWithWhereWithoutMilestoneInput | StageUpdateManyWithWhereWithoutMilestoneInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type EventUncheckedUpdateManyWithoutMilestoneNestedInput = {
    create?: XOR<EventCreateWithoutMilestoneInput, EventUncheckedCreateWithoutMilestoneInput> | EventCreateWithoutMilestoneInput[] | EventUncheckedCreateWithoutMilestoneInput[]
    connectOrCreate?: EventCreateOrConnectWithoutMilestoneInput | EventCreateOrConnectWithoutMilestoneInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutMilestoneInput | EventUpsertWithWhereUniqueWithoutMilestoneInput[]
    createMany?: EventCreateManyMilestoneInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutMilestoneInput | EventUpdateWithWhereUniqueWithoutMilestoneInput[]
    updateMany?: EventUpdateManyWithWhereWithoutMilestoneInput | EventUpdateManyWithWhereWithoutMilestoneInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type MilestoneCreateNestedOneWithoutTasksInput = {
    create?: XOR<MilestoneCreateWithoutTasksInput, MilestoneUncheckedCreateWithoutTasksInput>
    connectOrCreate?: MilestoneCreateOrConnectWithoutTasksInput
    connect?: MilestoneWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutTaskAssigneeInput = {
    create?: XOR<UserCreateWithoutTaskAssigneeInput, UserUncheckedCreateWithoutTaskAssigneeInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskAssigneeInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatorTaskInput = {
    create?: XOR<UserCreateWithoutCreatorTaskInput, UserUncheckedCreateWithoutCreatorTaskInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorTaskInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdaterTaskInput = {
    create?: XOR<UserCreateWithoutUpdaterTaskInput, UserUncheckedCreateWithoutUpdaterTaskInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterTaskInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutTaskMemberInput = {
    create?: XOR<UserCreateWithoutTaskMemberInput, UserUncheckedCreateWithoutTaskMemberInput> | UserCreateWithoutTaskMemberInput[] | UserUncheckedCreateWithoutTaskMemberInput[]
    connectOrCreate?: UserCreateOrConnectWithoutTaskMemberInput | UserCreateOrConnectWithoutTaskMemberInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type NoteCreateNestedManyWithoutTaskInput = {
    create?: XOR<NoteCreateWithoutTaskInput, NoteUncheckedCreateWithoutTaskInput> | NoteCreateWithoutTaskInput[] | NoteUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutTaskInput | NoteCreateOrConnectWithoutTaskInput[]
    createMany?: NoteCreateManyTaskInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type StageCreateNestedManyWithoutTaskInput = {
    create?: XOR<StageCreateWithoutTaskInput, StageUncheckedCreateWithoutTaskInput> | StageCreateWithoutTaskInput[] | StageUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: StageCreateOrConnectWithoutTaskInput | StageCreateOrConnectWithoutTaskInput[]
    createMany?: StageCreateManyTaskInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type EventCreateNestedManyWithoutTaskInput = {
    create?: XOR<EventCreateWithoutTaskInput, EventUncheckedCreateWithoutTaskInput> | EventCreateWithoutTaskInput[] | EventUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: EventCreateOrConnectWithoutTaskInput | EventCreateOrConnectWithoutTaskInput[]
    createMany?: EventCreateManyTaskInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type ExpenseCreateNestedManyWithoutTaskInput = {
    create?: XOR<ExpenseCreateWithoutTaskInput, ExpenseUncheckedCreateWithoutTaskInput> | ExpenseCreateWithoutTaskInput[] | ExpenseUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutTaskInput | ExpenseCreateOrConnectWithoutTaskInput[]
    createMany?: ExpenseCreateManyTaskInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type FundCreateNestedManyWithoutTaskInput = {
    create?: XOR<FundCreateWithoutTaskInput, FundUncheckedCreateWithoutTaskInput> | FundCreateWithoutTaskInput[] | FundUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: FundCreateOrConnectWithoutTaskInput | FundCreateOrConnectWithoutTaskInput[]
    createMany?: FundCreateManyTaskInputEnvelope
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutTaskMemberInput = {
    create?: XOR<UserCreateWithoutTaskMemberInput, UserUncheckedCreateWithoutTaskMemberInput> | UserCreateWithoutTaskMemberInput[] | UserUncheckedCreateWithoutTaskMemberInput[]
    connectOrCreate?: UserCreateOrConnectWithoutTaskMemberInput | UserCreateOrConnectWithoutTaskMemberInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutTaskInput = {
    create?: XOR<NoteCreateWithoutTaskInput, NoteUncheckedCreateWithoutTaskInput> | NoteCreateWithoutTaskInput[] | NoteUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutTaskInput | NoteCreateOrConnectWithoutTaskInput[]
    createMany?: NoteCreateManyTaskInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type StageUncheckedCreateNestedManyWithoutTaskInput = {
    create?: XOR<StageCreateWithoutTaskInput, StageUncheckedCreateWithoutTaskInput> | StageCreateWithoutTaskInput[] | StageUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: StageCreateOrConnectWithoutTaskInput | StageCreateOrConnectWithoutTaskInput[]
    createMany?: StageCreateManyTaskInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type EventUncheckedCreateNestedManyWithoutTaskInput = {
    create?: XOR<EventCreateWithoutTaskInput, EventUncheckedCreateWithoutTaskInput> | EventCreateWithoutTaskInput[] | EventUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: EventCreateOrConnectWithoutTaskInput | EventCreateOrConnectWithoutTaskInput[]
    createMany?: EventCreateManyTaskInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type ExpenseUncheckedCreateNestedManyWithoutTaskInput = {
    create?: XOR<ExpenseCreateWithoutTaskInput, ExpenseUncheckedCreateWithoutTaskInput> | ExpenseCreateWithoutTaskInput[] | ExpenseUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutTaskInput | ExpenseCreateOrConnectWithoutTaskInput[]
    createMany?: ExpenseCreateManyTaskInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type FundUncheckedCreateNestedManyWithoutTaskInput = {
    create?: XOR<FundCreateWithoutTaskInput, FundUncheckedCreateWithoutTaskInput> | FundCreateWithoutTaskInput[] | FundUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: FundCreateOrConnectWithoutTaskInput | FundCreateOrConnectWithoutTaskInput[]
    createMany?: FundCreateManyTaskInputEnvelope
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
  }

  export type MilestoneUpdateOneRequiredWithoutTasksNestedInput = {
    create?: XOR<MilestoneCreateWithoutTasksInput, MilestoneUncheckedCreateWithoutTasksInput>
    connectOrCreate?: MilestoneCreateOrConnectWithoutTasksInput
    upsert?: MilestoneUpsertWithoutTasksInput
    connect?: MilestoneWhereUniqueInput
    update?: XOR<XOR<MilestoneUpdateToOneWithWhereWithoutTasksInput, MilestoneUpdateWithoutTasksInput>, MilestoneUncheckedUpdateWithoutTasksInput>
  }

  export type UserUpdateOneWithoutTaskAssigneeNestedInput = {
    create?: XOR<UserCreateWithoutTaskAssigneeInput, UserUncheckedCreateWithoutTaskAssigneeInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskAssigneeInput
    upsert?: UserUpsertWithoutTaskAssigneeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTaskAssigneeInput, UserUpdateWithoutTaskAssigneeInput>, UserUncheckedUpdateWithoutTaskAssigneeInput>
  }

  export type UserUpdateOneWithoutCreatorTaskNestedInput = {
    create?: XOR<UserCreateWithoutCreatorTaskInput, UserUncheckedCreateWithoutCreatorTaskInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorTaskInput
    upsert?: UserUpsertWithoutCreatorTaskInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatorTaskInput, UserUpdateWithoutCreatorTaskInput>, UserUncheckedUpdateWithoutCreatorTaskInput>
  }

  export type UserUpdateOneWithoutUpdaterTaskNestedInput = {
    create?: XOR<UserCreateWithoutUpdaterTaskInput, UserUncheckedCreateWithoutUpdaterTaskInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterTaskInput
    upsert?: UserUpsertWithoutUpdaterTaskInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdaterTaskInput, UserUpdateWithoutUpdaterTaskInput>, UserUncheckedUpdateWithoutUpdaterTaskInput>
  }

  export type UserUpdateManyWithoutTaskMemberNestedInput = {
    create?: XOR<UserCreateWithoutTaskMemberInput, UserUncheckedCreateWithoutTaskMemberInput> | UserCreateWithoutTaskMemberInput[] | UserUncheckedCreateWithoutTaskMemberInput[]
    connectOrCreate?: UserCreateOrConnectWithoutTaskMemberInput | UserCreateOrConnectWithoutTaskMemberInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutTaskMemberInput | UserUpsertWithWhereUniqueWithoutTaskMemberInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutTaskMemberInput | UserUpdateWithWhereUniqueWithoutTaskMemberInput[]
    updateMany?: UserUpdateManyWithWhereWithoutTaskMemberInput | UserUpdateManyWithWhereWithoutTaskMemberInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type NoteUpdateManyWithoutTaskNestedInput = {
    create?: XOR<NoteCreateWithoutTaskInput, NoteUncheckedCreateWithoutTaskInput> | NoteCreateWithoutTaskInput[] | NoteUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutTaskInput | NoteCreateOrConnectWithoutTaskInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutTaskInput | NoteUpsertWithWhereUniqueWithoutTaskInput[]
    createMany?: NoteCreateManyTaskInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutTaskInput | NoteUpdateWithWhereUniqueWithoutTaskInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutTaskInput | NoteUpdateManyWithWhereWithoutTaskInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type StageUpdateManyWithoutTaskNestedInput = {
    create?: XOR<StageCreateWithoutTaskInput, StageUncheckedCreateWithoutTaskInput> | StageCreateWithoutTaskInput[] | StageUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: StageCreateOrConnectWithoutTaskInput | StageCreateOrConnectWithoutTaskInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutTaskInput | StageUpsertWithWhereUniqueWithoutTaskInput[]
    createMany?: StageCreateManyTaskInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutTaskInput | StageUpdateWithWhereUniqueWithoutTaskInput[]
    updateMany?: StageUpdateManyWithWhereWithoutTaskInput | StageUpdateManyWithWhereWithoutTaskInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type EventUpdateManyWithoutTaskNestedInput = {
    create?: XOR<EventCreateWithoutTaskInput, EventUncheckedCreateWithoutTaskInput> | EventCreateWithoutTaskInput[] | EventUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: EventCreateOrConnectWithoutTaskInput | EventCreateOrConnectWithoutTaskInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutTaskInput | EventUpsertWithWhereUniqueWithoutTaskInput[]
    createMany?: EventCreateManyTaskInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutTaskInput | EventUpdateWithWhereUniqueWithoutTaskInput[]
    updateMany?: EventUpdateManyWithWhereWithoutTaskInput | EventUpdateManyWithWhereWithoutTaskInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type ExpenseUpdateManyWithoutTaskNestedInput = {
    create?: XOR<ExpenseCreateWithoutTaskInput, ExpenseUncheckedCreateWithoutTaskInput> | ExpenseCreateWithoutTaskInput[] | ExpenseUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutTaskInput | ExpenseCreateOrConnectWithoutTaskInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutTaskInput | ExpenseUpsertWithWhereUniqueWithoutTaskInput[]
    createMany?: ExpenseCreateManyTaskInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutTaskInput | ExpenseUpdateWithWhereUniqueWithoutTaskInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutTaskInput | ExpenseUpdateManyWithWhereWithoutTaskInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type FundUpdateManyWithoutTaskNestedInput = {
    create?: XOR<FundCreateWithoutTaskInput, FundUncheckedCreateWithoutTaskInput> | FundCreateWithoutTaskInput[] | FundUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: FundCreateOrConnectWithoutTaskInput | FundCreateOrConnectWithoutTaskInput[]
    upsert?: FundUpsertWithWhereUniqueWithoutTaskInput | FundUpsertWithWhereUniqueWithoutTaskInput[]
    createMany?: FundCreateManyTaskInputEnvelope
    set?: FundWhereUniqueInput | FundWhereUniqueInput[]
    disconnect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    delete?: FundWhereUniqueInput | FundWhereUniqueInput[]
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    update?: FundUpdateWithWhereUniqueWithoutTaskInput | FundUpdateWithWhereUniqueWithoutTaskInput[]
    updateMany?: FundUpdateManyWithWhereWithoutTaskInput | FundUpdateManyWithWhereWithoutTaskInput[]
    deleteMany?: FundScalarWhereInput | FundScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutTaskMemberNestedInput = {
    create?: XOR<UserCreateWithoutTaskMemberInput, UserUncheckedCreateWithoutTaskMemberInput> | UserCreateWithoutTaskMemberInput[] | UserUncheckedCreateWithoutTaskMemberInput[]
    connectOrCreate?: UserCreateOrConnectWithoutTaskMemberInput | UserCreateOrConnectWithoutTaskMemberInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutTaskMemberInput | UserUpsertWithWhereUniqueWithoutTaskMemberInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutTaskMemberInput | UserUpdateWithWhereUniqueWithoutTaskMemberInput[]
    updateMany?: UserUpdateManyWithWhereWithoutTaskMemberInput | UserUpdateManyWithWhereWithoutTaskMemberInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutTaskNestedInput = {
    create?: XOR<NoteCreateWithoutTaskInput, NoteUncheckedCreateWithoutTaskInput> | NoteCreateWithoutTaskInput[] | NoteUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutTaskInput | NoteCreateOrConnectWithoutTaskInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutTaskInput | NoteUpsertWithWhereUniqueWithoutTaskInput[]
    createMany?: NoteCreateManyTaskInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutTaskInput | NoteUpdateWithWhereUniqueWithoutTaskInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutTaskInput | NoteUpdateManyWithWhereWithoutTaskInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type StageUncheckedUpdateManyWithoutTaskNestedInput = {
    create?: XOR<StageCreateWithoutTaskInput, StageUncheckedCreateWithoutTaskInput> | StageCreateWithoutTaskInput[] | StageUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: StageCreateOrConnectWithoutTaskInput | StageCreateOrConnectWithoutTaskInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutTaskInput | StageUpsertWithWhereUniqueWithoutTaskInput[]
    createMany?: StageCreateManyTaskInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutTaskInput | StageUpdateWithWhereUniqueWithoutTaskInput[]
    updateMany?: StageUpdateManyWithWhereWithoutTaskInput | StageUpdateManyWithWhereWithoutTaskInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type EventUncheckedUpdateManyWithoutTaskNestedInput = {
    create?: XOR<EventCreateWithoutTaskInput, EventUncheckedCreateWithoutTaskInput> | EventCreateWithoutTaskInput[] | EventUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: EventCreateOrConnectWithoutTaskInput | EventCreateOrConnectWithoutTaskInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutTaskInput | EventUpsertWithWhereUniqueWithoutTaskInput[]
    createMany?: EventCreateManyTaskInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutTaskInput | EventUpdateWithWhereUniqueWithoutTaskInput[]
    updateMany?: EventUpdateManyWithWhereWithoutTaskInput | EventUpdateManyWithWhereWithoutTaskInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type ExpenseUncheckedUpdateManyWithoutTaskNestedInput = {
    create?: XOR<ExpenseCreateWithoutTaskInput, ExpenseUncheckedCreateWithoutTaskInput> | ExpenseCreateWithoutTaskInput[] | ExpenseUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutTaskInput | ExpenseCreateOrConnectWithoutTaskInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutTaskInput | ExpenseUpsertWithWhereUniqueWithoutTaskInput[]
    createMany?: ExpenseCreateManyTaskInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutTaskInput | ExpenseUpdateWithWhereUniqueWithoutTaskInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutTaskInput | ExpenseUpdateManyWithWhereWithoutTaskInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type FundUncheckedUpdateManyWithoutTaskNestedInput = {
    create?: XOR<FundCreateWithoutTaskInput, FundUncheckedCreateWithoutTaskInput> | FundCreateWithoutTaskInput[] | FundUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: FundCreateOrConnectWithoutTaskInput | FundCreateOrConnectWithoutTaskInput[]
    upsert?: FundUpsertWithWhereUniqueWithoutTaskInput | FundUpsertWithWhereUniqueWithoutTaskInput[]
    createMany?: FundCreateManyTaskInputEnvelope
    set?: FundWhereUniqueInput | FundWhereUniqueInput[]
    disconnect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    delete?: FundWhereUniqueInput | FundWhereUniqueInput[]
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    update?: FundUpdateWithWhereUniqueWithoutTaskInput | FundUpdateWithWhereUniqueWithoutTaskInput[]
    updateMany?: FundUpdateManyWithWhereWithoutTaskInput | FundUpdateManyWithWhereWithoutTaskInput[]
    deleteMany?: FundScalarWhereInput | FundScalarWhereInput[]
  }

  export type RoleCreateNestedOneWithoutUsersInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput
    connect?: RoleWhereUniqueInput
  }

  export type OrganizationCreateNestedOneWithoutUsersInput = {
    create?: XOR<OrganizationCreateWithoutUsersInput, OrganizationUncheckedCreateWithoutUsersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutUsersInput
    connect?: OrganizationWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutUserInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    connect?: ProfileWhereUniqueInput
  }

  export type BudgetCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<BudgetCreateWithoutAssigneeInput, BudgetUncheckedCreateWithoutAssigneeInput> | BudgetCreateWithoutAssigneeInput[] | BudgetUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutAssigneeInput | BudgetCreateOrConnectWithoutAssigneeInput[]
    createMany?: BudgetCreateManyAssigneeInputEnvelope
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
  }

  export type BudgetCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<BudgetCreateWithoutCreatedByInput, BudgetUncheckedCreateWithoutCreatedByInput> | BudgetCreateWithoutCreatedByInput[] | BudgetUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutCreatedByInput | BudgetCreateOrConnectWithoutCreatedByInput[]
    createMany?: BudgetCreateManyCreatedByInputEnvelope
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
  }

  export type BudgetCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<BudgetCreateWithoutUpdatedByInput, BudgetUncheckedCreateWithoutUpdatedByInput> | BudgetCreateWithoutUpdatedByInput[] | BudgetUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutUpdatedByInput | BudgetCreateOrConnectWithoutUpdatedByInput[]
    createMany?: BudgetCreateManyUpdatedByInputEnvelope
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
  }

  export type ClientCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ClientCreateWithoutCreatedByInput, ClientUncheckedCreateWithoutCreatedByInput> | ClientCreateWithoutCreatedByInput[] | ClientUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutCreatedByInput | ClientCreateOrConnectWithoutCreatedByInput[]
    createMany?: ClientCreateManyCreatedByInputEnvelope
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
  }

  export type ClientCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ClientCreateWithoutUpdatedByInput, ClientUncheckedCreateWithoutUpdatedByInput> | ClientCreateWithoutUpdatedByInput[] | ClientUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutUpdatedByInput | ClientCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ClientCreateManyUpdatedByInputEnvelope
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
  }

  export type EventCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<EventCreateWithoutCreatedByInput, EventUncheckedCreateWithoutCreatedByInput> | EventCreateWithoutCreatedByInput[] | EventUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: EventCreateOrConnectWithoutCreatedByInput | EventCreateOrConnectWithoutCreatedByInput[]
    createMany?: EventCreateManyCreatedByInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type EventCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<EventCreateWithoutUpdatedByInput, EventUncheckedCreateWithoutUpdatedByInput> | EventCreateWithoutUpdatedByInput[] | EventUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: EventCreateOrConnectWithoutUpdatedByInput | EventCreateOrConnectWithoutUpdatedByInput[]
    createMany?: EventCreateManyUpdatedByInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type ExpenseCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ExpenseCreateWithoutCreatedByInput, ExpenseUncheckedCreateWithoutCreatedByInput> | ExpenseCreateWithoutCreatedByInput[] | ExpenseUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCreatedByInput | ExpenseCreateOrConnectWithoutCreatedByInput[]
    createMany?: ExpenseCreateManyCreatedByInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type ExpenseCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ExpenseCreateWithoutUpdatedByInput, ExpenseUncheckedCreateWithoutUpdatedByInput> | ExpenseCreateWithoutUpdatedByInput[] | ExpenseUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutUpdatedByInput | ExpenseCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ExpenseCreateManyUpdatedByInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type FundCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<FundCreateWithoutAssigneeInput, FundUncheckedCreateWithoutAssigneeInput> | FundCreateWithoutAssigneeInput[] | FundUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: FundCreateOrConnectWithoutAssigneeInput | FundCreateOrConnectWithoutAssigneeInput[]
    createMany?: FundCreateManyAssigneeInputEnvelope
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
  }

  export type FundCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<FundCreateWithoutCreatedByInput, FundUncheckedCreateWithoutCreatedByInput> | FundCreateWithoutCreatedByInput[] | FundUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: FundCreateOrConnectWithoutCreatedByInput | FundCreateOrConnectWithoutCreatedByInput[]
    createMany?: FundCreateManyCreatedByInputEnvelope
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
  }

  export type FundCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<FundCreateWithoutUpdatedByInput, FundUncheckedCreateWithoutUpdatedByInput> | FundCreateWithoutUpdatedByInput[] | FundUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: FundCreateOrConnectWithoutUpdatedByInput | FundCreateOrConnectWithoutUpdatedByInput[]
    createMany?: FundCreateManyUpdatedByInputEnvelope
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
  }

  export type MilestoneCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<MilestoneCreateWithoutAssigneeInput, MilestoneUncheckedCreateWithoutAssigneeInput> | MilestoneCreateWithoutAssigneeInput[] | MilestoneUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutAssigneeInput | MilestoneCreateOrConnectWithoutAssigneeInput[]
    createMany?: MilestoneCreateManyAssigneeInputEnvelope
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
  }

  export type MilestoneCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<MilestoneCreateWithoutCreatedByInput, MilestoneUncheckedCreateWithoutCreatedByInput> | MilestoneCreateWithoutCreatedByInput[] | MilestoneUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutCreatedByInput | MilestoneCreateOrConnectWithoutCreatedByInput[]
    createMany?: MilestoneCreateManyCreatedByInputEnvelope
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
  }

  export type MilestoneCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<MilestoneCreateWithoutUpdatedByInput, MilestoneUncheckedCreateWithoutUpdatedByInput> | MilestoneCreateWithoutUpdatedByInput[] | MilestoneUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutUpdatedByInput | MilestoneCreateOrConnectWithoutUpdatedByInput[]
    createMany?: MilestoneCreateManyUpdatedByInputEnvelope
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
  }

  export type NoteCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<NoteCreateWithoutCreatedByInput, NoteUncheckedCreateWithoutCreatedByInput> | NoteCreateWithoutCreatedByInput[] | NoteUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutCreatedByInput | NoteCreateOrConnectWithoutCreatedByInput[]
    createMany?: NoteCreateManyCreatedByInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type NoteCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<NoteCreateWithoutUpdatedByInput, NoteUncheckedCreateWithoutUpdatedByInput> | NoteCreateWithoutUpdatedByInput[] | NoteUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutUpdatedByInput | NoteCreateOrConnectWithoutUpdatedByInput[]
    createMany?: NoteCreateManyUpdatedByInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ProductCreateWithoutCreatedByInput, ProductUncheckedCreateWithoutCreatedByInput> | ProductCreateWithoutCreatedByInput[] | ProductUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCreatedByInput | ProductCreateOrConnectWithoutCreatedByInput[]
    createMany?: ProductCreateManyCreatedByInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ProductCreateWithoutUpdatedByInput, ProductUncheckedCreateWithoutUpdatedByInput> | ProductCreateWithoutUpdatedByInput[] | ProductUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUpdatedByInput | ProductCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ProductCreateManyUpdatedByInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProjectCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<ProjectCreateWithoutAssigneeInput, ProjectUncheckedCreateWithoutAssigneeInput> | ProjectCreateWithoutAssigneeInput[] | ProjectUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutAssigneeInput | ProjectCreateOrConnectWithoutAssigneeInput[]
    createMany?: ProjectCreateManyAssigneeInputEnvelope
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
  }

  export type ProjectCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ProjectCreateWithoutCreatedByInput, ProjectUncheckedCreateWithoutCreatedByInput> | ProjectCreateWithoutCreatedByInput[] | ProjectUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutCreatedByInput | ProjectCreateOrConnectWithoutCreatedByInput[]
    createMany?: ProjectCreateManyCreatedByInputEnvelope
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
  }

  export type ProjectCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ProjectCreateWithoutUpdatedByInput, ProjectUncheckedCreateWithoutUpdatedByInput> | ProjectCreateWithoutUpdatedByInput[] | ProjectUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutUpdatedByInput | ProjectCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ProjectCreateManyUpdatedByInputEnvelope
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
  }

  export type ProjectCreateNestedManyWithoutMembersInput = {
    create?: XOR<ProjectCreateWithoutMembersInput, ProjectUncheckedCreateWithoutMembersInput> | ProjectCreateWithoutMembersInput[] | ProjectUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutMembersInput | ProjectCreateOrConnectWithoutMembersInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
  }

  export type StageCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<StageCreateWithoutCreatedByInput, StageUncheckedCreateWithoutCreatedByInput> | StageCreateWithoutCreatedByInput[] | StageUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: StageCreateOrConnectWithoutCreatedByInput | StageCreateOrConnectWithoutCreatedByInput[]
    createMany?: StageCreateManyCreatedByInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type StageCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<StageCreateWithoutUpdatedByInput, StageUncheckedCreateWithoutUpdatedByInput> | StageCreateWithoutUpdatedByInput[] | StageUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: StageCreateOrConnectWithoutUpdatedByInput | StageCreateOrConnectWithoutUpdatedByInput[]
    createMany?: StageCreateManyUpdatedByInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput> | TaskCreateWithoutAssigneeInput[] | TaskUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssigneeInput | TaskCreateOrConnectWithoutAssigneeInput[]
    createMany?: TaskCreateManyAssigneeInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<TaskCreateWithoutCreatedByInput, TaskUncheckedCreateWithoutCreatedByInput> | TaskCreateWithoutCreatedByInput[] | TaskUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCreatedByInput | TaskCreateOrConnectWithoutCreatedByInput[]
    createMany?: TaskCreateManyCreatedByInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<TaskCreateWithoutUpdatedByInput, TaskUncheckedCreateWithoutUpdatedByInput> | TaskCreateWithoutUpdatedByInput[] | TaskUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutUpdatedByInput | TaskCreateOrConnectWithoutUpdatedByInput[]
    createMany?: TaskCreateManyUpdatedByInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutMembersInput = {
    create?: XOR<TaskCreateWithoutMembersInput, TaskUncheckedCreateWithoutMembersInput> | TaskCreateWithoutMembersInput[] | TaskUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutMembersInput | TaskCreateOrConnectWithoutMembersInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type PipelineCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<PipelineCreateWithoutAssigneeInput, PipelineUncheckedCreateWithoutAssigneeInput> | PipelineCreateWithoutAssigneeInput[] | PipelineUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutAssigneeInput | PipelineCreateOrConnectWithoutAssigneeInput[]
    createMany?: PipelineCreateManyAssigneeInputEnvelope
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type PipelineCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<PipelineCreateWithoutCreatedByInput, PipelineUncheckedCreateWithoutCreatedByInput> | PipelineCreateWithoutCreatedByInput[] | PipelineUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutCreatedByInput | PipelineCreateOrConnectWithoutCreatedByInput[]
    createMany?: PipelineCreateManyCreatedByInputEnvelope
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type PipelineCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<PipelineCreateWithoutUpdatedByInput, PipelineUncheckedCreateWithoutUpdatedByInput> | PipelineCreateWithoutUpdatedByInput[] | PipelineUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutUpdatedByInput | PipelineCreateOrConnectWithoutUpdatedByInput[]
    createMany?: PipelineCreateManyUpdatedByInputEnvelope
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type PipelineCreateNestedManyWithoutMembersInput = {
    create?: XOR<PipelineCreateWithoutMembersInput, PipelineUncheckedCreateWithoutMembersInput> | PipelineCreateWithoutMembersInput[] | PipelineUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutMembersInput | PipelineCreateOrConnectWithoutMembersInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type VendorCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<VendorCreateWithoutCreatedByInput, VendorUncheckedCreateWithoutCreatedByInput> | VendorCreateWithoutCreatedByInput[] | VendorUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: VendorCreateOrConnectWithoutCreatedByInput | VendorCreateOrConnectWithoutCreatedByInput[]
    createMany?: VendorCreateManyCreatedByInputEnvelope
    connect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
  }

  export type VendorCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<VendorCreateWithoutUpdatedByInput, VendorUncheckedCreateWithoutUpdatedByInput> | VendorCreateWithoutUpdatedByInput[] | VendorUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: VendorCreateOrConnectWithoutUpdatedByInput | VendorCreateOrConnectWithoutUpdatedByInput[]
    createMany?: VendorCreateManyUpdatedByInputEnvelope
    connect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
  }

  export type ProfileCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ProfileCreateWithoutCreatedByInput, ProfileUncheckedCreateWithoutCreatedByInput> | ProfileCreateWithoutCreatedByInput[] | ProfileUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutCreatedByInput | ProfileCreateOrConnectWithoutCreatedByInput[]
    createMany?: ProfileCreateManyCreatedByInputEnvelope
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
  }

  export type ProfileCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ProfileCreateWithoutUpdatedByInput, ProfileUncheckedCreateWithoutUpdatedByInput> | ProfileCreateWithoutUpdatedByInput[] | ProfileUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutUpdatedByInput | ProfileCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ProfileCreateManyUpdatedByInputEnvelope
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
  }

  export type CostTypeCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<CostTypeCreateWithoutCreatedByInput, CostTypeUncheckedCreateWithoutCreatedByInput> | CostTypeCreateWithoutCreatedByInput[] | CostTypeUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: CostTypeCreateOrConnectWithoutCreatedByInput | CostTypeCreateOrConnectWithoutCreatedByInput[]
    createMany?: CostTypeCreateManyCreatedByInputEnvelope
    connect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
  }

  export type CostTypeCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<CostTypeCreateWithoutUpdatedByInput, CostTypeUncheckedCreateWithoutUpdatedByInput> | CostTypeCreateWithoutUpdatedByInput[] | CostTypeUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: CostTypeCreateOrConnectWithoutUpdatedByInput | CostTypeCreateOrConnectWithoutUpdatedByInput[]
    createMany?: CostTypeCreateManyUpdatedByInputEnvelope
    connect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
  }

  export type ProfileUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    connect?: ProfileWhereUniqueInput
  }

  export type BudgetUncheckedCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<BudgetCreateWithoutAssigneeInput, BudgetUncheckedCreateWithoutAssigneeInput> | BudgetCreateWithoutAssigneeInput[] | BudgetUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutAssigneeInput | BudgetCreateOrConnectWithoutAssigneeInput[]
    createMany?: BudgetCreateManyAssigneeInputEnvelope
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
  }

  export type BudgetUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<BudgetCreateWithoutCreatedByInput, BudgetUncheckedCreateWithoutCreatedByInput> | BudgetCreateWithoutCreatedByInput[] | BudgetUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutCreatedByInput | BudgetCreateOrConnectWithoutCreatedByInput[]
    createMany?: BudgetCreateManyCreatedByInputEnvelope
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
  }

  export type BudgetUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<BudgetCreateWithoutUpdatedByInput, BudgetUncheckedCreateWithoutUpdatedByInput> | BudgetCreateWithoutUpdatedByInput[] | BudgetUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutUpdatedByInput | BudgetCreateOrConnectWithoutUpdatedByInput[]
    createMany?: BudgetCreateManyUpdatedByInputEnvelope
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
  }

  export type ClientUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ClientCreateWithoutCreatedByInput, ClientUncheckedCreateWithoutCreatedByInput> | ClientCreateWithoutCreatedByInput[] | ClientUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutCreatedByInput | ClientCreateOrConnectWithoutCreatedByInput[]
    createMany?: ClientCreateManyCreatedByInputEnvelope
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
  }

  export type ClientUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ClientCreateWithoutUpdatedByInput, ClientUncheckedCreateWithoutUpdatedByInput> | ClientCreateWithoutUpdatedByInput[] | ClientUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutUpdatedByInput | ClientCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ClientCreateManyUpdatedByInputEnvelope
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
  }

  export type EventUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<EventCreateWithoutCreatedByInput, EventUncheckedCreateWithoutCreatedByInput> | EventCreateWithoutCreatedByInput[] | EventUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: EventCreateOrConnectWithoutCreatedByInput | EventCreateOrConnectWithoutCreatedByInput[]
    createMany?: EventCreateManyCreatedByInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type EventUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<EventCreateWithoutUpdatedByInput, EventUncheckedCreateWithoutUpdatedByInput> | EventCreateWithoutUpdatedByInput[] | EventUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: EventCreateOrConnectWithoutUpdatedByInput | EventCreateOrConnectWithoutUpdatedByInput[]
    createMany?: EventCreateManyUpdatedByInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type ExpenseUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ExpenseCreateWithoutCreatedByInput, ExpenseUncheckedCreateWithoutCreatedByInput> | ExpenseCreateWithoutCreatedByInput[] | ExpenseUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCreatedByInput | ExpenseCreateOrConnectWithoutCreatedByInput[]
    createMany?: ExpenseCreateManyCreatedByInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ExpenseCreateWithoutUpdatedByInput, ExpenseUncheckedCreateWithoutUpdatedByInput> | ExpenseCreateWithoutUpdatedByInput[] | ExpenseUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutUpdatedByInput | ExpenseCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ExpenseCreateManyUpdatedByInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type FundUncheckedCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<FundCreateWithoutAssigneeInput, FundUncheckedCreateWithoutAssigneeInput> | FundCreateWithoutAssigneeInput[] | FundUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: FundCreateOrConnectWithoutAssigneeInput | FundCreateOrConnectWithoutAssigneeInput[]
    createMany?: FundCreateManyAssigneeInputEnvelope
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
  }

  export type FundUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<FundCreateWithoutCreatedByInput, FundUncheckedCreateWithoutCreatedByInput> | FundCreateWithoutCreatedByInput[] | FundUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: FundCreateOrConnectWithoutCreatedByInput | FundCreateOrConnectWithoutCreatedByInput[]
    createMany?: FundCreateManyCreatedByInputEnvelope
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
  }

  export type FundUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<FundCreateWithoutUpdatedByInput, FundUncheckedCreateWithoutUpdatedByInput> | FundCreateWithoutUpdatedByInput[] | FundUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: FundCreateOrConnectWithoutUpdatedByInput | FundCreateOrConnectWithoutUpdatedByInput[]
    createMany?: FundCreateManyUpdatedByInputEnvelope
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
  }

  export type MilestoneUncheckedCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<MilestoneCreateWithoutAssigneeInput, MilestoneUncheckedCreateWithoutAssigneeInput> | MilestoneCreateWithoutAssigneeInput[] | MilestoneUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutAssigneeInput | MilestoneCreateOrConnectWithoutAssigneeInput[]
    createMany?: MilestoneCreateManyAssigneeInputEnvelope
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
  }

  export type MilestoneUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<MilestoneCreateWithoutCreatedByInput, MilestoneUncheckedCreateWithoutCreatedByInput> | MilestoneCreateWithoutCreatedByInput[] | MilestoneUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutCreatedByInput | MilestoneCreateOrConnectWithoutCreatedByInput[]
    createMany?: MilestoneCreateManyCreatedByInputEnvelope
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
  }

  export type MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<MilestoneCreateWithoutUpdatedByInput, MilestoneUncheckedCreateWithoutUpdatedByInput> | MilestoneCreateWithoutUpdatedByInput[] | MilestoneUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutUpdatedByInput | MilestoneCreateOrConnectWithoutUpdatedByInput[]
    createMany?: MilestoneCreateManyUpdatedByInputEnvelope
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<NoteCreateWithoutCreatedByInput, NoteUncheckedCreateWithoutCreatedByInput> | NoteCreateWithoutCreatedByInput[] | NoteUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutCreatedByInput | NoteCreateOrConnectWithoutCreatedByInput[]
    createMany?: NoteCreateManyCreatedByInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<NoteCreateWithoutUpdatedByInput, NoteUncheckedCreateWithoutUpdatedByInput> | NoteCreateWithoutUpdatedByInput[] | NoteUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutUpdatedByInput | NoteCreateOrConnectWithoutUpdatedByInput[]
    createMany?: NoteCreateManyUpdatedByInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ProductCreateWithoutCreatedByInput, ProductUncheckedCreateWithoutCreatedByInput> | ProductCreateWithoutCreatedByInput[] | ProductUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCreatedByInput | ProductCreateOrConnectWithoutCreatedByInput[]
    createMany?: ProductCreateManyCreatedByInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ProductCreateWithoutUpdatedByInput, ProductUncheckedCreateWithoutUpdatedByInput> | ProductCreateWithoutUpdatedByInput[] | ProductUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUpdatedByInput | ProductCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ProductCreateManyUpdatedByInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProjectUncheckedCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<ProjectCreateWithoutAssigneeInput, ProjectUncheckedCreateWithoutAssigneeInput> | ProjectCreateWithoutAssigneeInput[] | ProjectUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutAssigneeInput | ProjectCreateOrConnectWithoutAssigneeInput[]
    createMany?: ProjectCreateManyAssigneeInputEnvelope
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
  }

  export type ProjectUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ProjectCreateWithoutCreatedByInput, ProjectUncheckedCreateWithoutCreatedByInput> | ProjectCreateWithoutCreatedByInput[] | ProjectUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutCreatedByInput | ProjectCreateOrConnectWithoutCreatedByInput[]
    createMany?: ProjectCreateManyCreatedByInputEnvelope
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
  }

  export type ProjectUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ProjectCreateWithoutUpdatedByInput, ProjectUncheckedCreateWithoutUpdatedByInput> | ProjectCreateWithoutUpdatedByInput[] | ProjectUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutUpdatedByInput | ProjectCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ProjectCreateManyUpdatedByInputEnvelope
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
  }

  export type ProjectUncheckedCreateNestedManyWithoutMembersInput = {
    create?: XOR<ProjectCreateWithoutMembersInput, ProjectUncheckedCreateWithoutMembersInput> | ProjectCreateWithoutMembersInput[] | ProjectUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutMembersInput | ProjectCreateOrConnectWithoutMembersInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
  }

  export type StageUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<StageCreateWithoutCreatedByInput, StageUncheckedCreateWithoutCreatedByInput> | StageCreateWithoutCreatedByInput[] | StageUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: StageCreateOrConnectWithoutCreatedByInput | StageCreateOrConnectWithoutCreatedByInput[]
    createMany?: StageCreateManyCreatedByInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type StageUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<StageCreateWithoutUpdatedByInput, StageUncheckedCreateWithoutUpdatedByInput> | StageCreateWithoutUpdatedByInput[] | StageUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: StageCreateOrConnectWithoutUpdatedByInput | StageCreateOrConnectWithoutUpdatedByInput[]
    createMany?: StageCreateManyUpdatedByInputEnvelope
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput> | TaskCreateWithoutAssigneeInput[] | TaskUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssigneeInput | TaskCreateOrConnectWithoutAssigneeInput[]
    createMany?: TaskCreateManyAssigneeInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<TaskCreateWithoutCreatedByInput, TaskUncheckedCreateWithoutCreatedByInput> | TaskCreateWithoutCreatedByInput[] | TaskUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCreatedByInput | TaskCreateOrConnectWithoutCreatedByInput[]
    createMany?: TaskCreateManyCreatedByInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<TaskCreateWithoutUpdatedByInput, TaskUncheckedCreateWithoutUpdatedByInput> | TaskCreateWithoutUpdatedByInput[] | TaskUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutUpdatedByInput | TaskCreateOrConnectWithoutUpdatedByInput[]
    createMany?: TaskCreateManyUpdatedByInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutMembersInput = {
    create?: XOR<TaskCreateWithoutMembersInput, TaskUncheckedCreateWithoutMembersInput> | TaskCreateWithoutMembersInput[] | TaskUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutMembersInput | TaskCreateOrConnectWithoutMembersInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type PipelineUncheckedCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<PipelineCreateWithoutAssigneeInput, PipelineUncheckedCreateWithoutAssigneeInput> | PipelineCreateWithoutAssigneeInput[] | PipelineUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutAssigneeInput | PipelineCreateOrConnectWithoutAssigneeInput[]
    createMany?: PipelineCreateManyAssigneeInputEnvelope
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type PipelineUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<PipelineCreateWithoutCreatedByInput, PipelineUncheckedCreateWithoutCreatedByInput> | PipelineCreateWithoutCreatedByInput[] | PipelineUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutCreatedByInput | PipelineCreateOrConnectWithoutCreatedByInput[]
    createMany?: PipelineCreateManyCreatedByInputEnvelope
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type PipelineUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<PipelineCreateWithoutUpdatedByInput, PipelineUncheckedCreateWithoutUpdatedByInput> | PipelineCreateWithoutUpdatedByInput[] | PipelineUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutUpdatedByInput | PipelineCreateOrConnectWithoutUpdatedByInput[]
    createMany?: PipelineCreateManyUpdatedByInputEnvelope
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type PipelineUncheckedCreateNestedManyWithoutMembersInput = {
    create?: XOR<PipelineCreateWithoutMembersInput, PipelineUncheckedCreateWithoutMembersInput> | PipelineCreateWithoutMembersInput[] | PipelineUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutMembersInput | PipelineCreateOrConnectWithoutMembersInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
  }

  export type VendorUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<VendorCreateWithoutCreatedByInput, VendorUncheckedCreateWithoutCreatedByInput> | VendorCreateWithoutCreatedByInput[] | VendorUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: VendorCreateOrConnectWithoutCreatedByInput | VendorCreateOrConnectWithoutCreatedByInput[]
    createMany?: VendorCreateManyCreatedByInputEnvelope
    connect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
  }

  export type VendorUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<VendorCreateWithoutUpdatedByInput, VendorUncheckedCreateWithoutUpdatedByInput> | VendorCreateWithoutUpdatedByInput[] | VendorUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: VendorCreateOrConnectWithoutUpdatedByInput | VendorCreateOrConnectWithoutUpdatedByInput[]
    createMany?: VendorCreateManyUpdatedByInputEnvelope
    connect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
  }

  export type ProfileUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ProfileCreateWithoutCreatedByInput, ProfileUncheckedCreateWithoutCreatedByInput> | ProfileCreateWithoutCreatedByInput[] | ProfileUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutCreatedByInput | ProfileCreateOrConnectWithoutCreatedByInput[]
    createMany?: ProfileCreateManyCreatedByInputEnvelope
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
  }

  export type ProfileUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ProfileCreateWithoutUpdatedByInput, ProfileUncheckedCreateWithoutUpdatedByInput> | ProfileCreateWithoutUpdatedByInput[] | ProfileUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutUpdatedByInput | ProfileCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ProfileCreateManyUpdatedByInputEnvelope
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
  }

  export type CostTypeUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<CostTypeCreateWithoutCreatedByInput, CostTypeUncheckedCreateWithoutCreatedByInput> | CostTypeCreateWithoutCreatedByInput[] | CostTypeUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: CostTypeCreateOrConnectWithoutCreatedByInput | CostTypeCreateOrConnectWithoutCreatedByInput[]
    createMany?: CostTypeCreateManyCreatedByInputEnvelope
    connect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
  }

  export type CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<CostTypeCreateWithoutUpdatedByInput, CostTypeUncheckedCreateWithoutUpdatedByInput> | CostTypeCreateWithoutUpdatedByInput[] | CostTypeUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: CostTypeCreateOrConnectWithoutUpdatedByInput | CostTypeCreateOrConnectWithoutUpdatedByInput[]
    createMany?: CostTypeCreateManyUpdatedByInputEnvelope
    connect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
  }

  export type RoleUpdateOneWithoutUsersNestedInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput
    upsert?: RoleUpsertWithoutUsersInput
    disconnect?: RoleWhereInput | boolean
    delete?: RoleWhereInput | boolean
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutUsersInput, RoleUpdateWithoutUsersInput>, RoleUncheckedUpdateWithoutUsersInput>
  }

  export type OrganizationUpdateOneWithoutUsersNestedInput = {
    create?: XOR<OrganizationCreateWithoutUsersInput, OrganizationUncheckedCreateWithoutUsersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutUsersInput
    upsert?: OrganizationUpsertWithoutUsersInput
    disconnect?: OrganizationWhereInput | boolean
    delete?: OrganizationWhereInput | boolean
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutUsersInput, OrganizationUpdateWithoutUsersInput>, OrganizationUncheckedUpdateWithoutUsersInput>
  }

  export type ProfileUpdateOneWithoutUserNestedInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    upsert?: ProfileUpsertWithoutUserInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutUserInput, ProfileUpdateWithoutUserInput>, ProfileUncheckedUpdateWithoutUserInput>
  }

  export type BudgetUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<BudgetCreateWithoutAssigneeInput, BudgetUncheckedCreateWithoutAssigneeInput> | BudgetCreateWithoutAssigneeInput[] | BudgetUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutAssigneeInput | BudgetCreateOrConnectWithoutAssigneeInput[]
    upsert?: BudgetUpsertWithWhereUniqueWithoutAssigneeInput | BudgetUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: BudgetCreateManyAssigneeInputEnvelope
    set?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    disconnect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    delete?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    update?: BudgetUpdateWithWhereUniqueWithoutAssigneeInput | BudgetUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: BudgetUpdateManyWithWhereWithoutAssigneeInput | BudgetUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: BudgetScalarWhereInput | BudgetScalarWhereInput[]
  }

  export type BudgetUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<BudgetCreateWithoutCreatedByInput, BudgetUncheckedCreateWithoutCreatedByInput> | BudgetCreateWithoutCreatedByInput[] | BudgetUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutCreatedByInput | BudgetCreateOrConnectWithoutCreatedByInput[]
    upsert?: BudgetUpsertWithWhereUniqueWithoutCreatedByInput | BudgetUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: BudgetCreateManyCreatedByInputEnvelope
    set?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    disconnect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    delete?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    update?: BudgetUpdateWithWhereUniqueWithoutCreatedByInput | BudgetUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: BudgetUpdateManyWithWhereWithoutCreatedByInput | BudgetUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: BudgetScalarWhereInput | BudgetScalarWhereInput[]
  }

  export type BudgetUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<BudgetCreateWithoutUpdatedByInput, BudgetUncheckedCreateWithoutUpdatedByInput> | BudgetCreateWithoutUpdatedByInput[] | BudgetUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutUpdatedByInput | BudgetCreateOrConnectWithoutUpdatedByInput[]
    upsert?: BudgetUpsertWithWhereUniqueWithoutUpdatedByInput | BudgetUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: BudgetCreateManyUpdatedByInputEnvelope
    set?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    disconnect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    delete?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    update?: BudgetUpdateWithWhereUniqueWithoutUpdatedByInput | BudgetUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: BudgetUpdateManyWithWhereWithoutUpdatedByInput | BudgetUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: BudgetScalarWhereInput | BudgetScalarWhereInput[]
  }

  export type ClientUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ClientCreateWithoutCreatedByInput, ClientUncheckedCreateWithoutCreatedByInput> | ClientCreateWithoutCreatedByInput[] | ClientUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutCreatedByInput | ClientCreateOrConnectWithoutCreatedByInput[]
    upsert?: ClientUpsertWithWhereUniqueWithoutCreatedByInput | ClientUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ClientCreateManyCreatedByInputEnvelope
    set?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    disconnect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    delete?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    update?: ClientUpdateWithWhereUniqueWithoutCreatedByInput | ClientUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ClientUpdateManyWithWhereWithoutCreatedByInput | ClientUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ClientScalarWhereInput | ClientScalarWhereInput[]
  }

  export type ClientUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ClientCreateWithoutUpdatedByInput, ClientUncheckedCreateWithoutUpdatedByInput> | ClientCreateWithoutUpdatedByInput[] | ClientUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutUpdatedByInput | ClientCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ClientUpsertWithWhereUniqueWithoutUpdatedByInput | ClientUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ClientCreateManyUpdatedByInputEnvelope
    set?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    disconnect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    delete?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    update?: ClientUpdateWithWhereUniqueWithoutUpdatedByInput | ClientUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ClientUpdateManyWithWhereWithoutUpdatedByInput | ClientUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ClientScalarWhereInput | ClientScalarWhereInput[]
  }

  export type EventUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<EventCreateWithoutCreatedByInput, EventUncheckedCreateWithoutCreatedByInput> | EventCreateWithoutCreatedByInput[] | EventUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: EventCreateOrConnectWithoutCreatedByInput | EventCreateOrConnectWithoutCreatedByInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutCreatedByInput | EventUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: EventCreateManyCreatedByInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutCreatedByInput | EventUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: EventUpdateManyWithWhereWithoutCreatedByInput | EventUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type EventUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<EventCreateWithoutUpdatedByInput, EventUncheckedCreateWithoutUpdatedByInput> | EventCreateWithoutUpdatedByInput[] | EventUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: EventCreateOrConnectWithoutUpdatedByInput | EventCreateOrConnectWithoutUpdatedByInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutUpdatedByInput | EventUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: EventCreateManyUpdatedByInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutUpdatedByInput | EventUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: EventUpdateManyWithWhereWithoutUpdatedByInput | EventUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type ExpenseUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ExpenseCreateWithoutCreatedByInput, ExpenseUncheckedCreateWithoutCreatedByInput> | ExpenseCreateWithoutCreatedByInput[] | ExpenseUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCreatedByInput | ExpenseCreateOrConnectWithoutCreatedByInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutCreatedByInput | ExpenseUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ExpenseCreateManyCreatedByInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutCreatedByInput | ExpenseUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutCreatedByInput | ExpenseUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type ExpenseUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ExpenseCreateWithoutUpdatedByInput, ExpenseUncheckedCreateWithoutUpdatedByInput> | ExpenseCreateWithoutUpdatedByInput[] | ExpenseUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutUpdatedByInput | ExpenseCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutUpdatedByInput | ExpenseUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ExpenseCreateManyUpdatedByInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutUpdatedByInput | ExpenseUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutUpdatedByInput | ExpenseUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type FundUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<FundCreateWithoutAssigneeInput, FundUncheckedCreateWithoutAssigneeInput> | FundCreateWithoutAssigneeInput[] | FundUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: FundCreateOrConnectWithoutAssigneeInput | FundCreateOrConnectWithoutAssigneeInput[]
    upsert?: FundUpsertWithWhereUniqueWithoutAssigneeInput | FundUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: FundCreateManyAssigneeInputEnvelope
    set?: FundWhereUniqueInput | FundWhereUniqueInput[]
    disconnect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    delete?: FundWhereUniqueInput | FundWhereUniqueInput[]
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    update?: FundUpdateWithWhereUniqueWithoutAssigneeInput | FundUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: FundUpdateManyWithWhereWithoutAssigneeInput | FundUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: FundScalarWhereInput | FundScalarWhereInput[]
  }

  export type FundUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<FundCreateWithoutCreatedByInput, FundUncheckedCreateWithoutCreatedByInput> | FundCreateWithoutCreatedByInput[] | FundUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: FundCreateOrConnectWithoutCreatedByInput | FundCreateOrConnectWithoutCreatedByInput[]
    upsert?: FundUpsertWithWhereUniqueWithoutCreatedByInput | FundUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: FundCreateManyCreatedByInputEnvelope
    set?: FundWhereUniqueInput | FundWhereUniqueInput[]
    disconnect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    delete?: FundWhereUniqueInput | FundWhereUniqueInput[]
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    update?: FundUpdateWithWhereUniqueWithoutCreatedByInput | FundUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: FundUpdateManyWithWhereWithoutCreatedByInput | FundUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: FundScalarWhereInput | FundScalarWhereInput[]
  }

  export type FundUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<FundCreateWithoutUpdatedByInput, FundUncheckedCreateWithoutUpdatedByInput> | FundCreateWithoutUpdatedByInput[] | FundUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: FundCreateOrConnectWithoutUpdatedByInput | FundCreateOrConnectWithoutUpdatedByInput[]
    upsert?: FundUpsertWithWhereUniqueWithoutUpdatedByInput | FundUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: FundCreateManyUpdatedByInputEnvelope
    set?: FundWhereUniqueInput | FundWhereUniqueInput[]
    disconnect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    delete?: FundWhereUniqueInput | FundWhereUniqueInput[]
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    update?: FundUpdateWithWhereUniqueWithoutUpdatedByInput | FundUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: FundUpdateManyWithWhereWithoutUpdatedByInput | FundUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: FundScalarWhereInput | FundScalarWhereInput[]
  }

  export type MilestoneUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<MilestoneCreateWithoutAssigneeInput, MilestoneUncheckedCreateWithoutAssigneeInput> | MilestoneCreateWithoutAssigneeInput[] | MilestoneUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutAssigneeInput | MilestoneCreateOrConnectWithoutAssigneeInput[]
    upsert?: MilestoneUpsertWithWhereUniqueWithoutAssigneeInput | MilestoneUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: MilestoneCreateManyAssigneeInputEnvelope
    set?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    disconnect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    delete?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    update?: MilestoneUpdateWithWhereUniqueWithoutAssigneeInput | MilestoneUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: MilestoneUpdateManyWithWhereWithoutAssigneeInput | MilestoneUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: MilestoneScalarWhereInput | MilestoneScalarWhereInput[]
  }

  export type MilestoneUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<MilestoneCreateWithoutCreatedByInput, MilestoneUncheckedCreateWithoutCreatedByInput> | MilestoneCreateWithoutCreatedByInput[] | MilestoneUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutCreatedByInput | MilestoneCreateOrConnectWithoutCreatedByInput[]
    upsert?: MilestoneUpsertWithWhereUniqueWithoutCreatedByInput | MilestoneUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: MilestoneCreateManyCreatedByInputEnvelope
    set?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    disconnect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    delete?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    update?: MilestoneUpdateWithWhereUniqueWithoutCreatedByInput | MilestoneUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: MilestoneUpdateManyWithWhereWithoutCreatedByInput | MilestoneUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: MilestoneScalarWhereInput | MilestoneScalarWhereInput[]
  }

  export type MilestoneUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<MilestoneCreateWithoutUpdatedByInput, MilestoneUncheckedCreateWithoutUpdatedByInput> | MilestoneCreateWithoutUpdatedByInput[] | MilestoneUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutUpdatedByInput | MilestoneCreateOrConnectWithoutUpdatedByInput[]
    upsert?: MilestoneUpsertWithWhereUniqueWithoutUpdatedByInput | MilestoneUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: MilestoneCreateManyUpdatedByInputEnvelope
    set?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    disconnect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    delete?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    update?: MilestoneUpdateWithWhereUniqueWithoutUpdatedByInput | MilestoneUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: MilestoneUpdateManyWithWhereWithoutUpdatedByInput | MilestoneUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: MilestoneScalarWhereInput | MilestoneScalarWhereInput[]
  }

  export type NoteUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<NoteCreateWithoutCreatedByInput, NoteUncheckedCreateWithoutCreatedByInput> | NoteCreateWithoutCreatedByInput[] | NoteUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutCreatedByInput | NoteCreateOrConnectWithoutCreatedByInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutCreatedByInput | NoteUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: NoteCreateManyCreatedByInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutCreatedByInput | NoteUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutCreatedByInput | NoteUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type NoteUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<NoteCreateWithoutUpdatedByInput, NoteUncheckedCreateWithoutUpdatedByInput> | NoteCreateWithoutUpdatedByInput[] | NoteUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutUpdatedByInput | NoteCreateOrConnectWithoutUpdatedByInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutUpdatedByInput | NoteUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: NoteCreateManyUpdatedByInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutUpdatedByInput | NoteUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutUpdatedByInput | NoteUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ProductCreateWithoutCreatedByInput, ProductUncheckedCreateWithoutCreatedByInput> | ProductCreateWithoutCreatedByInput[] | ProductUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCreatedByInput | ProductCreateOrConnectWithoutCreatedByInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCreatedByInput | ProductUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ProductCreateManyCreatedByInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCreatedByInput | ProductUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCreatedByInput | ProductUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ProductCreateWithoutUpdatedByInput, ProductUncheckedCreateWithoutUpdatedByInput> | ProductCreateWithoutUpdatedByInput[] | ProductUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUpdatedByInput | ProductCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutUpdatedByInput | ProductUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ProductCreateManyUpdatedByInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutUpdatedByInput | ProductUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutUpdatedByInput | ProductUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProjectUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<ProjectCreateWithoutAssigneeInput, ProjectUncheckedCreateWithoutAssigneeInput> | ProjectCreateWithoutAssigneeInput[] | ProjectUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutAssigneeInput | ProjectCreateOrConnectWithoutAssigneeInput[]
    upsert?: ProjectUpsertWithWhereUniqueWithoutAssigneeInput | ProjectUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: ProjectCreateManyAssigneeInputEnvelope
    set?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    disconnect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    delete?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    update?: ProjectUpdateWithWhereUniqueWithoutAssigneeInput | ProjectUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: ProjectUpdateManyWithWhereWithoutAssigneeInput | ProjectUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
  }

  export type ProjectUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ProjectCreateWithoutCreatedByInput, ProjectUncheckedCreateWithoutCreatedByInput> | ProjectCreateWithoutCreatedByInput[] | ProjectUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutCreatedByInput | ProjectCreateOrConnectWithoutCreatedByInput[]
    upsert?: ProjectUpsertWithWhereUniqueWithoutCreatedByInput | ProjectUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ProjectCreateManyCreatedByInputEnvelope
    set?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    disconnect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    delete?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    update?: ProjectUpdateWithWhereUniqueWithoutCreatedByInput | ProjectUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ProjectUpdateManyWithWhereWithoutCreatedByInput | ProjectUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
  }

  export type ProjectUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ProjectCreateWithoutUpdatedByInput, ProjectUncheckedCreateWithoutUpdatedByInput> | ProjectCreateWithoutUpdatedByInput[] | ProjectUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutUpdatedByInput | ProjectCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ProjectUpsertWithWhereUniqueWithoutUpdatedByInput | ProjectUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ProjectCreateManyUpdatedByInputEnvelope
    set?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    disconnect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    delete?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    update?: ProjectUpdateWithWhereUniqueWithoutUpdatedByInput | ProjectUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ProjectUpdateManyWithWhereWithoutUpdatedByInput | ProjectUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
  }

  export type ProjectUpdateManyWithoutMembersNestedInput = {
    create?: XOR<ProjectCreateWithoutMembersInput, ProjectUncheckedCreateWithoutMembersInput> | ProjectCreateWithoutMembersInput[] | ProjectUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutMembersInput | ProjectCreateOrConnectWithoutMembersInput[]
    upsert?: ProjectUpsertWithWhereUniqueWithoutMembersInput | ProjectUpsertWithWhereUniqueWithoutMembersInput[]
    set?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    disconnect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    delete?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    update?: ProjectUpdateWithWhereUniqueWithoutMembersInput | ProjectUpdateWithWhereUniqueWithoutMembersInput[]
    updateMany?: ProjectUpdateManyWithWhereWithoutMembersInput | ProjectUpdateManyWithWhereWithoutMembersInput[]
    deleteMany?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
  }

  export type StageUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<StageCreateWithoutCreatedByInput, StageUncheckedCreateWithoutCreatedByInput> | StageCreateWithoutCreatedByInput[] | StageUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: StageCreateOrConnectWithoutCreatedByInput | StageCreateOrConnectWithoutCreatedByInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutCreatedByInput | StageUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: StageCreateManyCreatedByInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutCreatedByInput | StageUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: StageUpdateManyWithWhereWithoutCreatedByInput | StageUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type StageUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<StageCreateWithoutUpdatedByInput, StageUncheckedCreateWithoutUpdatedByInput> | StageCreateWithoutUpdatedByInput[] | StageUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: StageCreateOrConnectWithoutUpdatedByInput | StageCreateOrConnectWithoutUpdatedByInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutUpdatedByInput | StageUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: StageCreateManyUpdatedByInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutUpdatedByInput | StageUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: StageUpdateManyWithWhereWithoutUpdatedByInput | StageUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput> | TaskCreateWithoutAssigneeInput[] | TaskUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssigneeInput | TaskCreateOrConnectWithoutAssigneeInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutAssigneeInput | TaskUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: TaskCreateManyAssigneeInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutAssigneeInput | TaskUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutAssigneeInput | TaskUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<TaskCreateWithoutCreatedByInput, TaskUncheckedCreateWithoutCreatedByInput> | TaskCreateWithoutCreatedByInput[] | TaskUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCreatedByInput | TaskCreateOrConnectWithoutCreatedByInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutCreatedByInput | TaskUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: TaskCreateManyCreatedByInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutCreatedByInput | TaskUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutCreatedByInput | TaskUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<TaskCreateWithoutUpdatedByInput, TaskUncheckedCreateWithoutUpdatedByInput> | TaskCreateWithoutUpdatedByInput[] | TaskUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutUpdatedByInput | TaskCreateOrConnectWithoutUpdatedByInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutUpdatedByInput | TaskUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: TaskCreateManyUpdatedByInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutUpdatedByInput | TaskUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutUpdatedByInput | TaskUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutMembersNestedInput = {
    create?: XOR<TaskCreateWithoutMembersInput, TaskUncheckedCreateWithoutMembersInput> | TaskCreateWithoutMembersInput[] | TaskUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutMembersInput | TaskCreateOrConnectWithoutMembersInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutMembersInput | TaskUpsertWithWhereUniqueWithoutMembersInput[]
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutMembersInput | TaskUpdateWithWhereUniqueWithoutMembersInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutMembersInput | TaskUpdateManyWithWhereWithoutMembersInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type PipelineUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<PipelineCreateWithoutAssigneeInput, PipelineUncheckedCreateWithoutAssigneeInput> | PipelineCreateWithoutAssigneeInput[] | PipelineUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutAssigneeInput | PipelineCreateOrConnectWithoutAssigneeInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutAssigneeInput | PipelineUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: PipelineCreateManyAssigneeInputEnvelope
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutAssigneeInput | PipelineUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutAssigneeInput | PipelineUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type PipelineUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<PipelineCreateWithoutCreatedByInput, PipelineUncheckedCreateWithoutCreatedByInput> | PipelineCreateWithoutCreatedByInput[] | PipelineUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutCreatedByInput | PipelineCreateOrConnectWithoutCreatedByInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutCreatedByInput | PipelineUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: PipelineCreateManyCreatedByInputEnvelope
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutCreatedByInput | PipelineUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutCreatedByInput | PipelineUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type PipelineUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<PipelineCreateWithoutUpdatedByInput, PipelineUncheckedCreateWithoutUpdatedByInput> | PipelineCreateWithoutUpdatedByInput[] | PipelineUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutUpdatedByInput | PipelineCreateOrConnectWithoutUpdatedByInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutUpdatedByInput | PipelineUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: PipelineCreateManyUpdatedByInputEnvelope
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutUpdatedByInput | PipelineUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutUpdatedByInput | PipelineUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type PipelineUpdateManyWithoutMembersNestedInput = {
    create?: XOR<PipelineCreateWithoutMembersInput, PipelineUncheckedCreateWithoutMembersInput> | PipelineCreateWithoutMembersInput[] | PipelineUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutMembersInput | PipelineCreateOrConnectWithoutMembersInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutMembersInput | PipelineUpsertWithWhereUniqueWithoutMembersInput[]
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutMembersInput | PipelineUpdateWithWhereUniqueWithoutMembersInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutMembersInput | PipelineUpdateManyWithWhereWithoutMembersInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type VendorUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<VendorCreateWithoutCreatedByInput, VendorUncheckedCreateWithoutCreatedByInput> | VendorCreateWithoutCreatedByInput[] | VendorUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: VendorCreateOrConnectWithoutCreatedByInput | VendorCreateOrConnectWithoutCreatedByInput[]
    upsert?: VendorUpsertWithWhereUniqueWithoutCreatedByInput | VendorUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: VendorCreateManyCreatedByInputEnvelope
    set?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    disconnect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    delete?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    connect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    update?: VendorUpdateWithWhereUniqueWithoutCreatedByInput | VendorUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: VendorUpdateManyWithWhereWithoutCreatedByInput | VendorUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: VendorScalarWhereInput | VendorScalarWhereInput[]
  }

  export type VendorUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<VendorCreateWithoutUpdatedByInput, VendorUncheckedCreateWithoutUpdatedByInput> | VendorCreateWithoutUpdatedByInput[] | VendorUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: VendorCreateOrConnectWithoutUpdatedByInput | VendorCreateOrConnectWithoutUpdatedByInput[]
    upsert?: VendorUpsertWithWhereUniqueWithoutUpdatedByInput | VendorUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: VendorCreateManyUpdatedByInputEnvelope
    set?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    disconnect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    delete?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    connect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    update?: VendorUpdateWithWhereUniqueWithoutUpdatedByInput | VendorUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: VendorUpdateManyWithWhereWithoutUpdatedByInput | VendorUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: VendorScalarWhereInput | VendorScalarWhereInput[]
  }

  export type ProfileUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ProfileCreateWithoutCreatedByInput, ProfileUncheckedCreateWithoutCreatedByInput> | ProfileCreateWithoutCreatedByInput[] | ProfileUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutCreatedByInput | ProfileCreateOrConnectWithoutCreatedByInput[]
    upsert?: ProfileUpsertWithWhereUniqueWithoutCreatedByInput | ProfileUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ProfileCreateManyCreatedByInputEnvelope
    set?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    disconnect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    delete?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    update?: ProfileUpdateWithWhereUniqueWithoutCreatedByInput | ProfileUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ProfileUpdateManyWithWhereWithoutCreatedByInput | ProfileUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
  }

  export type ProfileUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ProfileCreateWithoutUpdatedByInput, ProfileUncheckedCreateWithoutUpdatedByInput> | ProfileCreateWithoutUpdatedByInput[] | ProfileUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutUpdatedByInput | ProfileCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ProfileUpsertWithWhereUniqueWithoutUpdatedByInput | ProfileUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ProfileCreateManyUpdatedByInputEnvelope
    set?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    disconnect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    delete?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    update?: ProfileUpdateWithWhereUniqueWithoutUpdatedByInput | ProfileUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ProfileUpdateManyWithWhereWithoutUpdatedByInput | ProfileUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
  }

  export type CostTypeUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<CostTypeCreateWithoutCreatedByInput, CostTypeUncheckedCreateWithoutCreatedByInput> | CostTypeCreateWithoutCreatedByInput[] | CostTypeUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: CostTypeCreateOrConnectWithoutCreatedByInput | CostTypeCreateOrConnectWithoutCreatedByInput[]
    upsert?: CostTypeUpsertWithWhereUniqueWithoutCreatedByInput | CostTypeUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: CostTypeCreateManyCreatedByInputEnvelope
    set?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    disconnect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    delete?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    connect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    update?: CostTypeUpdateWithWhereUniqueWithoutCreatedByInput | CostTypeUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: CostTypeUpdateManyWithWhereWithoutCreatedByInput | CostTypeUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: CostTypeScalarWhereInput | CostTypeScalarWhereInput[]
  }

  export type CostTypeUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<CostTypeCreateWithoutUpdatedByInput, CostTypeUncheckedCreateWithoutUpdatedByInput> | CostTypeCreateWithoutUpdatedByInput[] | CostTypeUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: CostTypeCreateOrConnectWithoutUpdatedByInput | CostTypeCreateOrConnectWithoutUpdatedByInput[]
    upsert?: CostTypeUpsertWithWhereUniqueWithoutUpdatedByInput | CostTypeUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: CostTypeCreateManyUpdatedByInputEnvelope
    set?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    disconnect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    delete?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    connect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    update?: CostTypeUpdateWithWhereUniqueWithoutUpdatedByInput | CostTypeUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: CostTypeUpdateManyWithWhereWithoutUpdatedByInput | CostTypeUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: CostTypeScalarWhereInput | CostTypeScalarWhereInput[]
  }

  export type ProfileUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    upsert?: ProfileUpsertWithoutUserInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutUserInput, ProfileUpdateWithoutUserInput>, ProfileUncheckedUpdateWithoutUserInput>
  }

  export type BudgetUncheckedUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<BudgetCreateWithoutAssigneeInput, BudgetUncheckedCreateWithoutAssigneeInput> | BudgetCreateWithoutAssigneeInput[] | BudgetUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutAssigneeInput | BudgetCreateOrConnectWithoutAssigneeInput[]
    upsert?: BudgetUpsertWithWhereUniqueWithoutAssigneeInput | BudgetUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: BudgetCreateManyAssigneeInputEnvelope
    set?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    disconnect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    delete?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    update?: BudgetUpdateWithWhereUniqueWithoutAssigneeInput | BudgetUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: BudgetUpdateManyWithWhereWithoutAssigneeInput | BudgetUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: BudgetScalarWhereInput | BudgetScalarWhereInput[]
  }

  export type BudgetUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<BudgetCreateWithoutCreatedByInput, BudgetUncheckedCreateWithoutCreatedByInput> | BudgetCreateWithoutCreatedByInput[] | BudgetUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutCreatedByInput | BudgetCreateOrConnectWithoutCreatedByInput[]
    upsert?: BudgetUpsertWithWhereUniqueWithoutCreatedByInput | BudgetUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: BudgetCreateManyCreatedByInputEnvelope
    set?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    disconnect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    delete?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    update?: BudgetUpdateWithWhereUniqueWithoutCreatedByInput | BudgetUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: BudgetUpdateManyWithWhereWithoutCreatedByInput | BudgetUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: BudgetScalarWhereInput | BudgetScalarWhereInput[]
  }

  export type BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<BudgetCreateWithoutUpdatedByInput, BudgetUncheckedCreateWithoutUpdatedByInput> | BudgetCreateWithoutUpdatedByInput[] | BudgetUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: BudgetCreateOrConnectWithoutUpdatedByInput | BudgetCreateOrConnectWithoutUpdatedByInput[]
    upsert?: BudgetUpsertWithWhereUniqueWithoutUpdatedByInput | BudgetUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: BudgetCreateManyUpdatedByInputEnvelope
    set?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    disconnect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    delete?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    connect?: BudgetWhereUniqueInput | BudgetWhereUniqueInput[]
    update?: BudgetUpdateWithWhereUniqueWithoutUpdatedByInput | BudgetUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: BudgetUpdateManyWithWhereWithoutUpdatedByInput | BudgetUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: BudgetScalarWhereInput | BudgetScalarWhereInput[]
  }

  export type ClientUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ClientCreateWithoutCreatedByInput, ClientUncheckedCreateWithoutCreatedByInput> | ClientCreateWithoutCreatedByInput[] | ClientUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutCreatedByInput | ClientCreateOrConnectWithoutCreatedByInput[]
    upsert?: ClientUpsertWithWhereUniqueWithoutCreatedByInput | ClientUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ClientCreateManyCreatedByInputEnvelope
    set?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    disconnect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    delete?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    update?: ClientUpdateWithWhereUniqueWithoutCreatedByInput | ClientUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ClientUpdateManyWithWhereWithoutCreatedByInput | ClientUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ClientScalarWhereInput | ClientScalarWhereInput[]
  }

  export type ClientUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ClientCreateWithoutUpdatedByInput, ClientUncheckedCreateWithoutUpdatedByInput> | ClientCreateWithoutUpdatedByInput[] | ClientUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutUpdatedByInput | ClientCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ClientUpsertWithWhereUniqueWithoutUpdatedByInput | ClientUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ClientCreateManyUpdatedByInputEnvelope
    set?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    disconnect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    delete?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    update?: ClientUpdateWithWhereUniqueWithoutUpdatedByInput | ClientUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ClientUpdateManyWithWhereWithoutUpdatedByInput | ClientUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ClientScalarWhereInput | ClientScalarWhereInput[]
  }

  export type EventUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<EventCreateWithoutCreatedByInput, EventUncheckedCreateWithoutCreatedByInput> | EventCreateWithoutCreatedByInput[] | EventUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: EventCreateOrConnectWithoutCreatedByInput | EventCreateOrConnectWithoutCreatedByInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutCreatedByInput | EventUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: EventCreateManyCreatedByInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutCreatedByInput | EventUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: EventUpdateManyWithWhereWithoutCreatedByInput | EventUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type EventUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<EventCreateWithoutUpdatedByInput, EventUncheckedCreateWithoutUpdatedByInput> | EventCreateWithoutUpdatedByInput[] | EventUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: EventCreateOrConnectWithoutUpdatedByInput | EventCreateOrConnectWithoutUpdatedByInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutUpdatedByInput | EventUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: EventCreateManyUpdatedByInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutUpdatedByInput | EventUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: EventUpdateManyWithWhereWithoutUpdatedByInput | EventUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ExpenseCreateWithoutCreatedByInput, ExpenseUncheckedCreateWithoutCreatedByInput> | ExpenseCreateWithoutCreatedByInput[] | ExpenseUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCreatedByInput | ExpenseCreateOrConnectWithoutCreatedByInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutCreatedByInput | ExpenseUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ExpenseCreateManyCreatedByInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutCreatedByInput | ExpenseUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutCreatedByInput | ExpenseUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ExpenseCreateWithoutUpdatedByInput, ExpenseUncheckedCreateWithoutUpdatedByInput> | ExpenseCreateWithoutUpdatedByInput[] | ExpenseUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutUpdatedByInput | ExpenseCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutUpdatedByInput | ExpenseUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ExpenseCreateManyUpdatedByInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutUpdatedByInput | ExpenseUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutUpdatedByInput | ExpenseUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type FundUncheckedUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<FundCreateWithoutAssigneeInput, FundUncheckedCreateWithoutAssigneeInput> | FundCreateWithoutAssigneeInput[] | FundUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: FundCreateOrConnectWithoutAssigneeInput | FundCreateOrConnectWithoutAssigneeInput[]
    upsert?: FundUpsertWithWhereUniqueWithoutAssigneeInput | FundUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: FundCreateManyAssigneeInputEnvelope
    set?: FundWhereUniqueInput | FundWhereUniqueInput[]
    disconnect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    delete?: FundWhereUniqueInput | FundWhereUniqueInput[]
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    update?: FundUpdateWithWhereUniqueWithoutAssigneeInput | FundUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: FundUpdateManyWithWhereWithoutAssigneeInput | FundUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: FundScalarWhereInput | FundScalarWhereInput[]
  }

  export type FundUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<FundCreateWithoutCreatedByInput, FundUncheckedCreateWithoutCreatedByInput> | FundCreateWithoutCreatedByInput[] | FundUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: FundCreateOrConnectWithoutCreatedByInput | FundCreateOrConnectWithoutCreatedByInput[]
    upsert?: FundUpsertWithWhereUniqueWithoutCreatedByInput | FundUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: FundCreateManyCreatedByInputEnvelope
    set?: FundWhereUniqueInput | FundWhereUniqueInput[]
    disconnect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    delete?: FundWhereUniqueInput | FundWhereUniqueInput[]
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    update?: FundUpdateWithWhereUniqueWithoutCreatedByInput | FundUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: FundUpdateManyWithWhereWithoutCreatedByInput | FundUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: FundScalarWhereInput | FundScalarWhereInput[]
  }

  export type FundUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<FundCreateWithoutUpdatedByInput, FundUncheckedCreateWithoutUpdatedByInput> | FundCreateWithoutUpdatedByInput[] | FundUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: FundCreateOrConnectWithoutUpdatedByInput | FundCreateOrConnectWithoutUpdatedByInput[]
    upsert?: FundUpsertWithWhereUniqueWithoutUpdatedByInput | FundUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: FundCreateManyUpdatedByInputEnvelope
    set?: FundWhereUniqueInput | FundWhereUniqueInput[]
    disconnect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    delete?: FundWhereUniqueInput | FundWhereUniqueInput[]
    connect?: FundWhereUniqueInput | FundWhereUniqueInput[]
    update?: FundUpdateWithWhereUniqueWithoutUpdatedByInput | FundUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: FundUpdateManyWithWhereWithoutUpdatedByInput | FundUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: FundScalarWhereInput | FundScalarWhereInput[]
  }

  export type MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<MilestoneCreateWithoutAssigneeInput, MilestoneUncheckedCreateWithoutAssigneeInput> | MilestoneCreateWithoutAssigneeInput[] | MilestoneUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutAssigneeInput | MilestoneCreateOrConnectWithoutAssigneeInput[]
    upsert?: MilestoneUpsertWithWhereUniqueWithoutAssigneeInput | MilestoneUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: MilestoneCreateManyAssigneeInputEnvelope
    set?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    disconnect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    delete?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    update?: MilestoneUpdateWithWhereUniqueWithoutAssigneeInput | MilestoneUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: MilestoneUpdateManyWithWhereWithoutAssigneeInput | MilestoneUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: MilestoneScalarWhereInput | MilestoneScalarWhereInput[]
  }

  export type MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<MilestoneCreateWithoutCreatedByInput, MilestoneUncheckedCreateWithoutCreatedByInput> | MilestoneCreateWithoutCreatedByInput[] | MilestoneUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutCreatedByInput | MilestoneCreateOrConnectWithoutCreatedByInput[]
    upsert?: MilestoneUpsertWithWhereUniqueWithoutCreatedByInput | MilestoneUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: MilestoneCreateManyCreatedByInputEnvelope
    set?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    disconnect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    delete?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    update?: MilestoneUpdateWithWhereUniqueWithoutCreatedByInput | MilestoneUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: MilestoneUpdateManyWithWhereWithoutCreatedByInput | MilestoneUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: MilestoneScalarWhereInput | MilestoneScalarWhereInput[]
  }

  export type MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<MilestoneCreateWithoutUpdatedByInput, MilestoneUncheckedCreateWithoutUpdatedByInput> | MilestoneCreateWithoutUpdatedByInput[] | MilestoneUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: MilestoneCreateOrConnectWithoutUpdatedByInput | MilestoneCreateOrConnectWithoutUpdatedByInput[]
    upsert?: MilestoneUpsertWithWhereUniqueWithoutUpdatedByInput | MilestoneUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: MilestoneCreateManyUpdatedByInputEnvelope
    set?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    disconnect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    delete?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    connect?: MilestoneWhereUniqueInput | MilestoneWhereUniqueInput[]
    update?: MilestoneUpdateWithWhereUniqueWithoutUpdatedByInput | MilestoneUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: MilestoneUpdateManyWithWhereWithoutUpdatedByInput | MilestoneUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: MilestoneScalarWhereInput | MilestoneScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<NoteCreateWithoutCreatedByInput, NoteUncheckedCreateWithoutCreatedByInput> | NoteCreateWithoutCreatedByInput[] | NoteUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutCreatedByInput | NoteCreateOrConnectWithoutCreatedByInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutCreatedByInput | NoteUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: NoteCreateManyCreatedByInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutCreatedByInput | NoteUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutCreatedByInput | NoteUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<NoteCreateWithoutUpdatedByInput, NoteUncheckedCreateWithoutUpdatedByInput> | NoteCreateWithoutUpdatedByInput[] | NoteUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutUpdatedByInput | NoteCreateOrConnectWithoutUpdatedByInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutUpdatedByInput | NoteUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: NoteCreateManyUpdatedByInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutUpdatedByInput | NoteUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutUpdatedByInput | NoteUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ProductCreateWithoutCreatedByInput, ProductUncheckedCreateWithoutCreatedByInput> | ProductCreateWithoutCreatedByInput[] | ProductUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCreatedByInput | ProductCreateOrConnectWithoutCreatedByInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCreatedByInput | ProductUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ProductCreateManyCreatedByInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCreatedByInput | ProductUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCreatedByInput | ProductUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ProductCreateWithoutUpdatedByInput, ProductUncheckedCreateWithoutUpdatedByInput> | ProductCreateWithoutUpdatedByInput[] | ProductUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUpdatedByInput | ProductCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutUpdatedByInput | ProductUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ProductCreateManyUpdatedByInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutUpdatedByInput | ProductUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutUpdatedByInput | ProductUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProjectUncheckedUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<ProjectCreateWithoutAssigneeInput, ProjectUncheckedCreateWithoutAssigneeInput> | ProjectCreateWithoutAssigneeInput[] | ProjectUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutAssigneeInput | ProjectCreateOrConnectWithoutAssigneeInput[]
    upsert?: ProjectUpsertWithWhereUniqueWithoutAssigneeInput | ProjectUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: ProjectCreateManyAssigneeInputEnvelope
    set?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    disconnect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    delete?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    update?: ProjectUpdateWithWhereUniqueWithoutAssigneeInput | ProjectUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: ProjectUpdateManyWithWhereWithoutAssigneeInput | ProjectUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
  }

  export type ProjectUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ProjectCreateWithoutCreatedByInput, ProjectUncheckedCreateWithoutCreatedByInput> | ProjectCreateWithoutCreatedByInput[] | ProjectUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutCreatedByInput | ProjectCreateOrConnectWithoutCreatedByInput[]
    upsert?: ProjectUpsertWithWhereUniqueWithoutCreatedByInput | ProjectUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ProjectCreateManyCreatedByInputEnvelope
    set?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    disconnect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    delete?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    update?: ProjectUpdateWithWhereUniqueWithoutCreatedByInput | ProjectUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ProjectUpdateManyWithWhereWithoutCreatedByInput | ProjectUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
  }

  export type ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ProjectCreateWithoutUpdatedByInput, ProjectUncheckedCreateWithoutUpdatedByInput> | ProjectCreateWithoutUpdatedByInput[] | ProjectUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutUpdatedByInput | ProjectCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ProjectUpsertWithWhereUniqueWithoutUpdatedByInput | ProjectUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ProjectCreateManyUpdatedByInputEnvelope
    set?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    disconnect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    delete?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    update?: ProjectUpdateWithWhereUniqueWithoutUpdatedByInput | ProjectUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ProjectUpdateManyWithWhereWithoutUpdatedByInput | ProjectUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
  }

  export type ProjectUncheckedUpdateManyWithoutMembersNestedInput = {
    create?: XOR<ProjectCreateWithoutMembersInput, ProjectUncheckedCreateWithoutMembersInput> | ProjectCreateWithoutMembersInput[] | ProjectUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutMembersInput | ProjectCreateOrConnectWithoutMembersInput[]
    upsert?: ProjectUpsertWithWhereUniqueWithoutMembersInput | ProjectUpsertWithWhereUniqueWithoutMembersInput[]
    set?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    disconnect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    delete?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    update?: ProjectUpdateWithWhereUniqueWithoutMembersInput | ProjectUpdateWithWhereUniqueWithoutMembersInput[]
    updateMany?: ProjectUpdateManyWithWhereWithoutMembersInput | ProjectUpdateManyWithWhereWithoutMembersInput[]
    deleteMany?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
  }

  export type StageUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<StageCreateWithoutCreatedByInput, StageUncheckedCreateWithoutCreatedByInput> | StageCreateWithoutCreatedByInput[] | StageUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: StageCreateOrConnectWithoutCreatedByInput | StageCreateOrConnectWithoutCreatedByInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutCreatedByInput | StageUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: StageCreateManyCreatedByInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutCreatedByInput | StageUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: StageUpdateManyWithWhereWithoutCreatedByInput | StageUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type StageUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<StageCreateWithoutUpdatedByInput, StageUncheckedCreateWithoutUpdatedByInput> | StageCreateWithoutUpdatedByInput[] | StageUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: StageCreateOrConnectWithoutUpdatedByInput | StageCreateOrConnectWithoutUpdatedByInput[]
    upsert?: StageUpsertWithWhereUniqueWithoutUpdatedByInput | StageUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: StageCreateManyUpdatedByInputEnvelope
    set?: StageWhereUniqueInput | StageWhereUniqueInput[]
    disconnect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    delete?: StageWhereUniqueInput | StageWhereUniqueInput[]
    connect?: StageWhereUniqueInput | StageWhereUniqueInput[]
    update?: StageUpdateWithWhereUniqueWithoutUpdatedByInput | StageUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: StageUpdateManyWithWhereWithoutUpdatedByInput | StageUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: StageScalarWhereInput | StageScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput> | TaskCreateWithoutAssigneeInput[] | TaskUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssigneeInput | TaskCreateOrConnectWithoutAssigneeInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutAssigneeInput | TaskUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: TaskCreateManyAssigneeInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutAssigneeInput | TaskUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutAssigneeInput | TaskUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<TaskCreateWithoutCreatedByInput, TaskUncheckedCreateWithoutCreatedByInput> | TaskCreateWithoutCreatedByInput[] | TaskUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCreatedByInput | TaskCreateOrConnectWithoutCreatedByInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutCreatedByInput | TaskUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: TaskCreateManyCreatedByInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutCreatedByInput | TaskUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutCreatedByInput | TaskUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<TaskCreateWithoutUpdatedByInput, TaskUncheckedCreateWithoutUpdatedByInput> | TaskCreateWithoutUpdatedByInput[] | TaskUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutUpdatedByInput | TaskCreateOrConnectWithoutUpdatedByInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutUpdatedByInput | TaskUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: TaskCreateManyUpdatedByInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutUpdatedByInput | TaskUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutUpdatedByInput | TaskUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutMembersNestedInput = {
    create?: XOR<TaskCreateWithoutMembersInput, TaskUncheckedCreateWithoutMembersInput> | TaskCreateWithoutMembersInput[] | TaskUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutMembersInput | TaskCreateOrConnectWithoutMembersInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutMembersInput | TaskUpsertWithWhereUniqueWithoutMembersInput[]
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutMembersInput | TaskUpdateWithWhereUniqueWithoutMembersInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutMembersInput | TaskUpdateManyWithWhereWithoutMembersInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type PipelineUncheckedUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<PipelineCreateWithoutAssigneeInput, PipelineUncheckedCreateWithoutAssigneeInput> | PipelineCreateWithoutAssigneeInput[] | PipelineUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutAssigneeInput | PipelineCreateOrConnectWithoutAssigneeInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutAssigneeInput | PipelineUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: PipelineCreateManyAssigneeInputEnvelope
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutAssigneeInput | PipelineUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutAssigneeInput | PipelineUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type PipelineUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<PipelineCreateWithoutCreatedByInput, PipelineUncheckedCreateWithoutCreatedByInput> | PipelineCreateWithoutCreatedByInput[] | PipelineUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutCreatedByInput | PipelineCreateOrConnectWithoutCreatedByInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutCreatedByInput | PipelineUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: PipelineCreateManyCreatedByInputEnvelope
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutCreatedByInput | PipelineUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutCreatedByInput | PipelineUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<PipelineCreateWithoutUpdatedByInput, PipelineUncheckedCreateWithoutUpdatedByInput> | PipelineCreateWithoutUpdatedByInput[] | PipelineUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutUpdatedByInput | PipelineCreateOrConnectWithoutUpdatedByInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutUpdatedByInput | PipelineUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: PipelineCreateManyUpdatedByInputEnvelope
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutUpdatedByInput | PipelineUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutUpdatedByInput | PipelineUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type PipelineUncheckedUpdateManyWithoutMembersNestedInput = {
    create?: XOR<PipelineCreateWithoutMembersInput, PipelineUncheckedCreateWithoutMembersInput> | PipelineCreateWithoutMembersInput[] | PipelineUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: PipelineCreateOrConnectWithoutMembersInput | PipelineCreateOrConnectWithoutMembersInput[]
    upsert?: PipelineUpsertWithWhereUniqueWithoutMembersInput | PipelineUpsertWithWhereUniqueWithoutMembersInput[]
    set?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    disconnect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    delete?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    connect?: PipelineWhereUniqueInput | PipelineWhereUniqueInput[]
    update?: PipelineUpdateWithWhereUniqueWithoutMembersInput | PipelineUpdateWithWhereUniqueWithoutMembersInput[]
    updateMany?: PipelineUpdateManyWithWhereWithoutMembersInput | PipelineUpdateManyWithWhereWithoutMembersInput[]
    deleteMany?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
  }

  export type VendorUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<VendorCreateWithoutCreatedByInput, VendorUncheckedCreateWithoutCreatedByInput> | VendorCreateWithoutCreatedByInput[] | VendorUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: VendorCreateOrConnectWithoutCreatedByInput | VendorCreateOrConnectWithoutCreatedByInput[]
    upsert?: VendorUpsertWithWhereUniqueWithoutCreatedByInput | VendorUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: VendorCreateManyCreatedByInputEnvelope
    set?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    disconnect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    delete?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    connect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    update?: VendorUpdateWithWhereUniqueWithoutCreatedByInput | VendorUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: VendorUpdateManyWithWhereWithoutCreatedByInput | VendorUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: VendorScalarWhereInput | VendorScalarWhereInput[]
  }

  export type VendorUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<VendorCreateWithoutUpdatedByInput, VendorUncheckedCreateWithoutUpdatedByInput> | VendorCreateWithoutUpdatedByInput[] | VendorUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: VendorCreateOrConnectWithoutUpdatedByInput | VendorCreateOrConnectWithoutUpdatedByInput[]
    upsert?: VendorUpsertWithWhereUniqueWithoutUpdatedByInput | VendorUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: VendorCreateManyUpdatedByInputEnvelope
    set?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    disconnect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    delete?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    connect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    update?: VendorUpdateWithWhereUniqueWithoutUpdatedByInput | VendorUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: VendorUpdateManyWithWhereWithoutUpdatedByInput | VendorUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: VendorScalarWhereInput | VendorScalarWhereInput[]
  }

  export type ProfileUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ProfileCreateWithoutCreatedByInput, ProfileUncheckedCreateWithoutCreatedByInput> | ProfileCreateWithoutCreatedByInput[] | ProfileUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutCreatedByInput | ProfileCreateOrConnectWithoutCreatedByInput[]
    upsert?: ProfileUpsertWithWhereUniqueWithoutCreatedByInput | ProfileUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ProfileCreateManyCreatedByInputEnvelope
    set?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    disconnect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    delete?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    update?: ProfileUpdateWithWhereUniqueWithoutCreatedByInput | ProfileUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ProfileUpdateManyWithWhereWithoutCreatedByInput | ProfileUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
  }

  export type ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ProfileCreateWithoutUpdatedByInput, ProfileUncheckedCreateWithoutUpdatedByInput> | ProfileCreateWithoutUpdatedByInput[] | ProfileUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutUpdatedByInput | ProfileCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ProfileUpsertWithWhereUniqueWithoutUpdatedByInput | ProfileUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ProfileCreateManyUpdatedByInputEnvelope
    set?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    disconnect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    delete?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    update?: ProfileUpdateWithWhereUniqueWithoutUpdatedByInput | ProfileUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ProfileUpdateManyWithWhereWithoutUpdatedByInput | ProfileUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
  }

  export type CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<CostTypeCreateWithoutCreatedByInput, CostTypeUncheckedCreateWithoutCreatedByInput> | CostTypeCreateWithoutCreatedByInput[] | CostTypeUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: CostTypeCreateOrConnectWithoutCreatedByInput | CostTypeCreateOrConnectWithoutCreatedByInput[]
    upsert?: CostTypeUpsertWithWhereUniqueWithoutCreatedByInput | CostTypeUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: CostTypeCreateManyCreatedByInputEnvelope
    set?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    disconnect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    delete?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    connect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    update?: CostTypeUpdateWithWhereUniqueWithoutCreatedByInput | CostTypeUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: CostTypeUpdateManyWithWhereWithoutCreatedByInput | CostTypeUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: CostTypeScalarWhereInput | CostTypeScalarWhereInput[]
  }

  export type CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<CostTypeCreateWithoutUpdatedByInput, CostTypeUncheckedCreateWithoutUpdatedByInput> | CostTypeCreateWithoutUpdatedByInput[] | CostTypeUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: CostTypeCreateOrConnectWithoutUpdatedByInput | CostTypeCreateOrConnectWithoutUpdatedByInput[]
    upsert?: CostTypeUpsertWithWhereUniqueWithoutUpdatedByInput | CostTypeUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: CostTypeCreateManyUpdatedByInputEnvelope
    set?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    disconnect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    delete?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    connect?: CostTypeWhereUniqueInput | CostTypeWhereUniqueInput[]
    update?: CostTypeUpdateWithWhereUniqueWithoutUpdatedByInput | CostTypeUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: CostTypeUpdateManyWithWhereWithoutUpdatedByInput | CostTypeUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: CostTypeScalarWhereInput | CostTypeScalarWhereInput[]
  }

  export type UserCreateNestedManyWithoutRoleInput = {
    create?: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput> | UserCreateWithoutRoleInput[] | UserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRoleInput | UserCreateOrConnectWithoutRoleInput[]
    createMany?: UserCreateManyRoleInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput> | UserCreateWithoutRoleInput[] | UserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRoleInput | UserCreateOrConnectWithoutRoleInput[]
    createMany?: UserCreateManyRoleInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateManyWithoutRoleNestedInput = {
    create?: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput> | UserCreateWithoutRoleInput[] | UserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRoleInput | UserCreateOrConnectWithoutRoleInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutRoleInput | UserUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: UserCreateManyRoleInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutRoleInput | UserUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: UserUpdateManyWithWhereWithoutRoleInput | UserUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput> | UserCreateWithoutRoleInput[] | UserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRoleInput | UserCreateOrConnectWithoutRoleInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutRoleInput | UserUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: UserCreateManyRoleInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutRoleInput | UserUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: UserUpdateManyWithWhereWithoutRoleInput | UserUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<UserCreateWithoutOrganizationInput, UserUncheckedCreateWithoutOrganizationInput> | UserCreateWithoutOrganizationInput[] | UserUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: UserCreateOrConnectWithoutOrganizationInput | UserCreateOrConnectWithoutOrganizationInput[]
    createMany?: UserCreateManyOrganizationInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<UserCreateWithoutOrganizationInput, UserUncheckedCreateWithoutOrganizationInput> | UserCreateWithoutOrganizationInput[] | UserUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: UserCreateOrConnectWithoutOrganizationInput | UserCreateOrConnectWithoutOrganizationInput[]
    createMany?: UserCreateManyOrganizationInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<UserCreateWithoutOrganizationInput, UserUncheckedCreateWithoutOrganizationInput> | UserCreateWithoutOrganizationInput[] | UserUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: UserCreateOrConnectWithoutOrganizationInput | UserCreateOrConnectWithoutOrganizationInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutOrganizationInput | UserUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: UserCreateManyOrganizationInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutOrganizationInput | UserUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: UserUpdateManyWithWhereWithoutOrganizationInput | UserUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<UserCreateWithoutOrganizationInput, UserUncheckedCreateWithoutOrganizationInput> | UserCreateWithoutOrganizationInput[] | UserUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: UserCreateOrConnectWithoutOrganizationInput | UserCreateOrConnectWithoutOrganizationInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutOrganizationInput | UserUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: UserCreateManyOrganizationInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutOrganizationInput | UserUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: UserUpdateManyWithWhereWithoutOrganizationInput | UserUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCreatorProfileInput = {
    create?: XOR<UserCreateWithoutCreatorProfileInput, UserUncheckedCreateWithoutCreatorProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorProfileInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdaterProfileInput = {
    create?: XOR<UserCreateWithoutUpdaterProfileInput, UserUncheckedCreateWithoutUpdaterProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterProfileInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutProfileInput = {
    create?: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfileInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneWithoutCreatorProfileNestedInput = {
    create?: XOR<UserCreateWithoutCreatorProfileInput, UserUncheckedCreateWithoutCreatorProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatorProfileInput
    upsert?: UserUpsertWithoutCreatorProfileInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatorProfileInput, UserUpdateWithoutCreatorProfileInput>, UserUncheckedUpdateWithoutCreatorProfileInput>
  }

  export type UserUpdateOneWithoutUpdaterProfileNestedInput = {
    create?: XOR<UserCreateWithoutUpdaterProfileInput, UserUncheckedCreateWithoutUpdaterProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdaterProfileInput
    upsert?: UserUpsertWithoutUpdaterProfileInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdaterProfileInput, UserUpdateWithoutUpdaterProfileInput>, UserUncheckedUpdateWithoutUpdaterProfileInput>
  }

  export type UserUpdateOneRequiredWithoutProfileNestedInput = {
    create?: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfileInput
    upsert?: UserUpsertWithoutProfileInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProfileInput, UserUpdateWithoutProfileInput>, UserUncheckedUpdateWithoutProfileInput>
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UserCreateWithoutBudgetAssigneeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutBudgetAssigneeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutBudgetAssigneeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBudgetAssigneeInput, UserUncheckedCreateWithoutBudgetAssigneeInput>
  }

  export type UserCreateWithoutCreatorBudgetInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutCreatorBudgetInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutCreatorBudgetInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatorBudgetInput, UserUncheckedCreateWithoutCreatorBudgetInput>
  }

  export type UserCreateWithoutUpdaterBudgetInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutUpdaterBudgetInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutUpdaterBudgetInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdaterBudgetInput, UserUncheckedCreateWithoutUpdaterBudgetInput>
  }

  export type BudgetItemCreateWithoutBudgetInput = {
    id?: string
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    category?: CostTypeCreateNestedOneWithoutBudgetItemsInput
  }

  export type BudgetItemUncheckedCreateWithoutBudgetInput = {
    id?: string
    categoryId?: string | null
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type BudgetItemCreateOrConnectWithoutBudgetInput = {
    where: BudgetItemWhereUniqueInput
    create: XOR<BudgetItemCreateWithoutBudgetInput, BudgetItemUncheckedCreateWithoutBudgetInput>
  }

  export type BudgetItemCreateManyBudgetInputEnvelope = {
    data: BudgetItemCreateManyBudgetInput | BudgetItemCreateManyBudgetInput[]
    skipDuplicates?: boolean
  }

  export type ProjectCreateWithoutBudgetsInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contract?: ContractCreateNestedOneWithoutProjectInput
    assignee?: UserCreateNestedOneWithoutProjectAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorProjectInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProjectInput
    members?: UserCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneCreateNestedManyWithoutProjectInput
    notes?: NoteCreateNestedManyWithoutProjectInput
    stages?: StageCreateNestedManyWithoutProjectInput
    events?: EventCreateNestedManyWithoutProjectInput
    expenses?: ExpenseCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutBudgetsInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contractId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneUncheckedCreateNestedManyWithoutProjectInput
    notes?: NoteUncheckedCreateNestedManyWithoutProjectInput
    stages?: StageUncheckedCreateNestedManyWithoutProjectInput
    events?: EventUncheckedCreateNestedManyWithoutProjectInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutBudgetsInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutBudgetsInput, ProjectUncheckedCreateWithoutBudgetsInput>
  }

  export type NoteCreateWithoutBudgetInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorNoteInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterNoteInput
    pipeline?: PipelineCreateNestedOneWithoutNotesInput
    project?: ProjectCreateNestedOneWithoutNotesInput
    milestone?: MilestoneCreateNestedOneWithoutNotesInput
    task?: TaskCreateNestedOneWithoutNotesInput
    fund?: FundCreateNestedOneWithoutNotesInput
    expense?: ExpenseCreateNestedOneWithoutNotesInput
    client?: ClientCreateNestedOneWithoutNotesInput
    vendor?: VendorCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutBudgetInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type NoteCreateOrConnectWithoutBudgetInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutBudgetInput, NoteUncheckedCreateWithoutBudgetInput>
  }

  export type NoteCreateManyBudgetInputEnvelope = {
    data: NoteCreateManyBudgetInput | NoteCreateManyBudgetInput[]
    skipDuplicates?: boolean
  }

  export type StageCreateWithoutBudgetInput = {
    id?: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    type: StageTypeCreateNestedOneWithoutStagesInput
    createdBy?: UserCreateNestedOneWithoutCreatorStageInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterStageInput
    pipeline?: PipelineCreateNestedOneWithoutStagesInput
    project?: ProjectCreateNestedOneWithoutStagesInput
    milestone?: MilestoneCreateNestedOneWithoutStagesInput
    task?: TaskCreateNestedOneWithoutStagesInput
    fund?: FundCreateNestedOneWithoutStagesInput
  }

  export type StageUncheckedCreateWithoutBudgetInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    fundId?: string | null
  }

  export type StageCreateOrConnectWithoutBudgetInput = {
    where: StageWhereUniqueInput
    create: XOR<StageCreateWithoutBudgetInput, StageUncheckedCreateWithoutBudgetInput>
  }

  export type StageCreateManyBudgetInputEnvelope = {
    data: StageCreateManyBudgetInput | StageCreateManyBudgetInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutBudgetAssigneeInput = {
    update: XOR<UserUpdateWithoutBudgetAssigneeInput, UserUncheckedUpdateWithoutBudgetAssigneeInput>
    create: XOR<UserCreateWithoutBudgetAssigneeInput, UserUncheckedCreateWithoutBudgetAssigneeInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBudgetAssigneeInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBudgetAssigneeInput, UserUncheckedUpdateWithoutBudgetAssigneeInput>
  }

  export type UserUpdateWithoutBudgetAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutBudgetAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutCreatorBudgetInput = {
    update: XOR<UserUpdateWithoutCreatorBudgetInput, UserUncheckedUpdateWithoutCreatorBudgetInput>
    create: XOR<UserCreateWithoutCreatorBudgetInput, UserUncheckedCreateWithoutCreatorBudgetInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatorBudgetInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatorBudgetInput, UserUncheckedUpdateWithoutCreatorBudgetInput>
  }

  export type UserUpdateWithoutCreatorBudgetInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatorBudgetInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutUpdaterBudgetInput = {
    update: XOR<UserUpdateWithoutUpdaterBudgetInput, UserUncheckedUpdateWithoutUpdaterBudgetInput>
    create: XOR<UserCreateWithoutUpdaterBudgetInput, UserUncheckedCreateWithoutUpdaterBudgetInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdaterBudgetInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdaterBudgetInput, UserUncheckedUpdateWithoutUpdaterBudgetInput>
  }

  export type UserUpdateWithoutUpdaterBudgetInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdaterBudgetInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type BudgetItemUpsertWithWhereUniqueWithoutBudgetInput = {
    where: BudgetItemWhereUniqueInput
    update: XOR<BudgetItemUpdateWithoutBudgetInput, BudgetItemUncheckedUpdateWithoutBudgetInput>
    create: XOR<BudgetItemCreateWithoutBudgetInput, BudgetItemUncheckedCreateWithoutBudgetInput>
  }

  export type BudgetItemUpdateWithWhereUniqueWithoutBudgetInput = {
    where: BudgetItemWhereUniqueInput
    data: XOR<BudgetItemUpdateWithoutBudgetInput, BudgetItemUncheckedUpdateWithoutBudgetInput>
  }

  export type BudgetItemUpdateManyWithWhereWithoutBudgetInput = {
    where: BudgetItemScalarWhereInput
    data: XOR<BudgetItemUpdateManyMutationInput, BudgetItemUncheckedUpdateManyWithoutBudgetInput>
  }

  export type BudgetItemScalarWhereInput = {
    AND?: BudgetItemScalarWhereInput | BudgetItemScalarWhereInput[]
    OR?: BudgetItemScalarWhereInput[]
    NOT?: BudgetItemScalarWhereInput | BudgetItemScalarWhereInput[]
    id?: StringFilter<"BudgetItem"> | string
    budgetId?: StringFilter<"BudgetItem"> | string
    categoryId?: StringNullableFilter<"BudgetItem"> | string | null
    description?: StringFilter<"BudgetItem"> | string
    quantity?: DecimalFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string
    timeUnit?: DecimalNullableFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string
    amount?: DecimalFilter<"BudgetItem"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeNullableFilter<"BudgetItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"BudgetItem"> | Date | string | null
  }

  export type ProjectUpsertWithoutBudgetsInput = {
    update: XOR<ProjectUpdateWithoutBudgetsInput, ProjectUncheckedUpdateWithoutBudgetsInput>
    create: XOR<ProjectCreateWithoutBudgetsInput, ProjectUncheckedCreateWithoutBudgetsInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutBudgetsInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutBudgetsInput, ProjectUncheckedUpdateWithoutBudgetsInput>
  }

  export type ProjectUpdateWithoutBudgetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contract?: ContractUpdateOneWithoutProjectNestedInput
    assignee?: UserUpdateOneWithoutProjectAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorProjectNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProjectNestedInput
    members?: UserUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUpdateManyWithoutProjectNestedInput
    notes?: NoteUpdateManyWithoutProjectNestedInput
    stages?: StageUpdateManyWithoutProjectNestedInput
    events?: EventUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutBudgetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUncheckedUpdateManyWithoutProjectNestedInput
    notes?: NoteUncheckedUpdateManyWithoutProjectNestedInput
    stages?: StageUncheckedUpdateManyWithoutProjectNestedInput
    events?: EventUncheckedUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type NoteUpsertWithWhereUniqueWithoutBudgetInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutBudgetInput, NoteUncheckedUpdateWithoutBudgetInput>
    create: XOR<NoteCreateWithoutBudgetInput, NoteUncheckedCreateWithoutBudgetInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutBudgetInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutBudgetInput, NoteUncheckedUpdateWithoutBudgetInput>
  }

  export type NoteUpdateManyWithWhereWithoutBudgetInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutBudgetInput>
  }

  export type NoteScalarWhereInput = {
    AND?: NoteScalarWhereInput | NoteScalarWhereInput[]
    OR?: NoteScalarWhereInput[]
    NOT?: NoteScalarWhereInput | NoteScalarWhereInput[]
    id?: StringFilter<"Note"> | string
    description?: StringNullableFilter<"Note"> | string | null
    createdAt?: DateTimeNullableFilter<"Note"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Note"> | Date | string | null
    createdById?: StringNullableFilter<"Note"> | string | null
    updatedById?: StringNullableFilter<"Note"> | string | null
    pipelineId?: StringNullableFilter<"Note"> | string | null
    projectId?: StringNullableFilter<"Note"> | string | null
    milestoneId?: StringNullableFilter<"Note"> | string | null
    taskId?: StringNullableFilter<"Note"> | string | null
    budgetId?: StringNullableFilter<"Note"> | string | null
    fundId?: StringNullableFilter<"Note"> | string | null
    expenseId?: StringNullableFilter<"Note"> | string | null
    clientId?: StringNullableFilter<"Note"> | string | null
    vendorId?: StringNullableFilter<"Note"> | string | null
  }

  export type StageUpsertWithWhereUniqueWithoutBudgetInput = {
    where: StageWhereUniqueInput
    update: XOR<StageUpdateWithoutBudgetInput, StageUncheckedUpdateWithoutBudgetInput>
    create: XOR<StageCreateWithoutBudgetInput, StageUncheckedCreateWithoutBudgetInput>
  }

  export type StageUpdateWithWhereUniqueWithoutBudgetInput = {
    where: StageWhereUniqueInput
    data: XOR<StageUpdateWithoutBudgetInput, StageUncheckedUpdateWithoutBudgetInput>
  }

  export type StageUpdateManyWithWhereWithoutBudgetInput = {
    where: StageScalarWhereInput
    data: XOR<StageUpdateManyMutationInput, StageUncheckedUpdateManyWithoutBudgetInput>
  }

  export type StageScalarWhereInput = {
    AND?: StageScalarWhereInput | StageScalarWhereInput[]
    OR?: StageScalarWhereInput[]
    NOT?: StageScalarWhereInput | StageScalarWhereInput[]
    id?: StringFilter<"Stage"> | string
    stageTypeId?: StringFilter<"Stage"> | string
    comment?: StringNullableFilter<"Stage"> | string | null
    createdAt?: DateTimeNullableFilter<"Stage"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Stage"> | Date | string | null
    createdById?: StringNullableFilter<"Stage"> | string | null
    updatedById?: StringNullableFilter<"Stage"> | string | null
    pipelineId?: StringNullableFilter<"Stage"> | string | null
    projectId?: StringNullableFilter<"Stage"> | string | null
    milestoneId?: StringNullableFilter<"Stage"> | string | null
    taskId?: StringNullableFilter<"Stage"> | string | null
    budgetId?: StringNullableFilter<"Stage"> | string | null
    fundId?: StringNullableFilter<"Stage"> | string | null
  }

  export type BudgetCreateWithoutItemsInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutBudgetAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorBudgetInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterBudgetInput
    project?: ProjectCreateNestedOneWithoutBudgetsInput
    notes?: NoteCreateNestedManyWithoutBudgetInput
    stages?: StageCreateNestedManyWithoutBudgetInput
  }

  export type BudgetUncheckedCreateWithoutItemsInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    projectId?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutBudgetInput
    stages?: StageUncheckedCreateNestedManyWithoutBudgetInput
  }

  export type BudgetCreateOrConnectWithoutItemsInput = {
    where: BudgetWhereUniqueInput
    create: XOR<BudgetCreateWithoutItemsInput, BudgetUncheckedCreateWithoutItemsInput>
  }

  export type CostTypeCreateWithoutBudgetItemsInput = {
    id?: string
    order?: number | null
    name: string
    parent?: CostTypeCreateNestedOneWithoutChildrenInput
    children?: CostTypeCreateNestedManyWithoutParentInput
    createdBy?: UserCreateNestedOneWithoutCreatorCostTypeInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterCostTypeInput
    fundItems?: FundItemCreateNestedManyWithoutCategoryInput
    expenses?: ExpenseCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeUncheckedCreateWithoutBudgetItemsInput = {
    id?: string
    order?: number | null
    name: string
    parentId?: string | null
    createdById?: string | null
    updatedById?: string | null
    children?: CostTypeUncheckedCreateNestedManyWithoutParentInput
    fundItems?: FundItemUncheckedCreateNestedManyWithoutCategoryInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeCreateOrConnectWithoutBudgetItemsInput = {
    where: CostTypeWhereUniqueInput
    create: XOR<CostTypeCreateWithoutBudgetItemsInput, CostTypeUncheckedCreateWithoutBudgetItemsInput>
  }

  export type BudgetUpsertWithoutItemsInput = {
    update: XOR<BudgetUpdateWithoutItemsInput, BudgetUncheckedUpdateWithoutItemsInput>
    create: XOR<BudgetCreateWithoutItemsInput, BudgetUncheckedCreateWithoutItemsInput>
    where?: BudgetWhereInput
  }

  export type BudgetUpdateToOneWithWhereWithoutItemsInput = {
    where?: BudgetWhereInput
    data: XOR<BudgetUpdateWithoutItemsInput, BudgetUncheckedUpdateWithoutItemsInput>
  }

  export type BudgetUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutBudgetAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorBudgetNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterBudgetNestedInput
    project?: ProjectUpdateOneWithoutBudgetsNestedInput
    notes?: NoteUpdateManyWithoutBudgetNestedInput
    stages?: StageUpdateManyWithoutBudgetNestedInput
  }

  export type BudgetUncheckedUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutBudgetNestedInput
    stages?: StageUncheckedUpdateManyWithoutBudgetNestedInput
  }

  export type CostTypeUpsertWithoutBudgetItemsInput = {
    update: XOR<CostTypeUpdateWithoutBudgetItemsInput, CostTypeUncheckedUpdateWithoutBudgetItemsInput>
    create: XOR<CostTypeCreateWithoutBudgetItemsInput, CostTypeUncheckedCreateWithoutBudgetItemsInput>
    where?: CostTypeWhereInput
  }

  export type CostTypeUpdateToOneWithWhereWithoutBudgetItemsInput = {
    where?: CostTypeWhereInput
    data: XOR<CostTypeUpdateWithoutBudgetItemsInput, CostTypeUncheckedUpdateWithoutBudgetItemsInput>
  }

  export type CostTypeUpdateWithoutBudgetItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parent?: CostTypeUpdateOneWithoutChildrenNestedInput
    children?: CostTypeUpdateManyWithoutParentNestedInput
    createdBy?: UserUpdateOneWithoutCreatorCostTypeNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterCostTypeNestedInput
    fundItems?: FundItemUpdateManyWithoutCategoryNestedInput
    expenses?: ExpenseUpdateManyWithoutCategoryNestedInput
  }

  export type CostTypeUncheckedUpdateWithoutBudgetItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CostTypeUncheckedUpdateManyWithoutParentNestedInput
    fundItems?: FundItemUncheckedUpdateManyWithoutCategoryNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type UserCreateWithoutFundAssigneeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutFundAssigneeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutFundAssigneeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFundAssigneeInput, UserUncheckedCreateWithoutFundAssigneeInput>
  }

  export type UserCreateWithoutCreatorFundInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutCreatorFundInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutCreatorFundInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatorFundInput, UserUncheckedCreateWithoutCreatorFundInput>
  }

  export type UserCreateWithoutUpdaterFundInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutUpdaterFundInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutUpdaterFundInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdaterFundInput, UserUncheckedCreateWithoutUpdaterFundInput>
  }

  export type FundItemCreateWithoutFundInput = {
    id?: string
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    category?: CostTypeCreateNestedOneWithoutFundItemsInput
  }

  export type FundItemUncheckedCreateWithoutFundInput = {
    id?: string
    categoryId?: string | null
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type FundItemCreateOrConnectWithoutFundInput = {
    where: FundItemWhereUniqueInput
    create: XOR<FundItemCreateWithoutFundInput, FundItemUncheckedCreateWithoutFundInput>
  }

  export type FundItemCreateManyFundInputEnvelope = {
    data: FundItemCreateManyFundInput | FundItemCreateManyFundInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutFundsInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestone: MilestoneCreateNestedOneWithoutTasksInput
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorTaskInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterTaskInput
    members?: UserCreateNestedManyWithoutTaskMemberInput
    notes?: NoteCreateNestedManyWithoutTaskInput
    stages?: StageCreateNestedManyWithoutTaskInput
    events?: EventCreateNestedManyWithoutTaskInput
    expenses?: ExpenseCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutFundsInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestoneId: string
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutTaskMemberInput
    notes?: NoteUncheckedCreateNestedManyWithoutTaskInput
    stages?: StageUncheckedCreateNestedManyWithoutTaskInput
    events?: EventUncheckedCreateNestedManyWithoutTaskInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutFundsInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutFundsInput, TaskUncheckedCreateWithoutFundsInput>
  }

  export type ExpenseCreateWithoutFundInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    category: CostTypeCreateNestedOneWithoutExpensesInput
    createdBy?: UserCreateNestedOneWithoutCreatorExpenseInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterExpenseInput
    task?: TaskCreateNestedOneWithoutExpensesInput
    project?: ProjectCreateNestedOneWithoutExpensesInput
    notes?: NoteCreateNestedManyWithoutExpenseInput
  }

  export type ExpenseUncheckedCreateWithoutFundInput = {
    id?: string
    regNumber?: string | null
    categoryId: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    taskId?: string | null
    projectId?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutExpenseInput
  }

  export type ExpenseCreateOrConnectWithoutFundInput = {
    where: ExpenseWhereUniqueInput
    create: XOR<ExpenseCreateWithoutFundInput, ExpenseUncheckedCreateWithoutFundInput>
  }

  export type ExpenseCreateManyFundInputEnvelope = {
    data: ExpenseCreateManyFundInput | ExpenseCreateManyFundInput[]
    skipDuplicates?: boolean
  }

  export type NoteCreateWithoutFundInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorNoteInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterNoteInput
    pipeline?: PipelineCreateNestedOneWithoutNotesInput
    project?: ProjectCreateNestedOneWithoutNotesInput
    milestone?: MilestoneCreateNestedOneWithoutNotesInput
    task?: TaskCreateNestedOneWithoutNotesInput
    budget?: BudgetCreateNestedOneWithoutNotesInput
    expense?: ExpenseCreateNestedOneWithoutNotesInput
    client?: ClientCreateNestedOneWithoutNotesInput
    vendor?: VendorCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutFundInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type NoteCreateOrConnectWithoutFundInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutFundInput, NoteUncheckedCreateWithoutFundInput>
  }

  export type NoteCreateManyFundInputEnvelope = {
    data: NoteCreateManyFundInput | NoteCreateManyFundInput[]
    skipDuplicates?: boolean
  }

  export type StageCreateWithoutFundInput = {
    id?: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    type: StageTypeCreateNestedOneWithoutStagesInput
    createdBy?: UserCreateNestedOneWithoutCreatorStageInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterStageInput
    pipeline?: PipelineCreateNestedOneWithoutStagesInput
    project?: ProjectCreateNestedOneWithoutStagesInput
    milestone?: MilestoneCreateNestedOneWithoutStagesInput
    task?: TaskCreateNestedOneWithoutStagesInput
    budget?: BudgetCreateNestedOneWithoutStagesInput
  }

  export type StageUncheckedCreateWithoutFundInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
  }

  export type StageCreateOrConnectWithoutFundInput = {
    where: StageWhereUniqueInput
    create: XOR<StageCreateWithoutFundInput, StageUncheckedCreateWithoutFundInput>
  }

  export type StageCreateManyFundInputEnvelope = {
    data: StageCreateManyFundInput | StageCreateManyFundInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutFundAssigneeInput = {
    update: XOR<UserUpdateWithoutFundAssigneeInput, UserUncheckedUpdateWithoutFundAssigneeInput>
    create: XOR<UserCreateWithoutFundAssigneeInput, UserUncheckedCreateWithoutFundAssigneeInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFundAssigneeInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFundAssigneeInput, UserUncheckedUpdateWithoutFundAssigneeInput>
  }

  export type UserUpdateWithoutFundAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutFundAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutCreatorFundInput = {
    update: XOR<UserUpdateWithoutCreatorFundInput, UserUncheckedUpdateWithoutCreatorFundInput>
    create: XOR<UserCreateWithoutCreatorFundInput, UserUncheckedCreateWithoutCreatorFundInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatorFundInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatorFundInput, UserUncheckedUpdateWithoutCreatorFundInput>
  }

  export type UserUpdateWithoutCreatorFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatorFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutUpdaterFundInput = {
    update: XOR<UserUpdateWithoutUpdaterFundInput, UserUncheckedUpdateWithoutUpdaterFundInput>
    create: XOR<UserCreateWithoutUpdaterFundInput, UserUncheckedCreateWithoutUpdaterFundInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdaterFundInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdaterFundInput, UserUncheckedUpdateWithoutUpdaterFundInput>
  }

  export type UserUpdateWithoutUpdaterFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdaterFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type FundItemUpsertWithWhereUniqueWithoutFundInput = {
    where: FundItemWhereUniqueInput
    update: XOR<FundItemUpdateWithoutFundInput, FundItemUncheckedUpdateWithoutFundInput>
    create: XOR<FundItemCreateWithoutFundInput, FundItemUncheckedCreateWithoutFundInput>
  }

  export type FundItemUpdateWithWhereUniqueWithoutFundInput = {
    where: FundItemWhereUniqueInput
    data: XOR<FundItemUpdateWithoutFundInput, FundItemUncheckedUpdateWithoutFundInput>
  }

  export type FundItemUpdateManyWithWhereWithoutFundInput = {
    where: FundItemScalarWhereInput
    data: XOR<FundItemUpdateManyMutationInput, FundItemUncheckedUpdateManyWithoutFundInput>
  }

  export type FundItemScalarWhereInput = {
    AND?: FundItemScalarWhereInput | FundItemScalarWhereInput[]
    OR?: FundItemScalarWhereInput[]
    NOT?: FundItemScalarWhereInput | FundItemScalarWhereInput[]
    id?: StringFilter<"FundItem"> | string
    fundId?: StringFilter<"FundItem"> | string
    categoryId?: StringNullableFilter<"FundItem"> | string | null
    description?: StringFilter<"FundItem"> | string
    quantity?: DecimalFilter<"FundItem"> | Decimal | DecimalJsLike | number | string
    timeUnit?: DecimalNullableFilter<"FundItem"> | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFilter<"FundItem"> | Decimal | DecimalJsLike | number | string
    amount?: DecimalFilter<"FundItem"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeNullableFilter<"FundItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"FundItem"> | Date | string | null
  }

  export type TaskUpsertWithoutFundsInput = {
    update: XOR<TaskUpdateWithoutFundsInput, TaskUncheckedUpdateWithoutFundsInput>
    create: XOR<TaskCreateWithoutFundsInput, TaskUncheckedCreateWithoutFundsInput>
    where?: TaskWhereInput
  }

  export type TaskUpdateToOneWithWhereWithoutFundsInput = {
    where?: TaskWhereInput
    data: XOR<TaskUpdateWithoutFundsInput, TaskUncheckedUpdateWithoutFundsInput>
  }

  export type TaskUpdateWithoutFundsInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestone?: MilestoneUpdateOneRequiredWithoutTasksNestedInput
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorTaskNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterTaskNestedInput
    members?: UserUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUpdateManyWithoutTaskNestedInput
    stages?: StageUpdateManyWithoutTaskNestedInput
    events?: EventUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutFundsInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestoneId?: StringFieldUpdateOperationsInput | string
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUncheckedUpdateManyWithoutTaskNestedInput
    stages?: StageUncheckedUpdateManyWithoutTaskNestedInput
    events?: EventUncheckedUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type ExpenseUpsertWithWhereUniqueWithoutFundInput = {
    where: ExpenseWhereUniqueInput
    update: XOR<ExpenseUpdateWithoutFundInput, ExpenseUncheckedUpdateWithoutFundInput>
    create: XOR<ExpenseCreateWithoutFundInput, ExpenseUncheckedCreateWithoutFundInput>
  }

  export type ExpenseUpdateWithWhereUniqueWithoutFundInput = {
    where: ExpenseWhereUniqueInput
    data: XOR<ExpenseUpdateWithoutFundInput, ExpenseUncheckedUpdateWithoutFundInput>
  }

  export type ExpenseUpdateManyWithWhereWithoutFundInput = {
    where: ExpenseScalarWhereInput
    data: XOR<ExpenseUpdateManyMutationInput, ExpenseUncheckedUpdateManyWithoutFundInput>
  }

  export type ExpenseScalarWhereInput = {
    AND?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
    OR?: ExpenseScalarWhereInput[]
    NOT?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
    id?: StringFilter<"Expense"> | string
    regNumber?: StringNullableFilter<"Expense"> | string | null
    categoryId?: StringFilter<"Expense"> | string
    description?: StringNullableFilter<"Expense"> | string | null
    amount?: DecimalFilter<"Expense"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeNullableFilter<"Expense"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Expense"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Expense"> | Date | string | null
    createdById?: StringNullableFilter<"Expense"> | string | null
    updatedById?: StringNullableFilter<"Expense"> | string | null
    fundId?: StringNullableFilter<"Expense"> | string | null
    taskId?: StringNullableFilter<"Expense"> | string | null
    projectId?: StringNullableFilter<"Expense"> | string | null
  }

  export type NoteUpsertWithWhereUniqueWithoutFundInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutFundInput, NoteUncheckedUpdateWithoutFundInput>
    create: XOR<NoteCreateWithoutFundInput, NoteUncheckedCreateWithoutFundInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutFundInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutFundInput, NoteUncheckedUpdateWithoutFundInput>
  }

  export type NoteUpdateManyWithWhereWithoutFundInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutFundInput>
  }

  export type StageUpsertWithWhereUniqueWithoutFundInput = {
    where: StageWhereUniqueInput
    update: XOR<StageUpdateWithoutFundInput, StageUncheckedUpdateWithoutFundInput>
    create: XOR<StageCreateWithoutFundInput, StageUncheckedCreateWithoutFundInput>
  }

  export type StageUpdateWithWhereUniqueWithoutFundInput = {
    where: StageWhereUniqueInput
    data: XOR<StageUpdateWithoutFundInput, StageUncheckedUpdateWithoutFundInput>
  }

  export type StageUpdateManyWithWhereWithoutFundInput = {
    where: StageScalarWhereInput
    data: XOR<StageUpdateManyMutationInput, StageUncheckedUpdateManyWithoutFundInput>
  }

  export type FundCreateWithoutItemsInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutFundAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorFundInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterFundInput
    task?: TaskCreateNestedOneWithoutFundsInput
    expenses?: ExpenseCreateNestedManyWithoutFundInput
    notes?: NoteCreateNestedManyWithoutFundInput
    stages?: StageCreateNestedManyWithoutFundInput
  }

  export type FundUncheckedCreateWithoutItemsInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    taskId?: string | null
    expenses?: ExpenseUncheckedCreateNestedManyWithoutFundInput
    notes?: NoteUncheckedCreateNestedManyWithoutFundInput
    stages?: StageUncheckedCreateNestedManyWithoutFundInput
  }

  export type FundCreateOrConnectWithoutItemsInput = {
    where: FundWhereUniqueInput
    create: XOR<FundCreateWithoutItemsInput, FundUncheckedCreateWithoutItemsInput>
  }

  export type CostTypeCreateWithoutFundItemsInput = {
    id?: string
    order?: number | null
    name: string
    parent?: CostTypeCreateNestedOneWithoutChildrenInput
    children?: CostTypeCreateNestedManyWithoutParentInput
    createdBy?: UserCreateNestedOneWithoutCreatorCostTypeInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterCostTypeInput
    budgetItems?: BudgetItemCreateNestedManyWithoutCategoryInput
    expenses?: ExpenseCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeUncheckedCreateWithoutFundItemsInput = {
    id?: string
    order?: number | null
    name: string
    parentId?: string | null
    createdById?: string | null
    updatedById?: string | null
    children?: CostTypeUncheckedCreateNestedManyWithoutParentInput
    budgetItems?: BudgetItemUncheckedCreateNestedManyWithoutCategoryInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeCreateOrConnectWithoutFundItemsInput = {
    where: CostTypeWhereUniqueInput
    create: XOR<CostTypeCreateWithoutFundItemsInput, CostTypeUncheckedCreateWithoutFundItemsInput>
  }

  export type FundUpsertWithoutItemsInput = {
    update: XOR<FundUpdateWithoutItemsInput, FundUncheckedUpdateWithoutItemsInput>
    create: XOR<FundCreateWithoutItemsInput, FundUncheckedCreateWithoutItemsInput>
    where?: FundWhereInput
  }

  export type FundUpdateToOneWithWhereWithoutItemsInput = {
    where?: FundWhereInput
    data: XOR<FundUpdateWithoutItemsInput, FundUncheckedUpdateWithoutItemsInput>
  }

  export type FundUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutFundAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorFundNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterFundNestedInput
    task?: TaskUpdateOneWithoutFundsNestedInput
    expenses?: ExpenseUpdateManyWithoutFundNestedInput
    notes?: NoteUpdateManyWithoutFundNestedInput
    stages?: StageUpdateManyWithoutFundNestedInput
  }

  export type FundUncheckedUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    expenses?: ExpenseUncheckedUpdateManyWithoutFundNestedInput
    notes?: NoteUncheckedUpdateManyWithoutFundNestedInput
    stages?: StageUncheckedUpdateManyWithoutFundNestedInput
  }

  export type CostTypeUpsertWithoutFundItemsInput = {
    update: XOR<CostTypeUpdateWithoutFundItemsInput, CostTypeUncheckedUpdateWithoutFundItemsInput>
    create: XOR<CostTypeCreateWithoutFundItemsInput, CostTypeUncheckedCreateWithoutFundItemsInput>
    where?: CostTypeWhereInput
  }

  export type CostTypeUpdateToOneWithWhereWithoutFundItemsInput = {
    where?: CostTypeWhereInput
    data: XOR<CostTypeUpdateWithoutFundItemsInput, CostTypeUncheckedUpdateWithoutFundItemsInput>
  }

  export type CostTypeUpdateWithoutFundItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parent?: CostTypeUpdateOneWithoutChildrenNestedInput
    children?: CostTypeUpdateManyWithoutParentNestedInput
    createdBy?: UserUpdateOneWithoutCreatorCostTypeNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterCostTypeNestedInput
    budgetItems?: BudgetItemUpdateManyWithoutCategoryNestedInput
    expenses?: ExpenseUpdateManyWithoutCategoryNestedInput
  }

  export type CostTypeUncheckedUpdateWithoutFundItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CostTypeUncheckedUpdateManyWithoutParentNestedInput
    budgetItems?: BudgetItemUncheckedUpdateManyWithoutCategoryNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CostTypeCreateWithoutExpensesInput = {
    id?: string
    order?: number | null
    name: string
    parent?: CostTypeCreateNestedOneWithoutChildrenInput
    children?: CostTypeCreateNestedManyWithoutParentInput
    createdBy?: UserCreateNestedOneWithoutCreatorCostTypeInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterCostTypeInput
    budgetItems?: BudgetItemCreateNestedManyWithoutCategoryInput
    fundItems?: FundItemCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeUncheckedCreateWithoutExpensesInput = {
    id?: string
    order?: number | null
    name: string
    parentId?: string | null
    createdById?: string | null
    updatedById?: string | null
    children?: CostTypeUncheckedCreateNestedManyWithoutParentInput
    budgetItems?: BudgetItemUncheckedCreateNestedManyWithoutCategoryInput
    fundItems?: FundItemUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeCreateOrConnectWithoutExpensesInput = {
    where: CostTypeWhereUniqueInput
    create: XOR<CostTypeCreateWithoutExpensesInput, CostTypeUncheckedCreateWithoutExpensesInput>
  }

  export type UserCreateWithoutCreatorExpenseInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutCreatorExpenseInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutCreatorExpenseInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatorExpenseInput, UserUncheckedCreateWithoutCreatorExpenseInput>
  }

  export type UserCreateWithoutUpdaterExpenseInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutUpdaterExpenseInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutUpdaterExpenseInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdaterExpenseInput, UserUncheckedCreateWithoutUpdaterExpenseInput>
  }

  export type FundCreateWithoutExpensesInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutFundAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorFundInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterFundInput
    items?: FundItemCreateNestedManyWithoutFundInput
    task?: TaskCreateNestedOneWithoutFundsInput
    notes?: NoteCreateNestedManyWithoutFundInput
    stages?: StageCreateNestedManyWithoutFundInput
  }

  export type FundUncheckedCreateWithoutExpensesInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    taskId?: string | null
    items?: FundItemUncheckedCreateNestedManyWithoutFundInput
    notes?: NoteUncheckedCreateNestedManyWithoutFundInput
    stages?: StageUncheckedCreateNestedManyWithoutFundInput
  }

  export type FundCreateOrConnectWithoutExpensesInput = {
    where: FundWhereUniqueInput
    create: XOR<FundCreateWithoutExpensesInput, FundUncheckedCreateWithoutExpensesInput>
  }

  export type TaskCreateWithoutExpensesInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestone: MilestoneCreateNestedOneWithoutTasksInput
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorTaskInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterTaskInput
    members?: UserCreateNestedManyWithoutTaskMemberInput
    notes?: NoteCreateNestedManyWithoutTaskInput
    stages?: StageCreateNestedManyWithoutTaskInput
    events?: EventCreateNestedManyWithoutTaskInput
    funds?: FundCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutExpensesInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestoneId: string
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutTaskMemberInput
    notes?: NoteUncheckedCreateNestedManyWithoutTaskInput
    stages?: StageUncheckedCreateNestedManyWithoutTaskInput
    events?: EventUncheckedCreateNestedManyWithoutTaskInput
    funds?: FundUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutExpensesInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutExpensesInput, TaskUncheckedCreateWithoutExpensesInput>
  }

  export type ProjectCreateWithoutExpensesInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contract?: ContractCreateNestedOneWithoutProjectInput
    assignee?: UserCreateNestedOneWithoutProjectAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorProjectInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProjectInput
    members?: UserCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneCreateNestedManyWithoutProjectInput
    notes?: NoteCreateNestedManyWithoutProjectInput
    stages?: StageCreateNestedManyWithoutProjectInput
    events?: EventCreateNestedManyWithoutProjectInput
    budgets?: BudgetCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutExpensesInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contractId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneUncheckedCreateNestedManyWithoutProjectInput
    notes?: NoteUncheckedCreateNestedManyWithoutProjectInput
    stages?: StageUncheckedCreateNestedManyWithoutProjectInput
    events?: EventUncheckedCreateNestedManyWithoutProjectInput
    budgets?: BudgetUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutExpensesInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutExpensesInput, ProjectUncheckedCreateWithoutExpensesInput>
  }

  export type NoteCreateWithoutExpenseInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorNoteInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterNoteInput
    pipeline?: PipelineCreateNestedOneWithoutNotesInput
    project?: ProjectCreateNestedOneWithoutNotesInput
    milestone?: MilestoneCreateNestedOneWithoutNotesInput
    task?: TaskCreateNestedOneWithoutNotesInput
    budget?: BudgetCreateNestedOneWithoutNotesInput
    fund?: FundCreateNestedOneWithoutNotesInput
    client?: ClientCreateNestedOneWithoutNotesInput
    vendor?: VendorCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutExpenseInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type NoteCreateOrConnectWithoutExpenseInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutExpenseInput, NoteUncheckedCreateWithoutExpenseInput>
  }

  export type NoteCreateManyExpenseInputEnvelope = {
    data: NoteCreateManyExpenseInput | NoteCreateManyExpenseInput[]
    skipDuplicates?: boolean
  }

  export type CostTypeUpsertWithoutExpensesInput = {
    update: XOR<CostTypeUpdateWithoutExpensesInput, CostTypeUncheckedUpdateWithoutExpensesInput>
    create: XOR<CostTypeCreateWithoutExpensesInput, CostTypeUncheckedCreateWithoutExpensesInput>
    where?: CostTypeWhereInput
  }

  export type CostTypeUpdateToOneWithWhereWithoutExpensesInput = {
    where?: CostTypeWhereInput
    data: XOR<CostTypeUpdateWithoutExpensesInput, CostTypeUncheckedUpdateWithoutExpensesInput>
  }

  export type CostTypeUpdateWithoutExpensesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parent?: CostTypeUpdateOneWithoutChildrenNestedInput
    children?: CostTypeUpdateManyWithoutParentNestedInput
    createdBy?: UserUpdateOneWithoutCreatorCostTypeNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterCostTypeNestedInput
    budgetItems?: BudgetItemUpdateManyWithoutCategoryNestedInput
    fundItems?: FundItemUpdateManyWithoutCategoryNestedInput
  }

  export type CostTypeUncheckedUpdateWithoutExpensesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CostTypeUncheckedUpdateManyWithoutParentNestedInput
    budgetItems?: BudgetItemUncheckedUpdateManyWithoutCategoryNestedInput
    fundItems?: FundItemUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type UserUpsertWithoutCreatorExpenseInput = {
    update: XOR<UserUpdateWithoutCreatorExpenseInput, UserUncheckedUpdateWithoutCreatorExpenseInput>
    create: XOR<UserCreateWithoutCreatorExpenseInput, UserUncheckedCreateWithoutCreatorExpenseInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatorExpenseInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatorExpenseInput, UserUncheckedUpdateWithoutCreatorExpenseInput>
  }

  export type UserUpdateWithoutCreatorExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatorExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutUpdaterExpenseInput = {
    update: XOR<UserUpdateWithoutUpdaterExpenseInput, UserUncheckedUpdateWithoutUpdaterExpenseInput>
    create: XOR<UserCreateWithoutUpdaterExpenseInput, UserUncheckedCreateWithoutUpdaterExpenseInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdaterExpenseInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdaterExpenseInput, UserUncheckedUpdateWithoutUpdaterExpenseInput>
  }

  export type UserUpdateWithoutUpdaterExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdaterExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type FundUpsertWithoutExpensesInput = {
    update: XOR<FundUpdateWithoutExpensesInput, FundUncheckedUpdateWithoutExpensesInput>
    create: XOR<FundCreateWithoutExpensesInput, FundUncheckedCreateWithoutExpensesInput>
    where?: FundWhereInput
  }

  export type FundUpdateToOneWithWhereWithoutExpensesInput = {
    where?: FundWhereInput
    data: XOR<FundUpdateWithoutExpensesInput, FundUncheckedUpdateWithoutExpensesInput>
  }

  export type FundUpdateWithoutExpensesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutFundAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorFundNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterFundNestedInput
    items?: FundItemUpdateManyWithoutFundNestedInput
    task?: TaskUpdateOneWithoutFundsNestedInput
    notes?: NoteUpdateManyWithoutFundNestedInput
    stages?: StageUpdateManyWithoutFundNestedInput
  }

  export type FundUncheckedUpdateWithoutExpensesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: FundItemUncheckedUpdateManyWithoutFundNestedInput
    notes?: NoteUncheckedUpdateManyWithoutFundNestedInput
    stages?: StageUncheckedUpdateManyWithoutFundNestedInput
  }

  export type TaskUpsertWithoutExpensesInput = {
    update: XOR<TaskUpdateWithoutExpensesInput, TaskUncheckedUpdateWithoutExpensesInput>
    create: XOR<TaskCreateWithoutExpensesInput, TaskUncheckedCreateWithoutExpensesInput>
    where?: TaskWhereInput
  }

  export type TaskUpdateToOneWithWhereWithoutExpensesInput = {
    where?: TaskWhereInput
    data: XOR<TaskUpdateWithoutExpensesInput, TaskUncheckedUpdateWithoutExpensesInput>
  }

  export type TaskUpdateWithoutExpensesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestone?: MilestoneUpdateOneRequiredWithoutTasksNestedInput
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorTaskNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterTaskNestedInput
    members?: UserUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUpdateManyWithoutTaskNestedInput
    stages?: StageUpdateManyWithoutTaskNestedInput
    events?: EventUpdateManyWithoutTaskNestedInput
    funds?: FundUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutExpensesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestoneId?: StringFieldUpdateOperationsInput | string
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUncheckedUpdateManyWithoutTaskNestedInput
    stages?: StageUncheckedUpdateManyWithoutTaskNestedInput
    events?: EventUncheckedUpdateManyWithoutTaskNestedInput
    funds?: FundUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type ProjectUpsertWithoutExpensesInput = {
    update: XOR<ProjectUpdateWithoutExpensesInput, ProjectUncheckedUpdateWithoutExpensesInput>
    create: XOR<ProjectCreateWithoutExpensesInput, ProjectUncheckedCreateWithoutExpensesInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutExpensesInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutExpensesInput, ProjectUncheckedUpdateWithoutExpensesInput>
  }

  export type ProjectUpdateWithoutExpensesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contract?: ContractUpdateOneWithoutProjectNestedInput
    assignee?: UserUpdateOneWithoutProjectAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorProjectNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProjectNestedInput
    members?: UserUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUpdateManyWithoutProjectNestedInput
    notes?: NoteUpdateManyWithoutProjectNestedInput
    stages?: StageUpdateManyWithoutProjectNestedInput
    events?: EventUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutExpensesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUncheckedUpdateManyWithoutProjectNestedInput
    notes?: NoteUncheckedUpdateManyWithoutProjectNestedInput
    stages?: StageUncheckedUpdateManyWithoutProjectNestedInput
    events?: EventUncheckedUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type NoteUpsertWithWhereUniqueWithoutExpenseInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutExpenseInput, NoteUncheckedUpdateWithoutExpenseInput>
    create: XOR<NoteCreateWithoutExpenseInput, NoteUncheckedCreateWithoutExpenseInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutExpenseInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutExpenseInput, NoteUncheckedUpdateWithoutExpenseInput>
  }

  export type NoteUpdateManyWithWhereWithoutExpenseInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutExpenseInput>
  }

  export type CostTypeCreateWithoutChildrenInput = {
    id?: string
    order?: number | null
    name: string
    parent?: CostTypeCreateNestedOneWithoutChildrenInput
    createdBy?: UserCreateNestedOneWithoutCreatorCostTypeInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterCostTypeInput
    budgetItems?: BudgetItemCreateNestedManyWithoutCategoryInput
    fundItems?: FundItemCreateNestedManyWithoutCategoryInput
    expenses?: ExpenseCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeUncheckedCreateWithoutChildrenInput = {
    id?: string
    order?: number | null
    name: string
    parentId?: string | null
    createdById?: string | null
    updatedById?: string | null
    budgetItems?: BudgetItemUncheckedCreateNestedManyWithoutCategoryInput
    fundItems?: FundItemUncheckedCreateNestedManyWithoutCategoryInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeCreateOrConnectWithoutChildrenInput = {
    where: CostTypeWhereUniqueInput
    create: XOR<CostTypeCreateWithoutChildrenInput, CostTypeUncheckedCreateWithoutChildrenInput>
  }

  export type CostTypeCreateWithoutParentInput = {
    id?: string
    order?: number | null
    name: string
    children?: CostTypeCreateNestedManyWithoutParentInput
    createdBy?: UserCreateNestedOneWithoutCreatorCostTypeInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterCostTypeInput
    budgetItems?: BudgetItemCreateNestedManyWithoutCategoryInput
    fundItems?: FundItemCreateNestedManyWithoutCategoryInput
    expenses?: ExpenseCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeUncheckedCreateWithoutParentInput = {
    id?: string
    order?: number | null
    name: string
    createdById?: string | null
    updatedById?: string | null
    children?: CostTypeUncheckedCreateNestedManyWithoutParentInput
    budgetItems?: BudgetItemUncheckedCreateNestedManyWithoutCategoryInput
    fundItems?: FundItemUncheckedCreateNestedManyWithoutCategoryInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeCreateOrConnectWithoutParentInput = {
    where: CostTypeWhereUniqueInput
    create: XOR<CostTypeCreateWithoutParentInput, CostTypeUncheckedCreateWithoutParentInput>
  }

  export type CostTypeCreateManyParentInputEnvelope = {
    data: CostTypeCreateManyParentInput | CostTypeCreateManyParentInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCreatorCostTypeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutCreatorCostTypeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutCreatorCostTypeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatorCostTypeInput, UserUncheckedCreateWithoutCreatorCostTypeInput>
  }

  export type UserCreateWithoutUpdaterCostTypeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutUpdaterCostTypeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutUpdaterCostTypeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdaterCostTypeInput, UserUncheckedCreateWithoutUpdaterCostTypeInput>
  }

  export type BudgetItemCreateWithoutCategoryInput = {
    id?: string
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    budget: BudgetCreateNestedOneWithoutItemsInput
  }

  export type BudgetItemUncheckedCreateWithoutCategoryInput = {
    id?: string
    budgetId: string
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type BudgetItemCreateOrConnectWithoutCategoryInput = {
    where: BudgetItemWhereUniqueInput
    create: XOR<BudgetItemCreateWithoutCategoryInput, BudgetItemUncheckedCreateWithoutCategoryInput>
  }

  export type BudgetItemCreateManyCategoryInputEnvelope = {
    data: BudgetItemCreateManyCategoryInput | BudgetItemCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type FundItemCreateWithoutCategoryInput = {
    id?: string
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    fund: FundCreateNestedOneWithoutItemsInput
  }

  export type FundItemUncheckedCreateWithoutCategoryInput = {
    id?: string
    fundId: string
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type FundItemCreateOrConnectWithoutCategoryInput = {
    where: FundItemWhereUniqueInput
    create: XOR<FundItemCreateWithoutCategoryInput, FundItemUncheckedCreateWithoutCategoryInput>
  }

  export type FundItemCreateManyCategoryInputEnvelope = {
    data: FundItemCreateManyCategoryInput | FundItemCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type ExpenseCreateWithoutCategoryInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorExpenseInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterExpenseInput
    fund?: FundCreateNestedOneWithoutExpensesInput
    task?: TaskCreateNestedOneWithoutExpensesInput
    project?: ProjectCreateNestedOneWithoutExpensesInput
    notes?: NoteCreateNestedManyWithoutExpenseInput
  }

  export type ExpenseUncheckedCreateWithoutCategoryInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    fundId?: string | null
    taskId?: string | null
    projectId?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutExpenseInput
  }

  export type ExpenseCreateOrConnectWithoutCategoryInput = {
    where: ExpenseWhereUniqueInput
    create: XOR<ExpenseCreateWithoutCategoryInput, ExpenseUncheckedCreateWithoutCategoryInput>
  }

  export type ExpenseCreateManyCategoryInputEnvelope = {
    data: ExpenseCreateManyCategoryInput | ExpenseCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type CostTypeUpsertWithoutChildrenInput = {
    update: XOR<CostTypeUpdateWithoutChildrenInput, CostTypeUncheckedUpdateWithoutChildrenInput>
    create: XOR<CostTypeCreateWithoutChildrenInput, CostTypeUncheckedCreateWithoutChildrenInput>
    where?: CostTypeWhereInput
  }

  export type CostTypeUpdateToOneWithWhereWithoutChildrenInput = {
    where?: CostTypeWhereInput
    data: XOR<CostTypeUpdateWithoutChildrenInput, CostTypeUncheckedUpdateWithoutChildrenInput>
  }

  export type CostTypeUpdateWithoutChildrenInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parent?: CostTypeUpdateOneWithoutChildrenNestedInput
    createdBy?: UserUpdateOneWithoutCreatorCostTypeNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterCostTypeNestedInput
    budgetItems?: BudgetItemUpdateManyWithoutCategoryNestedInput
    fundItems?: FundItemUpdateManyWithoutCategoryNestedInput
    expenses?: ExpenseUpdateManyWithoutCategoryNestedInput
  }

  export type CostTypeUncheckedUpdateWithoutChildrenInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    budgetItems?: BudgetItemUncheckedUpdateManyWithoutCategoryNestedInput
    fundItems?: FundItemUncheckedUpdateManyWithoutCategoryNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CostTypeUpsertWithWhereUniqueWithoutParentInput = {
    where: CostTypeWhereUniqueInput
    update: XOR<CostTypeUpdateWithoutParentInput, CostTypeUncheckedUpdateWithoutParentInput>
    create: XOR<CostTypeCreateWithoutParentInput, CostTypeUncheckedCreateWithoutParentInput>
  }

  export type CostTypeUpdateWithWhereUniqueWithoutParentInput = {
    where: CostTypeWhereUniqueInput
    data: XOR<CostTypeUpdateWithoutParentInput, CostTypeUncheckedUpdateWithoutParentInput>
  }

  export type CostTypeUpdateManyWithWhereWithoutParentInput = {
    where: CostTypeScalarWhereInput
    data: XOR<CostTypeUpdateManyMutationInput, CostTypeUncheckedUpdateManyWithoutParentInput>
  }

  export type CostTypeScalarWhereInput = {
    AND?: CostTypeScalarWhereInput | CostTypeScalarWhereInput[]
    OR?: CostTypeScalarWhereInput[]
    NOT?: CostTypeScalarWhereInput | CostTypeScalarWhereInput[]
    id?: StringFilter<"CostType"> | string
    order?: IntNullableFilter<"CostType"> | number | null
    name?: StringFilter<"CostType"> | string
    parentId?: StringNullableFilter<"CostType"> | string | null
    createdById?: StringNullableFilter<"CostType"> | string | null
    updatedById?: StringNullableFilter<"CostType"> | string | null
  }

  export type UserUpsertWithoutCreatorCostTypeInput = {
    update: XOR<UserUpdateWithoutCreatorCostTypeInput, UserUncheckedUpdateWithoutCreatorCostTypeInput>
    create: XOR<UserCreateWithoutCreatorCostTypeInput, UserUncheckedCreateWithoutCreatorCostTypeInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatorCostTypeInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatorCostTypeInput, UserUncheckedUpdateWithoutCreatorCostTypeInput>
  }

  export type UserUpdateWithoutCreatorCostTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatorCostTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutUpdaterCostTypeInput = {
    update: XOR<UserUpdateWithoutUpdaterCostTypeInput, UserUncheckedUpdateWithoutUpdaterCostTypeInput>
    create: XOR<UserCreateWithoutUpdaterCostTypeInput, UserUncheckedCreateWithoutUpdaterCostTypeInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdaterCostTypeInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdaterCostTypeInput, UserUncheckedUpdateWithoutUpdaterCostTypeInput>
  }

  export type UserUpdateWithoutUpdaterCostTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdaterCostTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type BudgetItemUpsertWithWhereUniqueWithoutCategoryInput = {
    where: BudgetItemWhereUniqueInput
    update: XOR<BudgetItemUpdateWithoutCategoryInput, BudgetItemUncheckedUpdateWithoutCategoryInput>
    create: XOR<BudgetItemCreateWithoutCategoryInput, BudgetItemUncheckedCreateWithoutCategoryInput>
  }

  export type BudgetItemUpdateWithWhereUniqueWithoutCategoryInput = {
    where: BudgetItemWhereUniqueInput
    data: XOR<BudgetItemUpdateWithoutCategoryInput, BudgetItemUncheckedUpdateWithoutCategoryInput>
  }

  export type BudgetItemUpdateManyWithWhereWithoutCategoryInput = {
    where: BudgetItemScalarWhereInput
    data: XOR<BudgetItemUpdateManyMutationInput, BudgetItemUncheckedUpdateManyWithoutCategoryInput>
  }

  export type FundItemUpsertWithWhereUniqueWithoutCategoryInput = {
    where: FundItemWhereUniqueInput
    update: XOR<FundItemUpdateWithoutCategoryInput, FundItemUncheckedUpdateWithoutCategoryInput>
    create: XOR<FundItemCreateWithoutCategoryInput, FundItemUncheckedCreateWithoutCategoryInput>
  }

  export type FundItemUpdateWithWhereUniqueWithoutCategoryInput = {
    where: FundItemWhereUniqueInput
    data: XOR<FundItemUpdateWithoutCategoryInput, FundItemUncheckedUpdateWithoutCategoryInput>
  }

  export type FundItemUpdateManyWithWhereWithoutCategoryInput = {
    where: FundItemScalarWhereInput
    data: XOR<FundItemUpdateManyMutationInput, FundItemUncheckedUpdateManyWithoutCategoryInput>
  }

  export type ExpenseUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ExpenseWhereUniqueInput
    update: XOR<ExpenseUpdateWithoutCategoryInput, ExpenseUncheckedUpdateWithoutCategoryInput>
    create: XOR<ExpenseCreateWithoutCategoryInput, ExpenseUncheckedCreateWithoutCategoryInput>
  }

  export type ExpenseUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ExpenseWhereUniqueInput
    data: XOR<ExpenseUpdateWithoutCategoryInput, ExpenseUncheckedUpdateWithoutCategoryInput>
  }

  export type ExpenseUpdateManyWithWhereWithoutCategoryInput = {
    where: ExpenseScalarWhereInput
    data: XOR<ExpenseUpdateManyMutationInput, ExpenseUncheckedUpdateManyWithoutCategoryInput>
  }

  export type LeadCreateWithoutPipelineInput = {
    id?: string
    regNumber?: string | null
    name?: string | null
    role?: string | null
    email?: string | null
    phone?: string | null
    leadSource?: string | null
    leadDate?: Date | string | null
    leadAddress?: string | null
    description?: string | null
    prospectLocation?: string | null
    approvedDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutLeadsInput
    client?: ClientCreateNestedOneWithoutLeadsInput
    opportunities?: OpportunityCreateNestedManyWithoutLeadInput
  }

  export type LeadUncheckedCreateWithoutPipelineInput = {
    id?: string
    regNumber?: string | null
    name?: string | null
    role?: string | null
    email?: string | null
    phone?: string | null
    leadSource?: string | null
    leadDate?: Date | string | null
    leadAddress?: string | null
    description?: string | null
    prospectLocation?: string | null
    approvedDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutLeadsInput
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutLeadInput
  }

  export type LeadCreateOrConnectWithoutPipelineInput = {
    where: LeadWhereUniqueInput
    create: XOR<LeadCreateWithoutPipelineInput, LeadUncheckedCreateWithoutPipelineInput>
  }

  export type OpportunityCreateWithoutPipelineInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    approvedDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutOpportunitiesInput
    client?: ClientCreateNestedOneWithoutOpportunitiesInput
    lead?: LeadCreateNestedOneWithoutOpportunitiesInput
    quotes?: QuoteCreateNestedManyWithoutOpportunityInput
  }

  export type OpportunityUncheckedCreateWithoutPipelineInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    approvedDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    leadId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutOpportunitiesInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutOpportunityInput
  }

  export type OpportunityCreateOrConnectWithoutPipelineInput = {
    where: OpportunityWhereUniqueInput
    create: XOR<OpportunityCreateWithoutPipelineInput, OpportunityUncheckedCreateWithoutPipelineInput>
  }

  export type QuoteCreateWithoutPipelineInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    releasedDate?: Date | string | null
    approvedDate?: Date | string | null
    expiredDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutQuotesInput
    client?: ClientCreateNestedOneWithoutQuotesInput
    opportunity?: OpportunityCreateNestedOneWithoutQuotesInput
    contracts?: ContractCreateNestedManyWithoutQuoteInput
  }

  export type QuoteUncheckedCreateWithoutPipelineInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    releasedDate?: Date | string | null
    approvedDate?: Date | string | null
    expiredDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    opportunityId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutQuotesInput
    contracts?: ContractUncheckedCreateNestedManyWithoutQuoteInput
  }

  export type QuoteCreateOrConnectWithoutPipelineInput = {
    where: QuoteWhereUniqueInput
    create: XOR<QuoteCreateWithoutPipelineInput, QuoteUncheckedCreateWithoutPipelineInput>
  }

  export type ContractCreateWithoutPipelineInput = {
    id?: string
    regNumber?: string | null
    title: string
    signedDate?: Date | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    penalty?: boolean | null
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    clientPicName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutContractsInput
    client?: ClientCreateNestedOneWithoutContractsInput
    quote?: QuoteCreateNestedOneWithoutContractsInput
    project?: ProjectCreateNestedOneWithoutContractInput
  }

  export type ContractUncheckedCreateWithoutPipelineInput = {
    id?: string
    regNumber?: string | null
    title: string
    signedDate?: Date | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    penalty?: boolean | null
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    clientPicName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    quoteId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutContractsInput
    project?: ProjectUncheckedCreateNestedOneWithoutContractInput
  }

  export type ContractCreateOrConnectWithoutPipelineInput = {
    where: ContractWhereUniqueInput
    create: XOR<ContractCreateWithoutPipelineInput, ContractUncheckedCreateWithoutPipelineInput>
  }

  export type UserCreateWithoutPipelineAssigneeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutPipelineAssigneeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutPipelineAssigneeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPipelineAssigneeInput, UserUncheckedCreateWithoutPipelineAssigneeInput>
  }

  export type UserCreateWithoutPipelineMemberInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutPipelineMemberInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutPipelineMemberInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPipelineMemberInput, UserUncheckedCreateWithoutPipelineMemberInput>
  }

  export type UserCreateWithoutCreatorPipelineInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutCreatorPipelineInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutCreatorPipelineInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatorPipelineInput, UserUncheckedCreateWithoutCreatorPipelineInput>
  }

  export type UserCreateWithoutUpdaterPipelineInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutUpdaterPipelineInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutUpdaterPipelineInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdaterPipelineInput, UserUncheckedCreateWithoutUpdaterPipelineInput>
  }

  export type StageCreateWithoutPipelineInput = {
    id?: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    type: StageTypeCreateNestedOneWithoutStagesInput
    createdBy?: UserCreateNestedOneWithoutCreatorStageInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterStageInput
    project?: ProjectCreateNestedOneWithoutStagesInput
    milestone?: MilestoneCreateNestedOneWithoutStagesInput
    task?: TaskCreateNestedOneWithoutStagesInput
    budget?: BudgetCreateNestedOneWithoutStagesInput
    fund?: FundCreateNestedOneWithoutStagesInput
  }

  export type StageUncheckedCreateWithoutPipelineInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type StageCreateOrConnectWithoutPipelineInput = {
    where: StageWhereUniqueInput
    create: XOR<StageCreateWithoutPipelineInput, StageUncheckedCreateWithoutPipelineInput>
  }

  export type StageCreateManyPipelineInputEnvelope = {
    data: StageCreateManyPipelineInput | StageCreateManyPipelineInput[]
    skipDuplicates?: boolean
  }

  export type NoteCreateWithoutPipelineInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorNoteInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterNoteInput
    project?: ProjectCreateNestedOneWithoutNotesInput
    milestone?: MilestoneCreateNestedOneWithoutNotesInput
    task?: TaskCreateNestedOneWithoutNotesInput
    budget?: BudgetCreateNestedOneWithoutNotesInput
    fund?: FundCreateNestedOneWithoutNotesInput
    expense?: ExpenseCreateNestedOneWithoutNotesInput
    client?: ClientCreateNestedOneWithoutNotesInput
    vendor?: VendorCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutPipelineInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type NoteCreateOrConnectWithoutPipelineInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutPipelineInput, NoteUncheckedCreateWithoutPipelineInput>
  }

  export type NoteCreateManyPipelineInputEnvelope = {
    data: NoteCreateManyPipelineInput | NoteCreateManyPipelineInput[]
    skipDuplicates?: boolean
  }

  export type EventCreateWithoutPipelineInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorEventInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterEventInput
    project?: ProjectCreateNestedOneWithoutEventsInput
    milestone?: MilestoneCreateNestedOneWithoutEventsInput
    task?: TaskCreateNestedOneWithoutEventsInput
  }

  export type EventUncheckedCreateWithoutPipelineInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
  }

  export type EventCreateOrConnectWithoutPipelineInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutPipelineInput, EventUncheckedCreateWithoutPipelineInput>
  }

  export type EventCreateManyPipelineInputEnvelope = {
    data: EventCreateManyPipelineInput | EventCreateManyPipelineInput[]
    skipDuplicates?: boolean
  }

  export type LeadUpsertWithoutPipelineInput = {
    update: XOR<LeadUpdateWithoutPipelineInput, LeadUncheckedUpdateWithoutPipelineInput>
    create: XOR<LeadCreateWithoutPipelineInput, LeadUncheckedCreateWithoutPipelineInput>
    where?: LeadWhereInput
  }

  export type LeadUpdateToOneWithWhereWithoutPipelineInput = {
    where?: LeadWhereInput
    data: XOR<LeadUpdateWithoutPipelineInput, LeadUncheckedUpdateWithoutPipelineInput>
  }

  export type LeadUpdateWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    leadSource?: NullableStringFieldUpdateOperationsInput | string | null
    leadDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadAddress?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    prospectLocation?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutLeadsNestedInput
    client?: ClientUpdateOneWithoutLeadsNestedInput
    opportunities?: OpportunityUpdateManyWithoutLeadNestedInput
  }

  export type LeadUncheckedUpdateWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    leadSource?: NullableStringFieldUpdateOperationsInput | string | null
    leadDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadAddress?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    prospectLocation?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutLeadsNestedInput
    opportunities?: OpportunityUncheckedUpdateManyWithoutLeadNestedInput
  }

  export type OpportunityUpsertWithoutPipelineInput = {
    update: XOR<OpportunityUpdateWithoutPipelineInput, OpportunityUncheckedUpdateWithoutPipelineInput>
    create: XOR<OpportunityCreateWithoutPipelineInput, OpportunityUncheckedCreateWithoutPipelineInput>
    where?: OpportunityWhereInput
  }

  export type OpportunityUpdateToOneWithWhereWithoutPipelineInput = {
    where?: OpportunityWhereInput
    data: XOR<OpportunityUpdateWithoutPipelineInput, OpportunityUncheckedUpdateWithoutPipelineInput>
  }

  export type OpportunityUpdateWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutOpportunitiesNestedInput
    client?: ClientUpdateOneWithoutOpportunitiesNestedInput
    lead?: LeadUpdateOneWithoutOpportunitiesNestedInput
    quotes?: QuoteUpdateManyWithoutOpportunityNestedInput
  }

  export type OpportunityUncheckedUpdateWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutOpportunitiesNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutOpportunityNestedInput
  }

  export type QuoteUpsertWithoutPipelineInput = {
    update: XOR<QuoteUpdateWithoutPipelineInput, QuoteUncheckedUpdateWithoutPipelineInput>
    create: XOR<QuoteCreateWithoutPipelineInput, QuoteUncheckedCreateWithoutPipelineInput>
    where?: QuoteWhereInput
  }

  export type QuoteUpdateToOneWithWhereWithoutPipelineInput = {
    where?: QuoteWhereInput
    data: XOR<QuoteUpdateWithoutPipelineInput, QuoteUncheckedUpdateWithoutPipelineInput>
  }

  export type QuoteUpdateWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutQuotesNestedInput
    client?: ClientUpdateOneWithoutQuotesNestedInput
    opportunity?: OpportunityUpdateOneWithoutQuotesNestedInput
    contracts?: ContractUpdateManyWithoutQuoteNestedInput
  }

  export type QuoteUncheckedUpdateWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutQuotesNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutQuoteNestedInput
  }

  export type ContractUpsertWithoutPipelineInput = {
    update: XOR<ContractUpdateWithoutPipelineInput, ContractUncheckedUpdateWithoutPipelineInput>
    create: XOR<ContractCreateWithoutPipelineInput, ContractUncheckedCreateWithoutPipelineInput>
    where?: ContractWhereInput
  }

  export type ContractUpdateToOneWithWhereWithoutPipelineInput = {
    where?: ContractWhereInput
    data: XOR<ContractUpdateWithoutPipelineInput, ContractUncheckedUpdateWithoutPipelineInput>
  }

  export type ContractUpdateWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutContractsNestedInput
    client?: ClientUpdateOneWithoutContractsNestedInput
    quote?: QuoteUpdateOneWithoutContractsNestedInput
    project?: ProjectUpdateOneWithoutContractNestedInput
  }

  export type ContractUncheckedUpdateWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutContractsNestedInput
    project?: ProjectUncheckedUpdateOneWithoutContractNestedInput
  }

  export type UserUpsertWithoutPipelineAssigneeInput = {
    update: XOR<UserUpdateWithoutPipelineAssigneeInput, UserUncheckedUpdateWithoutPipelineAssigneeInput>
    create: XOR<UserCreateWithoutPipelineAssigneeInput, UserUncheckedCreateWithoutPipelineAssigneeInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPipelineAssigneeInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPipelineAssigneeInput, UserUncheckedUpdateWithoutPipelineAssigneeInput>
  }

  export type UserUpdateWithoutPipelineAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutPipelineAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutPipelineMemberInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutPipelineMemberInput, UserUncheckedUpdateWithoutPipelineMemberInput>
    create: XOR<UserCreateWithoutPipelineMemberInput, UserUncheckedCreateWithoutPipelineMemberInput>
  }

  export type UserUpdateWithWhereUniqueWithoutPipelineMemberInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutPipelineMemberInput, UserUncheckedUpdateWithoutPipelineMemberInput>
  }

  export type UserUpdateManyWithWhereWithoutPipelineMemberInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutPipelineMemberInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    createdAt?: DateTimeNullableFilter<"User"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    status?: StringFilter<"User"> | string
    roleId?: StringNullableFilter<"User"> | string | null
    organizationId?: StringNullableFilter<"User"> | string | null
  }

  export type UserUpsertWithoutCreatorPipelineInput = {
    update: XOR<UserUpdateWithoutCreatorPipelineInput, UserUncheckedUpdateWithoutCreatorPipelineInput>
    create: XOR<UserCreateWithoutCreatorPipelineInput, UserUncheckedCreateWithoutCreatorPipelineInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatorPipelineInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatorPipelineInput, UserUncheckedUpdateWithoutCreatorPipelineInput>
  }

  export type UserUpdateWithoutCreatorPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatorPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutUpdaterPipelineInput = {
    update: XOR<UserUpdateWithoutUpdaterPipelineInput, UserUncheckedUpdateWithoutUpdaterPipelineInput>
    create: XOR<UserCreateWithoutUpdaterPipelineInput, UserUncheckedCreateWithoutUpdaterPipelineInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdaterPipelineInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdaterPipelineInput, UserUncheckedUpdateWithoutUpdaterPipelineInput>
  }

  export type UserUpdateWithoutUpdaterPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdaterPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type StageUpsertWithWhereUniqueWithoutPipelineInput = {
    where: StageWhereUniqueInput
    update: XOR<StageUpdateWithoutPipelineInput, StageUncheckedUpdateWithoutPipelineInput>
    create: XOR<StageCreateWithoutPipelineInput, StageUncheckedCreateWithoutPipelineInput>
  }

  export type StageUpdateWithWhereUniqueWithoutPipelineInput = {
    where: StageWhereUniqueInput
    data: XOR<StageUpdateWithoutPipelineInput, StageUncheckedUpdateWithoutPipelineInput>
  }

  export type StageUpdateManyWithWhereWithoutPipelineInput = {
    where: StageScalarWhereInput
    data: XOR<StageUpdateManyMutationInput, StageUncheckedUpdateManyWithoutPipelineInput>
  }

  export type NoteUpsertWithWhereUniqueWithoutPipelineInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutPipelineInput, NoteUncheckedUpdateWithoutPipelineInput>
    create: XOR<NoteCreateWithoutPipelineInput, NoteUncheckedCreateWithoutPipelineInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutPipelineInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutPipelineInput, NoteUncheckedUpdateWithoutPipelineInput>
  }

  export type NoteUpdateManyWithWhereWithoutPipelineInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutPipelineInput>
  }

  export type EventUpsertWithWhereUniqueWithoutPipelineInput = {
    where: EventWhereUniqueInput
    update: XOR<EventUpdateWithoutPipelineInput, EventUncheckedUpdateWithoutPipelineInput>
    create: XOR<EventCreateWithoutPipelineInput, EventUncheckedCreateWithoutPipelineInput>
  }

  export type EventUpdateWithWhereUniqueWithoutPipelineInput = {
    where: EventWhereUniqueInput
    data: XOR<EventUpdateWithoutPipelineInput, EventUncheckedUpdateWithoutPipelineInput>
  }

  export type EventUpdateManyWithWhereWithoutPipelineInput = {
    where: EventScalarWhereInput
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyWithoutPipelineInput>
  }

  export type EventScalarWhereInput = {
    AND?: EventScalarWhereInput | EventScalarWhereInput[]
    OR?: EventScalarWhereInput[]
    NOT?: EventScalarWhereInput | EventScalarWhereInput[]
    id?: StringFilter<"Event"> | string
    title?: StringFilter<"Event"> | string
    category?: StringNullableFilter<"Event"> | string | null
    description?: StringNullableFilter<"Event"> | string | null
    startDate?: DateTimeNullableFilter<"Event"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Event"> | Date | string | null
    url?: StringNullableFilter<"Event"> | string | null
    createdAt?: DateTimeNullableFilter<"Event"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Event"> | Date | string | null
    createdById?: StringNullableFilter<"Event"> | string | null
    updatedById?: StringNullableFilter<"Event"> | string | null
    pipelineId?: StringNullableFilter<"Event"> | string | null
    projectId?: StringNullableFilter<"Event"> | string | null
    milestoneId?: StringNullableFilter<"Event"> | string | null
    taskId?: StringNullableFilter<"Event"> | string | null
  }

  export type ProductCreateWithoutLeadsInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorProductInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProductInput
    opportunities?: OpportunityCreateNestedManyWithoutProductsInput
    quotes?: QuoteCreateNestedManyWithoutProductsInput
    contracts?: ContractCreateNestedManyWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutLeadsInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutProductsInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutProductsInput
    contracts?: ContractUncheckedCreateNestedManyWithoutProductsInput
  }

  export type ProductCreateOrConnectWithoutLeadsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutLeadsInput, ProductUncheckedCreateWithoutLeadsInput>
  }

  export type ClientCreateWithoutLeadsInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorClientInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterClientInput
    notes?: NoteCreateNestedManyWithoutClientInput
    opportunities?: OpportunityCreateNestedManyWithoutClientInput
    quotes?: QuoteCreateNestedManyWithoutClientInput
    contracts?: ContractCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutLeadsInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutClientInput
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutClientInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutClientInput
    contracts?: ContractUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutLeadsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutLeadsInput, ClientUncheckedCreateWithoutLeadsInput>
  }

  export type OpportunityCreateWithoutLeadInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    approvedDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutOpportunitiesInput
    client?: ClientCreateNestedOneWithoutOpportunitiesInput
    quotes?: QuoteCreateNestedManyWithoutOpportunityInput
    pipeline?: PipelineCreateNestedManyWithoutOpportunityInput
  }

  export type OpportunityUncheckedCreateWithoutLeadInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    approvedDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutOpportunitiesInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutOpportunityInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutOpportunityInput
  }

  export type OpportunityCreateOrConnectWithoutLeadInput = {
    where: OpportunityWhereUniqueInput
    create: XOR<OpportunityCreateWithoutLeadInput, OpportunityUncheckedCreateWithoutLeadInput>
  }

  export type OpportunityCreateManyLeadInputEnvelope = {
    data: OpportunityCreateManyLeadInput | OpportunityCreateManyLeadInput[]
    skipDuplicates?: boolean
  }

  export type PipelineCreateWithoutLeadInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    opportunity?: OpportunityCreateNestedOneWithoutPipelineInput
    quote?: QuoteCreateNestedOneWithoutPipelineInput
    contract?: ContractCreateNestedOneWithoutPipelineInput
    assignee?: UserCreateNestedOneWithoutPipelineAssigneeInput
    members?: UserCreateNestedManyWithoutPipelineMemberInput
    createdBy?: UserCreateNestedOneWithoutCreatorPipelineInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterPipelineInput
    stages?: StageCreateNestedManyWithoutPipelineInput
    notes?: NoteCreateNestedManyWithoutPipelineInput
    events?: EventCreateNestedManyWithoutPipelineInput
  }

  export type PipelineUncheckedCreateWithoutLeadInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutPipelineMemberInput
    stages?: StageUncheckedCreateNestedManyWithoutPipelineInput
    notes?: NoteUncheckedCreateNestedManyWithoutPipelineInput
    events?: EventUncheckedCreateNestedManyWithoutPipelineInput
  }

  export type PipelineCreateOrConnectWithoutLeadInput = {
    where: PipelineWhereUniqueInput
    create: XOR<PipelineCreateWithoutLeadInput, PipelineUncheckedCreateWithoutLeadInput>
  }

  export type PipelineCreateManyLeadInputEnvelope = {
    data: PipelineCreateManyLeadInput | PipelineCreateManyLeadInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithWhereUniqueWithoutLeadsInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutLeadsInput, ProductUncheckedUpdateWithoutLeadsInput>
    create: XOR<ProductCreateWithoutLeadsInput, ProductUncheckedCreateWithoutLeadsInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutLeadsInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutLeadsInput, ProductUncheckedUpdateWithoutLeadsInput>
  }

  export type ProductUpdateManyWithWhereWithoutLeadsInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutLeadsInput>
  }

  export type ProductScalarWhereInput = {
    AND?: ProductScalarWhereInput | ProductScalarWhereInput[]
    OR?: ProductScalarWhereInput[]
    NOT?: ProductScalarWhereInput | ProductScalarWhereInput[]
    id?: StringFilter<"Product"> | string
    regNumber?: StringNullableFilter<"Product"> | string | null
    name?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    createdAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    createdById?: StringNullableFilter<"Product"> | string | null
    updatedById?: StringNullableFilter<"Product"> | string | null
  }

  export type ClientUpsertWithoutLeadsInput = {
    update: XOR<ClientUpdateWithoutLeadsInput, ClientUncheckedUpdateWithoutLeadsInput>
    create: XOR<ClientCreateWithoutLeadsInput, ClientUncheckedCreateWithoutLeadsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutLeadsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutLeadsInput, ClientUncheckedUpdateWithoutLeadsInput>
  }

  export type ClientUpdateWithoutLeadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorClientNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterClientNestedInput
    notes?: NoteUpdateManyWithoutClientNestedInput
    opportunities?: OpportunityUpdateManyWithoutClientNestedInput
    quotes?: QuoteUpdateManyWithoutClientNestedInput
    contracts?: ContractUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutLeadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutClientNestedInput
    opportunities?: OpportunityUncheckedUpdateManyWithoutClientNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutClientNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutClientNestedInput
  }

  export type OpportunityUpsertWithWhereUniqueWithoutLeadInput = {
    where: OpportunityWhereUniqueInput
    update: XOR<OpportunityUpdateWithoutLeadInput, OpportunityUncheckedUpdateWithoutLeadInput>
    create: XOR<OpportunityCreateWithoutLeadInput, OpportunityUncheckedCreateWithoutLeadInput>
  }

  export type OpportunityUpdateWithWhereUniqueWithoutLeadInput = {
    where: OpportunityWhereUniqueInput
    data: XOR<OpportunityUpdateWithoutLeadInput, OpportunityUncheckedUpdateWithoutLeadInput>
  }

  export type OpportunityUpdateManyWithWhereWithoutLeadInput = {
    where: OpportunityScalarWhereInput
    data: XOR<OpportunityUpdateManyMutationInput, OpportunityUncheckedUpdateManyWithoutLeadInput>
  }

  export type OpportunityScalarWhereInput = {
    AND?: OpportunityScalarWhereInput | OpportunityScalarWhereInput[]
    OR?: OpportunityScalarWhereInput[]
    NOT?: OpportunityScalarWhereInput | OpportunityScalarWhereInput[]
    id?: StringFilter<"Opportunity"> | string
    regNumber?: StringNullableFilter<"Opportunity"> | string | null
    title?: StringFilter<"Opportunity"> | string
    currency?: StringNullableFilter<"Opportunity"> | string | null
    baseAmount?: DecimalNullableFilter<"Opportunity"> | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: DecimalNullableFilter<"Opportunity"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableFilter<"Opportunity"> | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: DateTimeNullableFilter<"Opportunity"> | Date | string | null
    description?: StringNullableFilter<"Opportunity"> | string | null
    approvedDate?: DateTimeNullableFilter<"Opportunity"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Opportunity"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Opportunity"> | Date | string | null
    clientId?: StringNullableFilter<"Opportunity"> | string | null
    leadId?: StringNullableFilter<"Opportunity"> | string | null
  }

  export type PipelineUpsertWithWhereUniqueWithoutLeadInput = {
    where: PipelineWhereUniqueInput
    update: XOR<PipelineUpdateWithoutLeadInput, PipelineUncheckedUpdateWithoutLeadInput>
    create: XOR<PipelineCreateWithoutLeadInput, PipelineUncheckedCreateWithoutLeadInput>
  }

  export type PipelineUpdateWithWhereUniqueWithoutLeadInput = {
    where: PipelineWhereUniqueInput
    data: XOR<PipelineUpdateWithoutLeadInput, PipelineUncheckedUpdateWithoutLeadInput>
  }

  export type PipelineUpdateManyWithWhereWithoutLeadInput = {
    where: PipelineScalarWhereInput
    data: XOR<PipelineUpdateManyMutationInput, PipelineUncheckedUpdateManyWithoutLeadInput>
  }

  export type PipelineScalarWhereInput = {
    AND?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
    OR?: PipelineScalarWhereInput[]
    NOT?: PipelineScalarWhereInput | PipelineScalarWhereInput[]
    id?: StringFilter<"Pipeline"> | string
    regNumber?: StringNullableFilter<"Pipeline"> | string | null
    category?: StringNullableFilter<"Pipeline"> | string | null
    leadId?: StringNullableFilter<"Pipeline"> | string | null
    opportunityId?: StringNullableFilter<"Pipeline"> | string | null
    quoteId?: StringNullableFilter<"Pipeline"> | string | null
    contractId?: StringNullableFilter<"Pipeline"> | string | null
    createdAt?: DateTimeNullableFilter<"Pipeline"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Pipeline"> | Date | string | null
    assigneeId?: StringNullableFilter<"Pipeline"> | string | null
    createdById?: StringNullableFilter<"Pipeline"> | string | null
    updatedById?: StringNullableFilter<"Pipeline"> | string | null
  }

  export type ProductCreateWithoutOpportunitiesInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorProductInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProductInput
    leads?: LeadCreateNestedManyWithoutProductsInput
    quotes?: QuoteCreateNestedManyWithoutProductsInput
    contracts?: ContractCreateNestedManyWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutOpportunitiesInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    leads?: LeadUncheckedCreateNestedManyWithoutProductsInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutProductsInput
    contracts?: ContractUncheckedCreateNestedManyWithoutProductsInput
  }

  export type ProductCreateOrConnectWithoutOpportunitiesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutOpportunitiesInput, ProductUncheckedCreateWithoutOpportunitiesInput>
  }

  export type ClientCreateWithoutOpportunitiesInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorClientInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterClientInput
    notes?: NoteCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
    quotes?: QuoteCreateNestedManyWithoutClientInput
    contracts?: ContractCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutOpportunitiesInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutClientInput
    contracts?: ContractUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutOpportunitiesInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutOpportunitiesInput, ClientUncheckedCreateWithoutOpportunitiesInput>
  }

  export type LeadCreateWithoutOpportunitiesInput = {
    id?: string
    regNumber?: string | null
    name?: string | null
    role?: string | null
    email?: string | null
    phone?: string | null
    leadSource?: string | null
    leadDate?: Date | string | null
    leadAddress?: string | null
    description?: string | null
    prospectLocation?: string | null
    approvedDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutLeadsInput
    client?: ClientCreateNestedOneWithoutLeadsInput
    pipeline?: PipelineCreateNestedManyWithoutLeadInput
  }

  export type LeadUncheckedCreateWithoutOpportunitiesInput = {
    id?: string
    regNumber?: string | null
    name?: string | null
    role?: string | null
    email?: string | null
    phone?: string | null
    leadSource?: string | null
    leadDate?: Date | string | null
    leadAddress?: string | null
    description?: string | null
    prospectLocation?: string | null
    approvedDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutLeadsInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutLeadInput
  }

  export type LeadCreateOrConnectWithoutOpportunitiesInput = {
    where: LeadWhereUniqueInput
    create: XOR<LeadCreateWithoutOpportunitiesInput, LeadUncheckedCreateWithoutOpportunitiesInput>
  }

  export type QuoteCreateWithoutOpportunityInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    releasedDate?: Date | string | null
    approvedDate?: Date | string | null
    expiredDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutQuotesInput
    client?: ClientCreateNestedOneWithoutQuotesInput
    contracts?: ContractCreateNestedManyWithoutQuoteInput
    pipeline?: PipelineCreateNestedManyWithoutQuoteInput
  }

  export type QuoteUncheckedCreateWithoutOpportunityInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    releasedDate?: Date | string | null
    approvedDate?: Date | string | null
    expiredDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutQuotesInput
    contracts?: ContractUncheckedCreateNestedManyWithoutQuoteInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutQuoteInput
  }

  export type QuoteCreateOrConnectWithoutOpportunityInput = {
    where: QuoteWhereUniqueInput
    create: XOR<QuoteCreateWithoutOpportunityInput, QuoteUncheckedCreateWithoutOpportunityInput>
  }

  export type QuoteCreateManyOpportunityInputEnvelope = {
    data: QuoteCreateManyOpportunityInput | QuoteCreateManyOpportunityInput[]
    skipDuplicates?: boolean
  }

  export type PipelineCreateWithoutOpportunityInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    lead?: LeadCreateNestedOneWithoutPipelineInput
    quote?: QuoteCreateNestedOneWithoutPipelineInput
    contract?: ContractCreateNestedOneWithoutPipelineInput
    assignee?: UserCreateNestedOneWithoutPipelineAssigneeInput
    members?: UserCreateNestedManyWithoutPipelineMemberInput
    createdBy?: UserCreateNestedOneWithoutCreatorPipelineInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterPipelineInput
    stages?: StageCreateNestedManyWithoutPipelineInput
    notes?: NoteCreateNestedManyWithoutPipelineInput
    events?: EventCreateNestedManyWithoutPipelineInput
  }

  export type PipelineUncheckedCreateWithoutOpportunityInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutPipelineMemberInput
    stages?: StageUncheckedCreateNestedManyWithoutPipelineInput
    notes?: NoteUncheckedCreateNestedManyWithoutPipelineInput
    events?: EventUncheckedCreateNestedManyWithoutPipelineInput
  }

  export type PipelineCreateOrConnectWithoutOpportunityInput = {
    where: PipelineWhereUniqueInput
    create: XOR<PipelineCreateWithoutOpportunityInput, PipelineUncheckedCreateWithoutOpportunityInput>
  }

  export type PipelineCreateManyOpportunityInputEnvelope = {
    data: PipelineCreateManyOpportunityInput | PipelineCreateManyOpportunityInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithWhereUniqueWithoutOpportunitiesInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutOpportunitiesInput, ProductUncheckedUpdateWithoutOpportunitiesInput>
    create: XOR<ProductCreateWithoutOpportunitiesInput, ProductUncheckedCreateWithoutOpportunitiesInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutOpportunitiesInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutOpportunitiesInput, ProductUncheckedUpdateWithoutOpportunitiesInput>
  }

  export type ProductUpdateManyWithWhereWithoutOpportunitiesInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutOpportunitiesInput>
  }

  export type ClientUpsertWithoutOpportunitiesInput = {
    update: XOR<ClientUpdateWithoutOpportunitiesInput, ClientUncheckedUpdateWithoutOpportunitiesInput>
    create: XOR<ClientCreateWithoutOpportunitiesInput, ClientUncheckedCreateWithoutOpportunitiesInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutOpportunitiesInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutOpportunitiesInput, ClientUncheckedUpdateWithoutOpportunitiesInput>
  }

  export type ClientUpdateWithoutOpportunitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorClientNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterClientNestedInput
    notes?: NoteUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
    quotes?: QuoteUpdateManyWithoutClientNestedInput
    contracts?: ContractUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutOpportunitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutClientNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutClientNestedInput
  }

  export type LeadUpsertWithoutOpportunitiesInput = {
    update: XOR<LeadUpdateWithoutOpportunitiesInput, LeadUncheckedUpdateWithoutOpportunitiesInput>
    create: XOR<LeadCreateWithoutOpportunitiesInput, LeadUncheckedCreateWithoutOpportunitiesInput>
    where?: LeadWhereInput
  }

  export type LeadUpdateToOneWithWhereWithoutOpportunitiesInput = {
    where?: LeadWhereInput
    data: XOR<LeadUpdateWithoutOpportunitiesInput, LeadUncheckedUpdateWithoutOpportunitiesInput>
  }

  export type LeadUpdateWithoutOpportunitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    leadSource?: NullableStringFieldUpdateOperationsInput | string | null
    leadDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadAddress?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    prospectLocation?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutLeadsNestedInput
    client?: ClientUpdateOneWithoutLeadsNestedInput
    pipeline?: PipelineUpdateManyWithoutLeadNestedInput
  }

  export type LeadUncheckedUpdateWithoutOpportunitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    leadSource?: NullableStringFieldUpdateOperationsInput | string | null
    leadDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadAddress?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    prospectLocation?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutLeadsNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutLeadNestedInput
  }

  export type QuoteUpsertWithWhereUniqueWithoutOpportunityInput = {
    where: QuoteWhereUniqueInput
    update: XOR<QuoteUpdateWithoutOpportunityInput, QuoteUncheckedUpdateWithoutOpportunityInput>
    create: XOR<QuoteCreateWithoutOpportunityInput, QuoteUncheckedCreateWithoutOpportunityInput>
  }

  export type QuoteUpdateWithWhereUniqueWithoutOpportunityInput = {
    where: QuoteWhereUniqueInput
    data: XOR<QuoteUpdateWithoutOpportunityInput, QuoteUncheckedUpdateWithoutOpportunityInput>
  }

  export type QuoteUpdateManyWithWhereWithoutOpportunityInput = {
    where: QuoteScalarWhereInput
    data: XOR<QuoteUpdateManyMutationInput, QuoteUncheckedUpdateManyWithoutOpportunityInput>
  }

  export type QuoteScalarWhereInput = {
    AND?: QuoteScalarWhereInput | QuoteScalarWhereInput[]
    OR?: QuoteScalarWhereInput[]
    NOT?: QuoteScalarWhereInput | QuoteScalarWhereInput[]
    id?: StringFilter<"Quote"> | string
    regNumber?: StringNullableFilter<"Quote"> | string | null
    title?: StringFilter<"Quote"> | string
    currency?: StringNullableFilter<"Quote"> | string | null
    baseAmount?: DecimalNullableFilter<"Quote"> | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: DecimalNullableFilter<"Quote"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableFilter<"Quote"> | Decimal | DecimalJsLike | number | string | null
    releasedDate?: DateTimeNullableFilter<"Quote"> | Date | string | null
    approvedDate?: DateTimeNullableFilter<"Quote"> | Date | string | null
    expiredDate?: DateTimeNullableFilter<"Quote"> | Date | string | null
    expectedCloseDate?: DateTimeNullableFilter<"Quote"> | Date | string | null
    description?: StringNullableFilter<"Quote"> | string | null
    createdAt?: DateTimeNullableFilter<"Quote"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Quote"> | Date | string | null
    clientId?: StringNullableFilter<"Quote"> | string | null
    opportunityId?: StringNullableFilter<"Quote"> | string | null
  }

  export type PipelineUpsertWithWhereUniqueWithoutOpportunityInput = {
    where: PipelineWhereUniqueInput
    update: XOR<PipelineUpdateWithoutOpportunityInput, PipelineUncheckedUpdateWithoutOpportunityInput>
    create: XOR<PipelineCreateWithoutOpportunityInput, PipelineUncheckedCreateWithoutOpportunityInput>
  }

  export type PipelineUpdateWithWhereUniqueWithoutOpportunityInput = {
    where: PipelineWhereUniqueInput
    data: XOR<PipelineUpdateWithoutOpportunityInput, PipelineUncheckedUpdateWithoutOpportunityInput>
  }

  export type PipelineUpdateManyWithWhereWithoutOpportunityInput = {
    where: PipelineScalarWhereInput
    data: XOR<PipelineUpdateManyMutationInput, PipelineUncheckedUpdateManyWithoutOpportunityInput>
  }

  export type ProductCreateWithoutQuotesInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorProductInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProductInput
    leads?: LeadCreateNestedManyWithoutProductsInput
    opportunities?: OpportunityCreateNestedManyWithoutProductsInput
    contracts?: ContractCreateNestedManyWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutQuotesInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    leads?: LeadUncheckedCreateNestedManyWithoutProductsInput
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutProductsInput
    contracts?: ContractUncheckedCreateNestedManyWithoutProductsInput
  }

  export type ProductCreateOrConnectWithoutQuotesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutQuotesInput, ProductUncheckedCreateWithoutQuotesInput>
  }

  export type ClientCreateWithoutQuotesInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorClientInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterClientInput
    notes?: NoteCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
    opportunities?: OpportunityCreateNestedManyWithoutClientInput
    contracts?: ContractCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutQuotesInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutClientInput
    contracts?: ContractUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutQuotesInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutQuotesInput, ClientUncheckedCreateWithoutQuotesInput>
  }

  export type OpportunityCreateWithoutQuotesInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    approvedDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutOpportunitiesInput
    client?: ClientCreateNestedOneWithoutOpportunitiesInput
    lead?: LeadCreateNestedOneWithoutOpportunitiesInput
    pipeline?: PipelineCreateNestedManyWithoutOpportunityInput
  }

  export type OpportunityUncheckedCreateWithoutQuotesInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    approvedDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    leadId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutOpportunitiesInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutOpportunityInput
  }

  export type OpportunityCreateOrConnectWithoutQuotesInput = {
    where: OpportunityWhereUniqueInput
    create: XOR<OpportunityCreateWithoutQuotesInput, OpportunityUncheckedCreateWithoutQuotesInput>
  }

  export type ContractCreateWithoutQuoteInput = {
    id?: string
    regNumber?: string | null
    title: string
    signedDate?: Date | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    penalty?: boolean | null
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    clientPicName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutContractsInput
    client?: ClientCreateNestedOneWithoutContractsInput
    project?: ProjectCreateNestedOneWithoutContractInput
    pipeline?: PipelineCreateNestedManyWithoutContractInput
  }

  export type ContractUncheckedCreateWithoutQuoteInput = {
    id?: string
    regNumber?: string | null
    title: string
    signedDate?: Date | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    penalty?: boolean | null
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    clientPicName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutContractsInput
    project?: ProjectUncheckedCreateNestedOneWithoutContractInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutContractInput
  }

  export type ContractCreateOrConnectWithoutQuoteInput = {
    where: ContractWhereUniqueInput
    create: XOR<ContractCreateWithoutQuoteInput, ContractUncheckedCreateWithoutQuoteInput>
  }

  export type ContractCreateManyQuoteInputEnvelope = {
    data: ContractCreateManyQuoteInput | ContractCreateManyQuoteInput[]
    skipDuplicates?: boolean
  }

  export type PipelineCreateWithoutQuoteInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    lead?: LeadCreateNestedOneWithoutPipelineInput
    opportunity?: OpportunityCreateNestedOneWithoutPipelineInput
    contract?: ContractCreateNestedOneWithoutPipelineInput
    assignee?: UserCreateNestedOneWithoutPipelineAssigneeInput
    members?: UserCreateNestedManyWithoutPipelineMemberInput
    createdBy?: UserCreateNestedOneWithoutCreatorPipelineInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterPipelineInput
    stages?: StageCreateNestedManyWithoutPipelineInput
    notes?: NoteCreateNestedManyWithoutPipelineInput
    events?: EventCreateNestedManyWithoutPipelineInput
  }

  export type PipelineUncheckedCreateWithoutQuoteInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutPipelineMemberInput
    stages?: StageUncheckedCreateNestedManyWithoutPipelineInput
    notes?: NoteUncheckedCreateNestedManyWithoutPipelineInput
    events?: EventUncheckedCreateNestedManyWithoutPipelineInput
  }

  export type PipelineCreateOrConnectWithoutQuoteInput = {
    where: PipelineWhereUniqueInput
    create: XOR<PipelineCreateWithoutQuoteInput, PipelineUncheckedCreateWithoutQuoteInput>
  }

  export type PipelineCreateManyQuoteInputEnvelope = {
    data: PipelineCreateManyQuoteInput | PipelineCreateManyQuoteInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithWhereUniqueWithoutQuotesInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutQuotesInput, ProductUncheckedUpdateWithoutQuotesInput>
    create: XOR<ProductCreateWithoutQuotesInput, ProductUncheckedCreateWithoutQuotesInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutQuotesInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutQuotesInput, ProductUncheckedUpdateWithoutQuotesInput>
  }

  export type ProductUpdateManyWithWhereWithoutQuotesInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutQuotesInput>
  }

  export type ClientUpsertWithoutQuotesInput = {
    update: XOR<ClientUpdateWithoutQuotesInput, ClientUncheckedUpdateWithoutQuotesInput>
    create: XOR<ClientCreateWithoutQuotesInput, ClientUncheckedCreateWithoutQuotesInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutQuotesInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutQuotesInput, ClientUncheckedUpdateWithoutQuotesInput>
  }

  export type ClientUpdateWithoutQuotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorClientNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterClientNestedInput
    notes?: NoteUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
    opportunities?: OpportunityUpdateManyWithoutClientNestedInput
    contracts?: ContractUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutQuotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
    opportunities?: OpportunityUncheckedUpdateManyWithoutClientNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutClientNestedInput
  }

  export type OpportunityUpsertWithoutQuotesInput = {
    update: XOR<OpportunityUpdateWithoutQuotesInput, OpportunityUncheckedUpdateWithoutQuotesInput>
    create: XOR<OpportunityCreateWithoutQuotesInput, OpportunityUncheckedCreateWithoutQuotesInput>
    where?: OpportunityWhereInput
  }

  export type OpportunityUpdateToOneWithWhereWithoutQuotesInput = {
    where?: OpportunityWhereInput
    data: XOR<OpportunityUpdateWithoutQuotesInput, OpportunityUncheckedUpdateWithoutQuotesInput>
  }

  export type OpportunityUpdateWithoutQuotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutOpportunitiesNestedInput
    client?: ClientUpdateOneWithoutOpportunitiesNestedInput
    lead?: LeadUpdateOneWithoutOpportunitiesNestedInput
    pipeline?: PipelineUpdateManyWithoutOpportunityNestedInput
  }

  export type OpportunityUncheckedUpdateWithoutQuotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutOpportunitiesNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutOpportunityNestedInput
  }

  export type ContractUpsertWithWhereUniqueWithoutQuoteInput = {
    where: ContractWhereUniqueInput
    update: XOR<ContractUpdateWithoutQuoteInput, ContractUncheckedUpdateWithoutQuoteInput>
    create: XOR<ContractCreateWithoutQuoteInput, ContractUncheckedCreateWithoutQuoteInput>
  }

  export type ContractUpdateWithWhereUniqueWithoutQuoteInput = {
    where: ContractWhereUniqueInput
    data: XOR<ContractUpdateWithoutQuoteInput, ContractUncheckedUpdateWithoutQuoteInput>
  }

  export type ContractUpdateManyWithWhereWithoutQuoteInput = {
    where: ContractScalarWhereInput
    data: XOR<ContractUpdateManyMutationInput, ContractUncheckedUpdateManyWithoutQuoteInput>
  }

  export type ContractScalarWhereInput = {
    AND?: ContractScalarWhereInput | ContractScalarWhereInput[]
    OR?: ContractScalarWhereInput[]
    NOT?: ContractScalarWhereInput | ContractScalarWhereInput[]
    id?: StringFilter<"Contract"> | string
    regNumber?: StringNullableFilter<"Contract"> | string | null
    title?: StringFilter<"Contract"> | string
    signedDate?: DateTimeNullableFilter<"Contract"> | Date | string | null
    startDate?: DateTimeNullableFilter<"Contract"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Contract"> | Date | string | null
    description?: StringNullableFilter<"Contract"> | string | null
    penalty?: BoolNullableFilter<"Contract"> | boolean | null
    currency?: StringNullableFilter<"Contract"> | string | null
    baseAmount?: DecimalNullableFilter<"Contract"> | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: DecimalNullableFilter<"Contract"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableFilter<"Contract"> | Decimal | DecimalJsLike | number | string | null
    clientPicName?: StringNullableFilter<"Contract"> | string | null
    createdAt?: DateTimeNullableFilter<"Contract"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Contract"> | Date | string | null
    clientId?: StringNullableFilter<"Contract"> | string | null
    quoteId?: StringNullableFilter<"Contract"> | string | null
  }

  export type PipelineUpsertWithWhereUniqueWithoutQuoteInput = {
    where: PipelineWhereUniqueInput
    update: XOR<PipelineUpdateWithoutQuoteInput, PipelineUncheckedUpdateWithoutQuoteInput>
    create: XOR<PipelineCreateWithoutQuoteInput, PipelineUncheckedCreateWithoutQuoteInput>
  }

  export type PipelineUpdateWithWhereUniqueWithoutQuoteInput = {
    where: PipelineWhereUniqueInput
    data: XOR<PipelineUpdateWithoutQuoteInput, PipelineUncheckedUpdateWithoutQuoteInput>
  }

  export type PipelineUpdateManyWithWhereWithoutQuoteInput = {
    where: PipelineScalarWhereInput
    data: XOR<PipelineUpdateManyMutationInput, PipelineUncheckedUpdateManyWithoutQuoteInput>
  }

  export type ProductCreateWithoutContractsInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorProductInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProductInput
    leads?: LeadCreateNestedManyWithoutProductsInput
    opportunities?: OpportunityCreateNestedManyWithoutProductsInput
    quotes?: QuoteCreateNestedManyWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutContractsInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    leads?: LeadUncheckedCreateNestedManyWithoutProductsInput
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutProductsInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutProductsInput
  }

  export type ProductCreateOrConnectWithoutContractsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutContractsInput, ProductUncheckedCreateWithoutContractsInput>
  }

  export type ClientCreateWithoutContractsInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorClientInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterClientInput
    notes?: NoteCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
    opportunities?: OpportunityCreateNestedManyWithoutClientInput
    quotes?: QuoteCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutContractsInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutClientInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutContractsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutContractsInput, ClientUncheckedCreateWithoutContractsInput>
  }

  export type QuoteCreateWithoutContractsInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    releasedDate?: Date | string | null
    approvedDate?: Date | string | null
    expiredDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutQuotesInput
    client?: ClientCreateNestedOneWithoutQuotesInput
    opportunity?: OpportunityCreateNestedOneWithoutQuotesInput
    pipeline?: PipelineCreateNestedManyWithoutQuoteInput
  }

  export type QuoteUncheckedCreateWithoutContractsInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    releasedDate?: Date | string | null
    approvedDate?: Date | string | null
    expiredDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    opportunityId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutQuotesInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutQuoteInput
  }

  export type QuoteCreateOrConnectWithoutContractsInput = {
    where: QuoteWhereUniqueInput
    create: XOR<QuoteCreateWithoutContractsInput, QuoteUncheckedCreateWithoutContractsInput>
  }

  export type ProjectCreateWithoutContractInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutProjectAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorProjectInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProjectInput
    members?: UserCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneCreateNestedManyWithoutProjectInput
    notes?: NoteCreateNestedManyWithoutProjectInput
    stages?: StageCreateNestedManyWithoutProjectInput
    events?: EventCreateNestedManyWithoutProjectInput
    budgets?: BudgetCreateNestedManyWithoutProjectInput
    expenses?: ExpenseCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutContractInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneUncheckedCreateNestedManyWithoutProjectInput
    notes?: NoteUncheckedCreateNestedManyWithoutProjectInput
    stages?: StageUncheckedCreateNestedManyWithoutProjectInput
    events?: EventUncheckedCreateNestedManyWithoutProjectInput
    budgets?: BudgetUncheckedCreateNestedManyWithoutProjectInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutContractInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutContractInput, ProjectUncheckedCreateWithoutContractInput>
  }

  export type PipelineCreateWithoutContractInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    lead?: LeadCreateNestedOneWithoutPipelineInput
    opportunity?: OpportunityCreateNestedOneWithoutPipelineInput
    quote?: QuoteCreateNestedOneWithoutPipelineInput
    assignee?: UserCreateNestedOneWithoutPipelineAssigneeInput
    members?: UserCreateNestedManyWithoutPipelineMemberInput
    createdBy?: UserCreateNestedOneWithoutCreatorPipelineInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterPipelineInput
    stages?: StageCreateNestedManyWithoutPipelineInput
    notes?: NoteCreateNestedManyWithoutPipelineInput
    events?: EventCreateNestedManyWithoutPipelineInput
  }

  export type PipelineUncheckedCreateWithoutContractInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutPipelineMemberInput
    stages?: StageUncheckedCreateNestedManyWithoutPipelineInput
    notes?: NoteUncheckedCreateNestedManyWithoutPipelineInput
    events?: EventUncheckedCreateNestedManyWithoutPipelineInput
  }

  export type PipelineCreateOrConnectWithoutContractInput = {
    where: PipelineWhereUniqueInput
    create: XOR<PipelineCreateWithoutContractInput, PipelineUncheckedCreateWithoutContractInput>
  }

  export type PipelineCreateManyContractInputEnvelope = {
    data: PipelineCreateManyContractInput | PipelineCreateManyContractInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithWhereUniqueWithoutContractsInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutContractsInput, ProductUncheckedUpdateWithoutContractsInput>
    create: XOR<ProductCreateWithoutContractsInput, ProductUncheckedCreateWithoutContractsInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutContractsInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutContractsInput, ProductUncheckedUpdateWithoutContractsInput>
  }

  export type ProductUpdateManyWithWhereWithoutContractsInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutContractsInput>
  }

  export type ClientUpsertWithoutContractsInput = {
    update: XOR<ClientUpdateWithoutContractsInput, ClientUncheckedUpdateWithoutContractsInput>
    create: XOR<ClientCreateWithoutContractsInput, ClientUncheckedCreateWithoutContractsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutContractsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutContractsInput, ClientUncheckedUpdateWithoutContractsInput>
  }

  export type ClientUpdateWithoutContractsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorClientNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterClientNestedInput
    notes?: NoteUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
    opportunities?: OpportunityUpdateManyWithoutClientNestedInput
    quotes?: QuoteUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutContractsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
    opportunities?: OpportunityUncheckedUpdateManyWithoutClientNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutClientNestedInput
  }

  export type QuoteUpsertWithoutContractsInput = {
    update: XOR<QuoteUpdateWithoutContractsInput, QuoteUncheckedUpdateWithoutContractsInput>
    create: XOR<QuoteCreateWithoutContractsInput, QuoteUncheckedCreateWithoutContractsInput>
    where?: QuoteWhereInput
  }

  export type QuoteUpdateToOneWithWhereWithoutContractsInput = {
    where?: QuoteWhereInput
    data: XOR<QuoteUpdateWithoutContractsInput, QuoteUncheckedUpdateWithoutContractsInput>
  }

  export type QuoteUpdateWithoutContractsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutQuotesNestedInput
    client?: ClientUpdateOneWithoutQuotesNestedInput
    opportunity?: OpportunityUpdateOneWithoutQuotesNestedInput
    pipeline?: PipelineUpdateManyWithoutQuoteNestedInput
  }

  export type QuoteUncheckedUpdateWithoutContractsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutQuotesNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutQuoteNestedInput
  }

  export type ProjectUpsertWithoutContractInput = {
    update: XOR<ProjectUpdateWithoutContractInput, ProjectUncheckedUpdateWithoutContractInput>
    create: XOR<ProjectCreateWithoutContractInput, ProjectUncheckedCreateWithoutContractInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutContractInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutContractInput, ProjectUncheckedUpdateWithoutContractInput>
  }

  export type ProjectUpdateWithoutContractInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutProjectAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorProjectNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProjectNestedInput
    members?: UserUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUpdateManyWithoutProjectNestedInput
    notes?: NoteUpdateManyWithoutProjectNestedInput
    stages?: StageUpdateManyWithoutProjectNestedInput
    events?: EventUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutContractInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUncheckedUpdateManyWithoutProjectNestedInput
    notes?: NoteUncheckedUpdateManyWithoutProjectNestedInput
    stages?: StageUncheckedUpdateManyWithoutProjectNestedInput
    events?: EventUncheckedUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUncheckedUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type PipelineUpsertWithWhereUniqueWithoutContractInput = {
    where: PipelineWhereUniqueInput
    update: XOR<PipelineUpdateWithoutContractInput, PipelineUncheckedUpdateWithoutContractInput>
    create: XOR<PipelineCreateWithoutContractInput, PipelineUncheckedCreateWithoutContractInput>
  }

  export type PipelineUpdateWithWhereUniqueWithoutContractInput = {
    where: PipelineWhereUniqueInput
    data: XOR<PipelineUpdateWithoutContractInput, PipelineUncheckedUpdateWithoutContractInput>
  }

  export type PipelineUpdateManyWithWhereWithoutContractInput = {
    where: PipelineScalarWhereInput
    data: XOR<PipelineUpdateManyMutationInput, PipelineUncheckedUpdateManyWithoutContractInput>
  }

  export type UserCreateWithoutCreatorEventInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutCreatorEventInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutCreatorEventInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatorEventInput, UserUncheckedCreateWithoutCreatorEventInput>
  }

  export type UserCreateWithoutUpdaterEventInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutUpdaterEventInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutUpdaterEventInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdaterEventInput, UserUncheckedCreateWithoutUpdaterEventInput>
  }

  export type PipelineCreateWithoutEventsInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    lead?: LeadCreateNestedOneWithoutPipelineInput
    opportunity?: OpportunityCreateNestedOneWithoutPipelineInput
    quote?: QuoteCreateNestedOneWithoutPipelineInput
    contract?: ContractCreateNestedOneWithoutPipelineInput
    assignee?: UserCreateNestedOneWithoutPipelineAssigneeInput
    members?: UserCreateNestedManyWithoutPipelineMemberInput
    createdBy?: UserCreateNestedOneWithoutCreatorPipelineInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterPipelineInput
    stages?: StageCreateNestedManyWithoutPipelineInput
    notes?: NoteCreateNestedManyWithoutPipelineInput
  }

  export type PipelineUncheckedCreateWithoutEventsInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutPipelineMemberInput
    stages?: StageUncheckedCreateNestedManyWithoutPipelineInput
    notes?: NoteUncheckedCreateNestedManyWithoutPipelineInput
  }

  export type PipelineCreateOrConnectWithoutEventsInput = {
    where: PipelineWhereUniqueInput
    create: XOR<PipelineCreateWithoutEventsInput, PipelineUncheckedCreateWithoutEventsInput>
  }

  export type ProjectCreateWithoutEventsInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contract?: ContractCreateNestedOneWithoutProjectInput
    assignee?: UserCreateNestedOneWithoutProjectAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorProjectInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProjectInput
    members?: UserCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneCreateNestedManyWithoutProjectInput
    notes?: NoteCreateNestedManyWithoutProjectInput
    stages?: StageCreateNestedManyWithoutProjectInput
    budgets?: BudgetCreateNestedManyWithoutProjectInput
    expenses?: ExpenseCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutEventsInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contractId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneUncheckedCreateNestedManyWithoutProjectInput
    notes?: NoteUncheckedCreateNestedManyWithoutProjectInput
    stages?: StageUncheckedCreateNestedManyWithoutProjectInput
    budgets?: BudgetUncheckedCreateNestedManyWithoutProjectInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutEventsInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutEventsInput, ProjectUncheckedCreateWithoutEventsInput>
  }

  export type MilestoneCreateWithoutEventsInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    project?: ProjectCreateNestedOneWithoutMilestonesInput
    assignee?: UserCreateNestedOneWithoutMilestoneAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorMilestoneInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterMilestoneInput
    tasks?: TaskCreateNestedManyWithoutMilestoneInput
    notes?: NoteCreateNestedManyWithoutMilestoneInput
    stages?: StageCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneUncheckedCreateWithoutEventsInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    projectId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    tasks?: TaskUncheckedCreateNestedManyWithoutMilestoneInput
    notes?: NoteUncheckedCreateNestedManyWithoutMilestoneInput
    stages?: StageUncheckedCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneCreateOrConnectWithoutEventsInput = {
    where: MilestoneWhereUniqueInput
    create: XOR<MilestoneCreateWithoutEventsInput, MilestoneUncheckedCreateWithoutEventsInput>
  }

  export type TaskCreateWithoutEventsInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestone: MilestoneCreateNestedOneWithoutTasksInput
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorTaskInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterTaskInput
    members?: UserCreateNestedManyWithoutTaskMemberInput
    notes?: NoteCreateNestedManyWithoutTaskInput
    stages?: StageCreateNestedManyWithoutTaskInput
    expenses?: ExpenseCreateNestedManyWithoutTaskInput
    funds?: FundCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutEventsInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestoneId: string
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutTaskMemberInput
    notes?: NoteUncheckedCreateNestedManyWithoutTaskInput
    stages?: StageUncheckedCreateNestedManyWithoutTaskInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutTaskInput
    funds?: FundUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutEventsInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutEventsInput, TaskUncheckedCreateWithoutEventsInput>
  }

  export type UserUpsertWithoutCreatorEventInput = {
    update: XOR<UserUpdateWithoutCreatorEventInput, UserUncheckedUpdateWithoutCreatorEventInput>
    create: XOR<UserCreateWithoutCreatorEventInput, UserUncheckedCreateWithoutCreatorEventInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatorEventInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatorEventInput, UserUncheckedUpdateWithoutCreatorEventInput>
  }

  export type UserUpdateWithoutCreatorEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatorEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutUpdaterEventInput = {
    update: XOR<UserUpdateWithoutUpdaterEventInput, UserUncheckedUpdateWithoutUpdaterEventInput>
    create: XOR<UserCreateWithoutUpdaterEventInput, UserUncheckedCreateWithoutUpdaterEventInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdaterEventInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdaterEventInput, UserUncheckedUpdateWithoutUpdaterEventInput>
  }

  export type UserUpdateWithoutUpdaterEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdaterEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type PipelineUpsertWithoutEventsInput = {
    update: XOR<PipelineUpdateWithoutEventsInput, PipelineUncheckedUpdateWithoutEventsInput>
    create: XOR<PipelineCreateWithoutEventsInput, PipelineUncheckedCreateWithoutEventsInput>
    where?: PipelineWhereInput
  }

  export type PipelineUpdateToOneWithWhereWithoutEventsInput = {
    where?: PipelineWhereInput
    data: XOR<PipelineUpdateWithoutEventsInput, PipelineUncheckedUpdateWithoutEventsInput>
  }

  export type PipelineUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lead?: LeadUpdateOneWithoutPipelineNestedInput
    opportunity?: OpportunityUpdateOneWithoutPipelineNestedInput
    quote?: QuoteUpdateOneWithoutPipelineNestedInput
    contract?: ContractUpdateOneWithoutPipelineNestedInput
    assignee?: UserUpdateOneWithoutPipelineAssigneeNestedInput
    members?: UserUpdateManyWithoutPipelineMemberNestedInput
    createdBy?: UserUpdateOneWithoutCreatorPipelineNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterPipelineNestedInput
    stages?: StageUpdateManyWithoutPipelineNestedInput
    notes?: NoteUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutPipelineMemberNestedInput
    stages?: StageUncheckedUpdateManyWithoutPipelineNestedInput
    notes?: NoteUncheckedUpdateManyWithoutPipelineNestedInput
  }

  export type ProjectUpsertWithoutEventsInput = {
    update: XOR<ProjectUpdateWithoutEventsInput, ProjectUncheckedUpdateWithoutEventsInput>
    create: XOR<ProjectCreateWithoutEventsInput, ProjectUncheckedCreateWithoutEventsInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutEventsInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutEventsInput, ProjectUncheckedUpdateWithoutEventsInput>
  }

  export type ProjectUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contract?: ContractUpdateOneWithoutProjectNestedInput
    assignee?: UserUpdateOneWithoutProjectAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorProjectNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProjectNestedInput
    members?: UserUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUpdateManyWithoutProjectNestedInput
    notes?: NoteUpdateManyWithoutProjectNestedInput
    stages?: StageUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUncheckedUpdateManyWithoutProjectNestedInput
    notes?: NoteUncheckedUpdateManyWithoutProjectNestedInput
    stages?: StageUncheckedUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUncheckedUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type MilestoneUpsertWithoutEventsInput = {
    update: XOR<MilestoneUpdateWithoutEventsInput, MilestoneUncheckedUpdateWithoutEventsInput>
    create: XOR<MilestoneCreateWithoutEventsInput, MilestoneUncheckedCreateWithoutEventsInput>
    where?: MilestoneWhereInput
  }

  export type MilestoneUpdateToOneWithWhereWithoutEventsInput = {
    where?: MilestoneWhereInput
    data: XOR<MilestoneUpdateWithoutEventsInput, MilestoneUncheckedUpdateWithoutEventsInput>
  }

  export type MilestoneUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project?: ProjectUpdateOneWithoutMilestonesNestedInput
    assignee?: UserUpdateOneWithoutMilestoneAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorMilestoneNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterMilestoneNestedInput
    tasks?: TaskUpdateManyWithoutMilestoneNestedInput
    notes?: NoteUpdateManyWithoutMilestoneNestedInput
    stages?: StageUpdateManyWithoutMilestoneNestedInput
  }

  export type MilestoneUncheckedUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    tasks?: TaskUncheckedUpdateManyWithoutMilestoneNestedInput
    notes?: NoteUncheckedUpdateManyWithoutMilestoneNestedInput
    stages?: StageUncheckedUpdateManyWithoutMilestoneNestedInput
  }

  export type TaskUpsertWithoutEventsInput = {
    update: XOR<TaskUpdateWithoutEventsInput, TaskUncheckedUpdateWithoutEventsInput>
    create: XOR<TaskCreateWithoutEventsInput, TaskUncheckedCreateWithoutEventsInput>
    where?: TaskWhereInput
  }

  export type TaskUpdateToOneWithWhereWithoutEventsInput = {
    where?: TaskWhereInput
    data: XOR<TaskUpdateWithoutEventsInput, TaskUncheckedUpdateWithoutEventsInput>
  }

  export type TaskUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestone?: MilestoneUpdateOneRequiredWithoutTasksNestedInput
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorTaskNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterTaskNestedInput
    members?: UserUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUpdateManyWithoutTaskNestedInput
    stages?: StageUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUpdateManyWithoutTaskNestedInput
    funds?: FundUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestoneId?: StringFieldUpdateOperationsInput | string
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUncheckedUpdateManyWithoutTaskNestedInput
    stages?: StageUncheckedUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutTaskNestedInput
    funds?: FundUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type UserCreateWithoutCreatorNoteInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutCreatorNoteInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutCreatorNoteInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatorNoteInput, UserUncheckedCreateWithoutCreatorNoteInput>
  }

  export type UserCreateWithoutUpdaterNoteInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutUpdaterNoteInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutUpdaterNoteInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdaterNoteInput, UserUncheckedCreateWithoutUpdaterNoteInput>
  }

  export type PipelineCreateWithoutNotesInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    lead?: LeadCreateNestedOneWithoutPipelineInput
    opportunity?: OpportunityCreateNestedOneWithoutPipelineInput
    quote?: QuoteCreateNestedOneWithoutPipelineInput
    contract?: ContractCreateNestedOneWithoutPipelineInput
    assignee?: UserCreateNestedOneWithoutPipelineAssigneeInput
    members?: UserCreateNestedManyWithoutPipelineMemberInput
    createdBy?: UserCreateNestedOneWithoutCreatorPipelineInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterPipelineInput
    stages?: StageCreateNestedManyWithoutPipelineInput
    events?: EventCreateNestedManyWithoutPipelineInput
  }

  export type PipelineUncheckedCreateWithoutNotesInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutPipelineMemberInput
    stages?: StageUncheckedCreateNestedManyWithoutPipelineInput
    events?: EventUncheckedCreateNestedManyWithoutPipelineInput
  }

  export type PipelineCreateOrConnectWithoutNotesInput = {
    where: PipelineWhereUniqueInput
    create: XOR<PipelineCreateWithoutNotesInput, PipelineUncheckedCreateWithoutNotesInput>
  }

  export type ProjectCreateWithoutNotesInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contract?: ContractCreateNestedOneWithoutProjectInput
    assignee?: UserCreateNestedOneWithoutProjectAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorProjectInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProjectInput
    members?: UserCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneCreateNestedManyWithoutProjectInput
    stages?: StageCreateNestedManyWithoutProjectInput
    events?: EventCreateNestedManyWithoutProjectInput
    budgets?: BudgetCreateNestedManyWithoutProjectInput
    expenses?: ExpenseCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutNotesInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contractId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneUncheckedCreateNestedManyWithoutProjectInput
    stages?: StageUncheckedCreateNestedManyWithoutProjectInput
    events?: EventUncheckedCreateNestedManyWithoutProjectInput
    budgets?: BudgetUncheckedCreateNestedManyWithoutProjectInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutNotesInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutNotesInput, ProjectUncheckedCreateWithoutNotesInput>
  }

  export type MilestoneCreateWithoutNotesInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    project?: ProjectCreateNestedOneWithoutMilestonesInput
    assignee?: UserCreateNestedOneWithoutMilestoneAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorMilestoneInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterMilestoneInput
    tasks?: TaskCreateNestedManyWithoutMilestoneInput
    stages?: StageCreateNestedManyWithoutMilestoneInput
    events?: EventCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneUncheckedCreateWithoutNotesInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    projectId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    tasks?: TaskUncheckedCreateNestedManyWithoutMilestoneInput
    stages?: StageUncheckedCreateNestedManyWithoutMilestoneInput
    events?: EventUncheckedCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneCreateOrConnectWithoutNotesInput = {
    where: MilestoneWhereUniqueInput
    create: XOR<MilestoneCreateWithoutNotesInput, MilestoneUncheckedCreateWithoutNotesInput>
  }

  export type TaskCreateWithoutNotesInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestone: MilestoneCreateNestedOneWithoutTasksInput
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorTaskInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterTaskInput
    members?: UserCreateNestedManyWithoutTaskMemberInput
    stages?: StageCreateNestedManyWithoutTaskInput
    events?: EventCreateNestedManyWithoutTaskInput
    expenses?: ExpenseCreateNestedManyWithoutTaskInput
    funds?: FundCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutNotesInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestoneId: string
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutTaskMemberInput
    stages?: StageUncheckedCreateNestedManyWithoutTaskInput
    events?: EventUncheckedCreateNestedManyWithoutTaskInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutTaskInput
    funds?: FundUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutNotesInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutNotesInput, TaskUncheckedCreateWithoutNotesInput>
  }

  export type BudgetCreateWithoutNotesInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutBudgetAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorBudgetInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterBudgetInput
    items?: BudgetItemCreateNestedManyWithoutBudgetInput
    project?: ProjectCreateNestedOneWithoutBudgetsInput
    stages?: StageCreateNestedManyWithoutBudgetInput
  }

  export type BudgetUncheckedCreateWithoutNotesInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    projectId?: string | null
    items?: BudgetItemUncheckedCreateNestedManyWithoutBudgetInput
    stages?: StageUncheckedCreateNestedManyWithoutBudgetInput
  }

  export type BudgetCreateOrConnectWithoutNotesInput = {
    where: BudgetWhereUniqueInput
    create: XOR<BudgetCreateWithoutNotesInput, BudgetUncheckedCreateWithoutNotesInput>
  }

  export type FundCreateWithoutNotesInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutFundAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorFundInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterFundInput
    items?: FundItemCreateNestedManyWithoutFundInput
    task?: TaskCreateNestedOneWithoutFundsInput
    expenses?: ExpenseCreateNestedManyWithoutFundInput
    stages?: StageCreateNestedManyWithoutFundInput
  }

  export type FundUncheckedCreateWithoutNotesInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    taskId?: string | null
    items?: FundItemUncheckedCreateNestedManyWithoutFundInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutFundInput
    stages?: StageUncheckedCreateNestedManyWithoutFundInput
  }

  export type FundCreateOrConnectWithoutNotesInput = {
    where: FundWhereUniqueInput
    create: XOR<FundCreateWithoutNotesInput, FundUncheckedCreateWithoutNotesInput>
  }

  export type ExpenseCreateWithoutNotesInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    category: CostTypeCreateNestedOneWithoutExpensesInput
    createdBy?: UserCreateNestedOneWithoutCreatorExpenseInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterExpenseInput
    fund?: FundCreateNestedOneWithoutExpensesInput
    task?: TaskCreateNestedOneWithoutExpensesInput
    project?: ProjectCreateNestedOneWithoutExpensesInput
  }

  export type ExpenseUncheckedCreateWithoutNotesInput = {
    id?: string
    regNumber?: string | null
    categoryId: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    fundId?: string | null
    taskId?: string | null
    projectId?: string | null
  }

  export type ExpenseCreateOrConnectWithoutNotesInput = {
    where: ExpenseWhereUniqueInput
    create: XOR<ExpenseCreateWithoutNotesInput, ExpenseUncheckedCreateWithoutNotesInput>
  }

  export type ClientCreateWithoutNotesInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorClientInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
    opportunities?: OpportunityCreateNestedManyWithoutClientInput
    quotes?: QuoteCreateNestedManyWithoutClientInput
    contracts?: ContractCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutNotesInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutClientInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutClientInput
    contracts?: ContractUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutNotesInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutNotesInput, ClientUncheckedCreateWithoutNotesInput>
  }

  export type VendorCreateWithoutNotesInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    city?: string | null
    postalCode?: string | null
    legal?: string | null
    vendorCategory?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxStatus?: boolean
    siupNumber?: string | null
    nibNumber?: string | null
    pkpNumber?: string | null
    productType?: string | null
    description?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorVendorInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterVendorInput
  }

  export type VendorUncheckedCreateWithoutNotesInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    city?: string | null
    postalCode?: string | null
    legal?: string | null
    vendorCategory?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxStatus?: boolean
    siupNumber?: string | null
    nibNumber?: string | null
    pkpNumber?: string | null
    productType?: string | null
    description?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type VendorCreateOrConnectWithoutNotesInput = {
    where: VendorWhereUniqueInput
    create: XOR<VendorCreateWithoutNotesInput, VendorUncheckedCreateWithoutNotesInput>
  }

  export type UserUpsertWithoutCreatorNoteInput = {
    update: XOR<UserUpdateWithoutCreatorNoteInput, UserUncheckedUpdateWithoutCreatorNoteInput>
    create: XOR<UserCreateWithoutCreatorNoteInput, UserUncheckedCreateWithoutCreatorNoteInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatorNoteInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatorNoteInput, UserUncheckedUpdateWithoutCreatorNoteInput>
  }

  export type UserUpdateWithoutCreatorNoteInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatorNoteInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutUpdaterNoteInput = {
    update: XOR<UserUpdateWithoutUpdaterNoteInput, UserUncheckedUpdateWithoutUpdaterNoteInput>
    create: XOR<UserCreateWithoutUpdaterNoteInput, UserUncheckedCreateWithoutUpdaterNoteInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdaterNoteInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdaterNoteInput, UserUncheckedUpdateWithoutUpdaterNoteInput>
  }

  export type UserUpdateWithoutUpdaterNoteInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdaterNoteInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type PipelineUpsertWithoutNotesInput = {
    update: XOR<PipelineUpdateWithoutNotesInput, PipelineUncheckedUpdateWithoutNotesInput>
    create: XOR<PipelineCreateWithoutNotesInput, PipelineUncheckedCreateWithoutNotesInput>
    where?: PipelineWhereInput
  }

  export type PipelineUpdateToOneWithWhereWithoutNotesInput = {
    where?: PipelineWhereInput
    data: XOR<PipelineUpdateWithoutNotesInput, PipelineUncheckedUpdateWithoutNotesInput>
  }

  export type PipelineUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lead?: LeadUpdateOneWithoutPipelineNestedInput
    opportunity?: OpportunityUpdateOneWithoutPipelineNestedInput
    quote?: QuoteUpdateOneWithoutPipelineNestedInput
    contract?: ContractUpdateOneWithoutPipelineNestedInput
    assignee?: UserUpdateOneWithoutPipelineAssigneeNestedInput
    members?: UserUpdateManyWithoutPipelineMemberNestedInput
    createdBy?: UserUpdateOneWithoutCreatorPipelineNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterPipelineNestedInput
    stages?: StageUpdateManyWithoutPipelineNestedInput
    events?: EventUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutPipelineMemberNestedInput
    stages?: StageUncheckedUpdateManyWithoutPipelineNestedInput
    events?: EventUncheckedUpdateManyWithoutPipelineNestedInput
  }

  export type ProjectUpsertWithoutNotesInput = {
    update: XOR<ProjectUpdateWithoutNotesInput, ProjectUncheckedUpdateWithoutNotesInput>
    create: XOR<ProjectCreateWithoutNotesInput, ProjectUncheckedCreateWithoutNotesInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutNotesInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutNotesInput, ProjectUncheckedUpdateWithoutNotesInput>
  }

  export type ProjectUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contract?: ContractUpdateOneWithoutProjectNestedInput
    assignee?: UserUpdateOneWithoutProjectAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorProjectNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProjectNestedInput
    members?: UserUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUpdateManyWithoutProjectNestedInput
    stages?: StageUpdateManyWithoutProjectNestedInput
    events?: EventUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUncheckedUpdateManyWithoutProjectNestedInput
    stages?: StageUncheckedUpdateManyWithoutProjectNestedInput
    events?: EventUncheckedUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUncheckedUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type MilestoneUpsertWithoutNotesInput = {
    update: XOR<MilestoneUpdateWithoutNotesInput, MilestoneUncheckedUpdateWithoutNotesInput>
    create: XOR<MilestoneCreateWithoutNotesInput, MilestoneUncheckedCreateWithoutNotesInput>
    where?: MilestoneWhereInput
  }

  export type MilestoneUpdateToOneWithWhereWithoutNotesInput = {
    where?: MilestoneWhereInput
    data: XOR<MilestoneUpdateWithoutNotesInput, MilestoneUncheckedUpdateWithoutNotesInput>
  }

  export type MilestoneUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project?: ProjectUpdateOneWithoutMilestonesNestedInput
    assignee?: UserUpdateOneWithoutMilestoneAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorMilestoneNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterMilestoneNestedInput
    tasks?: TaskUpdateManyWithoutMilestoneNestedInput
    stages?: StageUpdateManyWithoutMilestoneNestedInput
    events?: EventUpdateManyWithoutMilestoneNestedInput
  }

  export type MilestoneUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    tasks?: TaskUncheckedUpdateManyWithoutMilestoneNestedInput
    stages?: StageUncheckedUpdateManyWithoutMilestoneNestedInput
    events?: EventUncheckedUpdateManyWithoutMilestoneNestedInput
  }

  export type TaskUpsertWithoutNotesInput = {
    update: XOR<TaskUpdateWithoutNotesInput, TaskUncheckedUpdateWithoutNotesInput>
    create: XOR<TaskCreateWithoutNotesInput, TaskUncheckedCreateWithoutNotesInput>
    where?: TaskWhereInput
  }

  export type TaskUpdateToOneWithWhereWithoutNotesInput = {
    where?: TaskWhereInput
    data: XOR<TaskUpdateWithoutNotesInput, TaskUncheckedUpdateWithoutNotesInput>
  }

  export type TaskUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestone?: MilestoneUpdateOneRequiredWithoutTasksNestedInput
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorTaskNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterTaskNestedInput
    members?: UserUpdateManyWithoutTaskMemberNestedInput
    stages?: StageUpdateManyWithoutTaskNestedInput
    events?: EventUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUpdateManyWithoutTaskNestedInput
    funds?: FundUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestoneId?: StringFieldUpdateOperationsInput | string
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutTaskMemberNestedInput
    stages?: StageUncheckedUpdateManyWithoutTaskNestedInput
    events?: EventUncheckedUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutTaskNestedInput
    funds?: FundUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type BudgetUpsertWithoutNotesInput = {
    update: XOR<BudgetUpdateWithoutNotesInput, BudgetUncheckedUpdateWithoutNotesInput>
    create: XOR<BudgetCreateWithoutNotesInput, BudgetUncheckedCreateWithoutNotesInput>
    where?: BudgetWhereInput
  }

  export type BudgetUpdateToOneWithWhereWithoutNotesInput = {
    where?: BudgetWhereInput
    data: XOR<BudgetUpdateWithoutNotesInput, BudgetUncheckedUpdateWithoutNotesInput>
  }

  export type BudgetUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutBudgetAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorBudgetNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterBudgetNestedInput
    items?: BudgetItemUpdateManyWithoutBudgetNestedInput
    project?: ProjectUpdateOneWithoutBudgetsNestedInput
    stages?: StageUpdateManyWithoutBudgetNestedInput
  }

  export type BudgetUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: BudgetItemUncheckedUpdateManyWithoutBudgetNestedInput
    stages?: StageUncheckedUpdateManyWithoutBudgetNestedInput
  }

  export type FundUpsertWithoutNotesInput = {
    update: XOR<FundUpdateWithoutNotesInput, FundUncheckedUpdateWithoutNotesInput>
    create: XOR<FundCreateWithoutNotesInput, FundUncheckedCreateWithoutNotesInput>
    where?: FundWhereInput
  }

  export type FundUpdateToOneWithWhereWithoutNotesInput = {
    where?: FundWhereInput
    data: XOR<FundUpdateWithoutNotesInput, FundUncheckedUpdateWithoutNotesInput>
  }

  export type FundUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutFundAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorFundNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterFundNestedInput
    items?: FundItemUpdateManyWithoutFundNestedInput
    task?: TaskUpdateOneWithoutFundsNestedInput
    expenses?: ExpenseUpdateManyWithoutFundNestedInput
    stages?: StageUpdateManyWithoutFundNestedInput
  }

  export type FundUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: FundItemUncheckedUpdateManyWithoutFundNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutFundNestedInput
    stages?: StageUncheckedUpdateManyWithoutFundNestedInput
  }

  export type ExpenseUpsertWithoutNotesInput = {
    update: XOR<ExpenseUpdateWithoutNotesInput, ExpenseUncheckedUpdateWithoutNotesInput>
    create: XOR<ExpenseCreateWithoutNotesInput, ExpenseUncheckedCreateWithoutNotesInput>
    where?: ExpenseWhereInput
  }

  export type ExpenseUpdateToOneWithWhereWithoutNotesInput = {
    where?: ExpenseWhereInput
    data: XOR<ExpenseUpdateWithoutNotesInput, ExpenseUncheckedUpdateWithoutNotesInput>
  }

  export type ExpenseUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: CostTypeUpdateOneRequiredWithoutExpensesNestedInput
    createdBy?: UserUpdateOneWithoutCreatorExpenseNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterExpenseNestedInput
    fund?: FundUpdateOneWithoutExpensesNestedInput
    task?: TaskUpdateOneWithoutExpensesNestedInput
    project?: ProjectUpdateOneWithoutExpensesNestedInput
  }

  export type ExpenseUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClientUpsertWithoutNotesInput = {
    update: XOR<ClientUpdateWithoutNotesInput, ClientUncheckedUpdateWithoutNotesInput>
    create: XOR<ClientCreateWithoutNotesInput, ClientUncheckedCreateWithoutNotesInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutNotesInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutNotesInput, ClientUncheckedUpdateWithoutNotesInput>
  }

  export type ClientUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorClientNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
    opportunities?: OpportunityUpdateManyWithoutClientNestedInput
    quotes?: QuoteUpdateManyWithoutClientNestedInput
    contracts?: ContractUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
    opportunities?: OpportunityUncheckedUpdateManyWithoutClientNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutClientNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutClientNestedInput
  }

  export type VendorUpsertWithoutNotesInput = {
    update: XOR<VendorUpdateWithoutNotesInput, VendorUncheckedUpdateWithoutNotesInput>
    create: XOR<VendorCreateWithoutNotesInput, VendorUncheckedCreateWithoutNotesInput>
    where?: VendorWhereInput
  }

  export type VendorUpdateToOneWithWhereWithoutNotesInput = {
    where?: VendorWhereInput
    data: XOR<VendorUpdateWithoutNotesInput, VendorUncheckedUpdateWithoutNotesInput>
  }

  export type VendorUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    vendorCategory?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    siupNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nibNumber?: NullableStringFieldUpdateOperationsInput | string | null
    pkpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    productType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorVendorNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterVendorNestedInput
  }

  export type VendorUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    vendorCategory?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    siupNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nibNumber?: NullableStringFieldUpdateOperationsInput | string | null
    pkpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    productType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageTypeCreateWithoutStagesInput = {
    id?: string
    model: string
    order: Decimal | DecimalJsLike | number | string
    value: string
  }

  export type StageTypeUncheckedCreateWithoutStagesInput = {
    id?: string
    model: string
    order: Decimal | DecimalJsLike | number | string
    value: string
  }

  export type StageTypeCreateOrConnectWithoutStagesInput = {
    where: StageTypeWhereUniqueInput
    create: XOR<StageTypeCreateWithoutStagesInput, StageTypeUncheckedCreateWithoutStagesInput>
  }

  export type UserCreateWithoutCreatorStageInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutCreatorStageInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutCreatorStageInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatorStageInput, UserUncheckedCreateWithoutCreatorStageInput>
  }

  export type UserCreateWithoutUpdaterStageInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutUpdaterStageInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutUpdaterStageInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdaterStageInput, UserUncheckedCreateWithoutUpdaterStageInput>
  }

  export type PipelineCreateWithoutStagesInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    lead?: LeadCreateNestedOneWithoutPipelineInput
    opportunity?: OpportunityCreateNestedOneWithoutPipelineInput
    quote?: QuoteCreateNestedOneWithoutPipelineInput
    contract?: ContractCreateNestedOneWithoutPipelineInput
    assignee?: UserCreateNestedOneWithoutPipelineAssigneeInput
    members?: UserCreateNestedManyWithoutPipelineMemberInput
    createdBy?: UserCreateNestedOneWithoutCreatorPipelineInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterPipelineInput
    notes?: NoteCreateNestedManyWithoutPipelineInput
    events?: EventCreateNestedManyWithoutPipelineInput
  }

  export type PipelineUncheckedCreateWithoutStagesInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutPipelineMemberInput
    notes?: NoteUncheckedCreateNestedManyWithoutPipelineInput
    events?: EventUncheckedCreateNestedManyWithoutPipelineInput
  }

  export type PipelineCreateOrConnectWithoutStagesInput = {
    where: PipelineWhereUniqueInput
    create: XOR<PipelineCreateWithoutStagesInput, PipelineUncheckedCreateWithoutStagesInput>
  }

  export type ProjectCreateWithoutStagesInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contract?: ContractCreateNestedOneWithoutProjectInput
    assignee?: UserCreateNestedOneWithoutProjectAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorProjectInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProjectInput
    members?: UserCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneCreateNestedManyWithoutProjectInput
    notes?: NoteCreateNestedManyWithoutProjectInput
    events?: EventCreateNestedManyWithoutProjectInput
    budgets?: BudgetCreateNestedManyWithoutProjectInput
    expenses?: ExpenseCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutStagesInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contractId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneUncheckedCreateNestedManyWithoutProjectInput
    notes?: NoteUncheckedCreateNestedManyWithoutProjectInput
    events?: EventUncheckedCreateNestedManyWithoutProjectInput
    budgets?: BudgetUncheckedCreateNestedManyWithoutProjectInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutStagesInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutStagesInput, ProjectUncheckedCreateWithoutStagesInput>
  }

  export type MilestoneCreateWithoutStagesInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    project?: ProjectCreateNestedOneWithoutMilestonesInput
    assignee?: UserCreateNestedOneWithoutMilestoneAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorMilestoneInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterMilestoneInput
    tasks?: TaskCreateNestedManyWithoutMilestoneInput
    notes?: NoteCreateNestedManyWithoutMilestoneInput
    events?: EventCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneUncheckedCreateWithoutStagesInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    projectId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    tasks?: TaskUncheckedCreateNestedManyWithoutMilestoneInput
    notes?: NoteUncheckedCreateNestedManyWithoutMilestoneInput
    events?: EventUncheckedCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneCreateOrConnectWithoutStagesInput = {
    where: MilestoneWhereUniqueInput
    create: XOR<MilestoneCreateWithoutStagesInput, MilestoneUncheckedCreateWithoutStagesInput>
  }

  export type TaskCreateWithoutStagesInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestone: MilestoneCreateNestedOneWithoutTasksInput
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorTaskInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterTaskInput
    members?: UserCreateNestedManyWithoutTaskMemberInput
    notes?: NoteCreateNestedManyWithoutTaskInput
    events?: EventCreateNestedManyWithoutTaskInput
    expenses?: ExpenseCreateNestedManyWithoutTaskInput
    funds?: FundCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutStagesInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestoneId: string
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutTaskMemberInput
    notes?: NoteUncheckedCreateNestedManyWithoutTaskInput
    events?: EventUncheckedCreateNestedManyWithoutTaskInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutTaskInput
    funds?: FundUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutStagesInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutStagesInput, TaskUncheckedCreateWithoutStagesInput>
  }

  export type BudgetCreateWithoutStagesInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutBudgetAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorBudgetInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterBudgetInput
    items?: BudgetItemCreateNestedManyWithoutBudgetInput
    project?: ProjectCreateNestedOneWithoutBudgetsInput
    notes?: NoteCreateNestedManyWithoutBudgetInput
  }

  export type BudgetUncheckedCreateWithoutStagesInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    projectId?: string | null
    items?: BudgetItemUncheckedCreateNestedManyWithoutBudgetInput
    notes?: NoteUncheckedCreateNestedManyWithoutBudgetInput
  }

  export type BudgetCreateOrConnectWithoutStagesInput = {
    where: BudgetWhereUniqueInput
    create: XOR<BudgetCreateWithoutStagesInput, BudgetUncheckedCreateWithoutStagesInput>
  }

  export type FundCreateWithoutStagesInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutFundAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorFundInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterFundInput
    items?: FundItemCreateNestedManyWithoutFundInput
    task?: TaskCreateNestedOneWithoutFundsInput
    expenses?: ExpenseCreateNestedManyWithoutFundInput
    notes?: NoteCreateNestedManyWithoutFundInput
  }

  export type FundUncheckedCreateWithoutStagesInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    taskId?: string | null
    items?: FundItemUncheckedCreateNestedManyWithoutFundInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutFundInput
    notes?: NoteUncheckedCreateNestedManyWithoutFundInput
  }

  export type FundCreateOrConnectWithoutStagesInput = {
    where: FundWhereUniqueInput
    create: XOR<FundCreateWithoutStagesInput, FundUncheckedCreateWithoutStagesInput>
  }

  export type StageTypeUpsertWithoutStagesInput = {
    update: XOR<StageTypeUpdateWithoutStagesInput, StageTypeUncheckedUpdateWithoutStagesInput>
    create: XOR<StageTypeCreateWithoutStagesInput, StageTypeUncheckedCreateWithoutStagesInput>
    where?: StageTypeWhereInput
  }

  export type StageTypeUpdateToOneWithWhereWithoutStagesInput = {
    where?: StageTypeWhereInput
    data: XOR<StageTypeUpdateWithoutStagesInput, StageTypeUncheckedUpdateWithoutStagesInput>
  }

  export type StageTypeUpdateWithoutStagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    order?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    value?: StringFieldUpdateOperationsInput | string
  }

  export type StageTypeUncheckedUpdateWithoutStagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    order?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    value?: StringFieldUpdateOperationsInput | string
  }

  export type UserUpsertWithoutCreatorStageInput = {
    update: XOR<UserUpdateWithoutCreatorStageInput, UserUncheckedUpdateWithoutCreatorStageInput>
    create: XOR<UserCreateWithoutCreatorStageInput, UserUncheckedCreateWithoutCreatorStageInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatorStageInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatorStageInput, UserUncheckedUpdateWithoutCreatorStageInput>
  }

  export type UserUpdateWithoutCreatorStageInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatorStageInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutUpdaterStageInput = {
    update: XOR<UserUpdateWithoutUpdaterStageInput, UserUncheckedUpdateWithoutUpdaterStageInput>
    create: XOR<UserCreateWithoutUpdaterStageInput, UserUncheckedCreateWithoutUpdaterStageInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdaterStageInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdaterStageInput, UserUncheckedUpdateWithoutUpdaterStageInput>
  }

  export type UserUpdateWithoutUpdaterStageInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdaterStageInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type PipelineUpsertWithoutStagesInput = {
    update: XOR<PipelineUpdateWithoutStagesInput, PipelineUncheckedUpdateWithoutStagesInput>
    create: XOR<PipelineCreateWithoutStagesInput, PipelineUncheckedCreateWithoutStagesInput>
    where?: PipelineWhereInput
  }

  export type PipelineUpdateToOneWithWhereWithoutStagesInput = {
    where?: PipelineWhereInput
    data: XOR<PipelineUpdateWithoutStagesInput, PipelineUncheckedUpdateWithoutStagesInput>
  }

  export type PipelineUpdateWithoutStagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lead?: LeadUpdateOneWithoutPipelineNestedInput
    opportunity?: OpportunityUpdateOneWithoutPipelineNestedInput
    quote?: QuoteUpdateOneWithoutPipelineNestedInput
    contract?: ContractUpdateOneWithoutPipelineNestedInput
    assignee?: UserUpdateOneWithoutPipelineAssigneeNestedInput
    members?: UserUpdateManyWithoutPipelineMemberNestedInput
    createdBy?: UserUpdateOneWithoutCreatorPipelineNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterPipelineNestedInput
    notes?: NoteUpdateManyWithoutPipelineNestedInput
    events?: EventUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateWithoutStagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutPipelineMemberNestedInput
    notes?: NoteUncheckedUpdateManyWithoutPipelineNestedInput
    events?: EventUncheckedUpdateManyWithoutPipelineNestedInput
  }

  export type ProjectUpsertWithoutStagesInput = {
    update: XOR<ProjectUpdateWithoutStagesInput, ProjectUncheckedUpdateWithoutStagesInput>
    create: XOR<ProjectCreateWithoutStagesInput, ProjectUncheckedCreateWithoutStagesInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutStagesInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutStagesInput, ProjectUncheckedUpdateWithoutStagesInput>
  }

  export type ProjectUpdateWithoutStagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contract?: ContractUpdateOneWithoutProjectNestedInput
    assignee?: UserUpdateOneWithoutProjectAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorProjectNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProjectNestedInput
    members?: UserUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUpdateManyWithoutProjectNestedInput
    notes?: NoteUpdateManyWithoutProjectNestedInput
    events?: EventUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutStagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUncheckedUpdateManyWithoutProjectNestedInput
    notes?: NoteUncheckedUpdateManyWithoutProjectNestedInput
    events?: EventUncheckedUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUncheckedUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type MilestoneUpsertWithoutStagesInput = {
    update: XOR<MilestoneUpdateWithoutStagesInput, MilestoneUncheckedUpdateWithoutStagesInput>
    create: XOR<MilestoneCreateWithoutStagesInput, MilestoneUncheckedCreateWithoutStagesInput>
    where?: MilestoneWhereInput
  }

  export type MilestoneUpdateToOneWithWhereWithoutStagesInput = {
    where?: MilestoneWhereInput
    data: XOR<MilestoneUpdateWithoutStagesInput, MilestoneUncheckedUpdateWithoutStagesInput>
  }

  export type MilestoneUpdateWithoutStagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project?: ProjectUpdateOneWithoutMilestonesNestedInput
    assignee?: UserUpdateOneWithoutMilestoneAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorMilestoneNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterMilestoneNestedInput
    tasks?: TaskUpdateManyWithoutMilestoneNestedInput
    notes?: NoteUpdateManyWithoutMilestoneNestedInput
    events?: EventUpdateManyWithoutMilestoneNestedInput
  }

  export type MilestoneUncheckedUpdateWithoutStagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    tasks?: TaskUncheckedUpdateManyWithoutMilestoneNestedInput
    notes?: NoteUncheckedUpdateManyWithoutMilestoneNestedInput
    events?: EventUncheckedUpdateManyWithoutMilestoneNestedInput
  }

  export type TaskUpsertWithoutStagesInput = {
    update: XOR<TaskUpdateWithoutStagesInput, TaskUncheckedUpdateWithoutStagesInput>
    create: XOR<TaskCreateWithoutStagesInput, TaskUncheckedCreateWithoutStagesInput>
    where?: TaskWhereInput
  }

  export type TaskUpdateToOneWithWhereWithoutStagesInput = {
    where?: TaskWhereInput
    data: XOR<TaskUpdateWithoutStagesInput, TaskUncheckedUpdateWithoutStagesInput>
  }

  export type TaskUpdateWithoutStagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestone?: MilestoneUpdateOneRequiredWithoutTasksNestedInput
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorTaskNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterTaskNestedInput
    members?: UserUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUpdateManyWithoutTaskNestedInput
    events?: EventUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUpdateManyWithoutTaskNestedInput
    funds?: FundUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutStagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestoneId?: StringFieldUpdateOperationsInput | string
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUncheckedUpdateManyWithoutTaskNestedInput
    events?: EventUncheckedUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutTaskNestedInput
    funds?: FundUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type BudgetUpsertWithoutStagesInput = {
    update: XOR<BudgetUpdateWithoutStagesInput, BudgetUncheckedUpdateWithoutStagesInput>
    create: XOR<BudgetCreateWithoutStagesInput, BudgetUncheckedCreateWithoutStagesInput>
    where?: BudgetWhereInput
  }

  export type BudgetUpdateToOneWithWhereWithoutStagesInput = {
    where?: BudgetWhereInput
    data: XOR<BudgetUpdateWithoutStagesInput, BudgetUncheckedUpdateWithoutStagesInput>
  }

  export type BudgetUpdateWithoutStagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutBudgetAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorBudgetNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterBudgetNestedInput
    items?: BudgetItemUpdateManyWithoutBudgetNestedInput
    project?: ProjectUpdateOneWithoutBudgetsNestedInput
    notes?: NoteUpdateManyWithoutBudgetNestedInput
  }

  export type BudgetUncheckedUpdateWithoutStagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: BudgetItemUncheckedUpdateManyWithoutBudgetNestedInput
    notes?: NoteUncheckedUpdateManyWithoutBudgetNestedInput
  }

  export type FundUpsertWithoutStagesInput = {
    update: XOR<FundUpdateWithoutStagesInput, FundUncheckedUpdateWithoutStagesInput>
    create: XOR<FundCreateWithoutStagesInput, FundUncheckedCreateWithoutStagesInput>
    where?: FundWhereInput
  }

  export type FundUpdateToOneWithWhereWithoutStagesInput = {
    where?: FundWhereInput
    data: XOR<FundUpdateWithoutStagesInput, FundUncheckedUpdateWithoutStagesInput>
  }

  export type FundUpdateWithoutStagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutFundAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorFundNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterFundNestedInput
    items?: FundItemUpdateManyWithoutFundNestedInput
    task?: TaskUpdateOneWithoutFundsNestedInput
    expenses?: ExpenseUpdateManyWithoutFundNestedInput
    notes?: NoteUpdateManyWithoutFundNestedInput
  }

  export type FundUncheckedUpdateWithoutStagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: FundItemUncheckedUpdateManyWithoutFundNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutFundNestedInput
    notes?: NoteUncheckedUpdateManyWithoutFundNestedInput
  }

  export type StageCreateWithoutTypeInput = {
    id?: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorStageInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterStageInput
    pipeline?: PipelineCreateNestedOneWithoutStagesInput
    project?: ProjectCreateNestedOneWithoutStagesInput
    milestone?: MilestoneCreateNestedOneWithoutStagesInput
    task?: TaskCreateNestedOneWithoutStagesInput
    budget?: BudgetCreateNestedOneWithoutStagesInput
    fund?: FundCreateNestedOneWithoutStagesInput
  }

  export type StageUncheckedCreateWithoutTypeInput = {
    id?: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type StageCreateOrConnectWithoutTypeInput = {
    where: StageWhereUniqueInput
    create: XOR<StageCreateWithoutTypeInput, StageUncheckedCreateWithoutTypeInput>
  }

  export type StageCreateManyTypeInputEnvelope = {
    data: StageCreateManyTypeInput | StageCreateManyTypeInput[]
    skipDuplicates?: boolean
  }

  export type StageUpsertWithWhereUniqueWithoutTypeInput = {
    where: StageWhereUniqueInput
    update: XOR<StageUpdateWithoutTypeInput, StageUncheckedUpdateWithoutTypeInput>
    create: XOR<StageCreateWithoutTypeInput, StageUncheckedCreateWithoutTypeInput>
  }

  export type StageUpdateWithWhereUniqueWithoutTypeInput = {
    where: StageWhereUniqueInput
    data: XOR<StageUpdateWithoutTypeInput, StageUncheckedUpdateWithoutTypeInput>
  }

  export type StageUpdateManyWithWhereWithoutTypeInput = {
    where: StageScalarWhereInput
    data: XOR<StageUpdateManyMutationInput, StageUncheckedUpdateManyWithoutTypeInput>
  }

  export type UserCreateWithoutCreatorClientInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutCreatorClientInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutCreatorClientInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatorClientInput, UserUncheckedCreateWithoutCreatorClientInput>
  }

  export type UserCreateWithoutUpdaterClientInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutUpdaterClientInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutUpdaterClientInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdaterClientInput, UserUncheckedCreateWithoutUpdaterClientInput>
  }

  export type NoteCreateWithoutClientInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorNoteInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterNoteInput
    pipeline?: PipelineCreateNestedOneWithoutNotesInput
    project?: ProjectCreateNestedOneWithoutNotesInput
    milestone?: MilestoneCreateNestedOneWithoutNotesInput
    task?: TaskCreateNestedOneWithoutNotesInput
    budget?: BudgetCreateNestedOneWithoutNotesInput
    fund?: FundCreateNestedOneWithoutNotesInput
    expense?: ExpenseCreateNestedOneWithoutNotesInput
    vendor?: VendorCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutClientInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    vendorId?: string | null
  }

  export type NoteCreateOrConnectWithoutClientInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutClientInput, NoteUncheckedCreateWithoutClientInput>
  }

  export type NoteCreateManyClientInputEnvelope = {
    data: NoteCreateManyClientInput | NoteCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type LeadCreateWithoutClientInput = {
    id?: string
    regNumber?: string | null
    name?: string | null
    role?: string | null
    email?: string | null
    phone?: string | null
    leadSource?: string | null
    leadDate?: Date | string | null
    leadAddress?: string | null
    description?: string | null
    prospectLocation?: string | null
    approvedDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutLeadsInput
    opportunities?: OpportunityCreateNestedManyWithoutLeadInput
    pipeline?: PipelineCreateNestedManyWithoutLeadInput
  }

  export type LeadUncheckedCreateWithoutClientInput = {
    id?: string
    regNumber?: string | null
    name?: string | null
    role?: string | null
    email?: string | null
    phone?: string | null
    leadSource?: string | null
    leadDate?: Date | string | null
    leadAddress?: string | null
    description?: string | null
    prospectLocation?: string | null
    approvedDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductUncheckedCreateNestedManyWithoutLeadsInput
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutLeadInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutLeadInput
  }

  export type LeadCreateOrConnectWithoutClientInput = {
    where: LeadWhereUniqueInput
    create: XOR<LeadCreateWithoutClientInput, LeadUncheckedCreateWithoutClientInput>
  }

  export type LeadCreateManyClientInputEnvelope = {
    data: LeadCreateManyClientInput | LeadCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type OpportunityCreateWithoutClientInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    approvedDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutOpportunitiesInput
    lead?: LeadCreateNestedOneWithoutOpportunitiesInput
    quotes?: QuoteCreateNestedManyWithoutOpportunityInput
    pipeline?: PipelineCreateNestedManyWithoutOpportunityInput
  }

  export type OpportunityUncheckedCreateWithoutClientInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    approvedDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leadId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutOpportunitiesInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutOpportunityInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutOpportunityInput
  }

  export type OpportunityCreateOrConnectWithoutClientInput = {
    where: OpportunityWhereUniqueInput
    create: XOR<OpportunityCreateWithoutClientInput, OpportunityUncheckedCreateWithoutClientInput>
  }

  export type OpportunityCreateManyClientInputEnvelope = {
    data: OpportunityCreateManyClientInput | OpportunityCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type QuoteCreateWithoutClientInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    releasedDate?: Date | string | null
    approvedDate?: Date | string | null
    expiredDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutQuotesInput
    opportunity?: OpportunityCreateNestedOneWithoutQuotesInput
    contracts?: ContractCreateNestedManyWithoutQuoteInput
    pipeline?: PipelineCreateNestedManyWithoutQuoteInput
  }

  export type QuoteUncheckedCreateWithoutClientInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    releasedDate?: Date | string | null
    approvedDate?: Date | string | null
    expiredDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    opportunityId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutQuotesInput
    contracts?: ContractUncheckedCreateNestedManyWithoutQuoteInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutQuoteInput
  }

  export type QuoteCreateOrConnectWithoutClientInput = {
    where: QuoteWhereUniqueInput
    create: XOR<QuoteCreateWithoutClientInput, QuoteUncheckedCreateWithoutClientInput>
  }

  export type QuoteCreateManyClientInputEnvelope = {
    data: QuoteCreateManyClientInput | QuoteCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type ContractCreateWithoutClientInput = {
    id?: string
    regNumber?: string | null
    title: string
    signedDate?: Date | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    penalty?: boolean | null
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    clientPicName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutContractsInput
    quote?: QuoteCreateNestedOneWithoutContractsInput
    project?: ProjectCreateNestedOneWithoutContractInput
    pipeline?: PipelineCreateNestedManyWithoutContractInput
  }

  export type ContractUncheckedCreateWithoutClientInput = {
    id?: string
    regNumber?: string | null
    title: string
    signedDate?: Date | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    penalty?: boolean | null
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    clientPicName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    quoteId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutContractsInput
    project?: ProjectUncheckedCreateNestedOneWithoutContractInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutContractInput
  }

  export type ContractCreateOrConnectWithoutClientInput = {
    where: ContractWhereUniqueInput
    create: XOR<ContractCreateWithoutClientInput, ContractUncheckedCreateWithoutClientInput>
  }

  export type ContractCreateManyClientInputEnvelope = {
    data: ContractCreateManyClientInput | ContractCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCreatorClientInput = {
    update: XOR<UserUpdateWithoutCreatorClientInput, UserUncheckedUpdateWithoutCreatorClientInput>
    create: XOR<UserCreateWithoutCreatorClientInput, UserUncheckedCreateWithoutCreatorClientInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatorClientInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatorClientInput, UserUncheckedUpdateWithoutCreatorClientInput>
  }

  export type UserUpdateWithoutCreatorClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatorClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutUpdaterClientInput = {
    update: XOR<UserUpdateWithoutUpdaterClientInput, UserUncheckedUpdateWithoutUpdaterClientInput>
    create: XOR<UserCreateWithoutUpdaterClientInput, UserUncheckedCreateWithoutUpdaterClientInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdaterClientInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdaterClientInput, UserUncheckedUpdateWithoutUpdaterClientInput>
  }

  export type UserUpdateWithoutUpdaterClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdaterClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type NoteUpsertWithWhereUniqueWithoutClientInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutClientInput, NoteUncheckedUpdateWithoutClientInput>
    create: XOR<NoteCreateWithoutClientInput, NoteUncheckedCreateWithoutClientInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutClientInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutClientInput, NoteUncheckedUpdateWithoutClientInput>
  }

  export type NoteUpdateManyWithWhereWithoutClientInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutClientInput>
  }

  export type LeadUpsertWithWhereUniqueWithoutClientInput = {
    where: LeadWhereUniqueInput
    update: XOR<LeadUpdateWithoutClientInput, LeadUncheckedUpdateWithoutClientInput>
    create: XOR<LeadCreateWithoutClientInput, LeadUncheckedCreateWithoutClientInput>
  }

  export type LeadUpdateWithWhereUniqueWithoutClientInput = {
    where: LeadWhereUniqueInput
    data: XOR<LeadUpdateWithoutClientInput, LeadUncheckedUpdateWithoutClientInput>
  }

  export type LeadUpdateManyWithWhereWithoutClientInput = {
    where: LeadScalarWhereInput
    data: XOR<LeadUpdateManyMutationInput, LeadUncheckedUpdateManyWithoutClientInput>
  }

  export type LeadScalarWhereInput = {
    AND?: LeadScalarWhereInput | LeadScalarWhereInput[]
    OR?: LeadScalarWhereInput[]
    NOT?: LeadScalarWhereInput | LeadScalarWhereInput[]
    id?: StringFilter<"Lead"> | string
    regNumber?: StringNullableFilter<"Lead"> | string | null
    name?: StringNullableFilter<"Lead"> | string | null
    role?: StringNullableFilter<"Lead"> | string | null
    email?: StringNullableFilter<"Lead"> | string | null
    phone?: StringNullableFilter<"Lead"> | string | null
    leadSource?: StringNullableFilter<"Lead"> | string | null
    leadDate?: DateTimeNullableFilter<"Lead"> | Date | string | null
    leadAddress?: StringNullableFilter<"Lead"> | string | null
    description?: StringNullableFilter<"Lead"> | string | null
    prospectLocation?: StringNullableFilter<"Lead"> | string | null
    approvedDate?: DateTimeNullableFilter<"Lead"> | Date | string | null
    expectedCloseDate?: DateTimeNullableFilter<"Lead"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Lead"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Lead"> | Date | string | null
    clientId?: StringNullableFilter<"Lead"> | string | null
  }

  export type OpportunityUpsertWithWhereUniqueWithoutClientInput = {
    where: OpportunityWhereUniqueInput
    update: XOR<OpportunityUpdateWithoutClientInput, OpportunityUncheckedUpdateWithoutClientInput>
    create: XOR<OpportunityCreateWithoutClientInput, OpportunityUncheckedCreateWithoutClientInput>
  }

  export type OpportunityUpdateWithWhereUniqueWithoutClientInput = {
    where: OpportunityWhereUniqueInput
    data: XOR<OpportunityUpdateWithoutClientInput, OpportunityUncheckedUpdateWithoutClientInput>
  }

  export type OpportunityUpdateManyWithWhereWithoutClientInput = {
    where: OpportunityScalarWhereInput
    data: XOR<OpportunityUpdateManyMutationInput, OpportunityUncheckedUpdateManyWithoutClientInput>
  }

  export type QuoteUpsertWithWhereUniqueWithoutClientInput = {
    where: QuoteWhereUniqueInput
    update: XOR<QuoteUpdateWithoutClientInput, QuoteUncheckedUpdateWithoutClientInput>
    create: XOR<QuoteCreateWithoutClientInput, QuoteUncheckedCreateWithoutClientInput>
  }

  export type QuoteUpdateWithWhereUniqueWithoutClientInput = {
    where: QuoteWhereUniqueInput
    data: XOR<QuoteUpdateWithoutClientInput, QuoteUncheckedUpdateWithoutClientInput>
  }

  export type QuoteUpdateManyWithWhereWithoutClientInput = {
    where: QuoteScalarWhereInput
    data: XOR<QuoteUpdateManyMutationInput, QuoteUncheckedUpdateManyWithoutClientInput>
  }

  export type ContractUpsertWithWhereUniqueWithoutClientInput = {
    where: ContractWhereUniqueInput
    update: XOR<ContractUpdateWithoutClientInput, ContractUncheckedUpdateWithoutClientInput>
    create: XOR<ContractCreateWithoutClientInput, ContractUncheckedCreateWithoutClientInput>
  }

  export type ContractUpdateWithWhereUniqueWithoutClientInput = {
    where: ContractWhereUniqueInput
    data: XOR<ContractUpdateWithoutClientInput, ContractUncheckedUpdateWithoutClientInput>
  }

  export type ContractUpdateManyWithWhereWithoutClientInput = {
    where: ContractScalarWhereInput
    data: XOR<ContractUpdateManyMutationInput, ContractUncheckedUpdateManyWithoutClientInput>
  }

  export type UserCreateWithoutCreatorVendorInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutCreatorVendorInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutCreatorVendorInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatorVendorInput, UserUncheckedCreateWithoutCreatorVendorInput>
  }

  export type UserCreateWithoutUpdaterVendorInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutUpdaterVendorInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutUpdaterVendorInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdaterVendorInput, UserUncheckedCreateWithoutUpdaterVendorInput>
  }

  export type NoteCreateWithoutVendorInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorNoteInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterNoteInput
    pipeline?: PipelineCreateNestedOneWithoutNotesInput
    project?: ProjectCreateNestedOneWithoutNotesInput
    milestone?: MilestoneCreateNestedOneWithoutNotesInput
    task?: TaskCreateNestedOneWithoutNotesInput
    budget?: BudgetCreateNestedOneWithoutNotesInput
    fund?: FundCreateNestedOneWithoutNotesInput
    expense?: ExpenseCreateNestedOneWithoutNotesInput
    client?: ClientCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutVendorInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
  }

  export type NoteCreateOrConnectWithoutVendorInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutVendorInput, NoteUncheckedCreateWithoutVendorInput>
  }

  export type NoteCreateManyVendorInputEnvelope = {
    data: NoteCreateManyVendorInput | NoteCreateManyVendorInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCreatorVendorInput = {
    update: XOR<UserUpdateWithoutCreatorVendorInput, UserUncheckedUpdateWithoutCreatorVendorInput>
    create: XOR<UserCreateWithoutCreatorVendorInput, UserUncheckedCreateWithoutCreatorVendorInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatorVendorInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatorVendorInput, UserUncheckedUpdateWithoutCreatorVendorInput>
  }

  export type UserUpdateWithoutCreatorVendorInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatorVendorInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutUpdaterVendorInput = {
    update: XOR<UserUpdateWithoutUpdaterVendorInput, UserUncheckedUpdateWithoutUpdaterVendorInput>
    create: XOR<UserCreateWithoutUpdaterVendorInput, UserUncheckedCreateWithoutUpdaterVendorInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdaterVendorInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdaterVendorInput, UserUncheckedUpdateWithoutUpdaterVendorInput>
  }

  export type UserUpdateWithoutUpdaterVendorInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdaterVendorInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type NoteUpsertWithWhereUniqueWithoutVendorInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutVendorInput, NoteUncheckedUpdateWithoutVendorInput>
    create: XOR<NoteCreateWithoutVendorInput, NoteUncheckedCreateWithoutVendorInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutVendorInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutVendorInput, NoteUncheckedUpdateWithoutVendorInput>
  }

  export type NoteUpdateManyWithWhereWithoutVendorInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutVendorInput>
  }

  export type UserCreateWithoutCreatorProductInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutCreatorProductInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutCreatorProductInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatorProductInput, UserUncheckedCreateWithoutCreatorProductInput>
  }

  export type UserCreateWithoutUpdaterProductInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutUpdaterProductInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutUpdaterProductInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdaterProductInput, UserUncheckedCreateWithoutUpdaterProductInput>
  }

  export type LeadCreateWithoutProductsInput = {
    id?: string
    regNumber?: string | null
    name?: string | null
    role?: string | null
    email?: string | null
    phone?: string | null
    leadSource?: string | null
    leadDate?: Date | string | null
    leadAddress?: string | null
    description?: string | null
    prospectLocation?: string | null
    approvedDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    client?: ClientCreateNestedOneWithoutLeadsInput
    opportunities?: OpportunityCreateNestedManyWithoutLeadInput
    pipeline?: PipelineCreateNestedManyWithoutLeadInput
  }

  export type LeadUncheckedCreateWithoutProductsInput = {
    id?: string
    regNumber?: string | null
    name?: string | null
    role?: string | null
    email?: string | null
    phone?: string | null
    leadSource?: string | null
    leadDate?: Date | string | null
    leadAddress?: string | null
    description?: string | null
    prospectLocation?: string | null
    approvedDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutLeadInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutLeadInput
  }

  export type LeadCreateOrConnectWithoutProductsInput = {
    where: LeadWhereUniqueInput
    create: XOR<LeadCreateWithoutProductsInput, LeadUncheckedCreateWithoutProductsInput>
  }

  export type OpportunityCreateWithoutProductsInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    approvedDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    client?: ClientCreateNestedOneWithoutOpportunitiesInput
    lead?: LeadCreateNestedOneWithoutOpportunitiesInput
    quotes?: QuoteCreateNestedManyWithoutOpportunityInput
    pipeline?: PipelineCreateNestedManyWithoutOpportunityInput
  }

  export type OpportunityUncheckedCreateWithoutProductsInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    approvedDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    leadId?: string | null
    quotes?: QuoteUncheckedCreateNestedManyWithoutOpportunityInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutOpportunityInput
  }

  export type OpportunityCreateOrConnectWithoutProductsInput = {
    where: OpportunityWhereUniqueInput
    create: XOR<OpportunityCreateWithoutProductsInput, OpportunityUncheckedCreateWithoutProductsInput>
  }

  export type QuoteCreateWithoutProductsInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    releasedDate?: Date | string | null
    approvedDate?: Date | string | null
    expiredDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    client?: ClientCreateNestedOneWithoutQuotesInput
    opportunity?: OpportunityCreateNestedOneWithoutQuotesInput
    contracts?: ContractCreateNestedManyWithoutQuoteInput
    pipeline?: PipelineCreateNestedManyWithoutQuoteInput
  }

  export type QuoteUncheckedCreateWithoutProductsInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    releasedDate?: Date | string | null
    approvedDate?: Date | string | null
    expiredDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    opportunityId?: string | null
    contracts?: ContractUncheckedCreateNestedManyWithoutQuoteInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutQuoteInput
  }

  export type QuoteCreateOrConnectWithoutProductsInput = {
    where: QuoteWhereUniqueInput
    create: XOR<QuoteCreateWithoutProductsInput, QuoteUncheckedCreateWithoutProductsInput>
  }

  export type ContractCreateWithoutProductsInput = {
    id?: string
    regNumber?: string | null
    title: string
    signedDate?: Date | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    penalty?: boolean | null
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    clientPicName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    client?: ClientCreateNestedOneWithoutContractsInput
    quote?: QuoteCreateNestedOneWithoutContractsInput
    project?: ProjectCreateNestedOneWithoutContractInput
    pipeline?: PipelineCreateNestedManyWithoutContractInput
  }

  export type ContractUncheckedCreateWithoutProductsInput = {
    id?: string
    regNumber?: string | null
    title: string
    signedDate?: Date | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    penalty?: boolean | null
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    clientPicName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    quoteId?: string | null
    project?: ProjectUncheckedCreateNestedOneWithoutContractInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutContractInput
  }

  export type ContractCreateOrConnectWithoutProductsInput = {
    where: ContractWhereUniqueInput
    create: XOR<ContractCreateWithoutProductsInput, ContractUncheckedCreateWithoutProductsInput>
  }

  export type UserUpsertWithoutCreatorProductInput = {
    update: XOR<UserUpdateWithoutCreatorProductInput, UserUncheckedUpdateWithoutCreatorProductInput>
    create: XOR<UserCreateWithoutCreatorProductInput, UserUncheckedCreateWithoutCreatorProductInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatorProductInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatorProductInput, UserUncheckedUpdateWithoutCreatorProductInput>
  }

  export type UserUpdateWithoutCreatorProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatorProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutUpdaterProductInput = {
    update: XOR<UserUpdateWithoutUpdaterProductInput, UserUncheckedUpdateWithoutUpdaterProductInput>
    create: XOR<UserCreateWithoutUpdaterProductInput, UserUncheckedCreateWithoutUpdaterProductInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdaterProductInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdaterProductInput, UserUncheckedUpdateWithoutUpdaterProductInput>
  }

  export type UserUpdateWithoutUpdaterProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdaterProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type LeadUpsertWithWhereUniqueWithoutProductsInput = {
    where: LeadWhereUniqueInput
    update: XOR<LeadUpdateWithoutProductsInput, LeadUncheckedUpdateWithoutProductsInput>
    create: XOR<LeadCreateWithoutProductsInput, LeadUncheckedCreateWithoutProductsInput>
  }

  export type LeadUpdateWithWhereUniqueWithoutProductsInput = {
    where: LeadWhereUniqueInput
    data: XOR<LeadUpdateWithoutProductsInput, LeadUncheckedUpdateWithoutProductsInput>
  }

  export type LeadUpdateManyWithWhereWithoutProductsInput = {
    where: LeadScalarWhereInput
    data: XOR<LeadUpdateManyMutationInput, LeadUncheckedUpdateManyWithoutProductsInput>
  }

  export type OpportunityUpsertWithWhereUniqueWithoutProductsInput = {
    where: OpportunityWhereUniqueInput
    update: XOR<OpportunityUpdateWithoutProductsInput, OpportunityUncheckedUpdateWithoutProductsInput>
    create: XOR<OpportunityCreateWithoutProductsInput, OpportunityUncheckedCreateWithoutProductsInput>
  }

  export type OpportunityUpdateWithWhereUniqueWithoutProductsInput = {
    where: OpportunityWhereUniqueInput
    data: XOR<OpportunityUpdateWithoutProductsInput, OpportunityUncheckedUpdateWithoutProductsInput>
  }

  export type OpportunityUpdateManyWithWhereWithoutProductsInput = {
    where: OpportunityScalarWhereInput
    data: XOR<OpportunityUpdateManyMutationInput, OpportunityUncheckedUpdateManyWithoutProductsInput>
  }

  export type QuoteUpsertWithWhereUniqueWithoutProductsInput = {
    where: QuoteWhereUniqueInput
    update: XOR<QuoteUpdateWithoutProductsInput, QuoteUncheckedUpdateWithoutProductsInput>
    create: XOR<QuoteCreateWithoutProductsInput, QuoteUncheckedCreateWithoutProductsInput>
  }

  export type QuoteUpdateWithWhereUniqueWithoutProductsInput = {
    where: QuoteWhereUniqueInput
    data: XOR<QuoteUpdateWithoutProductsInput, QuoteUncheckedUpdateWithoutProductsInput>
  }

  export type QuoteUpdateManyWithWhereWithoutProductsInput = {
    where: QuoteScalarWhereInput
    data: XOR<QuoteUpdateManyMutationInput, QuoteUncheckedUpdateManyWithoutProductsInput>
  }

  export type ContractUpsertWithWhereUniqueWithoutProductsInput = {
    where: ContractWhereUniqueInput
    update: XOR<ContractUpdateWithoutProductsInput, ContractUncheckedUpdateWithoutProductsInput>
    create: XOR<ContractCreateWithoutProductsInput, ContractUncheckedCreateWithoutProductsInput>
  }

  export type ContractUpdateWithWhereUniqueWithoutProductsInput = {
    where: ContractWhereUniqueInput
    data: XOR<ContractUpdateWithoutProductsInput, ContractUncheckedUpdateWithoutProductsInput>
  }

  export type ContractUpdateManyWithWhereWithoutProductsInput = {
    where: ContractScalarWhereInput
    data: XOR<ContractUpdateManyMutationInput, ContractUncheckedUpdateManyWithoutProductsInput>
  }

  export type ContractCreateWithoutProjectInput = {
    id?: string
    regNumber?: string | null
    title: string
    signedDate?: Date | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    penalty?: boolean | null
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    clientPicName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    products?: ProductCreateNestedManyWithoutContractsInput
    client?: ClientCreateNestedOneWithoutContractsInput
    quote?: QuoteCreateNestedOneWithoutContractsInput
    pipeline?: PipelineCreateNestedManyWithoutContractInput
  }

  export type ContractUncheckedCreateWithoutProjectInput = {
    id?: string
    regNumber?: string | null
    title: string
    signedDate?: Date | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    penalty?: boolean | null
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    clientPicName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
    quoteId?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutContractsInput
    pipeline?: PipelineUncheckedCreateNestedManyWithoutContractInput
  }

  export type ContractCreateOrConnectWithoutProjectInput = {
    where: ContractWhereUniqueInput
    create: XOR<ContractCreateWithoutProjectInput, ContractUncheckedCreateWithoutProjectInput>
  }

  export type UserCreateWithoutProjectAssigneeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutProjectAssigneeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutProjectAssigneeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProjectAssigneeInput, UserUncheckedCreateWithoutProjectAssigneeInput>
  }

  export type UserCreateWithoutCreatorProjectInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutCreatorProjectInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutCreatorProjectInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatorProjectInput, UserUncheckedCreateWithoutCreatorProjectInput>
  }

  export type UserCreateWithoutUpdaterProjectInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutUpdaterProjectInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutUpdaterProjectInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdaterProjectInput, UserUncheckedCreateWithoutUpdaterProjectInput>
  }

  export type UserCreateWithoutProjectMemberInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutProjectMemberInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutProjectMemberInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProjectMemberInput, UserUncheckedCreateWithoutProjectMemberInput>
  }

  export type MilestoneCreateWithoutProjectInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutMilestoneAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorMilestoneInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterMilestoneInput
    tasks?: TaskCreateNestedManyWithoutMilestoneInput
    notes?: NoteCreateNestedManyWithoutMilestoneInput
    stages?: StageCreateNestedManyWithoutMilestoneInput
    events?: EventCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneUncheckedCreateWithoutProjectInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    tasks?: TaskUncheckedCreateNestedManyWithoutMilestoneInput
    notes?: NoteUncheckedCreateNestedManyWithoutMilestoneInput
    stages?: StageUncheckedCreateNestedManyWithoutMilestoneInput
    events?: EventUncheckedCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneCreateOrConnectWithoutProjectInput = {
    where: MilestoneWhereUniqueInput
    create: XOR<MilestoneCreateWithoutProjectInput, MilestoneUncheckedCreateWithoutProjectInput>
  }

  export type MilestoneCreateManyProjectInputEnvelope = {
    data: MilestoneCreateManyProjectInput | MilestoneCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type NoteCreateWithoutProjectInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorNoteInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterNoteInput
    pipeline?: PipelineCreateNestedOneWithoutNotesInput
    milestone?: MilestoneCreateNestedOneWithoutNotesInput
    task?: TaskCreateNestedOneWithoutNotesInput
    budget?: BudgetCreateNestedOneWithoutNotesInput
    fund?: FundCreateNestedOneWithoutNotesInput
    expense?: ExpenseCreateNestedOneWithoutNotesInput
    client?: ClientCreateNestedOneWithoutNotesInput
    vendor?: VendorCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutProjectInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type NoteCreateOrConnectWithoutProjectInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutProjectInput, NoteUncheckedCreateWithoutProjectInput>
  }

  export type NoteCreateManyProjectInputEnvelope = {
    data: NoteCreateManyProjectInput | NoteCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type StageCreateWithoutProjectInput = {
    id?: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    type: StageTypeCreateNestedOneWithoutStagesInput
    createdBy?: UserCreateNestedOneWithoutCreatorStageInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterStageInput
    pipeline?: PipelineCreateNestedOneWithoutStagesInput
    milestone?: MilestoneCreateNestedOneWithoutStagesInput
    task?: TaskCreateNestedOneWithoutStagesInput
    budget?: BudgetCreateNestedOneWithoutStagesInput
    fund?: FundCreateNestedOneWithoutStagesInput
  }

  export type StageUncheckedCreateWithoutProjectInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type StageCreateOrConnectWithoutProjectInput = {
    where: StageWhereUniqueInput
    create: XOR<StageCreateWithoutProjectInput, StageUncheckedCreateWithoutProjectInput>
  }

  export type StageCreateManyProjectInputEnvelope = {
    data: StageCreateManyProjectInput | StageCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type EventCreateWithoutProjectInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorEventInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterEventInput
    pipeline?: PipelineCreateNestedOneWithoutEventsInput
    milestone?: MilestoneCreateNestedOneWithoutEventsInput
    task?: TaskCreateNestedOneWithoutEventsInput
  }

  export type EventUncheckedCreateWithoutProjectInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    milestoneId?: string | null
    taskId?: string | null
  }

  export type EventCreateOrConnectWithoutProjectInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutProjectInput, EventUncheckedCreateWithoutProjectInput>
  }

  export type EventCreateManyProjectInputEnvelope = {
    data: EventCreateManyProjectInput | EventCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type BudgetCreateWithoutProjectInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutBudgetAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorBudgetInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterBudgetInput
    items?: BudgetItemCreateNestedManyWithoutBudgetInput
    notes?: NoteCreateNestedManyWithoutBudgetInput
    stages?: StageCreateNestedManyWithoutBudgetInput
  }

  export type BudgetUncheckedCreateWithoutProjectInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    items?: BudgetItemUncheckedCreateNestedManyWithoutBudgetInput
    notes?: NoteUncheckedCreateNestedManyWithoutBudgetInput
    stages?: StageUncheckedCreateNestedManyWithoutBudgetInput
  }

  export type BudgetCreateOrConnectWithoutProjectInput = {
    where: BudgetWhereUniqueInput
    create: XOR<BudgetCreateWithoutProjectInput, BudgetUncheckedCreateWithoutProjectInput>
  }

  export type BudgetCreateManyProjectInputEnvelope = {
    data: BudgetCreateManyProjectInput | BudgetCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type ExpenseCreateWithoutProjectInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    category: CostTypeCreateNestedOneWithoutExpensesInput
    createdBy?: UserCreateNestedOneWithoutCreatorExpenseInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterExpenseInput
    fund?: FundCreateNestedOneWithoutExpensesInput
    task?: TaskCreateNestedOneWithoutExpensesInput
    notes?: NoteCreateNestedManyWithoutExpenseInput
  }

  export type ExpenseUncheckedCreateWithoutProjectInput = {
    id?: string
    regNumber?: string | null
    categoryId: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    fundId?: string | null
    taskId?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutExpenseInput
  }

  export type ExpenseCreateOrConnectWithoutProjectInput = {
    where: ExpenseWhereUniqueInput
    create: XOR<ExpenseCreateWithoutProjectInput, ExpenseUncheckedCreateWithoutProjectInput>
  }

  export type ExpenseCreateManyProjectInputEnvelope = {
    data: ExpenseCreateManyProjectInput | ExpenseCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type ContractUpsertWithoutProjectInput = {
    update: XOR<ContractUpdateWithoutProjectInput, ContractUncheckedUpdateWithoutProjectInput>
    create: XOR<ContractCreateWithoutProjectInput, ContractUncheckedCreateWithoutProjectInput>
    where?: ContractWhereInput
  }

  export type ContractUpdateToOneWithWhereWithoutProjectInput = {
    where?: ContractWhereInput
    data: XOR<ContractUpdateWithoutProjectInput, ContractUncheckedUpdateWithoutProjectInput>
  }

  export type ContractUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutContractsNestedInput
    client?: ClientUpdateOneWithoutContractsNestedInput
    quote?: QuoteUpdateOneWithoutContractsNestedInput
    pipeline?: PipelineUpdateManyWithoutContractNestedInput
  }

  export type ContractUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutContractsNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutContractNestedInput
  }

  export type UserUpsertWithoutProjectAssigneeInput = {
    update: XOR<UserUpdateWithoutProjectAssigneeInput, UserUncheckedUpdateWithoutProjectAssigneeInput>
    create: XOR<UserCreateWithoutProjectAssigneeInput, UserUncheckedCreateWithoutProjectAssigneeInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProjectAssigneeInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProjectAssigneeInput, UserUncheckedUpdateWithoutProjectAssigneeInput>
  }

  export type UserUpdateWithoutProjectAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutProjectAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutCreatorProjectInput = {
    update: XOR<UserUpdateWithoutCreatorProjectInput, UserUncheckedUpdateWithoutCreatorProjectInput>
    create: XOR<UserCreateWithoutCreatorProjectInput, UserUncheckedCreateWithoutCreatorProjectInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatorProjectInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatorProjectInput, UserUncheckedUpdateWithoutCreatorProjectInput>
  }

  export type UserUpdateWithoutCreatorProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatorProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutUpdaterProjectInput = {
    update: XOR<UserUpdateWithoutUpdaterProjectInput, UserUncheckedUpdateWithoutUpdaterProjectInput>
    create: XOR<UserCreateWithoutUpdaterProjectInput, UserUncheckedCreateWithoutUpdaterProjectInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdaterProjectInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdaterProjectInput, UserUncheckedUpdateWithoutUpdaterProjectInput>
  }

  export type UserUpdateWithoutUpdaterProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdaterProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutProjectMemberInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutProjectMemberInput, UserUncheckedUpdateWithoutProjectMemberInput>
    create: XOR<UserCreateWithoutProjectMemberInput, UserUncheckedCreateWithoutProjectMemberInput>
  }

  export type UserUpdateWithWhereUniqueWithoutProjectMemberInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutProjectMemberInput, UserUncheckedUpdateWithoutProjectMemberInput>
  }

  export type UserUpdateManyWithWhereWithoutProjectMemberInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutProjectMemberInput>
  }

  export type MilestoneUpsertWithWhereUniqueWithoutProjectInput = {
    where: MilestoneWhereUniqueInput
    update: XOR<MilestoneUpdateWithoutProjectInput, MilestoneUncheckedUpdateWithoutProjectInput>
    create: XOR<MilestoneCreateWithoutProjectInput, MilestoneUncheckedCreateWithoutProjectInput>
  }

  export type MilestoneUpdateWithWhereUniqueWithoutProjectInput = {
    where: MilestoneWhereUniqueInput
    data: XOR<MilestoneUpdateWithoutProjectInput, MilestoneUncheckedUpdateWithoutProjectInput>
  }

  export type MilestoneUpdateManyWithWhereWithoutProjectInput = {
    where: MilestoneScalarWhereInput
    data: XOR<MilestoneUpdateManyMutationInput, MilestoneUncheckedUpdateManyWithoutProjectInput>
  }

  export type MilestoneScalarWhereInput = {
    AND?: MilestoneScalarWhereInput | MilestoneScalarWhereInput[]
    OR?: MilestoneScalarWhereInput[]
    NOT?: MilestoneScalarWhereInput | MilestoneScalarWhereInput[]
    id?: StringFilter<"Milestone"> | string
    order?: DecimalNullableFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    title?: StringNullableFilter<"Milestone"> | string | null
    description?: StringNullableFilter<"Milestone"> | string | null
    plannedStartDate?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    plannedEndDate?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    actualStartDate?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    actualEndDate?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    approvedDate?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    share?: DecimalNullableFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    amount?: DecimalNullableFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    deliverables?: StringNullableFilter<"Milestone"> | string | null
    progress?: DecimalNullableFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    revision?: DecimalNullableFilter<"Milestone"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Milestone"> | Date | string | null
    projectId?: StringNullableFilter<"Milestone"> | string | null
    assigneeId?: StringNullableFilter<"Milestone"> | string | null
    createdById?: StringNullableFilter<"Milestone"> | string | null
    updatedById?: StringNullableFilter<"Milestone"> | string | null
  }

  export type NoteUpsertWithWhereUniqueWithoutProjectInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutProjectInput, NoteUncheckedUpdateWithoutProjectInput>
    create: XOR<NoteCreateWithoutProjectInput, NoteUncheckedCreateWithoutProjectInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutProjectInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutProjectInput, NoteUncheckedUpdateWithoutProjectInput>
  }

  export type NoteUpdateManyWithWhereWithoutProjectInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutProjectInput>
  }

  export type StageUpsertWithWhereUniqueWithoutProjectInput = {
    where: StageWhereUniqueInput
    update: XOR<StageUpdateWithoutProjectInput, StageUncheckedUpdateWithoutProjectInput>
    create: XOR<StageCreateWithoutProjectInput, StageUncheckedCreateWithoutProjectInput>
  }

  export type StageUpdateWithWhereUniqueWithoutProjectInput = {
    where: StageWhereUniqueInput
    data: XOR<StageUpdateWithoutProjectInput, StageUncheckedUpdateWithoutProjectInput>
  }

  export type StageUpdateManyWithWhereWithoutProjectInput = {
    where: StageScalarWhereInput
    data: XOR<StageUpdateManyMutationInput, StageUncheckedUpdateManyWithoutProjectInput>
  }

  export type EventUpsertWithWhereUniqueWithoutProjectInput = {
    where: EventWhereUniqueInput
    update: XOR<EventUpdateWithoutProjectInput, EventUncheckedUpdateWithoutProjectInput>
    create: XOR<EventCreateWithoutProjectInput, EventUncheckedCreateWithoutProjectInput>
  }

  export type EventUpdateWithWhereUniqueWithoutProjectInput = {
    where: EventWhereUniqueInput
    data: XOR<EventUpdateWithoutProjectInput, EventUncheckedUpdateWithoutProjectInput>
  }

  export type EventUpdateManyWithWhereWithoutProjectInput = {
    where: EventScalarWhereInput
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyWithoutProjectInput>
  }

  export type BudgetUpsertWithWhereUniqueWithoutProjectInput = {
    where: BudgetWhereUniqueInput
    update: XOR<BudgetUpdateWithoutProjectInput, BudgetUncheckedUpdateWithoutProjectInput>
    create: XOR<BudgetCreateWithoutProjectInput, BudgetUncheckedCreateWithoutProjectInput>
  }

  export type BudgetUpdateWithWhereUniqueWithoutProjectInput = {
    where: BudgetWhereUniqueInput
    data: XOR<BudgetUpdateWithoutProjectInput, BudgetUncheckedUpdateWithoutProjectInput>
  }

  export type BudgetUpdateManyWithWhereWithoutProjectInput = {
    where: BudgetScalarWhereInput
    data: XOR<BudgetUpdateManyMutationInput, BudgetUncheckedUpdateManyWithoutProjectInput>
  }

  export type BudgetScalarWhereInput = {
    AND?: BudgetScalarWhereInput | BudgetScalarWhereInput[]
    OR?: BudgetScalarWhereInput[]
    NOT?: BudgetScalarWhereInput | BudgetScalarWhereInput[]
    id?: StringFilter<"Budget"> | string
    regNumber?: StringNullableFilter<"Budget"> | string | null
    description?: StringNullableFilter<"Budget"> | string | null
    amount?: DecimalNullableFilter<"Budget"> | Decimal | DecimalJsLike | number | string | null
    approvedDate?: DateTimeNullableFilter<"Budget"> | Date | string | null
    revision?: DecimalNullableFilter<"Budget"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"Budget"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Budget"> | Date | string | null
    assigneeId?: StringNullableFilter<"Budget"> | string | null
    createdById?: StringNullableFilter<"Budget"> | string | null
    updatedById?: StringNullableFilter<"Budget"> | string | null
    projectId?: StringNullableFilter<"Budget"> | string | null
  }

  export type ExpenseUpsertWithWhereUniqueWithoutProjectInput = {
    where: ExpenseWhereUniqueInput
    update: XOR<ExpenseUpdateWithoutProjectInput, ExpenseUncheckedUpdateWithoutProjectInput>
    create: XOR<ExpenseCreateWithoutProjectInput, ExpenseUncheckedCreateWithoutProjectInput>
  }

  export type ExpenseUpdateWithWhereUniqueWithoutProjectInput = {
    where: ExpenseWhereUniqueInput
    data: XOR<ExpenseUpdateWithoutProjectInput, ExpenseUncheckedUpdateWithoutProjectInput>
  }

  export type ExpenseUpdateManyWithWhereWithoutProjectInput = {
    where: ExpenseScalarWhereInput
    data: XOR<ExpenseUpdateManyMutationInput, ExpenseUncheckedUpdateManyWithoutProjectInput>
  }

  export type ProjectCreateWithoutMilestonesInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contract?: ContractCreateNestedOneWithoutProjectInput
    assignee?: UserCreateNestedOneWithoutProjectAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorProjectInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProjectInput
    members?: UserCreateNestedManyWithoutProjectMemberInput
    notes?: NoteCreateNestedManyWithoutProjectInput
    stages?: StageCreateNestedManyWithoutProjectInput
    events?: EventCreateNestedManyWithoutProjectInput
    budgets?: BudgetCreateNestedManyWithoutProjectInput
    expenses?: ExpenseCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutMilestonesInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contractId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutProjectMemberInput
    notes?: NoteUncheckedCreateNestedManyWithoutProjectInput
    stages?: StageUncheckedCreateNestedManyWithoutProjectInput
    events?: EventUncheckedCreateNestedManyWithoutProjectInput
    budgets?: BudgetUncheckedCreateNestedManyWithoutProjectInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutMilestonesInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutMilestonesInput, ProjectUncheckedCreateWithoutMilestonesInput>
  }

  export type UserCreateWithoutMilestoneAssigneeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutMilestoneAssigneeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutMilestoneAssigneeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMilestoneAssigneeInput, UserUncheckedCreateWithoutMilestoneAssigneeInput>
  }

  export type UserCreateWithoutCreatorMilestoneInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutCreatorMilestoneInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutCreatorMilestoneInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatorMilestoneInput, UserUncheckedCreateWithoutCreatorMilestoneInput>
  }

  export type UserCreateWithoutUpdaterMilestoneInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutUpdaterMilestoneInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutUpdaterMilestoneInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdaterMilestoneInput, UserUncheckedCreateWithoutUpdaterMilestoneInput>
  }

  export type TaskCreateWithoutMilestoneInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorTaskInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterTaskInput
    members?: UserCreateNestedManyWithoutTaskMemberInput
    notes?: NoteCreateNestedManyWithoutTaskInput
    stages?: StageCreateNestedManyWithoutTaskInput
    events?: EventCreateNestedManyWithoutTaskInput
    expenses?: ExpenseCreateNestedManyWithoutTaskInput
    funds?: FundCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutMilestoneInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutTaskMemberInput
    notes?: NoteUncheckedCreateNestedManyWithoutTaskInput
    stages?: StageUncheckedCreateNestedManyWithoutTaskInput
    events?: EventUncheckedCreateNestedManyWithoutTaskInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutTaskInput
    funds?: FundUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutMilestoneInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutMilestoneInput, TaskUncheckedCreateWithoutMilestoneInput>
  }

  export type TaskCreateManyMilestoneInputEnvelope = {
    data: TaskCreateManyMilestoneInput | TaskCreateManyMilestoneInput[]
    skipDuplicates?: boolean
  }

  export type NoteCreateWithoutMilestoneInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorNoteInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterNoteInput
    pipeline?: PipelineCreateNestedOneWithoutNotesInput
    project?: ProjectCreateNestedOneWithoutNotesInput
    task?: TaskCreateNestedOneWithoutNotesInput
    budget?: BudgetCreateNestedOneWithoutNotesInput
    fund?: FundCreateNestedOneWithoutNotesInput
    expense?: ExpenseCreateNestedOneWithoutNotesInput
    client?: ClientCreateNestedOneWithoutNotesInput
    vendor?: VendorCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutMilestoneInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type NoteCreateOrConnectWithoutMilestoneInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutMilestoneInput, NoteUncheckedCreateWithoutMilestoneInput>
  }

  export type NoteCreateManyMilestoneInputEnvelope = {
    data: NoteCreateManyMilestoneInput | NoteCreateManyMilestoneInput[]
    skipDuplicates?: boolean
  }

  export type StageCreateWithoutMilestoneInput = {
    id?: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    type: StageTypeCreateNestedOneWithoutStagesInput
    createdBy?: UserCreateNestedOneWithoutCreatorStageInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterStageInput
    pipeline?: PipelineCreateNestedOneWithoutStagesInput
    project?: ProjectCreateNestedOneWithoutStagesInput
    task?: TaskCreateNestedOneWithoutStagesInput
    budget?: BudgetCreateNestedOneWithoutStagesInput
    fund?: FundCreateNestedOneWithoutStagesInput
  }

  export type StageUncheckedCreateWithoutMilestoneInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type StageCreateOrConnectWithoutMilestoneInput = {
    where: StageWhereUniqueInput
    create: XOR<StageCreateWithoutMilestoneInput, StageUncheckedCreateWithoutMilestoneInput>
  }

  export type StageCreateManyMilestoneInputEnvelope = {
    data: StageCreateManyMilestoneInput | StageCreateManyMilestoneInput[]
    skipDuplicates?: boolean
  }

  export type EventCreateWithoutMilestoneInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorEventInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterEventInput
    pipeline?: PipelineCreateNestedOneWithoutEventsInput
    project?: ProjectCreateNestedOneWithoutEventsInput
    task?: TaskCreateNestedOneWithoutEventsInput
  }

  export type EventUncheckedCreateWithoutMilestoneInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    taskId?: string | null
  }

  export type EventCreateOrConnectWithoutMilestoneInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutMilestoneInput, EventUncheckedCreateWithoutMilestoneInput>
  }

  export type EventCreateManyMilestoneInputEnvelope = {
    data: EventCreateManyMilestoneInput | EventCreateManyMilestoneInput[]
    skipDuplicates?: boolean
  }

  export type ProjectUpsertWithoutMilestonesInput = {
    update: XOR<ProjectUpdateWithoutMilestonesInput, ProjectUncheckedUpdateWithoutMilestonesInput>
    create: XOR<ProjectCreateWithoutMilestonesInput, ProjectUncheckedCreateWithoutMilestonesInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutMilestonesInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutMilestonesInput, ProjectUncheckedUpdateWithoutMilestonesInput>
  }

  export type ProjectUpdateWithoutMilestonesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contract?: ContractUpdateOneWithoutProjectNestedInput
    assignee?: UserUpdateOneWithoutProjectAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorProjectNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProjectNestedInput
    members?: UserUpdateManyWithoutProjectMemberNestedInput
    notes?: NoteUpdateManyWithoutProjectNestedInput
    stages?: StageUpdateManyWithoutProjectNestedInput
    events?: EventUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutMilestonesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutProjectMemberNestedInput
    notes?: NoteUncheckedUpdateManyWithoutProjectNestedInput
    stages?: StageUncheckedUpdateManyWithoutProjectNestedInput
    events?: EventUncheckedUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUncheckedUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type UserUpsertWithoutMilestoneAssigneeInput = {
    update: XOR<UserUpdateWithoutMilestoneAssigneeInput, UserUncheckedUpdateWithoutMilestoneAssigneeInput>
    create: XOR<UserCreateWithoutMilestoneAssigneeInput, UserUncheckedCreateWithoutMilestoneAssigneeInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMilestoneAssigneeInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMilestoneAssigneeInput, UserUncheckedUpdateWithoutMilestoneAssigneeInput>
  }

  export type UserUpdateWithoutMilestoneAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutMilestoneAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutCreatorMilestoneInput = {
    update: XOR<UserUpdateWithoutCreatorMilestoneInput, UserUncheckedUpdateWithoutCreatorMilestoneInput>
    create: XOR<UserCreateWithoutCreatorMilestoneInput, UserUncheckedCreateWithoutCreatorMilestoneInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatorMilestoneInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatorMilestoneInput, UserUncheckedUpdateWithoutCreatorMilestoneInput>
  }

  export type UserUpdateWithoutCreatorMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatorMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutUpdaterMilestoneInput = {
    update: XOR<UserUpdateWithoutUpdaterMilestoneInput, UserUncheckedUpdateWithoutUpdaterMilestoneInput>
    create: XOR<UserCreateWithoutUpdaterMilestoneInput, UserUncheckedCreateWithoutUpdaterMilestoneInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdaterMilestoneInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdaterMilestoneInput, UserUncheckedUpdateWithoutUpdaterMilestoneInput>
  }

  export type UserUpdateWithoutUpdaterMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdaterMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type TaskUpsertWithWhereUniqueWithoutMilestoneInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutMilestoneInput, TaskUncheckedUpdateWithoutMilestoneInput>
    create: XOR<TaskCreateWithoutMilestoneInput, TaskUncheckedCreateWithoutMilestoneInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutMilestoneInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutMilestoneInput, TaskUncheckedUpdateWithoutMilestoneInput>
  }

  export type TaskUpdateManyWithWhereWithoutMilestoneInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutMilestoneInput>
  }

  export type TaskScalarWhereInput = {
    AND?: TaskScalarWhereInput | TaskScalarWhereInput[]
    OR?: TaskScalarWhereInput[]
    NOT?: TaskScalarWhereInput | TaskScalarWhereInput[]
    id?: StringFilter<"Task"> | string
    order?: DecimalNullableFilter<"Task"> | Decimal | DecimalJsLike | number | string | null
    title?: StringFilter<"Task"> | string
    plannedStartDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    plannedEndDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    actualStartDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    actualEndDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    progress?: DecimalNullableFilter<"Task"> | Decimal | DecimalJsLike | number | string | null
    deliverables?: StringNullableFilter<"Task"> | string | null
    remarks?: StringNullableFilter<"Task"> | string | null
    createdAt?: DateTimeNullableFilter<"Task"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Task"> | Date | string | null
    milestoneId?: StringFilter<"Task"> | string
    assigneeId?: StringNullableFilter<"Task"> | string | null
    createdById?: StringNullableFilter<"Task"> | string | null
    updatedById?: StringNullableFilter<"Task"> | string | null
  }

  export type NoteUpsertWithWhereUniqueWithoutMilestoneInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutMilestoneInput, NoteUncheckedUpdateWithoutMilestoneInput>
    create: XOR<NoteCreateWithoutMilestoneInput, NoteUncheckedCreateWithoutMilestoneInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutMilestoneInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutMilestoneInput, NoteUncheckedUpdateWithoutMilestoneInput>
  }

  export type NoteUpdateManyWithWhereWithoutMilestoneInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutMilestoneInput>
  }

  export type StageUpsertWithWhereUniqueWithoutMilestoneInput = {
    where: StageWhereUniqueInput
    update: XOR<StageUpdateWithoutMilestoneInput, StageUncheckedUpdateWithoutMilestoneInput>
    create: XOR<StageCreateWithoutMilestoneInput, StageUncheckedCreateWithoutMilestoneInput>
  }

  export type StageUpdateWithWhereUniqueWithoutMilestoneInput = {
    where: StageWhereUniqueInput
    data: XOR<StageUpdateWithoutMilestoneInput, StageUncheckedUpdateWithoutMilestoneInput>
  }

  export type StageUpdateManyWithWhereWithoutMilestoneInput = {
    where: StageScalarWhereInput
    data: XOR<StageUpdateManyMutationInput, StageUncheckedUpdateManyWithoutMilestoneInput>
  }

  export type EventUpsertWithWhereUniqueWithoutMilestoneInput = {
    where: EventWhereUniqueInput
    update: XOR<EventUpdateWithoutMilestoneInput, EventUncheckedUpdateWithoutMilestoneInput>
    create: XOR<EventCreateWithoutMilestoneInput, EventUncheckedCreateWithoutMilestoneInput>
  }

  export type EventUpdateWithWhereUniqueWithoutMilestoneInput = {
    where: EventWhereUniqueInput
    data: XOR<EventUpdateWithoutMilestoneInput, EventUncheckedUpdateWithoutMilestoneInput>
  }

  export type EventUpdateManyWithWhereWithoutMilestoneInput = {
    where: EventScalarWhereInput
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyWithoutMilestoneInput>
  }

  export type MilestoneCreateWithoutTasksInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    project?: ProjectCreateNestedOneWithoutMilestonesInput
    assignee?: UserCreateNestedOneWithoutMilestoneAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorMilestoneInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterMilestoneInput
    notes?: NoteCreateNestedManyWithoutMilestoneInput
    stages?: StageCreateNestedManyWithoutMilestoneInput
    events?: EventCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneUncheckedCreateWithoutTasksInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    projectId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutMilestoneInput
    stages?: StageUncheckedCreateNestedManyWithoutMilestoneInput
    events?: EventUncheckedCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneCreateOrConnectWithoutTasksInput = {
    where: MilestoneWhereUniqueInput
    create: XOR<MilestoneCreateWithoutTasksInput, MilestoneUncheckedCreateWithoutTasksInput>
  }

  export type UserCreateWithoutTaskAssigneeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutTaskAssigneeInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutTaskAssigneeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTaskAssigneeInput, UserUncheckedCreateWithoutTaskAssigneeInput>
  }

  export type UserCreateWithoutCreatorTaskInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutCreatorTaskInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutCreatorTaskInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatorTaskInput, UserUncheckedCreateWithoutCreatorTaskInput>
  }

  export type UserCreateWithoutUpdaterTaskInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutUpdaterTaskInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutUpdaterTaskInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdaterTaskInput, UserUncheckedCreateWithoutUpdaterTaskInput>
  }

  export type UserCreateWithoutTaskMemberInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutTaskMemberInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutTaskMemberInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTaskMemberInput, UserUncheckedCreateWithoutTaskMemberInput>
  }

  export type NoteCreateWithoutTaskInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorNoteInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterNoteInput
    pipeline?: PipelineCreateNestedOneWithoutNotesInput
    project?: ProjectCreateNestedOneWithoutNotesInput
    milestone?: MilestoneCreateNestedOneWithoutNotesInput
    budget?: BudgetCreateNestedOneWithoutNotesInput
    fund?: FundCreateNestedOneWithoutNotesInput
    expense?: ExpenseCreateNestedOneWithoutNotesInput
    client?: ClientCreateNestedOneWithoutNotesInput
    vendor?: VendorCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutTaskInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type NoteCreateOrConnectWithoutTaskInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutTaskInput, NoteUncheckedCreateWithoutTaskInput>
  }

  export type NoteCreateManyTaskInputEnvelope = {
    data: NoteCreateManyTaskInput | NoteCreateManyTaskInput[]
    skipDuplicates?: boolean
  }

  export type StageCreateWithoutTaskInput = {
    id?: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    type: StageTypeCreateNestedOneWithoutStagesInput
    createdBy?: UserCreateNestedOneWithoutCreatorStageInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterStageInput
    pipeline?: PipelineCreateNestedOneWithoutStagesInput
    project?: ProjectCreateNestedOneWithoutStagesInput
    milestone?: MilestoneCreateNestedOneWithoutStagesInput
    budget?: BudgetCreateNestedOneWithoutStagesInput
    fund?: FundCreateNestedOneWithoutStagesInput
  }

  export type StageUncheckedCreateWithoutTaskInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type StageCreateOrConnectWithoutTaskInput = {
    where: StageWhereUniqueInput
    create: XOR<StageCreateWithoutTaskInput, StageUncheckedCreateWithoutTaskInput>
  }

  export type StageCreateManyTaskInputEnvelope = {
    data: StageCreateManyTaskInput | StageCreateManyTaskInput[]
    skipDuplicates?: boolean
  }

  export type EventCreateWithoutTaskInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorEventInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterEventInput
    pipeline?: PipelineCreateNestedOneWithoutEventsInput
    project?: ProjectCreateNestedOneWithoutEventsInput
    milestone?: MilestoneCreateNestedOneWithoutEventsInput
  }

  export type EventUncheckedCreateWithoutTaskInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
  }

  export type EventCreateOrConnectWithoutTaskInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutTaskInput, EventUncheckedCreateWithoutTaskInput>
  }

  export type EventCreateManyTaskInputEnvelope = {
    data: EventCreateManyTaskInput | EventCreateManyTaskInput[]
    skipDuplicates?: boolean
  }

  export type ExpenseCreateWithoutTaskInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    category: CostTypeCreateNestedOneWithoutExpensesInput
    createdBy?: UserCreateNestedOneWithoutCreatorExpenseInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterExpenseInput
    fund?: FundCreateNestedOneWithoutExpensesInput
    project?: ProjectCreateNestedOneWithoutExpensesInput
    notes?: NoteCreateNestedManyWithoutExpenseInput
  }

  export type ExpenseUncheckedCreateWithoutTaskInput = {
    id?: string
    regNumber?: string | null
    categoryId: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    fundId?: string | null
    projectId?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutExpenseInput
  }

  export type ExpenseCreateOrConnectWithoutTaskInput = {
    where: ExpenseWhereUniqueInput
    create: XOR<ExpenseCreateWithoutTaskInput, ExpenseUncheckedCreateWithoutTaskInput>
  }

  export type ExpenseCreateManyTaskInputEnvelope = {
    data: ExpenseCreateManyTaskInput | ExpenseCreateManyTaskInput[]
    skipDuplicates?: boolean
  }

  export type FundCreateWithoutTaskInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutFundAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorFundInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterFundInput
    items?: FundItemCreateNestedManyWithoutFundInput
    expenses?: ExpenseCreateNestedManyWithoutFundInput
    notes?: NoteCreateNestedManyWithoutFundInput
    stages?: StageCreateNestedManyWithoutFundInput
  }

  export type FundUncheckedCreateWithoutTaskInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    items?: FundItemUncheckedCreateNestedManyWithoutFundInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutFundInput
    notes?: NoteUncheckedCreateNestedManyWithoutFundInput
    stages?: StageUncheckedCreateNestedManyWithoutFundInput
  }

  export type FundCreateOrConnectWithoutTaskInput = {
    where: FundWhereUniqueInput
    create: XOR<FundCreateWithoutTaskInput, FundUncheckedCreateWithoutTaskInput>
  }

  export type FundCreateManyTaskInputEnvelope = {
    data: FundCreateManyTaskInput | FundCreateManyTaskInput[]
    skipDuplicates?: boolean
  }

  export type MilestoneUpsertWithoutTasksInput = {
    update: XOR<MilestoneUpdateWithoutTasksInput, MilestoneUncheckedUpdateWithoutTasksInput>
    create: XOR<MilestoneCreateWithoutTasksInput, MilestoneUncheckedCreateWithoutTasksInput>
    where?: MilestoneWhereInput
  }

  export type MilestoneUpdateToOneWithWhereWithoutTasksInput = {
    where?: MilestoneWhereInput
    data: XOR<MilestoneUpdateWithoutTasksInput, MilestoneUncheckedUpdateWithoutTasksInput>
  }

  export type MilestoneUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project?: ProjectUpdateOneWithoutMilestonesNestedInput
    assignee?: UserUpdateOneWithoutMilestoneAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorMilestoneNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterMilestoneNestedInput
    notes?: NoteUpdateManyWithoutMilestoneNestedInput
    stages?: StageUpdateManyWithoutMilestoneNestedInput
    events?: EventUpdateManyWithoutMilestoneNestedInput
  }

  export type MilestoneUncheckedUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutMilestoneNestedInput
    stages?: StageUncheckedUpdateManyWithoutMilestoneNestedInput
    events?: EventUncheckedUpdateManyWithoutMilestoneNestedInput
  }

  export type UserUpsertWithoutTaskAssigneeInput = {
    update: XOR<UserUpdateWithoutTaskAssigneeInput, UserUncheckedUpdateWithoutTaskAssigneeInput>
    create: XOR<UserCreateWithoutTaskAssigneeInput, UserUncheckedCreateWithoutTaskAssigneeInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTaskAssigneeInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTaskAssigneeInput, UserUncheckedUpdateWithoutTaskAssigneeInput>
  }

  export type UserUpdateWithoutTaskAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutTaskAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutCreatorTaskInput = {
    update: XOR<UserUpdateWithoutCreatorTaskInput, UserUncheckedUpdateWithoutCreatorTaskInput>
    create: XOR<UserCreateWithoutCreatorTaskInput, UserUncheckedCreateWithoutCreatorTaskInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatorTaskInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatorTaskInput, UserUncheckedUpdateWithoutCreatorTaskInput>
  }

  export type UserUpdateWithoutCreatorTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatorTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutUpdaterTaskInput = {
    update: XOR<UserUpdateWithoutUpdaterTaskInput, UserUncheckedUpdateWithoutUpdaterTaskInput>
    create: XOR<UserCreateWithoutUpdaterTaskInput, UserUncheckedCreateWithoutUpdaterTaskInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdaterTaskInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdaterTaskInput, UserUncheckedUpdateWithoutUpdaterTaskInput>
  }

  export type UserUpdateWithoutUpdaterTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdaterTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutTaskMemberInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutTaskMemberInput, UserUncheckedUpdateWithoutTaskMemberInput>
    create: XOR<UserCreateWithoutTaskMemberInput, UserUncheckedCreateWithoutTaskMemberInput>
  }

  export type UserUpdateWithWhereUniqueWithoutTaskMemberInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutTaskMemberInput, UserUncheckedUpdateWithoutTaskMemberInput>
  }

  export type UserUpdateManyWithWhereWithoutTaskMemberInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutTaskMemberInput>
  }

  export type NoteUpsertWithWhereUniqueWithoutTaskInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutTaskInput, NoteUncheckedUpdateWithoutTaskInput>
    create: XOR<NoteCreateWithoutTaskInput, NoteUncheckedCreateWithoutTaskInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutTaskInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutTaskInput, NoteUncheckedUpdateWithoutTaskInput>
  }

  export type NoteUpdateManyWithWhereWithoutTaskInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutTaskInput>
  }

  export type StageUpsertWithWhereUniqueWithoutTaskInput = {
    where: StageWhereUniqueInput
    update: XOR<StageUpdateWithoutTaskInput, StageUncheckedUpdateWithoutTaskInput>
    create: XOR<StageCreateWithoutTaskInput, StageUncheckedCreateWithoutTaskInput>
  }

  export type StageUpdateWithWhereUniqueWithoutTaskInput = {
    where: StageWhereUniqueInput
    data: XOR<StageUpdateWithoutTaskInput, StageUncheckedUpdateWithoutTaskInput>
  }

  export type StageUpdateManyWithWhereWithoutTaskInput = {
    where: StageScalarWhereInput
    data: XOR<StageUpdateManyMutationInput, StageUncheckedUpdateManyWithoutTaskInput>
  }

  export type EventUpsertWithWhereUniqueWithoutTaskInput = {
    where: EventWhereUniqueInput
    update: XOR<EventUpdateWithoutTaskInput, EventUncheckedUpdateWithoutTaskInput>
    create: XOR<EventCreateWithoutTaskInput, EventUncheckedCreateWithoutTaskInput>
  }

  export type EventUpdateWithWhereUniqueWithoutTaskInput = {
    where: EventWhereUniqueInput
    data: XOR<EventUpdateWithoutTaskInput, EventUncheckedUpdateWithoutTaskInput>
  }

  export type EventUpdateManyWithWhereWithoutTaskInput = {
    where: EventScalarWhereInput
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyWithoutTaskInput>
  }

  export type ExpenseUpsertWithWhereUniqueWithoutTaskInput = {
    where: ExpenseWhereUniqueInput
    update: XOR<ExpenseUpdateWithoutTaskInput, ExpenseUncheckedUpdateWithoutTaskInput>
    create: XOR<ExpenseCreateWithoutTaskInput, ExpenseUncheckedCreateWithoutTaskInput>
  }

  export type ExpenseUpdateWithWhereUniqueWithoutTaskInput = {
    where: ExpenseWhereUniqueInput
    data: XOR<ExpenseUpdateWithoutTaskInput, ExpenseUncheckedUpdateWithoutTaskInput>
  }

  export type ExpenseUpdateManyWithWhereWithoutTaskInput = {
    where: ExpenseScalarWhereInput
    data: XOR<ExpenseUpdateManyMutationInput, ExpenseUncheckedUpdateManyWithoutTaskInput>
  }

  export type FundUpsertWithWhereUniqueWithoutTaskInput = {
    where: FundWhereUniqueInput
    update: XOR<FundUpdateWithoutTaskInput, FundUncheckedUpdateWithoutTaskInput>
    create: XOR<FundCreateWithoutTaskInput, FundUncheckedCreateWithoutTaskInput>
  }

  export type FundUpdateWithWhereUniqueWithoutTaskInput = {
    where: FundWhereUniqueInput
    data: XOR<FundUpdateWithoutTaskInput, FundUncheckedUpdateWithoutTaskInput>
  }

  export type FundUpdateManyWithWhereWithoutTaskInput = {
    where: FundScalarWhereInput
    data: XOR<FundUpdateManyMutationInput, FundUncheckedUpdateManyWithoutTaskInput>
  }

  export type FundScalarWhereInput = {
    AND?: FundScalarWhereInput | FundScalarWhereInput[]
    OR?: FundScalarWhereInput[]
    NOT?: FundScalarWhereInput | FundScalarWhereInput[]
    id?: StringFilter<"Fund"> | string
    regNumber?: StringNullableFilter<"Fund"> | string | null
    description?: StringFilter<"Fund"> | string
    amount?: DecimalNullableFilter<"Fund"> | Decimal | DecimalJsLike | number | string | null
    requestDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    approvedDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    closedDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    expiredDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    voidDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    plannedPaymentDate?: DateTimeNullableFilter<"Fund"> | Date | string | null
    type?: StringNullableFilter<"Fund"> | string | null
    revision?: DecimalNullableFilter<"Fund"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"Fund"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Fund"> | Date | string | null
    assigneeId?: StringNullableFilter<"Fund"> | string | null
    createdById?: StringNullableFilter<"Fund"> | string | null
    updatedById?: StringNullableFilter<"Fund"> | string | null
    taskId?: StringNullableFilter<"Fund"> | string | null
  }

  export type RoleCreateWithoutUsersInput = {
    id?: string
    name: string
    level: number
  }

  export type RoleUncheckedCreateWithoutUsersInput = {
    id?: string
    name: string
    level: number
  }

  export type RoleCreateOrConnectWithoutUsersInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
  }

  export type OrganizationCreateWithoutUsersInput = {
    id?: string
    name: string
    code?: string | null
  }

  export type OrganizationUncheckedCreateWithoutUsersInput = {
    id?: string
    name: string
    code?: string | null
  }

  export type OrganizationCreateOrConnectWithoutUsersInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutUsersInput, OrganizationUncheckedCreateWithoutUsersInput>
  }

  export type ProfileCreateWithoutUserInput = {
    id?: string
    name?: string | null
    joinDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorProfileInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProfileInput
  }

  export type ProfileUncheckedCreateWithoutUserInput = {
    id?: string
    name?: string | null
    joinDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type ProfileCreateOrConnectWithoutUserInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
  }

  export type BudgetCreateWithoutAssigneeInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorBudgetInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterBudgetInput
    items?: BudgetItemCreateNestedManyWithoutBudgetInput
    project?: ProjectCreateNestedOneWithoutBudgetsInput
    notes?: NoteCreateNestedManyWithoutBudgetInput
    stages?: StageCreateNestedManyWithoutBudgetInput
  }

  export type BudgetUncheckedCreateWithoutAssigneeInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    projectId?: string | null
    items?: BudgetItemUncheckedCreateNestedManyWithoutBudgetInput
    notes?: NoteUncheckedCreateNestedManyWithoutBudgetInput
    stages?: StageUncheckedCreateNestedManyWithoutBudgetInput
  }

  export type BudgetCreateOrConnectWithoutAssigneeInput = {
    where: BudgetWhereUniqueInput
    create: XOR<BudgetCreateWithoutAssigneeInput, BudgetUncheckedCreateWithoutAssigneeInput>
  }

  export type BudgetCreateManyAssigneeInputEnvelope = {
    data: BudgetCreateManyAssigneeInput | BudgetCreateManyAssigneeInput[]
    skipDuplicates?: boolean
  }

  export type BudgetCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutBudgetAssigneeInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterBudgetInput
    items?: BudgetItemCreateNestedManyWithoutBudgetInput
    project?: ProjectCreateNestedOneWithoutBudgetsInput
    notes?: NoteCreateNestedManyWithoutBudgetInput
    stages?: StageCreateNestedManyWithoutBudgetInput
  }

  export type BudgetUncheckedCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    updatedById?: string | null
    projectId?: string | null
    items?: BudgetItemUncheckedCreateNestedManyWithoutBudgetInput
    notes?: NoteUncheckedCreateNestedManyWithoutBudgetInput
    stages?: StageUncheckedCreateNestedManyWithoutBudgetInput
  }

  export type BudgetCreateOrConnectWithoutCreatedByInput = {
    where: BudgetWhereUniqueInput
    create: XOR<BudgetCreateWithoutCreatedByInput, BudgetUncheckedCreateWithoutCreatedByInput>
  }

  export type BudgetCreateManyCreatedByInputEnvelope = {
    data: BudgetCreateManyCreatedByInput | BudgetCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type BudgetCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutBudgetAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorBudgetInput
    items?: BudgetItemCreateNestedManyWithoutBudgetInput
    project?: ProjectCreateNestedOneWithoutBudgetsInput
    notes?: NoteCreateNestedManyWithoutBudgetInput
    stages?: StageCreateNestedManyWithoutBudgetInput
  }

  export type BudgetUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    projectId?: string | null
    items?: BudgetItemUncheckedCreateNestedManyWithoutBudgetInput
    notes?: NoteUncheckedCreateNestedManyWithoutBudgetInput
    stages?: StageUncheckedCreateNestedManyWithoutBudgetInput
  }

  export type BudgetCreateOrConnectWithoutUpdatedByInput = {
    where: BudgetWhereUniqueInput
    create: XOR<BudgetCreateWithoutUpdatedByInput, BudgetUncheckedCreateWithoutUpdatedByInput>
  }

  export type BudgetCreateManyUpdatedByInputEnvelope = {
    data: BudgetCreateManyUpdatedByInput | BudgetCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type ClientCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedBy?: UserCreateNestedOneWithoutUpdaterClientInput
    notes?: NoteCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
    opportunities?: OpportunityCreateNestedManyWithoutClientInput
    quotes?: QuoteCreateNestedManyWithoutClientInput
    contracts?: ContractCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutClientInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutClientInput
    contracts?: ContractUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutCreatedByInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutCreatedByInput, ClientUncheckedCreateWithoutCreatedByInput>
  }

  export type ClientCreateManyCreatedByInputEnvelope = {
    data: ClientCreateManyCreatedByInput | ClientCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type ClientCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorClientInput
    notes?: NoteCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
    opportunities?: OpportunityCreateNestedManyWithoutClientInput
    quotes?: QuoteCreateNestedManyWithoutClientInput
    contracts?: ContractCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutClientInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutClientInput
    contracts?: ContractUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutUpdatedByInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutUpdatedByInput, ClientUncheckedCreateWithoutUpdatedByInput>
  }

  export type ClientCreateManyUpdatedByInputEnvelope = {
    data: ClientCreateManyUpdatedByInput | ClientCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type EventCreateWithoutCreatedByInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedBy?: UserCreateNestedOneWithoutUpdaterEventInput
    pipeline?: PipelineCreateNestedOneWithoutEventsInput
    project?: ProjectCreateNestedOneWithoutEventsInput
    milestone?: MilestoneCreateNestedOneWithoutEventsInput
    task?: TaskCreateNestedOneWithoutEventsInput
  }

  export type EventUncheckedCreateWithoutCreatedByInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
  }

  export type EventCreateOrConnectWithoutCreatedByInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutCreatedByInput, EventUncheckedCreateWithoutCreatedByInput>
  }

  export type EventCreateManyCreatedByInputEnvelope = {
    data: EventCreateManyCreatedByInput | EventCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type EventCreateWithoutUpdatedByInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorEventInput
    pipeline?: PipelineCreateNestedOneWithoutEventsInput
    project?: ProjectCreateNestedOneWithoutEventsInput
    milestone?: MilestoneCreateNestedOneWithoutEventsInput
    task?: TaskCreateNestedOneWithoutEventsInput
  }

  export type EventUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
  }

  export type EventCreateOrConnectWithoutUpdatedByInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutUpdatedByInput, EventUncheckedCreateWithoutUpdatedByInput>
  }

  export type EventCreateManyUpdatedByInputEnvelope = {
    data: EventCreateManyUpdatedByInput | EventCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type ExpenseCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    category: CostTypeCreateNestedOneWithoutExpensesInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterExpenseInput
    fund?: FundCreateNestedOneWithoutExpensesInput
    task?: TaskCreateNestedOneWithoutExpensesInput
    project?: ProjectCreateNestedOneWithoutExpensesInput
    notes?: NoteCreateNestedManyWithoutExpenseInput
  }

  export type ExpenseUncheckedCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    categoryId: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
    fundId?: string | null
    taskId?: string | null
    projectId?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutExpenseInput
  }

  export type ExpenseCreateOrConnectWithoutCreatedByInput = {
    where: ExpenseWhereUniqueInput
    create: XOR<ExpenseCreateWithoutCreatedByInput, ExpenseUncheckedCreateWithoutCreatedByInput>
  }

  export type ExpenseCreateManyCreatedByInputEnvelope = {
    data: ExpenseCreateManyCreatedByInput | ExpenseCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type ExpenseCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    category: CostTypeCreateNestedOneWithoutExpensesInput
    createdBy?: UserCreateNestedOneWithoutCreatorExpenseInput
    fund?: FundCreateNestedOneWithoutExpensesInput
    task?: TaskCreateNestedOneWithoutExpensesInput
    project?: ProjectCreateNestedOneWithoutExpensesInput
    notes?: NoteCreateNestedManyWithoutExpenseInput
  }

  export type ExpenseUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    categoryId: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    fundId?: string | null
    taskId?: string | null
    projectId?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutExpenseInput
  }

  export type ExpenseCreateOrConnectWithoutUpdatedByInput = {
    where: ExpenseWhereUniqueInput
    create: XOR<ExpenseCreateWithoutUpdatedByInput, ExpenseUncheckedCreateWithoutUpdatedByInput>
  }

  export type ExpenseCreateManyUpdatedByInputEnvelope = {
    data: ExpenseCreateManyUpdatedByInput | ExpenseCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type FundCreateWithoutAssigneeInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorFundInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterFundInput
    items?: FundItemCreateNestedManyWithoutFundInput
    task?: TaskCreateNestedOneWithoutFundsInput
    expenses?: ExpenseCreateNestedManyWithoutFundInput
    notes?: NoteCreateNestedManyWithoutFundInput
    stages?: StageCreateNestedManyWithoutFundInput
  }

  export type FundUncheckedCreateWithoutAssigneeInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    taskId?: string | null
    items?: FundItemUncheckedCreateNestedManyWithoutFundInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutFundInput
    notes?: NoteUncheckedCreateNestedManyWithoutFundInput
    stages?: StageUncheckedCreateNestedManyWithoutFundInput
  }

  export type FundCreateOrConnectWithoutAssigneeInput = {
    where: FundWhereUniqueInput
    create: XOR<FundCreateWithoutAssigneeInput, FundUncheckedCreateWithoutAssigneeInput>
  }

  export type FundCreateManyAssigneeInputEnvelope = {
    data: FundCreateManyAssigneeInput | FundCreateManyAssigneeInput[]
    skipDuplicates?: boolean
  }

  export type FundCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutFundAssigneeInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterFundInput
    items?: FundItemCreateNestedManyWithoutFundInput
    task?: TaskCreateNestedOneWithoutFundsInput
    expenses?: ExpenseCreateNestedManyWithoutFundInput
    notes?: NoteCreateNestedManyWithoutFundInput
    stages?: StageCreateNestedManyWithoutFundInput
  }

  export type FundUncheckedCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    updatedById?: string | null
    taskId?: string | null
    items?: FundItemUncheckedCreateNestedManyWithoutFundInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutFundInput
    notes?: NoteUncheckedCreateNestedManyWithoutFundInput
    stages?: StageUncheckedCreateNestedManyWithoutFundInput
  }

  export type FundCreateOrConnectWithoutCreatedByInput = {
    where: FundWhereUniqueInput
    create: XOR<FundCreateWithoutCreatedByInput, FundUncheckedCreateWithoutCreatedByInput>
  }

  export type FundCreateManyCreatedByInputEnvelope = {
    data: FundCreateManyCreatedByInput | FundCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type FundCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assignee?: UserCreateNestedOneWithoutFundAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorFundInput
    items?: FundItemCreateNestedManyWithoutFundInput
    task?: TaskCreateNestedOneWithoutFundsInput
    expenses?: ExpenseCreateNestedManyWithoutFundInput
    notes?: NoteCreateNestedManyWithoutFundInput
    stages?: StageCreateNestedManyWithoutFundInput
  }

  export type FundUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    taskId?: string | null
    items?: FundItemUncheckedCreateNestedManyWithoutFundInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutFundInput
    notes?: NoteUncheckedCreateNestedManyWithoutFundInput
    stages?: StageUncheckedCreateNestedManyWithoutFundInput
  }

  export type FundCreateOrConnectWithoutUpdatedByInput = {
    where: FundWhereUniqueInput
    create: XOR<FundCreateWithoutUpdatedByInput, FundUncheckedCreateWithoutUpdatedByInput>
  }

  export type FundCreateManyUpdatedByInputEnvelope = {
    data: FundCreateManyUpdatedByInput | FundCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type MilestoneCreateWithoutAssigneeInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    project?: ProjectCreateNestedOneWithoutMilestonesInput
    createdBy?: UserCreateNestedOneWithoutCreatorMilestoneInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterMilestoneInput
    tasks?: TaskCreateNestedManyWithoutMilestoneInput
    notes?: NoteCreateNestedManyWithoutMilestoneInput
    stages?: StageCreateNestedManyWithoutMilestoneInput
    events?: EventCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneUncheckedCreateWithoutAssigneeInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    projectId?: string | null
    createdById?: string | null
    updatedById?: string | null
    tasks?: TaskUncheckedCreateNestedManyWithoutMilestoneInput
    notes?: NoteUncheckedCreateNestedManyWithoutMilestoneInput
    stages?: StageUncheckedCreateNestedManyWithoutMilestoneInput
    events?: EventUncheckedCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneCreateOrConnectWithoutAssigneeInput = {
    where: MilestoneWhereUniqueInput
    create: XOR<MilestoneCreateWithoutAssigneeInput, MilestoneUncheckedCreateWithoutAssigneeInput>
  }

  export type MilestoneCreateManyAssigneeInputEnvelope = {
    data: MilestoneCreateManyAssigneeInput | MilestoneCreateManyAssigneeInput[]
    skipDuplicates?: boolean
  }

  export type MilestoneCreateWithoutCreatedByInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    project?: ProjectCreateNestedOneWithoutMilestonesInput
    assignee?: UserCreateNestedOneWithoutMilestoneAssigneeInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterMilestoneInput
    tasks?: TaskCreateNestedManyWithoutMilestoneInput
    notes?: NoteCreateNestedManyWithoutMilestoneInput
    stages?: StageCreateNestedManyWithoutMilestoneInput
    events?: EventCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneUncheckedCreateWithoutCreatedByInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    projectId?: string | null
    assigneeId?: string | null
    updatedById?: string | null
    tasks?: TaskUncheckedCreateNestedManyWithoutMilestoneInput
    notes?: NoteUncheckedCreateNestedManyWithoutMilestoneInput
    stages?: StageUncheckedCreateNestedManyWithoutMilestoneInput
    events?: EventUncheckedCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneCreateOrConnectWithoutCreatedByInput = {
    where: MilestoneWhereUniqueInput
    create: XOR<MilestoneCreateWithoutCreatedByInput, MilestoneUncheckedCreateWithoutCreatedByInput>
  }

  export type MilestoneCreateManyCreatedByInputEnvelope = {
    data: MilestoneCreateManyCreatedByInput | MilestoneCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type MilestoneCreateWithoutUpdatedByInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    project?: ProjectCreateNestedOneWithoutMilestonesInput
    assignee?: UserCreateNestedOneWithoutMilestoneAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorMilestoneInput
    tasks?: TaskCreateNestedManyWithoutMilestoneInput
    notes?: NoteCreateNestedManyWithoutMilestoneInput
    stages?: StageCreateNestedManyWithoutMilestoneInput
    events?: EventCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    projectId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    tasks?: TaskUncheckedCreateNestedManyWithoutMilestoneInput
    notes?: NoteUncheckedCreateNestedManyWithoutMilestoneInput
    stages?: StageUncheckedCreateNestedManyWithoutMilestoneInput
    events?: EventUncheckedCreateNestedManyWithoutMilestoneInput
  }

  export type MilestoneCreateOrConnectWithoutUpdatedByInput = {
    where: MilestoneWhereUniqueInput
    create: XOR<MilestoneCreateWithoutUpdatedByInput, MilestoneUncheckedCreateWithoutUpdatedByInput>
  }

  export type MilestoneCreateManyUpdatedByInputEnvelope = {
    data: MilestoneCreateManyUpdatedByInput | MilestoneCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type NoteCreateWithoutCreatedByInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedBy?: UserCreateNestedOneWithoutUpdaterNoteInput
    pipeline?: PipelineCreateNestedOneWithoutNotesInput
    project?: ProjectCreateNestedOneWithoutNotesInput
    milestone?: MilestoneCreateNestedOneWithoutNotesInput
    task?: TaskCreateNestedOneWithoutNotesInput
    budget?: BudgetCreateNestedOneWithoutNotesInput
    fund?: FundCreateNestedOneWithoutNotesInput
    expense?: ExpenseCreateNestedOneWithoutNotesInput
    client?: ClientCreateNestedOneWithoutNotesInput
    vendor?: VendorCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutCreatedByInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type NoteCreateOrConnectWithoutCreatedByInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutCreatedByInput, NoteUncheckedCreateWithoutCreatedByInput>
  }

  export type NoteCreateManyCreatedByInputEnvelope = {
    data: NoteCreateManyCreatedByInput | NoteCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type NoteCreateWithoutUpdatedByInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorNoteInput
    pipeline?: PipelineCreateNestedOneWithoutNotesInput
    project?: ProjectCreateNestedOneWithoutNotesInput
    milestone?: MilestoneCreateNestedOneWithoutNotesInput
    task?: TaskCreateNestedOneWithoutNotesInput
    budget?: BudgetCreateNestedOneWithoutNotesInput
    fund?: FundCreateNestedOneWithoutNotesInput
    expense?: ExpenseCreateNestedOneWithoutNotesInput
    client?: ClientCreateNestedOneWithoutNotesInput
    vendor?: VendorCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type NoteCreateOrConnectWithoutUpdatedByInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutUpdatedByInput, NoteUncheckedCreateWithoutUpdatedByInput>
  }

  export type NoteCreateManyUpdatedByInputEnvelope = {
    data: NoteCreateManyUpdatedByInput | NoteCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedBy?: UserCreateNestedOneWithoutUpdaterProductInput
    leads?: LeadCreateNestedManyWithoutProductsInput
    opportunities?: OpportunityCreateNestedManyWithoutProductsInput
    quotes?: QuoteCreateNestedManyWithoutProductsInput
    contracts?: ContractCreateNestedManyWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
    leads?: LeadUncheckedCreateNestedManyWithoutProductsInput
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutProductsInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutProductsInput
    contracts?: ContractUncheckedCreateNestedManyWithoutProductsInput
  }

  export type ProductCreateOrConnectWithoutCreatedByInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutCreatedByInput, ProductUncheckedCreateWithoutCreatedByInput>
  }

  export type ProductCreateManyCreatedByInputEnvelope = {
    data: ProductCreateManyCreatedByInput | ProductCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorProductInput
    leads?: LeadCreateNestedManyWithoutProductsInput
    opportunities?: OpportunityCreateNestedManyWithoutProductsInput
    quotes?: QuoteCreateNestedManyWithoutProductsInput
    contracts?: ContractCreateNestedManyWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    leads?: LeadUncheckedCreateNestedManyWithoutProductsInput
    opportunities?: OpportunityUncheckedCreateNestedManyWithoutProductsInput
    quotes?: QuoteUncheckedCreateNestedManyWithoutProductsInput
    contracts?: ContractUncheckedCreateNestedManyWithoutProductsInput
  }

  export type ProductCreateOrConnectWithoutUpdatedByInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutUpdatedByInput, ProductUncheckedCreateWithoutUpdatedByInput>
  }

  export type ProductCreateManyUpdatedByInputEnvelope = {
    data: ProductCreateManyUpdatedByInput | ProductCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type ProjectCreateWithoutAssigneeInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contract?: ContractCreateNestedOneWithoutProjectInput
    createdBy?: UserCreateNestedOneWithoutCreatorProjectInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProjectInput
    members?: UserCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneCreateNestedManyWithoutProjectInput
    notes?: NoteCreateNestedManyWithoutProjectInput
    stages?: StageCreateNestedManyWithoutProjectInput
    events?: EventCreateNestedManyWithoutProjectInput
    budgets?: BudgetCreateNestedManyWithoutProjectInput
    expenses?: ExpenseCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutAssigneeInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contractId?: string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneUncheckedCreateNestedManyWithoutProjectInput
    notes?: NoteUncheckedCreateNestedManyWithoutProjectInput
    stages?: StageUncheckedCreateNestedManyWithoutProjectInput
    events?: EventUncheckedCreateNestedManyWithoutProjectInput
    budgets?: BudgetUncheckedCreateNestedManyWithoutProjectInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutAssigneeInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutAssigneeInput, ProjectUncheckedCreateWithoutAssigneeInput>
  }

  export type ProjectCreateManyAssigneeInputEnvelope = {
    data: ProjectCreateManyAssigneeInput | ProjectCreateManyAssigneeInput[]
    skipDuplicates?: boolean
  }

  export type ProjectCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contract?: ContractCreateNestedOneWithoutProjectInput
    assignee?: UserCreateNestedOneWithoutProjectAssigneeInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProjectInput
    members?: UserCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneCreateNestedManyWithoutProjectInput
    notes?: NoteCreateNestedManyWithoutProjectInput
    stages?: StageCreateNestedManyWithoutProjectInput
    events?: EventCreateNestedManyWithoutProjectInput
    budgets?: BudgetCreateNestedManyWithoutProjectInput
    expenses?: ExpenseCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contractId?: string | null
    assigneeId?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneUncheckedCreateNestedManyWithoutProjectInput
    notes?: NoteUncheckedCreateNestedManyWithoutProjectInput
    stages?: StageUncheckedCreateNestedManyWithoutProjectInput
    events?: EventUncheckedCreateNestedManyWithoutProjectInput
    budgets?: BudgetUncheckedCreateNestedManyWithoutProjectInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutCreatedByInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutCreatedByInput, ProjectUncheckedCreateWithoutCreatedByInput>
  }

  export type ProjectCreateManyCreatedByInputEnvelope = {
    data: ProjectCreateManyCreatedByInput | ProjectCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type ProjectCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contract?: ContractCreateNestedOneWithoutProjectInput
    assignee?: UserCreateNestedOneWithoutProjectAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorProjectInput
    members?: UserCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneCreateNestedManyWithoutProjectInput
    notes?: NoteCreateNestedManyWithoutProjectInput
    stages?: StageCreateNestedManyWithoutProjectInput
    events?: EventCreateNestedManyWithoutProjectInput
    budgets?: BudgetCreateNestedManyWithoutProjectInput
    expenses?: ExpenseCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contractId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutProjectMemberInput
    milestones?: MilestoneUncheckedCreateNestedManyWithoutProjectInput
    notes?: NoteUncheckedCreateNestedManyWithoutProjectInput
    stages?: StageUncheckedCreateNestedManyWithoutProjectInput
    events?: EventUncheckedCreateNestedManyWithoutProjectInput
    budgets?: BudgetUncheckedCreateNestedManyWithoutProjectInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutUpdatedByInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutUpdatedByInput, ProjectUncheckedCreateWithoutUpdatedByInput>
  }

  export type ProjectCreateManyUpdatedByInputEnvelope = {
    data: ProjectCreateManyUpdatedByInput | ProjectCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type ProjectCreateWithoutMembersInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contract?: ContractCreateNestedOneWithoutProjectInput
    assignee?: UserCreateNestedOneWithoutProjectAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorProjectInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterProjectInput
    milestones?: MilestoneCreateNestedManyWithoutProjectInput
    notes?: NoteCreateNestedManyWithoutProjectInput
    stages?: StageCreateNestedManyWithoutProjectInput
    events?: EventCreateNestedManyWithoutProjectInput
    budgets?: BudgetCreateNestedManyWithoutProjectInput
    expenses?: ExpenseCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutMembersInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contractId?: string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    milestones?: MilestoneUncheckedCreateNestedManyWithoutProjectInput
    notes?: NoteUncheckedCreateNestedManyWithoutProjectInput
    stages?: StageUncheckedCreateNestedManyWithoutProjectInput
    events?: EventUncheckedCreateNestedManyWithoutProjectInput
    budgets?: BudgetUncheckedCreateNestedManyWithoutProjectInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutMembersInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutMembersInput, ProjectUncheckedCreateWithoutMembersInput>
  }

  export type StageCreateWithoutCreatedByInput = {
    id?: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    type: StageTypeCreateNestedOneWithoutStagesInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterStageInput
    pipeline?: PipelineCreateNestedOneWithoutStagesInput
    project?: ProjectCreateNestedOneWithoutStagesInput
    milestone?: MilestoneCreateNestedOneWithoutStagesInput
    task?: TaskCreateNestedOneWithoutStagesInput
    budget?: BudgetCreateNestedOneWithoutStagesInput
    fund?: FundCreateNestedOneWithoutStagesInput
  }

  export type StageUncheckedCreateWithoutCreatedByInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type StageCreateOrConnectWithoutCreatedByInput = {
    where: StageWhereUniqueInput
    create: XOR<StageCreateWithoutCreatedByInput, StageUncheckedCreateWithoutCreatedByInput>
  }

  export type StageCreateManyCreatedByInputEnvelope = {
    data: StageCreateManyCreatedByInput | StageCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type StageCreateWithoutUpdatedByInput = {
    id?: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    type: StageTypeCreateNestedOneWithoutStagesInput
    createdBy?: UserCreateNestedOneWithoutCreatorStageInput
    pipeline?: PipelineCreateNestedOneWithoutStagesInput
    project?: ProjectCreateNestedOneWithoutStagesInput
    milestone?: MilestoneCreateNestedOneWithoutStagesInput
    task?: TaskCreateNestedOneWithoutStagesInput
    budget?: BudgetCreateNestedOneWithoutStagesInput
    fund?: FundCreateNestedOneWithoutStagesInput
  }

  export type StageUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type StageCreateOrConnectWithoutUpdatedByInput = {
    where: StageWhereUniqueInput
    create: XOR<StageCreateWithoutUpdatedByInput, StageUncheckedCreateWithoutUpdatedByInput>
  }

  export type StageCreateManyUpdatedByInputEnvelope = {
    data: StageCreateManyUpdatedByInput | StageCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutAssigneeInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestone: MilestoneCreateNestedOneWithoutTasksInput
    createdBy?: UserCreateNestedOneWithoutCreatorTaskInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterTaskInput
    members?: UserCreateNestedManyWithoutTaskMemberInput
    notes?: NoteCreateNestedManyWithoutTaskInput
    stages?: StageCreateNestedManyWithoutTaskInput
    events?: EventCreateNestedManyWithoutTaskInput
    expenses?: ExpenseCreateNestedManyWithoutTaskInput
    funds?: FundCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutAssigneeInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestoneId: string
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutTaskMemberInput
    notes?: NoteUncheckedCreateNestedManyWithoutTaskInput
    stages?: StageUncheckedCreateNestedManyWithoutTaskInput
    events?: EventUncheckedCreateNestedManyWithoutTaskInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutTaskInput
    funds?: FundUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutAssigneeInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput>
  }

  export type TaskCreateManyAssigneeInputEnvelope = {
    data: TaskCreateManyAssigneeInput | TaskCreateManyAssigneeInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutCreatedByInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestone: MilestoneCreateNestedOneWithoutTasksInput
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterTaskInput
    members?: UserCreateNestedManyWithoutTaskMemberInput
    notes?: NoteCreateNestedManyWithoutTaskInput
    stages?: StageCreateNestedManyWithoutTaskInput
    events?: EventCreateNestedManyWithoutTaskInput
    expenses?: ExpenseCreateNestedManyWithoutTaskInput
    funds?: FundCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutCreatedByInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestoneId: string
    assigneeId?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutTaskMemberInput
    notes?: NoteUncheckedCreateNestedManyWithoutTaskInput
    stages?: StageUncheckedCreateNestedManyWithoutTaskInput
    events?: EventUncheckedCreateNestedManyWithoutTaskInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutTaskInput
    funds?: FundUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutCreatedByInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutCreatedByInput, TaskUncheckedCreateWithoutCreatedByInput>
  }

  export type TaskCreateManyCreatedByInputEnvelope = {
    data: TaskCreateManyCreatedByInput | TaskCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutUpdatedByInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestone: MilestoneCreateNestedOneWithoutTasksInput
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorTaskInput
    members?: UserCreateNestedManyWithoutTaskMemberInput
    notes?: NoteCreateNestedManyWithoutTaskInput
    stages?: StageCreateNestedManyWithoutTaskInput
    events?: EventCreateNestedManyWithoutTaskInput
    expenses?: ExpenseCreateNestedManyWithoutTaskInput
    funds?: FundCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestoneId: string
    assigneeId?: string | null
    createdById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutTaskMemberInput
    notes?: NoteUncheckedCreateNestedManyWithoutTaskInput
    stages?: StageUncheckedCreateNestedManyWithoutTaskInput
    events?: EventUncheckedCreateNestedManyWithoutTaskInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutTaskInput
    funds?: FundUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutUpdatedByInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutUpdatedByInput, TaskUncheckedCreateWithoutUpdatedByInput>
  }

  export type TaskCreateManyUpdatedByInputEnvelope = {
    data: TaskCreateManyUpdatedByInput | TaskCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutMembersInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestone: MilestoneCreateNestedOneWithoutTasksInput
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorTaskInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterTaskInput
    notes?: NoteCreateNestedManyWithoutTaskInput
    stages?: StageCreateNestedManyWithoutTaskInput
    events?: EventCreateNestedManyWithoutTaskInput
    expenses?: ExpenseCreateNestedManyWithoutTaskInput
    funds?: FundCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutMembersInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestoneId: string
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutTaskInput
    stages?: StageUncheckedCreateNestedManyWithoutTaskInput
    events?: EventUncheckedCreateNestedManyWithoutTaskInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutTaskInput
    funds?: FundUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutMembersInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutMembersInput, TaskUncheckedCreateWithoutMembersInput>
  }

  export type PipelineCreateWithoutAssigneeInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    lead?: LeadCreateNestedOneWithoutPipelineInput
    opportunity?: OpportunityCreateNestedOneWithoutPipelineInput
    quote?: QuoteCreateNestedOneWithoutPipelineInput
    contract?: ContractCreateNestedOneWithoutPipelineInput
    members?: UserCreateNestedManyWithoutPipelineMemberInput
    createdBy?: UserCreateNestedOneWithoutCreatorPipelineInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterPipelineInput
    stages?: StageCreateNestedManyWithoutPipelineInput
    notes?: NoteCreateNestedManyWithoutPipelineInput
    events?: EventCreateNestedManyWithoutPipelineInput
  }

  export type PipelineUncheckedCreateWithoutAssigneeInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutPipelineMemberInput
    stages?: StageUncheckedCreateNestedManyWithoutPipelineInput
    notes?: NoteUncheckedCreateNestedManyWithoutPipelineInput
    events?: EventUncheckedCreateNestedManyWithoutPipelineInput
  }

  export type PipelineCreateOrConnectWithoutAssigneeInput = {
    where: PipelineWhereUniqueInput
    create: XOR<PipelineCreateWithoutAssigneeInput, PipelineUncheckedCreateWithoutAssigneeInput>
  }

  export type PipelineCreateManyAssigneeInputEnvelope = {
    data: PipelineCreateManyAssigneeInput | PipelineCreateManyAssigneeInput[]
    skipDuplicates?: boolean
  }

  export type PipelineCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    lead?: LeadCreateNestedOneWithoutPipelineInput
    opportunity?: OpportunityCreateNestedOneWithoutPipelineInput
    quote?: QuoteCreateNestedOneWithoutPipelineInput
    contract?: ContractCreateNestedOneWithoutPipelineInput
    assignee?: UserCreateNestedOneWithoutPipelineAssigneeInput
    members?: UserCreateNestedManyWithoutPipelineMemberInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterPipelineInput
    stages?: StageCreateNestedManyWithoutPipelineInput
    notes?: NoteCreateNestedManyWithoutPipelineInput
    events?: EventCreateNestedManyWithoutPipelineInput
  }

  export type PipelineUncheckedCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    updatedById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutPipelineMemberInput
    stages?: StageUncheckedCreateNestedManyWithoutPipelineInput
    notes?: NoteUncheckedCreateNestedManyWithoutPipelineInput
    events?: EventUncheckedCreateNestedManyWithoutPipelineInput
  }

  export type PipelineCreateOrConnectWithoutCreatedByInput = {
    where: PipelineWhereUniqueInput
    create: XOR<PipelineCreateWithoutCreatedByInput, PipelineUncheckedCreateWithoutCreatedByInput>
  }

  export type PipelineCreateManyCreatedByInputEnvelope = {
    data: PipelineCreateManyCreatedByInput | PipelineCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type PipelineCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    lead?: LeadCreateNestedOneWithoutPipelineInput
    opportunity?: OpportunityCreateNestedOneWithoutPipelineInput
    quote?: QuoteCreateNestedOneWithoutPipelineInput
    contract?: ContractCreateNestedOneWithoutPipelineInput
    assignee?: UserCreateNestedOneWithoutPipelineAssigneeInput
    members?: UserCreateNestedManyWithoutPipelineMemberInput
    createdBy?: UserCreateNestedOneWithoutCreatorPipelineInput
    stages?: StageCreateNestedManyWithoutPipelineInput
    notes?: NoteCreateNestedManyWithoutPipelineInput
    events?: EventCreateNestedManyWithoutPipelineInput
  }

  export type PipelineUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    members?: UserUncheckedCreateNestedManyWithoutPipelineMemberInput
    stages?: StageUncheckedCreateNestedManyWithoutPipelineInput
    notes?: NoteUncheckedCreateNestedManyWithoutPipelineInput
    events?: EventUncheckedCreateNestedManyWithoutPipelineInput
  }

  export type PipelineCreateOrConnectWithoutUpdatedByInput = {
    where: PipelineWhereUniqueInput
    create: XOR<PipelineCreateWithoutUpdatedByInput, PipelineUncheckedCreateWithoutUpdatedByInput>
  }

  export type PipelineCreateManyUpdatedByInputEnvelope = {
    data: PipelineCreateManyUpdatedByInput | PipelineCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type PipelineCreateWithoutMembersInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    lead?: LeadCreateNestedOneWithoutPipelineInput
    opportunity?: OpportunityCreateNestedOneWithoutPipelineInput
    quote?: QuoteCreateNestedOneWithoutPipelineInput
    contract?: ContractCreateNestedOneWithoutPipelineInput
    assignee?: UserCreateNestedOneWithoutPipelineAssigneeInput
    createdBy?: UserCreateNestedOneWithoutCreatorPipelineInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterPipelineInput
    stages?: StageCreateNestedManyWithoutPipelineInput
    notes?: NoteCreateNestedManyWithoutPipelineInput
    events?: EventCreateNestedManyWithoutPipelineInput
  }

  export type PipelineUncheckedCreateWithoutMembersInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
    stages?: StageUncheckedCreateNestedManyWithoutPipelineInput
    notes?: NoteUncheckedCreateNestedManyWithoutPipelineInput
    events?: EventUncheckedCreateNestedManyWithoutPipelineInput
  }

  export type PipelineCreateOrConnectWithoutMembersInput = {
    where: PipelineWhereUniqueInput
    create: XOR<PipelineCreateWithoutMembersInput, PipelineUncheckedCreateWithoutMembersInput>
  }

  export type VendorCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    city?: string | null
    postalCode?: string | null
    legal?: string | null
    vendorCategory?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxStatus?: boolean
    siupNumber?: string | null
    nibNumber?: string | null
    pkpNumber?: string | null
    productType?: string | null
    description?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedBy?: UserCreateNestedOneWithoutUpdaterVendorInput
    notes?: NoteCreateNestedManyWithoutVendorInput
  }

  export type VendorUncheckedCreateWithoutCreatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    city?: string | null
    postalCode?: string | null
    legal?: string | null
    vendorCategory?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxStatus?: boolean
    siupNumber?: string | null
    nibNumber?: string | null
    pkpNumber?: string | null
    productType?: string | null
    description?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutVendorInput
  }

  export type VendorCreateOrConnectWithoutCreatedByInput = {
    where: VendorWhereUniqueInput
    create: XOR<VendorCreateWithoutCreatedByInput, VendorUncheckedCreateWithoutCreatedByInput>
  }

  export type VendorCreateManyCreatedByInputEnvelope = {
    data: VendorCreateManyCreatedByInput | VendorCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type VendorCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    city?: string | null
    postalCode?: string | null
    legal?: string | null
    vendorCategory?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxStatus?: boolean
    siupNumber?: string | null
    nibNumber?: string | null
    pkpNumber?: string | null
    productType?: string | null
    description?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorVendorInput
    notes?: NoteCreateNestedManyWithoutVendorInput
  }

  export type VendorUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    city?: string | null
    postalCode?: string | null
    legal?: string | null
    vendorCategory?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxStatus?: boolean
    siupNumber?: string | null
    nibNumber?: string | null
    pkpNumber?: string | null
    productType?: string | null
    description?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    notes?: NoteUncheckedCreateNestedManyWithoutVendorInput
  }

  export type VendorCreateOrConnectWithoutUpdatedByInput = {
    where: VendorWhereUniqueInput
    create: XOR<VendorCreateWithoutUpdatedByInput, VendorUncheckedCreateWithoutUpdatedByInput>
  }

  export type VendorCreateManyUpdatedByInputEnvelope = {
    data: VendorCreateManyUpdatedByInput | VendorCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type ProfileCreateWithoutCreatedByInput = {
    id?: string
    name?: string | null
    joinDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedBy?: UserCreateNestedOneWithoutUpdaterProfileInput
    user: UserCreateNestedOneWithoutProfileInput
  }

  export type ProfileUncheckedCreateWithoutCreatedByInput = {
    id?: string
    name?: string | null
    joinDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
    userId: string
  }

  export type ProfileCreateOrConnectWithoutCreatedByInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutCreatedByInput, ProfileUncheckedCreateWithoutCreatedByInput>
  }

  export type ProfileCreateManyCreatedByInputEnvelope = {
    data: ProfileCreateManyCreatedByInput | ProfileCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type ProfileCreateWithoutUpdatedByInput = {
    id?: string
    name?: string | null
    joinDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdBy?: UserCreateNestedOneWithoutCreatorProfileInput
    user: UserCreateNestedOneWithoutProfileInput
  }

  export type ProfileUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    name?: string | null
    joinDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    userId: string
  }

  export type ProfileCreateOrConnectWithoutUpdatedByInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutUpdatedByInput, ProfileUncheckedCreateWithoutUpdatedByInput>
  }

  export type ProfileCreateManyUpdatedByInputEnvelope = {
    data: ProfileCreateManyUpdatedByInput | ProfileCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type CostTypeCreateWithoutCreatedByInput = {
    id?: string
    order?: number | null
    name: string
    parent?: CostTypeCreateNestedOneWithoutChildrenInput
    children?: CostTypeCreateNestedManyWithoutParentInput
    updatedBy?: UserCreateNestedOneWithoutUpdaterCostTypeInput
    budgetItems?: BudgetItemCreateNestedManyWithoutCategoryInput
    fundItems?: FundItemCreateNestedManyWithoutCategoryInput
    expenses?: ExpenseCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeUncheckedCreateWithoutCreatedByInput = {
    id?: string
    order?: number | null
    name: string
    parentId?: string | null
    updatedById?: string | null
    children?: CostTypeUncheckedCreateNestedManyWithoutParentInput
    budgetItems?: BudgetItemUncheckedCreateNestedManyWithoutCategoryInput
    fundItems?: FundItemUncheckedCreateNestedManyWithoutCategoryInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeCreateOrConnectWithoutCreatedByInput = {
    where: CostTypeWhereUniqueInput
    create: XOR<CostTypeCreateWithoutCreatedByInput, CostTypeUncheckedCreateWithoutCreatedByInput>
  }

  export type CostTypeCreateManyCreatedByInputEnvelope = {
    data: CostTypeCreateManyCreatedByInput | CostTypeCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type CostTypeCreateWithoutUpdatedByInput = {
    id?: string
    order?: number | null
    name: string
    parent?: CostTypeCreateNestedOneWithoutChildrenInput
    children?: CostTypeCreateNestedManyWithoutParentInput
    createdBy?: UserCreateNestedOneWithoutCreatorCostTypeInput
    budgetItems?: BudgetItemCreateNestedManyWithoutCategoryInput
    fundItems?: FundItemCreateNestedManyWithoutCategoryInput
    expenses?: ExpenseCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    order?: number | null
    name: string
    parentId?: string | null
    createdById?: string | null
    children?: CostTypeUncheckedCreateNestedManyWithoutParentInput
    budgetItems?: BudgetItemUncheckedCreateNestedManyWithoutCategoryInput
    fundItems?: FundItemUncheckedCreateNestedManyWithoutCategoryInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CostTypeCreateOrConnectWithoutUpdatedByInput = {
    where: CostTypeWhereUniqueInput
    create: XOR<CostTypeCreateWithoutUpdatedByInput, CostTypeUncheckedCreateWithoutUpdatedByInput>
  }

  export type CostTypeCreateManyUpdatedByInputEnvelope = {
    data: CostTypeCreateManyUpdatedByInput | CostTypeCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type RoleUpsertWithoutUsersInput = {
    update: XOR<RoleUpdateWithoutUsersInput, RoleUncheckedUpdateWithoutUsersInput>
    create: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutUsersInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutUsersInput, RoleUncheckedUpdateWithoutUsersInput>
  }

  export type RoleUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
  }

  export type RoleUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
  }

  export type OrganizationUpsertWithoutUsersInput = {
    update: XOR<OrganizationUpdateWithoutUsersInput, OrganizationUncheckedUpdateWithoutUsersInput>
    create: XOR<OrganizationCreateWithoutUsersInput, OrganizationUncheckedCreateWithoutUsersInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutUsersInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutUsersInput, OrganizationUncheckedUpdateWithoutUsersInput>
  }

  export type OrganizationUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrganizationUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProfileUpsertWithoutUserInput = {
    update: XOR<ProfileUpdateWithoutUserInput, ProfileUncheckedUpdateWithoutUserInput>
    create: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutUserInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutUserInput, ProfileUncheckedUpdateWithoutUserInput>
  }

  export type ProfileUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    joinDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorProfileNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProfileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    joinDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BudgetUpsertWithWhereUniqueWithoutAssigneeInput = {
    where: BudgetWhereUniqueInput
    update: XOR<BudgetUpdateWithoutAssigneeInput, BudgetUncheckedUpdateWithoutAssigneeInput>
    create: XOR<BudgetCreateWithoutAssigneeInput, BudgetUncheckedCreateWithoutAssigneeInput>
  }

  export type BudgetUpdateWithWhereUniqueWithoutAssigneeInput = {
    where: BudgetWhereUniqueInput
    data: XOR<BudgetUpdateWithoutAssigneeInput, BudgetUncheckedUpdateWithoutAssigneeInput>
  }

  export type BudgetUpdateManyWithWhereWithoutAssigneeInput = {
    where: BudgetScalarWhereInput
    data: XOR<BudgetUpdateManyMutationInput, BudgetUncheckedUpdateManyWithoutAssigneeInput>
  }

  export type BudgetUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: BudgetWhereUniqueInput
    update: XOR<BudgetUpdateWithoutCreatedByInput, BudgetUncheckedUpdateWithoutCreatedByInput>
    create: XOR<BudgetCreateWithoutCreatedByInput, BudgetUncheckedCreateWithoutCreatedByInput>
  }

  export type BudgetUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: BudgetWhereUniqueInput
    data: XOR<BudgetUpdateWithoutCreatedByInput, BudgetUncheckedUpdateWithoutCreatedByInput>
  }

  export type BudgetUpdateManyWithWhereWithoutCreatedByInput = {
    where: BudgetScalarWhereInput
    data: XOR<BudgetUpdateManyMutationInput, BudgetUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type BudgetUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: BudgetWhereUniqueInput
    update: XOR<BudgetUpdateWithoutUpdatedByInput, BudgetUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<BudgetCreateWithoutUpdatedByInput, BudgetUncheckedCreateWithoutUpdatedByInput>
  }

  export type BudgetUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: BudgetWhereUniqueInput
    data: XOR<BudgetUpdateWithoutUpdatedByInput, BudgetUncheckedUpdateWithoutUpdatedByInput>
  }

  export type BudgetUpdateManyWithWhereWithoutUpdatedByInput = {
    where: BudgetScalarWhereInput
    data: XOR<BudgetUpdateManyMutationInput, BudgetUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type ClientUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: ClientWhereUniqueInput
    update: XOR<ClientUpdateWithoutCreatedByInput, ClientUncheckedUpdateWithoutCreatedByInput>
    create: XOR<ClientCreateWithoutCreatedByInput, ClientUncheckedCreateWithoutCreatedByInput>
  }

  export type ClientUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: ClientWhereUniqueInput
    data: XOR<ClientUpdateWithoutCreatedByInput, ClientUncheckedUpdateWithoutCreatedByInput>
  }

  export type ClientUpdateManyWithWhereWithoutCreatedByInput = {
    where: ClientScalarWhereInput
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type ClientScalarWhereInput = {
    AND?: ClientScalarWhereInput | ClientScalarWhereInput[]
    OR?: ClientScalarWhereInput[]
    NOT?: ClientScalarWhereInput | ClientScalarWhereInput[]
    id?: StringFilter<"Client"> | string
    regNumber?: StringNullableFilter<"Client"> | string | null
    name?: StringFilter<"Client"> | string
    address?: StringNullableFilter<"Client"> | string | null
    phone?: StringNullableFilter<"Client"> | string | null
    email?: StringNullableFilter<"Client"> | string | null
    legal?: StringNullableFilter<"Client"> | string | null
    category?: StringNullableFilter<"Client"> | string | null
    country?: StringNullableFilter<"Client"> | string | null
    contactName?: StringNullableFilter<"Client"> | string | null
    contactRole?: StringNullableFilter<"Client"> | string | null
    contactPhone?: StringNullableFilter<"Client"> | string | null
    contactEmail?: StringNullableFilter<"Client"> | string | null
    taxNumber?: StringNullableFilter<"Client"> | string | null
    taxAddress?: StringNullableFilter<"Client"> | string | null
    taxStatus?: BoolFilter<"Client"> | boolean
    procurementName?: StringNullableFilter<"Client"> | string | null
    procurementRole?: StringNullableFilter<"Client"> | string | null
    procurementPhone?: StringNullableFilter<"Client"> | string | null
    procurementEmail?: StringNullableFilter<"Client"> | string | null
    billingAddress?: StringNullableFilter<"Client"> | string | null
    paymentName?: StringNullableFilter<"Client"> | string | null
    paymentRole?: StringNullableFilter<"Client"> | string | null
    paymentPhone?: StringNullableFilter<"Client"> | string | null
    paymentEmail?: StringNullableFilter<"Client"> | string | null
    bankName?: StringNullableFilter<"Client"> | string | null
    accountReferenceNumber?: StringNullableFilter<"Client"> | string | null
    accountOwnerName?: StringNullableFilter<"Client"> | string | null
    createdAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    createdById?: StringNullableFilter<"Client"> | string | null
    updatedById?: StringNullableFilter<"Client"> | string | null
  }

  export type ClientUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: ClientWhereUniqueInput
    update: XOR<ClientUpdateWithoutUpdatedByInput, ClientUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<ClientCreateWithoutUpdatedByInput, ClientUncheckedCreateWithoutUpdatedByInput>
  }

  export type ClientUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: ClientWhereUniqueInput
    data: XOR<ClientUpdateWithoutUpdatedByInput, ClientUncheckedUpdateWithoutUpdatedByInput>
  }

  export type ClientUpdateManyWithWhereWithoutUpdatedByInput = {
    where: ClientScalarWhereInput
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type EventUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: EventWhereUniqueInput
    update: XOR<EventUpdateWithoutCreatedByInput, EventUncheckedUpdateWithoutCreatedByInput>
    create: XOR<EventCreateWithoutCreatedByInput, EventUncheckedCreateWithoutCreatedByInput>
  }

  export type EventUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: EventWhereUniqueInput
    data: XOR<EventUpdateWithoutCreatedByInput, EventUncheckedUpdateWithoutCreatedByInput>
  }

  export type EventUpdateManyWithWhereWithoutCreatedByInput = {
    where: EventScalarWhereInput
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type EventUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: EventWhereUniqueInput
    update: XOR<EventUpdateWithoutUpdatedByInput, EventUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<EventCreateWithoutUpdatedByInput, EventUncheckedCreateWithoutUpdatedByInput>
  }

  export type EventUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: EventWhereUniqueInput
    data: XOR<EventUpdateWithoutUpdatedByInput, EventUncheckedUpdateWithoutUpdatedByInput>
  }

  export type EventUpdateManyWithWhereWithoutUpdatedByInput = {
    where: EventScalarWhereInput
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type ExpenseUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: ExpenseWhereUniqueInput
    update: XOR<ExpenseUpdateWithoutCreatedByInput, ExpenseUncheckedUpdateWithoutCreatedByInput>
    create: XOR<ExpenseCreateWithoutCreatedByInput, ExpenseUncheckedCreateWithoutCreatedByInput>
  }

  export type ExpenseUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: ExpenseWhereUniqueInput
    data: XOR<ExpenseUpdateWithoutCreatedByInput, ExpenseUncheckedUpdateWithoutCreatedByInput>
  }

  export type ExpenseUpdateManyWithWhereWithoutCreatedByInput = {
    where: ExpenseScalarWhereInput
    data: XOR<ExpenseUpdateManyMutationInput, ExpenseUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type ExpenseUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: ExpenseWhereUniqueInput
    update: XOR<ExpenseUpdateWithoutUpdatedByInput, ExpenseUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<ExpenseCreateWithoutUpdatedByInput, ExpenseUncheckedCreateWithoutUpdatedByInput>
  }

  export type ExpenseUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: ExpenseWhereUniqueInput
    data: XOR<ExpenseUpdateWithoutUpdatedByInput, ExpenseUncheckedUpdateWithoutUpdatedByInput>
  }

  export type ExpenseUpdateManyWithWhereWithoutUpdatedByInput = {
    where: ExpenseScalarWhereInput
    data: XOR<ExpenseUpdateManyMutationInput, ExpenseUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type FundUpsertWithWhereUniqueWithoutAssigneeInput = {
    where: FundWhereUniqueInput
    update: XOR<FundUpdateWithoutAssigneeInput, FundUncheckedUpdateWithoutAssigneeInput>
    create: XOR<FundCreateWithoutAssigneeInput, FundUncheckedCreateWithoutAssigneeInput>
  }

  export type FundUpdateWithWhereUniqueWithoutAssigneeInput = {
    where: FundWhereUniqueInput
    data: XOR<FundUpdateWithoutAssigneeInput, FundUncheckedUpdateWithoutAssigneeInput>
  }

  export type FundUpdateManyWithWhereWithoutAssigneeInput = {
    where: FundScalarWhereInput
    data: XOR<FundUpdateManyMutationInput, FundUncheckedUpdateManyWithoutAssigneeInput>
  }

  export type FundUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: FundWhereUniqueInput
    update: XOR<FundUpdateWithoutCreatedByInput, FundUncheckedUpdateWithoutCreatedByInput>
    create: XOR<FundCreateWithoutCreatedByInput, FundUncheckedCreateWithoutCreatedByInput>
  }

  export type FundUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: FundWhereUniqueInput
    data: XOR<FundUpdateWithoutCreatedByInput, FundUncheckedUpdateWithoutCreatedByInput>
  }

  export type FundUpdateManyWithWhereWithoutCreatedByInput = {
    where: FundScalarWhereInput
    data: XOR<FundUpdateManyMutationInput, FundUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type FundUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: FundWhereUniqueInput
    update: XOR<FundUpdateWithoutUpdatedByInput, FundUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<FundCreateWithoutUpdatedByInput, FundUncheckedCreateWithoutUpdatedByInput>
  }

  export type FundUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: FundWhereUniqueInput
    data: XOR<FundUpdateWithoutUpdatedByInput, FundUncheckedUpdateWithoutUpdatedByInput>
  }

  export type FundUpdateManyWithWhereWithoutUpdatedByInput = {
    where: FundScalarWhereInput
    data: XOR<FundUpdateManyMutationInput, FundUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type MilestoneUpsertWithWhereUniqueWithoutAssigneeInput = {
    where: MilestoneWhereUniqueInput
    update: XOR<MilestoneUpdateWithoutAssigneeInput, MilestoneUncheckedUpdateWithoutAssigneeInput>
    create: XOR<MilestoneCreateWithoutAssigneeInput, MilestoneUncheckedCreateWithoutAssigneeInput>
  }

  export type MilestoneUpdateWithWhereUniqueWithoutAssigneeInput = {
    where: MilestoneWhereUniqueInput
    data: XOR<MilestoneUpdateWithoutAssigneeInput, MilestoneUncheckedUpdateWithoutAssigneeInput>
  }

  export type MilestoneUpdateManyWithWhereWithoutAssigneeInput = {
    where: MilestoneScalarWhereInput
    data: XOR<MilestoneUpdateManyMutationInput, MilestoneUncheckedUpdateManyWithoutAssigneeInput>
  }

  export type MilestoneUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: MilestoneWhereUniqueInput
    update: XOR<MilestoneUpdateWithoutCreatedByInput, MilestoneUncheckedUpdateWithoutCreatedByInput>
    create: XOR<MilestoneCreateWithoutCreatedByInput, MilestoneUncheckedCreateWithoutCreatedByInput>
  }

  export type MilestoneUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: MilestoneWhereUniqueInput
    data: XOR<MilestoneUpdateWithoutCreatedByInput, MilestoneUncheckedUpdateWithoutCreatedByInput>
  }

  export type MilestoneUpdateManyWithWhereWithoutCreatedByInput = {
    where: MilestoneScalarWhereInput
    data: XOR<MilestoneUpdateManyMutationInput, MilestoneUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type MilestoneUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: MilestoneWhereUniqueInput
    update: XOR<MilestoneUpdateWithoutUpdatedByInput, MilestoneUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<MilestoneCreateWithoutUpdatedByInput, MilestoneUncheckedCreateWithoutUpdatedByInput>
  }

  export type MilestoneUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: MilestoneWhereUniqueInput
    data: XOR<MilestoneUpdateWithoutUpdatedByInput, MilestoneUncheckedUpdateWithoutUpdatedByInput>
  }

  export type MilestoneUpdateManyWithWhereWithoutUpdatedByInput = {
    where: MilestoneScalarWhereInput
    data: XOR<MilestoneUpdateManyMutationInput, MilestoneUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type NoteUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutCreatedByInput, NoteUncheckedUpdateWithoutCreatedByInput>
    create: XOR<NoteCreateWithoutCreatedByInput, NoteUncheckedCreateWithoutCreatedByInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutCreatedByInput, NoteUncheckedUpdateWithoutCreatedByInput>
  }

  export type NoteUpdateManyWithWhereWithoutCreatedByInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type NoteUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutUpdatedByInput, NoteUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<NoteCreateWithoutUpdatedByInput, NoteUncheckedCreateWithoutUpdatedByInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutUpdatedByInput, NoteUncheckedUpdateWithoutUpdatedByInput>
  }

  export type NoteUpdateManyWithWhereWithoutUpdatedByInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutCreatedByInput, ProductUncheckedUpdateWithoutCreatedByInput>
    create: XOR<ProductCreateWithoutCreatedByInput, ProductUncheckedCreateWithoutCreatedByInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutCreatedByInput, ProductUncheckedUpdateWithoutCreatedByInput>
  }

  export type ProductUpdateManyWithWhereWithoutCreatedByInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutUpdatedByInput, ProductUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<ProductCreateWithoutUpdatedByInput, ProductUncheckedCreateWithoutUpdatedByInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutUpdatedByInput, ProductUncheckedUpdateWithoutUpdatedByInput>
  }

  export type ProductUpdateManyWithWhereWithoutUpdatedByInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type ProjectUpsertWithWhereUniqueWithoutAssigneeInput = {
    where: ProjectWhereUniqueInput
    update: XOR<ProjectUpdateWithoutAssigneeInput, ProjectUncheckedUpdateWithoutAssigneeInput>
    create: XOR<ProjectCreateWithoutAssigneeInput, ProjectUncheckedCreateWithoutAssigneeInput>
  }

  export type ProjectUpdateWithWhereUniqueWithoutAssigneeInput = {
    where: ProjectWhereUniqueInput
    data: XOR<ProjectUpdateWithoutAssigneeInput, ProjectUncheckedUpdateWithoutAssigneeInput>
  }

  export type ProjectUpdateManyWithWhereWithoutAssigneeInput = {
    where: ProjectScalarWhereInput
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyWithoutAssigneeInput>
  }

  export type ProjectScalarWhereInput = {
    AND?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
    OR?: ProjectScalarWhereInput[]
    NOT?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
    id?: StringFilter<"Project"> | string
    regNumber?: StringNullableFilter<"Project"> | string | null
    progress?: DecimalNullableFilter<"Project"> | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    plannedEndDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    actualStartDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    actualEndDate?: DateTimeNullableFilter<"Project"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Project"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Project"> | Date | string | null
    contractId?: StringNullableFilter<"Project"> | string | null
    assigneeId?: StringNullableFilter<"Project"> | string | null
    createdById?: StringNullableFilter<"Project"> | string | null
    updatedById?: StringNullableFilter<"Project"> | string | null
  }

  export type ProjectUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: ProjectWhereUniqueInput
    update: XOR<ProjectUpdateWithoutCreatedByInput, ProjectUncheckedUpdateWithoutCreatedByInput>
    create: XOR<ProjectCreateWithoutCreatedByInput, ProjectUncheckedCreateWithoutCreatedByInput>
  }

  export type ProjectUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: ProjectWhereUniqueInput
    data: XOR<ProjectUpdateWithoutCreatedByInput, ProjectUncheckedUpdateWithoutCreatedByInput>
  }

  export type ProjectUpdateManyWithWhereWithoutCreatedByInput = {
    where: ProjectScalarWhereInput
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type ProjectUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: ProjectWhereUniqueInput
    update: XOR<ProjectUpdateWithoutUpdatedByInput, ProjectUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<ProjectCreateWithoutUpdatedByInput, ProjectUncheckedCreateWithoutUpdatedByInput>
  }

  export type ProjectUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: ProjectWhereUniqueInput
    data: XOR<ProjectUpdateWithoutUpdatedByInput, ProjectUncheckedUpdateWithoutUpdatedByInput>
  }

  export type ProjectUpdateManyWithWhereWithoutUpdatedByInput = {
    where: ProjectScalarWhereInput
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type ProjectUpsertWithWhereUniqueWithoutMembersInput = {
    where: ProjectWhereUniqueInput
    update: XOR<ProjectUpdateWithoutMembersInput, ProjectUncheckedUpdateWithoutMembersInput>
    create: XOR<ProjectCreateWithoutMembersInput, ProjectUncheckedCreateWithoutMembersInput>
  }

  export type ProjectUpdateWithWhereUniqueWithoutMembersInput = {
    where: ProjectWhereUniqueInput
    data: XOR<ProjectUpdateWithoutMembersInput, ProjectUncheckedUpdateWithoutMembersInput>
  }

  export type ProjectUpdateManyWithWhereWithoutMembersInput = {
    where: ProjectScalarWhereInput
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyWithoutMembersInput>
  }

  export type StageUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: StageWhereUniqueInput
    update: XOR<StageUpdateWithoutCreatedByInput, StageUncheckedUpdateWithoutCreatedByInput>
    create: XOR<StageCreateWithoutCreatedByInput, StageUncheckedCreateWithoutCreatedByInput>
  }

  export type StageUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: StageWhereUniqueInput
    data: XOR<StageUpdateWithoutCreatedByInput, StageUncheckedUpdateWithoutCreatedByInput>
  }

  export type StageUpdateManyWithWhereWithoutCreatedByInput = {
    where: StageScalarWhereInput
    data: XOR<StageUpdateManyMutationInput, StageUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type StageUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: StageWhereUniqueInput
    update: XOR<StageUpdateWithoutUpdatedByInput, StageUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<StageCreateWithoutUpdatedByInput, StageUncheckedCreateWithoutUpdatedByInput>
  }

  export type StageUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: StageWhereUniqueInput
    data: XOR<StageUpdateWithoutUpdatedByInput, StageUncheckedUpdateWithoutUpdatedByInput>
  }

  export type StageUpdateManyWithWhereWithoutUpdatedByInput = {
    where: StageScalarWhereInput
    data: XOR<StageUpdateManyMutationInput, StageUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutAssigneeInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutAssigneeInput, TaskUncheckedUpdateWithoutAssigneeInput>
    create: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutAssigneeInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutAssigneeInput, TaskUncheckedUpdateWithoutAssigneeInput>
  }

  export type TaskUpdateManyWithWhereWithoutAssigneeInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutAssigneeInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutCreatedByInput, TaskUncheckedUpdateWithoutCreatedByInput>
    create: XOR<TaskCreateWithoutCreatedByInput, TaskUncheckedCreateWithoutCreatedByInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutCreatedByInput, TaskUncheckedUpdateWithoutCreatedByInput>
  }

  export type TaskUpdateManyWithWhereWithoutCreatedByInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutUpdatedByInput, TaskUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<TaskCreateWithoutUpdatedByInput, TaskUncheckedCreateWithoutUpdatedByInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutUpdatedByInput, TaskUncheckedUpdateWithoutUpdatedByInput>
  }

  export type TaskUpdateManyWithWhereWithoutUpdatedByInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutMembersInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutMembersInput, TaskUncheckedUpdateWithoutMembersInput>
    create: XOR<TaskCreateWithoutMembersInput, TaskUncheckedCreateWithoutMembersInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutMembersInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutMembersInput, TaskUncheckedUpdateWithoutMembersInput>
  }

  export type TaskUpdateManyWithWhereWithoutMembersInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutMembersInput>
  }

  export type PipelineUpsertWithWhereUniqueWithoutAssigneeInput = {
    where: PipelineWhereUniqueInput
    update: XOR<PipelineUpdateWithoutAssigneeInput, PipelineUncheckedUpdateWithoutAssigneeInput>
    create: XOR<PipelineCreateWithoutAssigneeInput, PipelineUncheckedCreateWithoutAssigneeInput>
  }

  export type PipelineUpdateWithWhereUniqueWithoutAssigneeInput = {
    where: PipelineWhereUniqueInput
    data: XOR<PipelineUpdateWithoutAssigneeInput, PipelineUncheckedUpdateWithoutAssigneeInput>
  }

  export type PipelineUpdateManyWithWhereWithoutAssigneeInput = {
    where: PipelineScalarWhereInput
    data: XOR<PipelineUpdateManyMutationInput, PipelineUncheckedUpdateManyWithoutAssigneeInput>
  }

  export type PipelineUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: PipelineWhereUniqueInput
    update: XOR<PipelineUpdateWithoutCreatedByInput, PipelineUncheckedUpdateWithoutCreatedByInput>
    create: XOR<PipelineCreateWithoutCreatedByInput, PipelineUncheckedCreateWithoutCreatedByInput>
  }

  export type PipelineUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: PipelineWhereUniqueInput
    data: XOR<PipelineUpdateWithoutCreatedByInput, PipelineUncheckedUpdateWithoutCreatedByInput>
  }

  export type PipelineUpdateManyWithWhereWithoutCreatedByInput = {
    where: PipelineScalarWhereInput
    data: XOR<PipelineUpdateManyMutationInput, PipelineUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type PipelineUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: PipelineWhereUniqueInput
    update: XOR<PipelineUpdateWithoutUpdatedByInput, PipelineUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<PipelineCreateWithoutUpdatedByInput, PipelineUncheckedCreateWithoutUpdatedByInput>
  }

  export type PipelineUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: PipelineWhereUniqueInput
    data: XOR<PipelineUpdateWithoutUpdatedByInput, PipelineUncheckedUpdateWithoutUpdatedByInput>
  }

  export type PipelineUpdateManyWithWhereWithoutUpdatedByInput = {
    where: PipelineScalarWhereInput
    data: XOR<PipelineUpdateManyMutationInput, PipelineUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type PipelineUpsertWithWhereUniqueWithoutMembersInput = {
    where: PipelineWhereUniqueInput
    update: XOR<PipelineUpdateWithoutMembersInput, PipelineUncheckedUpdateWithoutMembersInput>
    create: XOR<PipelineCreateWithoutMembersInput, PipelineUncheckedCreateWithoutMembersInput>
  }

  export type PipelineUpdateWithWhereUniqueWithoutMembersInput = {
    where: PipelineWhereUniqueInput
    data: XOR<PipelineUpdateWithoutMembersInput, PipelineUncheckedUpdateWithoutMembersInput>
  }

  export type PipelineUpdateManyWithWhereWithoutMembersInput = {
    where: PipelineScalarWhereInput
    data: XOR<PipelineUpdateManyMutationInput, PipelineUncheckedUpdateManyWithoutMembersInput>
  }

  export type VendorUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: VendorWhereUniqueInput
    update: XOR<VendorUpdateWithoutCreatedByInput, VendorUncheckedUpdateWithoutCreatedByInput>
    create: XOR<VendorCreateWithoutCreatedByInput, VendorUncheckedCreateWithoutCreatedByInput>
  }

  export type VendorUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: VendorWhereUniqueInput
    data: XOR<VendorUpdateWithoutCreatedByInput, VendorUncheckedUpdateWithoutCreatedByInput>
  }

  export type VendorUpdateManyWithWhereWithoutCreatedByInput = {
    where: VendorScalarWhereInput
    data: XOR<VendorUpdateManyMutationInput, VendorUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type VendorScalarWhereInput = {
    AND?: VendorScalarWhereInput | VendorScalarWhereInput[]
    OR?: VendorScalarWhereInput[]
    NOT?: VendorScalarWhereInput | VendorScalarWhereInput[]
    id?: StringFilter<"Vendor"> | string
    regNumber?: StringNullableFilter<"Vendor"> | string | null
    name?: StringFilter<"Vendor"> | string
    address?: StringNullableFilter<"Vendor"> | string | null
    phone?: StringNullableFilter<"Vendor"> | string | null
    email?: StringNullableFilter<"Vendor"> | string | null
    city?: StringNullableFilter<"Vendor"> | string | null
    postalCode?: StringNullableFilter<"Vendor"> | string | null
    legal?: StringNullableFilter<"Vendor"> | string | null
    vendorCategory?: StringNullableFilter<"Vendor"> | string | null
    contactName?: StringNullableFilter<"Vendor"> | string | null
    contactRole?: StringNullableFilter<"Vendor"> | string | null
    contactPhone?: StringNullableFilter<"Vendor"> | string | null
    contactEmail?: StringNullableFilter<"Vendor"> | string | null
    taxNumber?: StringNullableFilter<"Vendor"> | string | null
    taxStatus?: BoolFilter<"Vendor"> | boolean
    siupNumber?: StringNullableFilter<"Vendor"> | string | null
    nibNumber?: StringNullableFilter<"Vendor"> | string | null
    pkpNumber?: StringNullableFilter<"Vendor"> | string | null
    productType?: StringNullableFilter<"Vendor"> | string | null
    description?: StringNullableFilter<"Vendor"> | string | null
    bankName?: StringNullableFilter<"Vendor"> | string | null
    accountReferenceNumber?: StringNullableFilter<"Vendor"> | string | null
    accountOwnerName?: StringNullableFilter<"Vendor"> | string | null
    createdAt?: DateTimeNullableFilter<"Vendor"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Vendor"> | Date | string | null
    createdById?: StringNullableFilter<"Vendor"> | string | null
    updatedById?: StringNullableFilter<"Vendor"> | string | null
  }

  export type VendorUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: VendorWhereUniqueInput
    update: XOR<VendorUpdateWithoutUpdatedByInput, VendorUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<VendorCreateWithoutUpdatedByInput, VendorUncheckedCreateWithoutUpdatedByInput>
  }

  export type VendorUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: VendorWhereUniqueInput
    data: XOR<VendorUpdateWithoutUpdatedByInput, VendorUncheckedUpdateWithoutUpdatedByInput>
  }

  export type VendorUpdateManyWithWhereWithoutUpdatedByInput = {
    where: VendorScalarWhereInput
    data: XOR<VendorUpdateManyMutationInput, VendorUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type ProfileUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: ProfileWhereUniqueInput
    update: XOR<ProfileUpdateWithoutCreatedByInput, ProfileUncheckedUpdateWithoutCreatedByInput>
    create: XOR<ProfileCreateWithoutCreatedByInput, ProfileUncheckedCreateWithoutCreatedByInput>
  }

  export type ProfileUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: ProfileWhereUniqueInput
    data: XOR<ProfileUpdateWithoutCreatedByInput, ProfileUncheckedUpdateWithoutCreatedByInput>
  }

  export type ProfileUpdateManyWithWhereWithoutCreatedByInput = {
    where: ProfileScalarWhereInput
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type ProfileScalarWhereInput = {
    AND?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
    OR?: ProfileScalarWhereInput[]
    NOT?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
    id?: StringFilter<"Profile"> | string
    name?: StringNullableFilter<"Profile"> | string | null
    joinDate?: DateTimeNullableFilter<"Profile"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Profile"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Profile"> | Date | string | null
    createdById?: StringNullableFilter<"Profile"> | string | null
    updatedById?: StringNullableFilter<"Profile"> | string | null
    userId?: StringFilter<"Profile"> | string
  }

  export type ProfileUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: ProfileWhereUniqueInput
    update: XOR<ProfileUpdateWithoutUpdatedByInput, ProfileUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<ProfileCreateWithoutUpdatedByInput, ProfileUncheckedCreateWithoutUpdatedByInput>
  }

  export type ProfileUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: ProfileWhereUniqueInput
    data: XOR<ProfileUpdateWithoutUpdatedByInput, ProfileUncheckedUpdateWithoutUpdatedByInput>
  }

  export type ProfileUpdateManyWithWhereWithoutUpdatedByInput = {
    where: ProfileScalarWhereInput
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type CostTypeUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: CostTypeWhereUniqueInput
    update: XOR<CostTypeUpdateWithoutCreatedByInput, CostTypeUncheckedUpdateWithoutCreatedByInput>
    create: XOR<CostTypeCreateWithoutCreatedByInput, CostTypeUncheckedCreateWithoutCreatedByInput>
  }

  export type CostTypeUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: CostTypeWhereUniqueInput
    data: XOR<CostTypeUpdateWithoutCreatedByInput, CostTypeUncheckedUpdateWithoutCreatedByInput>
  }

  export type CostTypeUpdateManyWithWhereWithoutCreatedByInput = {
    where: CostTypeScalarWhereInput
    data: XOR<CostTypeUpdateManyMutationInput, CostTypeUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type CostTypeUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: CostTypeWhereUniqueInput
    update: XOR<CostTypeUpdateWithoutUpdatedByInput, CostTypeUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<CostTypeCreateWithoutUpdatedByInput, CostTypeUncheckedCreateWithoutUpdatedByInput>
  }

  export type CostTypeUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: CostTypeWhereUniqueInput
    data: XOR<CostTypeUpdateWithoutUpdatedByInput, CostTypeUncheckedUpdateWithoutUpdatedByInput>
  }

  export type CostTypeUpdateManyWithWhereWithoutUpdatedByInput = {
    where: CostTypeScalarWhereInput
    data: XOR<CostTypeUpdateManyMutationInput, CostTypeUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type UserCreateWithoutRoleInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutRoleInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutRoleInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput>
  }

  export type UserCreateManyRoleInputEnvelope = {
    data: UserCreateManyRoleInput | UserCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutRoleInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutRoleInput, UserUncheckedUpdateWithoutRoleInput>
    create: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput>
  }

  export type UserUpdateWithWhereUniqueWithoutRoleInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutRoleInput, UserUncheckedUpdateWithoutRoleInput>
  }

  export type UserUpdateManyWithWhereWithoutRoleInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutRoleInput>
  }

  export type UserCreateWithoutOrganizationInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutOrganizationInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutOrganizationInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrganizationInput, UserUncheckedCreateWithoutOrganizationInput>
  }

  export type UserCreateManyOrganizationInputEnvelope = {
    data: UserCreateManyOrganizationInput | UserCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutOrganizationInput, UserUncheckedUpdateWithoutOrganizationInput>
    create: XOR<UserCreateWithoutOrganizationInput, UserUncheckedCreateWithoutOrganizationInput>
  }

  export type UserUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutOrganizationInput, UserUncheckedUpdateWithoutOrganizationInput>
  }

  export type UserUpdateManyWithWhereWithoutOrganizationInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type UserCreateWithoutCreatorProfileInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutCreatorProfileInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutCreatorProfileInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatorProfileInput, UserUncheckedCreateWithoutCreatorProfileInput>
  }

  export type UserCreateWithoutUpdaterProfileInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutUpdaterProfileInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutUpdaterProfileInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdaterProfileInput, UserUncheckedCreateWithoutUpdaterProfileInput>
  }

  export type UserCreateWithoutProfileInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    role?: RoleCreateNestedOneWithoutUsersInput
    organization?: OrganizationCreateNestedOneWithoutUsersInput
    BudgetAssignee?: BudgetCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectCreateNestedManyWithoutMembersInput
    CreatorStage?: StageCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeCreateNestedManyWithoutUpdatedByInput
  }

  export type UserUncheckedCreateWithoutProfileInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
    organizationId?: string | null
    BudgetAssignee?: BudgetUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorBudget?: BudgetUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterBudget?: BudgetUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorClient?: ClientUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterClient?: ClientUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorEvent?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterEvent?: EventUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorExpense?: ExpenseUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterExpense?: ExpenseUncheckedCreateNestedManyWithoutUpdatedByInput
    FundAssignee?: FundUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorFund?: FundUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterFund?: FundUncheckedCreateNestedManyWithoutUpdatedByInput
    MilestoneAssignee?: MilestoneUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorMilestone?: MilestoneUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterMilestone?: MilestoneUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorNote?: NoteUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterNote?: NoteUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProduct?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProduct?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectAssignee?: ProjectUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorProject?: ProjectUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProject?: ProjectUncheckedCreateNestedManyWithoutUpdatedByInput
    ProjectMember?: ProjectUncheckedCreateNestedManyWithoutMembersInput
    CreatorStage?: StageUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterStage?: StageUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorTask?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterTask?: TaskUncheckedCreateNestedManyWithoutUpdatedByInput
    TaskMember?: TaskUncheckedCreateNestedManyWithoutMembersInput
    PipelineAssignee?: PipelineUncheckedCreateNestedManyWithoutAssigneeInput
    CreatorPipeline?: PipelineUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterPipeline?: PipelineUncheckedCreateNestedManyWithoutUpdatedByInput
    PipelineMember?: PipelineUncheckedCreateNestedManyWithoutMembersInput
    CreatorVendor?: VendorUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterVendor?: VendorUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorProfile?: ProfileUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterProfile?: ProfileUncheckedCreateNestedManyWithoutUpdatedByInput
    CreatorCostType?: CostTypeUncheckedCreateNestedManyWithoutCreatedByInput
    UpdaterCostType?: CostTypeUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutProfileInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
  }

  export type UserUpsertWithoutCreatorProfileInput = {
    update: XOR<UserUpdateWithoutCreatorProfileInput, UserUncheckedUpdateWithoutCreatorProfileInput>
    create: XOR<UserCreateWithoutCreatorProfileInput, UserUncheckedCreateWithoutCreatorProfileInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatorProfileInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatorProfileInput, UserUncheckedUpdateWithoutCreatorProfileInput>
  }

  export type UserUpdateWithoutCreatorProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatorProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutUpdaterProfileInput = {
    update: XOR<UserUpdateWithoutUpdaterProfileInput, UserUncheckedUpdateWithoutUpdaterProfileInput>
    create: XOR<UserCreateWithoutUpdaterProfileInput, UserUncheckedCreateWithoutUpdaterProfileInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdaterProfileInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdaterProfileInput, UserUncheckedUpdateWithoutUpdaterProfileInput>
  }

  export type UserUpdateWithoutUpdaterProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdaterProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithoutProfileInput = {
    update: XOR<UserUpdateWithoutProfileInput, UserUncheckedUpdateWithoutProfileInput>
    create: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProfileInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProfileInput, UserUncheckedUpdateWithoutProfileInput>
  }

  export type UserUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type BudgetItemCreateManyBudgetInput = {
    id?: string
    categoryId?: string | null
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type NoteCreateManyBudgetInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type StageCreateManyBudgetInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    fundId?: string | null
  }

  export type BudgetItemUpdateWithoutBudgetInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: CostTypeUpdateOneWithoutBudgetItemsNestedInput
  }

  export type BudgetItemUncheckedUpdateWithoutBudgetInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BudgetItemUncheckedUpdateManyWithoutBudgetInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NoteUpdateWithoutBudgetInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorNoteNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterNoteNestedInput
    pipeline?: PipelineUpdateOneWithoutNotesNestedInput
    project?: ProjectUpdateOneWithoutNotesNestedInput
    milestone?: MilestoneUpdateOneWithoutNotesNestedInput
    task?: TaskUpdateOneWithoutNotesNestedInput
    fund?: FundUpdateOneWithoutNotesNestedInput
    expense?: ExpenseUpdateOneWithoutNotesNestedInput
    client?: ClientUpdateOneWithoutNotesNestedInput
    vendor?: VendorUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutBudgetInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUncheckedUpdateManyWithoutBudgetInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUpdateWithoutBudgetInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StageTypeUpdateOneRequiredWithoutStagesNestedInput
    createdBy?: UserUpdateOneWithoutCreatorStageNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterStageNestedInput
    pipeline?: PipelineUpdateOneWithoutStagesNestedInput
    project?: ProjectUpdateOneWithoutStagesNestedInput
    milestone?: MilestoneUpdateOneWithoutStagesNestedInput
    task?: TaskUpdateOneWithoutStagesNestedInput
    fund?: FundUpdateOneWithoutStagesNestedInput
  }

  export type StageUncheckedUpdateWithoutBudgetInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUncheckedUpdateManyWithoutBudgetInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FundItemCreateManyFundInput = {
    id?: string
    categoryId?: string | null
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type ExpenseCreateManyFundInput = {
    id?: string
    regNumber?: string | null
    categoryId: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    taskId?: string | null
    projectId?: string | null
  }

  export type NoteCreateManyFundInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type StageCreateManyFundInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
  }

  export type FundItemUpdateWithoutFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: CostTypeUpdateOneWithoutFundItemsNestedInput
  }

  export type FundItemUncheckedUpdateWithoutFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FundItemUncheckedUpdateManyWithoutFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ExpenseUpdateWithoutFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: CostTypeUpdateOneRequiredWithoutExpensesNestedInput
    createdBy?: UserUpdateOneWithoutCreatorExpenseNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterExpenseNestedInput
    task?: TaskUpdateOneWithoutExpensesNestedInput
    project?: ProjectUpdateOneWithoutExpensesNestedInput
    notes?: NoteUpdateManyWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateWithoutFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateManyWithoutFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUpdateWithoutFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorNoteNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterNoteNestedInput
    pipeline?: PipelineUpdateOneWithoutNotesNestedInput
    project?: ProjectUpdateOneWithoutNotesNestedInput
    milestone?: MilestoneUpdateOneWithoutNotesNestedInput
    task?: TaskUpdateOneWithoutNotesNestedInput
    budget?: BudgetUpdateOneWithoutNotesNestedInput
    expense?: ExpenseUpdateOneWithoutNotesNestedInput
    client?: ClientUpdateOneWithoutNotesNestedInput
    vendor?: VendorUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUncheckedUpdateManyWithoutFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUpdateWithoutFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StageTypeUpdateOneRequiredWithoutStagesNestedInput
    createdBy?: UserUpdateOneWithoutCreatorStageNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterStageNestedInput
    pipeline?: PipelineUpdateOneWithoutStagesNestedInput
    project?: ProjectUpdateOneWithoutStagesNestedInput
    milestone?: MilestoneUpdateOneWithoutStagesNestedInput
    task?: TaskUpdateOneWithoutStagesNestedInput
    budget?: BudgetUpdateOneWithoutStagesNestedInput
  }

  export type StageUncheckedUpdateWithoutFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUncheckedUpdateManyWithoutFundInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteCreateManyExpenseInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type NoteUpdateWithoutExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorNoteNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterNoteNestedInput
    pipeline?: PipelineUpdateOneWithoutNotesNestedInput
    project?: ProjectUpdateOneWithoutNotesNestedInput
    milestone?: MilestoneUpdateOneWithoutNotesNestedInput
    task?: TaskUpdateOneWithoutNotesNestedInput
    budget?: BudgetUpdateOneWithoutNotesNestedInput
    fund?: FundUpdateOneWithoutNotesNestedInput
    client?: ClientUpdateOneWithoutNotesNestedInput
    vendor?: VendorUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUncheckedUpdateManyWithoutExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CostTypeCreateManyParentInput = {
    id?: string
    order?: number | null
    name: string
    createdById?: string | null
    updatedById?: string | null
  }

  export type BudgetItemCreateManyCategoryInput = {
    id?: string
    budgetId: string
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type FundItemCreateManyCategoryInput = {
    id?: string
    fundId: string
    description: string
    quantity: Decimal | DecimalJsLike | number | string
    timeUnit?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    amount: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type ExpenseCreateManyCategoryInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    fundId?: string | null
    taskId?: string | null
    projectId?: string | null
  }

  export type CostTypeUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    children?: CostTypeUpdateManyWithoutParentNestedInput
    createdBy?: UserUpdateOneWithoutCreatorCostTypeNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterCostTypeNestedInput
    budgetItems?: BudgetItemUpdateManyWithoutCategoryNestedInput
    fundItems?: FundItemUpdateManyWithoutCategoryNestedInput
    expenses?: ExpenseUpdateManyWithoutCategoryNestedInput
  }

  export type CostTypeUncheckedUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CostTypeUncheckedUpdateManyWithoutParentNestedInput
    budgetItems?: BudgetItemUncheckedUpdateManyWithoutCategoryNestedInput
    fundItems?: FundItemUncheckedUpdateManyWithoutCategoryNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CostTypeUncheckedUpdateManyWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BudgetItemUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    budget?: BudgetUpdateOneRequiredWithoutItemsNestedInput
  }

  export type BudgetItemUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    budgetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BudgetItemUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    budgetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FundItemUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fund?: FundUpdateOneRequiredWithoutItemsNestedInput
  }

  export type FundItemUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    fundId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FundItemUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    fundId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timeUnit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ExpenseUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorExpenseNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterExpenseNestedInput
    fund?: FundUpdateOneWithoutExpensesNestedInput
    task?: TaskUpdateOneWithoutExpensesNestedInput
    project?: ProjectUpdateOneWithoutExpensesNestedInput
    notes?: NoteUpdateManyWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageCreateManyPipelineInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type NoteCreateManyPipelineInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type EventCreateManyPipelineInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
  }

  export type UserUpdateWithoutPipelineMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutPipelineMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutPipelineMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUpdateWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StageTypeUpdateOneRequiredWithoutStagesNestedInput
    createdBy?: UserUpdateOneWithoutCreatorStageNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterStageNestedInput
    project?: ProjectUpdateOneWithoutStagesNestedInput
    milestone?: MilestoneUpdateOneWithoutStagesNestedInput
    task?: TaskUpdateOneWithoutStagesNestedInput
    budget?: BudgetUpdateOneWithoutStagesNestedInput
    fund?: FundUpdateOneWithoutStagesNestedInput
  }

  export type StageUncheckedUpdateWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUncheckedUpdateManyWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUpdateWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorNoteNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterNoteNestedInput
    project?: ProjectUpdateOneWithoutNotesNestedInput
    milestone?: MilestoneUpdateOneWithoutNotesNestedInput
    task?: TaskUpdateOneWithoutNotesNestedInput
    budget?: BudgetUpdateOneWithoutNotesNestedInput
    fund?: FundUpdateOneWithoutNotesNestedInput
    expense?: ExpenseUpdateOneWithoutNotesNestedInput
    client?: ClientUpdateOneWithoutNotesNestedInput
    vendor?: VendorUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUncheckedUpdateManyWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventUpdateWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorEventNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterEventNestedInput
    project?: ProjectUpdateOneWithoutEventsNestedInput
    milestone?: MilestoneUpdateOneWithoutEventsNestedInput
    task?: TaskUpdateOneWithoutEventsNestedInput
  }

  export type EventUncheckedUpdateWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventUncheckedUpdateManyWithoutPipelineInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OpportunityCreateManyLeadInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    approvedDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
  }

  export type PipelineCreateManyLeadInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type ProductUpdateWithoutLeadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorProductNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProductNestedInput
    opportunities?: OpportunityUpdateManyWithoutProductsNestedInput
    quotes?: QuoteUpdateManyWithoutProductsNestedInput
    contracts?: ContractUpdateManyWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutLeadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    opportunities?: OpportunityUncheckedUpdateManyWithoutProductsNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutProductsNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutLeadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OpportunityUpdateWithoutLeadInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutOpportunitiesNestedInput
    client?: ClientUpdateOneWithoutOpportunitiesNestedInput
    quotes?: QuoteUpdateManyWithoutOpportunityNestedInput
    pipeline?: PipelineUpdateManyWithoutOpportunityNestedInput
  }

  export type OpportunityUncheckedUpdateWithoutLeadInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutOpportunitiesNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutOpportunityNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutOpportunityNestedInput
  }

  export type OpportunityUncheckedUpdateManyWithoutLeadInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PipelineUpdateWithoutLeadInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    opportunity?: OpportunityUpdateOneWithoutPipelineNestedInput
    quote?: QuoteUpdateOneWithoutPipelineNestedInput
    contract?: ContractUpdateOneWithoutPipelineNestedInput
    assignee?: UserUpdateOneWithoutPipelineAssigneeNestedInput
    members?: UserUpdateManyWithoutPipelineMemberNestedInput
    createdBy?: UserUpdateOneWithoutCreatorPipelineNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterPipelineNestedInput
    stages?: StageUpdateManyWithoutPipelineNestedInput
    notes?: NoteUpdateManyWithoutPipelineNestedInput
    events?: EventUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateWithoutLeadInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutPipelineMemberNestedInput
    stages?: StageUncheckedUpdateManyWithoutPipelineNestedInput
    notes?: NoteUncheckedUpdateManyWithoutPipelineNestedInput
    events?: EventUncheckedUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateManyWithoutLeadInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type QuoteCreateManyOpportunityInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    releasedDate?: Date | string | null
    approvedDate?: Date | string | null
    expiredDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
  }

  export type PipelineCreateManyOpportunityInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type ProductUpdateWithoutOpportunitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorProductNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProductNestedInput
    leads?: LeadUpdateManyWithoutProductsNestedInput
    quotes?: QuoteUpdateManyWithoutProductsNestedInput
    contracts?: ContractUpdateManyWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutOpportunitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    leads?: LeadUncheckedUpdateManyWithoutProductsNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutProductsNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutOpportunitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type QuoteUpdateWithoutOpportunityInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutQuotesNestedInput
    client?: ClientUpdateOneWithoutQuotesNestedInput
    contracts?: ContractUpdateManyWithoutQuoteNestedInput
    pipeline?: PipelineUpdateManyWithoutQuoteNestedInput
  }

  export type QuoteUncheckedUpdateWithoutOpportunityInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutQuotesNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutQuoteNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutQuoteNestedInput
  }

  export type QuoteUncheckedUpdateManyWithoutOpportunityInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PipelineUpdateWithoutOpportunityInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lead?: LeadUpdateOneWithoutPipelineNestedInput
    quote?: QuoteUpdateOneWithoutPipelineNestedInput
    contract?: ContractUpdateOneWithoutPipelineNestedInput
    assignee?: UserUpdateOneWithoutPipelineAssigneeNestedInput
    members?: UserUpdateManyWithoutPipelineMemberNestedInput
    createdBy?: UserUpdateOneWithoutCreatorPipelineNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterPipelineNestedInput
    stages?: StageUpdateManyWithoutPipelineNestedInput
    notes?: NoteUpdateManyWithoutPipelineNestedInput
    events?: EventUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateWithoutOpportunityInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutPipelineMemberNestedInput
    stages?: StageUncheckedUpdateManyWithoutPipelineNestedInput
    notes?: NoteUncheckedUpdateManyWithoutPipelineNestedInput
    events?: EventUncheckedUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateManyWithoutOpportunityInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContractCreateManyQuoteInput = {
    id?: string
    regNumber?: string | null
    title: string
    signedDate?: Date | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    penalty?: boolean | null
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    clientPicName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    clientId?: string | null
  }

  export type PipelineCreateManyQuoteInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type ProductUpdateWithoutQuotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorProductNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProductNestedInput
    leads?: LeadUpdateManyWithoutProductsNestedInput
    opportunities?: OpportunityUpdateManyWithoutProductsNestedInput
    contracts?: ContractUpdateManyWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutQuotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    leads?: LeadUncheckedUpdateManyWithoutProductsNestedInput
    opportunities?: OpportunityUncheckedUpdateManyWithoutProductsNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutQuotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContractUpdateWithoutQuoteInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutContractsNestedInput
    client?: ClientUpdateOneWithoutContractsNestedInput
    project?: ProjectUpdateOneWithoutContractNestedInput
    pipeline?: PipelineUpdateManyWithoutContractNestedInput
  }

  export type ContractUncheckedUpdateWithoutQuoteInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutContractsNestedInput
    project?: ProjectUncheckedUpdateOneWithoutContractNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutContractNestedInput
  }

  export type ContractUncheckedUpdateManyWithoutQuoteInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PipelineUpdateWithoutQuoteInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lead?: LeadUpdateOneWithoutPipelineNestedInput
    opportunity?: OpportunityUpdateOneWithoutPipelineNestedInput
    contract?: ContractUpdateOneWithoutPipelineNestedInput
    assignee?: UserUpdateOneWithoutPipelineAssigneeNestedInput
    members?: UserUpdateManyWithoutPipelineMemberNestedInput
    createdBy?: UserUpdateOneWithoutCreatorPipelineNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterPipelineNestedInput
    stages?: StageUpdateManyWithoutPipelineNestedInput
    notes?: NoteUpdateManyWithoutPipelineNestedInput
    events?: EventUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateWithoutQuoteInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutPipelineMemberNestedInput
    stages?: StageUncheckedUpdateManyWithoutPipelineNestedInput
    notes?: NoteUncheckedUpdateManyWithoutPipelineNestedInput
    events?: EventUncheckedUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateManyWithoutQuoteInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PipelineCreateManyContractInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type ProductUpdateWithoutContractsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorProductNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProductNestedInput
    leads?: LeadUpdateManyWithoutProductsNestedInput
    opportunities?: OpportunityUpdateManyWithoutProductsNestedInput
    quotes?: QuoteUpdateManyWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutContractsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    leads?: LeadUncheckedUpdateManyWithoutProductsNestedInput
    opportunities?: OpportunityUncheckedUpdateManyWithoutProductsNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutContractsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PipelineUpdateWithoutContractInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lead?: LeadUpdateOneWithoutPipelineNestedInput
    opportunity?: OpportunityUpdateOneWithoutPipelineNestedInput
    quote?: QuoteUpdateOneWithoutPipelineNestedInput
    assignee?: UserUpdateOneWithoutPipelineAssigneeNestedInput
    members?: UserUpdateManyWithoutPipelineMemberNestedInput
    createdBy?: UserUpdateOneWithoutCreatorPipelineNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterPipelineNestedInput
    stages?: StageUpdateManyWithoutPipelineNestedInput
    notes?: NoteUpdateManyWithoutPipelineNestedInput
    events?: EventUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateWithoutContractInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutPipelineMemberNestedInput
    stages?: StageUncheckedUpdateManyWithoutPipelineNestedInput
    notes?: NoteUncheckedUpdateManyWithoutPipelineNestedInput
    events?: EventUncheckedUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateManyWithoutContractInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageCreateManyTypeInput = {
    id?: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type StageUpdateWithoutTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorStageNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterStageNestedInput
    pipeline?: PipelineUpdateOneWithoutStagesNestedInput
    project?: ProjectUpdateOneWithoutStagesNestedInput
    milestone?: MilestoneUpdateOneWithoutStagesNestedInput
    task?: TaskUpdateOneWithoutStagesNestedInput
    budget?: BudgetUpdateOneWithoutStagesNestedInput
    fund?: FundUpdateOneWithoutStagesNestedInput
  }

  export type StageUncheckedUpdateWithoutTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUncheckedUpdateManyWithoutTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteCreateManyClientInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    vendorId?: string | null
  }

  export type LeadCreateManyClientInput = {
    id?: string
    regNumber?: string | null
    name?: string | null
    role?: string | null
    email?: string | null
    phone?: string | null
    leadSource?: string | null
    leadDate?: Date | string | null
    leadAddress?: string | null
    description?: string | null
    prospectLocation?: string | null
    approvedDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type OpportunityCreateManyClientInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    approvedDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    leadId?: string | null
  }

  export type QuoteCreateManyClientInput = {
    id?: string
    regNumber?: string | null
    title: string
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    releasedDate?: Date | string | null
    approvedDate?: Date | string | null
    expiredDate?: Date | string | null
    expectedCloseDate?: Date | string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    opportunityId?: string | null
  }

  export type ContractCreateManyClientInput = {
    id?: string
    regNumber?: string | null
    title: string
    signedDate?: Date | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    penalty?: boolean | null
    currency?: string | null
    baseAmount?: Decimal | DecimalJsLike | number | string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    clientPicName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    quoteId?: string | null
  }

  export type NoteUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorNoteNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterNoteNestedInput
    pipeline?: PipelineUpdateOneWithoutNotesNestedInput
    project?: ProjectUpdateOneWithoutNotesNestedInput
    milestone?: MilestoneUpdateOneWithoutNotesNestedInput
    task?: TaskUpdateOneWithoutNotesNestedInput
    budget?: BudgetUpdateOneWithoutNotesNestedInput
    fund?: FundUpdateOneWithoutNotesNestedInput
    expense?: ExpenseUpdateOneWithoutNotesNestedInput
    vendor?: VendorUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LeadUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    leadSource?: NullableStringFieldUpdateOperationsInput | string | null
    leadDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadAddress?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    prospectLocation?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutLeadsNestedInput
    opportunities?: OpportunityUpdateManyWithoutLeadNestedInput
    pipeline?: PipelineUpdateManyWithoutLeadNestedInput
  }

  export type LeadUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    leadSource?: NullableStringFieldUpdateOperationsInput | string | null
    leadDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadAddress?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    prospectLocation?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUncheckedUpdateManyWithoutLeadsNestedInput
    opportunities?: OpportunityUncheckedUpdateManyWithoutLeadNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutLeadNestedInput
  }

  export type LeadUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    leadSource?: NullableStringFieldUpdateOperationsInput | string | null
    leadDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadAddress?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    prospectLocation?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OpportunityUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutOpportunitiesNestedInput
    lead?: LeadUpdateOneWithoutOpportunitiesNestedInput
    quotes?: QuoteUpdateManyWithoutOpportunityNestedInput
    pipeline?: PipelineUpdateManyWithoutOpportunityNestedInput
  }

  export type OpportunityUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutOpportunitiesNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutOpportunityNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutOpportunityNestedInput
  }

  export type OpportunityUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type QuoteUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutQuotesNestedInput
    opportunity?: OpportunityUpdateOneWithoutQuotesNestedInput
    contracts?: ContractUpdateManyWithoutQuoteNestedInput
    pipeline?: PipelineUpdateManyWithoutQuoteNestedInput
  }

  export type QuoteUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutQuotesNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutQuoteNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutQuoteNestedInput
  }

  export type QuoteUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContractUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: ProductUpdateManyWithoutContractsNestedInput
    quote?: QuoteUpdateOneWithoutContractsNestedInput
    project?: ProjectUpdateOneWithoutContractNestedInput
    pipeline?: PipelineUpdateManyWithoutContractNestedInput
  }

  export type ContractUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutContractsNestedInput
    project?: ProjectUncheckedUpdateOneWithoutContractNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutContractNestedInput
  }

  export type ContractUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteCreateManyVendorInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
  }

  export type NoteUpdateWithoutVendorInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorNoteNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterNoteNestedInput
    pipeline?: PipelineUpdateOneWithoutNotesNestedInput
    project?: ProjectUpdateOneWithoutNotesNestedInput
    milestone?: MilestoneUpdateOneWithoutNotesNestedInput
    task?: TaskUpdateOneWithoutNotesNestedInput
    budget?: BudgetUpdateOneWithoutNotesNestedInput
    fund?: FundUpdateOneWithoutNotesNestedInput
    expense?: ExpenseUpdateOneWithoutNotesNestedInput
    client?: ClientUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutVendorInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUncheckedUpdateManyWithoutVendorInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LeadUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    leadSource?: NullableStringFieldUpdateOperationsInput | string | null
    leadDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadAddress?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    prospectLocation?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneWithoutLeadsNestedInput
    opportunities?: OpportunityUpdateManyWithoutLeadNestedInput
    pipeline?: PipelineUpdateManyWithoutLeadNestedInput
  }

  export type LeadUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    leadSource?: NullableStringFieldUpdateOperationsInput | string | null
    leadDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadAddress?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    prospectLocation?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunities?: OpportunityUncheckedUpdateManyWithoutLeadNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutLeadNestedInput
  }

  export type LeadUncheckedUpdateManyWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    leadSource?: NullableStringFieldUpdateOperationsInput | string | null
    leadDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadAddress?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    prospectLocation?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OpportunityUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneWithoutOpportunitiesNestedInput
    lead?: LeadUpdateOneWithoutOpportunitiesNestedInput
    quotes?: QuoteUpdateManyWithoutOpportunityNestedInput
    pipeline?: PipelineUpdateManyWithoutOpportunityNestedInput
  }

  export type OpportunityUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    quotes?: QuoteUncheckedUpdateManyWithoutOpportunityNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutOpportunityNestedInput
  }

  export type OpportunityUncheckedUpdateManyWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type QuoteUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneWithoutQuotesNestedInput
    opportunity?: OpportunityUpdateOneWithoutQuotesNestedInput
    contracts?: ContractUpdateManyWithoutQuoteNestedInput
    pipeline?: PipelineUpdateManyWithoutQuoteNestedInput
  }

  export type QuoteUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    contracts?: ContractUncheckedUpdateManyWithoutQuoteNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutQuoteNestedInput
  }

  export type QuoteUncheckedUpdateManyWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    releasedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContractUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneWithoutContractsNestedInput
    quote?: QuoteUpdateOneWithoutContractsNestedInput
    project?: ProjectUpdateOneWithoutContractNestedInput
    pipeline?: PipelineUpdateManyWithoutContractNestedInput
  }

  export type ContractUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    project?: ProjectUncheckedUpdateOneWithoutContractNestedInput
    pipeline?: PipelineUncheckedUpdateManyWithoutContractNestedInput
  }

  export type ContractUncheckedUpdateManyWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    signedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    penalty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    baseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    clientPicName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MilestoneCreateManyProjectInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type NoteCreateManyProjectInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type StageCreateManyProjectInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type EventCreateManyProjectInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    milestoneId?: string | null
    taskId?: string | null
  }

  export type BudgetCreateManyProjectInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type ExpenseCreateManyProjectInput = {
    id?: string
    regNumber?: string | null
    categoryId: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    fundId?: string | null
    taskId?: string | null
  }

  export type UserUpdateWithoutProjectMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutProjectMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutProjectMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MilestoneUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutMilestoneAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorMilestoneNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterMilestoneNestedInput
    tasks?: TaskUpdateManyWithoutMilestoneNestedInput
    notes?: NoteUpdateManyWithoutMilestoneNestedInput
    stages?: StageUpdateManyWithoutMilestoneNestedInput
    events?: EventUpdateManyWithoutMilestoneNestedInput
  }

  export type MilestoneUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    tasks?: TaskUncheckedUpdateManyWithoutMilestoneNestedInput
    notes?: NoteUncheckedUpdateManyWithoutMilestoneNestedInput
    stages?: StageUncheckedUpdateManyWithoutMilestoneNestedInput
    events?: EventUncheckedUpdateManyWithoutMilestoneNestedInput
  }

  export type MilestoneUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorNoteNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterNoteNestedInput
    pipeline?: PipelineUpdateOneWithoutNotesNestedInput
    milestone?: MilestoneUpdateOneWithoutNotesNestedInput
    task?: TaskUpdateOneWithoutNotesNestedInput
    budget?: BudgetUpdateOneWithoutNotesNestedInput
    fund?: FundUpdateOneWithoutNotesNestedInput
    expense?: ExpenseUpdateOneWithoutNotesNestedInput
    client?: ClientUpdateOneWithoutNotesNestedInput
    vendor?: VendorUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StageTypeUpdateOneRequiredWithoutStagesNestedInput
    createdBy?: UserUpdateOneWithoutCreatorStageNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterStageNestedInput
    pipeline?: PipelineUpdateOneWithoutStagesNestedInput
    milestone?: MilestoneUpdateOneWithoutStagesNestedInput
    task?: TaskUpdateOneWithoutStagesNestedInput
    budget?: BudgetUpdateOneWithoutStagesNestedInput
    fund?: FundUpdateOneWithoutStagesNestedInput
  }

  export type StageUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorEventNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterEventNestedInput
    pipeline?: PipelineUpdateOneWithoutEventsNestedInput
    milestone?: MilestoneUpdateOneWithoutEventsNestedInput
    task?: TaskUpdateOneWithoutEventsNestedInput
  }

  export type EventUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BudgetUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutBudgetAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorBudgetNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterBudgetNestedInput
    items?: BudgetItemUpdateManyWithoutBudgetNestedInput
    notes?: NoteUpdateManyWithoutBudgetNestedInput
    stages?: StageUpdateManyWithoutBudgetNestedInput
  }

  export type BudgetUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    items?: BudgetItemUncheckedUpdateManyWithoutBudgetNestedInput
    notes?: NoteUncheckedUpdateManyWithoutBudgetNestedInput
    stages?: StageUncheckedUpdateManyWithoutBudgetNestedInput
  }

  export type BudgetUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ExpenseUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: CostTypeUpdateOneRequiredWithoutExpensesNestedInput
    createdBy?: UserUpdateOneWithoutCreatorExpenseNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterExpenseNestedInput
    fund?: FundUpdateOneWithoutExpensesNestedInput
    task?: TaskUpdateOneWithoutExpensesNestedInput
    notes?: NoteUpdateManyWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskCreateManyMilestoneInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type NoteCreateManyMilestoneInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type StageCreateManyMilestoneInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type EventCreateManyMilestoneInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    taskId?: string | null
  }

  export type TaskUpdateWithoutMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorTaskNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterTaskNestedInput
    members?: UserUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUpdateManyWithoutTaskNestedInput
    stages?: StageUpdateManyWithoutTaskNestedInput
    events?: EventUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUpdateManyWithoutTaskNestedInput
    funds?: FundUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUncheckedUpdateManyWithoutTaskNestedInput
    stages?: StageUncheckedUpdateManyWithoutTaskNestedInput
    events?: EventUncheckedUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutTaskNestedInput
    funds?: FundUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateManyWithoutMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUpdateWithoutMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorNoteNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterNoteNestedInput
    pipeline?: PipelineUpdateOneWithoutNotesNestedInput
    project?: ProjectUpdateOneWithoutNotesNestedInput
    task?: TaskUpdateOneWithoutNotesNestedInput
    budget?: BudgetUpdateOneWithoutNotesNestedInput
    fund?: FundUpdateOneWithoutNotesNestedInput
    expense?: ExpenseUpdateOneWithoutNotesNestedInput
    client?: ClientUpdateOneWithoutNotesNestedInput
    vendor?: VendorUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUncheckedUpdateManyWithoutMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUpdateWithoutMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StageTypeUpdateOneRequiredWithoutStagesNestedInput
    createdBy?: UserUpdateOneWithoutCreatorStageNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterStageNestedInput
    pipeline?: PipelineUpdateOneWithoutStagesNestedInput
    project?: ProjectUpdateOneWithoutStagesNestedInput
    task?: TaskUpdateOneWithoutStagesNestedInput
    budget?: BudgetUpdateOneWithoutStagesNestedInput
    fund?: FundUpdateOneWithoutStagesNestedInput
  }

  export type StageUncheckedUpdateWithoutMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUncheckedUpdateManyWithoutMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventUpdateWithoutMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorEventNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterEventNestedInput
    pipeline?: PipelineUpdateOneWithoutEventsNestedInput
    project?: ProjectUpdateOneWithoutEventsNestedInput
    task?: TaskUpdateOneWithoutEventsNestedInput
  }

  export type EventUncheckedUpdateWithoutMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventUncheckedUpdateManyWithoutMilestoneInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteCreateManyTaskInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type StageCreateManyTaskInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type EventCreateManyTaskInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
  }

  export type ExpenseCreateManyTaskInput = {
    id?: string
    regNumber?: string | null
    categoryId: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    fundId?: string | null
    projectId?: string | null
  }

  export type FundCreateManyTaskInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type UserUpdateWithoutTaskMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutTaskMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutTaskMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorNoteNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterNoteNestedInput
    pipeline?: PipelineUpdateOneWithoutNotesNestedInput
    project?: ProjectUpdateOneWithoutNotesNestedInput
    milestone?: MilestoneUpdateOneWithoutNotesNestedInput
    budget?: BudgetUpdateOneWithoutNotesNestedInput
    fund?: FundUpdateOneWithoutNotesNestedInput
    expense?: ExpenseUpdateOneWithoutNotesNestedInput
    client?: ClientUpdateOneWithoutNotesNestedInput
    vendor?: VendorUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUncheckedUpdateManyWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StageTypeUpdateOneRequiredWithoutStagesNestedInput
    createdBy?: UserUpdateOneWithoutCreatorStageNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterStageNestedInput
    pipeline?: PipelineUpdateOneWithoutStagesNestedInput
    project?: ProjectUpdateOneWithoutStagesNestedInput
    milestone?: MilestoneUpdateOneWithoutStagesNestedInput
    budget?: BudgetUpdateOneWithoutStagesNestedInput
    fund?: FundUpdateOneWithoutStagesNestedInput
  }

  export type StageUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUncheckedUpdateManyWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorEventNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterEventNestedInput
    pipeline?: PipelineUpdateOneWithoutEventsNestedInput
    project?: ProjectUpdateOneWithoutEventsNestedInput
    milestone?: MilestoneUpdateOneWithoutEventsNestedInput
  }

  export type EventUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventUncheckedUpdateManyWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ExpenseUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: CostTypeUpdateOneRequiredWithoutExpensesNestedInput
    createdBy?: UserUpdateOneWithoutCreatorExpenseNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterExpenseNestedInput
    fund?: FundUpdateOneWithoutExpensesNestedInput
    project?: ProjectUpdateOneWithoutExpensesNestedInput
    notes?: NoteUpdateManyWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateManyWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FundUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutFundAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorFundNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterFundNestedInput
    items?: FundItemUpdateManyWithoutFundNestedInput
    expenses?: ExpenseUpdateManyWithoutFundNestedInput
    notes?: NoteUpdateManyWithoutFundNestedInput
    stages?: StageUpdateManyWithoutFundNestedInput
  }

  export type FundUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    items?: FundItemUncheckedUpdateManyWithoutFundNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutFundNestedInput
    notes?: NoteUncheckedUpdateManyWithoutFundNestedInput
    stages?: StageUncheckedUpdateManyWithoutFundNestedInput
  }

  export type FundUncheckedUpdateManyWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BudgetCreateManyAssigneeInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    projectId?: string | null
  }

  export type BudgetCreateManyCreatedByInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    updatedById?: string | null
    projectId?: string | null
  }

  export type BudgetCreateManyUpdatedByInput = {
    id?: string
    regNumber?: string | null
    description?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    approvedDate?: Date | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    projectId?: string | null
  }

  export type ClientCreateManyCreatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
  }

  export type ClientCreateManyUpdatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    legal?: string | null
    category?: string | null
    country?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxAddress?: string | null
    taxStatus?: boolean
    procurementName?: string | null
    procurementRole?: string | null
    procurementPhone?: string | null
    procurementEmail?: string | null
    billingAddress?: string | null
    paymentName?: string | null
    paymentRole?: string | null
    paymentPhone?: string | null
    paymentEmail?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
  }

  export type EventCreateManyCreatedByInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
  }

  export type EventCreateManyUpdatedByInput = {
    id?: string
    title: string
    category?: string | null
    description?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    url?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
  }

  export type ExpenseCreateManyCreatedByInput = {
    id?: string
    regNumber?: string | null
    categoryId: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
    fundId?: string | null
    taskId?: string | null
    projectId?: string | null
  }

  export type ExpenseCreateManyUpdatedByInput = {
    id?: string
    regNumber?: string | null
    categoryId: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    date?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    fundId?: string | null
    taskId?: string | null
    projectId?: string | null
  }

  export type FundCreateManyAssigneeInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    taskId?: string | null
  }

  export type FundCreateManyCreatedByInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    updatedById?: string | null
    taskId?: string | null
  }

  export type FundCreateManyUpdatedByInput = {
    id?: string
    regNumber?: string | null
    description: string
    amount?: Decimal | DecimalJsLike | number | string | null
    requestDate?: Date | string | null
    approvedDate?: Date | string | null
    closedDate?: Date | string | null
    expiredDate?: Date | string | null
    voidDate?: Date | string | null
    plannedPaymentDate?: Date | string | null
    type?: string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
    taskId?: string | null
  }

  export type MilestoneCreateManyAssigneeInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    projectId?: string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type MilestoneCreateManyCreatedByInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    projectId?: string | null
    assigneeId?: string | null
    updatedById?: string | null
  }

  export type MilestoneCreateManyUpdatedByInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title?: string | null
    description?: string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    approvedDate?: Date | string | null
    share?: Decimal | DecimalJsLike | number | string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    revision?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    projectId?: string | null
    assigneeId?: string | null
    createdById?: string | null
  }

  export type NoteCreateManyCreatedByInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type NoteCreateManyUpdatedByInput = {
    id?: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
    expenseId?: string | null
    clientId?: string | null
    vendorId?: string | null
  }

  export type ProductCreateManyCreatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
  }

  export type ProductCreateManyUpdatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
  }

  export type ProjectCreateManyAssigneeInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contractId?: string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type ProjectCreateManyCreatedByInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contractId?: string | null
    assigneeId?: string | null
    updatedById?: string | null
  }

  export type ProjectCreateManyUpdatedByInput = {
    id?: string
    regNumber?: string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    contractId?: string | null
    assigneeId?: string | null
    createdById?: string | null
  }

  export type StageCreateManyCreatedByInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type StageCreateManyUpdatedByInput = {
    id?: string
    stageTypeId: string
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    pipelineId?: string | null
    projectId?: string | null
    milestoneId?: string | null
    taskId?: string | null
    budgetId?: string | null
    fundId?: string | null
  }

  export type TaskCreateManyAssigneeInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestoneId: string
    createdById?: string | null
    updatedById?: string | null
  }

  export type TaskCreateManyCreatedByInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestoneId: string
    assigneeId?: string | null
    updatedById?: string | null
  }

  export type TaskCreateManyUpdatedByInput = {
    id?: string
    order?: Decimal | DecimalJsLike | number | string | null
    title: string
    plannedStartDate?: Date | string | null
    plannedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    progress?: Decimal | DecimalJsLike | number | string | null
    deliverables?: string | null
    remarks?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    milestoneId: string
    assigneeId?: string | null
    createdById?: string | null
  }

  export type PipelineCreateManyAssigneeInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type PipelineCreateManyCreatedByInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    updatedById?: string | null
  }

  export type PipelineCreateManyUpdatedByInput = {
    id?: string
    regNumber?: string | null
    category?: string | null
    leadId?: string | null
    opportunityId?: string | null
    quoteId?: string | null
    contractId?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    assigneeId?: string | null
    createdById?: string | null
  }

  export type VendorCreateManyCreatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    city?: string | null
    postalCode?: string | null
    legal?: string | null
    vendorCategory?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxStatus?: boolean
    siupNumber?: string | null
    nibNumber?: string | null
    pkpNumber?: string | null
    productType?: string | null
    description?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
  }

  export type VendorCreateManyUpdatedByInput = {
    id?: string
    regNumber?: string | null
    name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    city?: string | null
    postalCode?: string | null
    legal?: string | null
    vendorCategory?: string | null
    contactName?: string | null
    contactRole?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    taxNumber?: string | null
    taxStatus?: boolean
    siupNumber?: string | null
    nibNumber?: string | null
    pkpNumber?: string | null
    productType?: string | null
    description?: string | null
    bankName?: string | null
    accountReferenceNumber?: string | null
    accountOwnerName?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
  }

  export type ProfileCreateManyCreatedByInput = {
    id?: string
    name?: string | null
    joinDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    updatedById?: string | null
    userId: string
  }

  export type ProfileCreateManyUpdatedByInput = {
    id?: string
    name?: string | null
    joinDate?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    createdById?: string | null
    userId: string
  }

  export type CostTypeCreateManyCreatedByInput = {
    id?: string
    order?: number | null
    name: string
    parentId?: string | null
    updatedById?: string | null
  }

  export type CostTypeCreateManyUpdatedByInput = {
    id?: string
    order?: number | null
    name: string
    parentId?: string | null
    createdById?: string | null
  }

  export type BudgetUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorBudgetNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterBudgetNestedInput
    items?: BudgetItemUpdateManyWithoutBudgetNestedInput
    project?: ProjectUpdateOneWithoutBudgetsNestedInput
    notes?: NoteUpdateManyWithoutBudgetNestedInput
    stages?: StageUpdateManyWithoutBudgetNestedInput
  }

  export type BudgetUncheckedUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: BudgetItemUncheckedUpdateManyWithoutBudgetNestedInput
    notes?: NoteUncheckedUpdateManyWithoutBudgetNestedInput
    stages?: StageUncheckedUpdateManyWithoutBudgetNestedInput
  }

  export type BudgetUncheckedUpdateManyWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BudgetUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutBudgetAssigneeNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterBudgetNestedInput
    items?: BudgetItemUpdateManyWithoutBudgetNestedInput
    project?: ProjectUpdateOneWithoutBudgetsNestedInput
    notes?: NoteUpdateManyWithoutBudgetNestedInput
    stages?: StageUpdateManyWithoutBudgetNestedInput
  }

  export type BudgetUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: BudgetItemUncheckedUpdateManyWithoutBudgetNestedInput
    notes?: NoteUncheckedUpdateManyWithoutBudgetNestedInput
    stages?: StageUncheckedUpdateManyWithoutBudgetNestedInput
  }

  export type BudgetUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BudgetUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutBudgetAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorBudgetNestedInput
    items?: BudgetItemUpdateManyWithoutBudgetNestedInput
    project?: ProjectUpdateOneWithoutBudgetsNestedInput
    notes?: NoteUpdateManyWithoutBudgetNestedInput
    stages?: StageUpdateManyWithoutBudgetNestedInput
  }

  export type BudgetUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: BudgetItemUncheckedUpdateManyWithoutBudgetNestedInput
    notes?: NoteUncheckedUpdateManyWithoutBudgetNestedInput
    stages?: StageUncheckedUpdateManyWithoutBudgetNestedInput
  }

  export type BudgetUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClientUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: UserUpdateOneWithoutUpdaterClientNestedInput
    notes?: NoteUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
    opportunities?: OpportunityUpdateManyWithoutClientNestedInput
    quotes?: QuoteUpdateManyWithoutClientNestedInput
    contracts?: ContractUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
    opportunities?: OpportunityUncheckedUpdateManyWithoutClientNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutClientNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClientUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorClientNestedInput
    notes?: NoteUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
    opportunities?: OpportunityUpdateManyWithoutClientNestedInput
    quotes?: QuoteUpdateManyWithoutClientNestedInput
    contracts?: ContractUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
    opportunities?: OpportunityUncheckedUpdateManyWithoutClientNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutClientNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    procurementName?: NullableStringFieldUpdateOperationsInput | string | null
    procurementRole?: NullableStringFieldUpdateOperationsInput | string | null
    procurementPhone?: NullableStringFieldUpdateOperationsInput | string | null
    procurementEmail?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    paymentName?: NullableStringFieldUpdateOperationsInput | string | null
    paymentRole?: NullableStringFieldUpdateOperationsInput | string | null
    paymentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    paymentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: UserUpdateOneWithoutUpdaterEventNestedInput
    pipeline?: PipelineUpdateOneWithoutEventsNestedInput
    project?: ProjectUpdateOneWithoutEventsNestedInput
    milestone?: MilestoneUpdateOneWithoutEventsNestedInput
    task?: TaskUpdateOneWithoutEventsNestedInput
  }

  export type EventUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorEventNestedInput
    pipeline?: PipelineUpdateOneWithoutEventsNestedInput
    project?: ProjectUpdateOneWithoutEventsNestedInput
    milestone?: MilestoneUpdateOneWithoutEventsNestedInput
    task?: TaskUpdateOneWithoutEventsNestedInput
  }

  export type EventUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ExpenseUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: CostTypeUpdateOneRequiredWithoutExpensesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterExpenseNestedInput
    fund?: FundUpdateOneWithoutExpensesNestedInput
    task?: TaskUpdateOneWithoutExpensesNestedInput
    project?: ProjectUpdateOneWithoutExpensesNestedInput
    notes?: NoteUpdateManyWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ExpenseUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: CostTypeUpdateOneRequiredWithoutExpensesNestedInput
    createdBy?: UserUpdateOneWithoutCreatorExpenseNestedInput
    fund?: FundUpdateOneWithoutExpensesNestedInput
    task?: TaskUpdateOneWithoutExpensesNestedInput
    project?: ProjectUpdateOneWithoutExpensesNestedInput
    notes?: NoteUpdateManyWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FundUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorFundNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterFundNestedInput
    items?: FundItemUpdateManyWithoutFundNestedInput
    task?: TaskUpdateOneWithoutFundsNestedInput
    expenses?: ExpenseUpdateManyWithoutFundNestedInput
    notes?: NoteUpdateManyWithoutFundNestedInput
    stages?: StageUpdateManyWithoutFundNestedInput
  }

  export type FundUncheckedUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: FundItemUncheckedUpdateManyWithoutFundNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutFundNestedInput
    notes?: NoteUncheckedUpdateManyWithoutFundNestedInput
    stages?: StageUncheckedUpdateManyWithoutFundNestedInput
  }

  export type FundUncheckedUpdateManyWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FundUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutFundAssigneeNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterFundNestedInput
    items?: FundItemUpdateManyWithoutFundNestedInput
    task?: TaskUpdateOneWithoutFundsNestedInput
    expenses?: ExpenseUpdateManyWithoutFundNestedInput
    notes?: NoteUpdateManyWithoutFundNestedInput
    stages?: StageUpdateManyWithoutFundNestedInput
  }

  export type FundUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: FundItemUncheckedUpdateManyWithoutFundNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutFundNestedInput
    notes?: NoteUncheckedUpdateManyWithoutFundNestedInput
    stages?: StageUncheckedUpdateManyWithoutFundNestedInput
  }

  export type FundUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FundUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignee?: UserUpdateOneWithoutFundAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorFundNestedInput
    items?: FundItemUpdateManyWithoutFundNestedInput
    task?: TaskUpdateOneWithoutFundsNestedInput
    expenses?: ExpenseUpdateManyWithoutFundNestedInput
    notes?: NoteUpdateManyWithoutFundNestedInput
    stages?: StageUpdateManyWithoutFundNestedInput
  }

  export type FundUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: FundItemUncheckedUpdateManyWithoutFundNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutFundNestedInput
    notes?: NoteUncheckedUpdateManyWithoutFundNestedInput
    stages?: StageUncheckedUpdateManyWithoutFundNestedInput
  }

  export type FundUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    requestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    voidDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedPaymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MilestoneUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project?: ProjectUpdateOneWithoutMilestonesNestedInput
    createdBy?: UserUpdateOneWithoutCreatorMilestoneNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterMilestoneNestedInput
    tasks?: TaskUpdateManyWithoutMilestoneNestedInput
    notes?: NoteUpdateManyWithoutMilestoneNestedInput
    stages?: StageUpdateManyWithoutMilestoneNestedInput
    events?: EventUpdateManyWithoutMilestoneNestedInput
  }

  export type MilestoneUncheckedUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    tasks?: TaskUncheckedUpdateManyWithoutMilestoneNestedInput
    notes?: NoteUncheckedUpdateManyWithoutMilestoneNestedInput
    stages?: StageUncheckedUpdateManyWithoutMilestoneNestedInput
    events?: EventUncheckedUpdateManyWithoutMilestoneNestedInput
  }

  export type MilestoneUncheckedUpdateManyWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MilestoneUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project?: ProjectUpdateOneWithoutMilestonesNestedInput
    assignee?: UserUpdateOneWithoutMilestoneAssigneeNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterMilestoneNestedInput
    tasks?: TaskUpdateManyWithoutMilestoneNestedInput
    notes?: NoteUpdateManyWithoutMilestoneNestedInput
    stages?: StageUpdateManyWithoutMilestoneNestedInput
    events?: EventUpdateManyWithoutMilestoneNestedInput
  }

  export type MilestoneUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    tasks?: TaskUncheckedUpdateManyWithoutMilestoneNestedInput
    notes?: NoteUncheckedUpdateManyWithoutMilestoneNestedInput
    stages?: StageUncheckedUpdateManyWithoutMilestoneNestedInput
    events?: EventUncheckedUpdateManyWithoutMilestoneNestedInput
  }

  export type MilestoneUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MilestoneUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project?: ProjectUpdateOneWithoutMilestonesNestedInput
    assignee?: UserUpdateOneWithoutMilestoneAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorMilestoneNestedInput
    tasks?: TaskUpdateManyWithoutMilestoneNestedInput
    notes?: NoteUpdateManyWithoutMilestoneNestedInput
    stages?: StageUpdateManyWithoutMilestoneNestedInput
    events?: EventUpdateManyWithoutMilestoneNestedInput
  }

  export type MilestoneUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    tasks?: TaskUncheckedUpdateManyWithoutMilestoneNestedInput
    notes?: NoteUncheckedUpdateManyWithoutMilestoneNestedInput
    stages?: StageUncheckedUpdateManyWithoutMilestoneNestedInput
    events?: EventUncheckedUpdateManyWithoutMilestoneNestedInput
  }

  export type MilestoneUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    share?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revision?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: UserUpdateOneWithoutUpdaterNoteNestedInput
    pipeline?: PipelineUpdateOneWithoutNotesNestedInput
    project?: ProjectUpdateOneWithoutNotesNestedInput
    milestone?: MilestoneUpdateOneWithoutNotesNestedInput
    task?: TaskUpdateOneWithoutNotesNestedInput
    budget?: BudgetUpdateOneWithoutNotesNestedInput
    fund?: FundUpdateOneWithoutNotesNestedInput
    expense?: ExpenseUpdateOneWithoutNotesNestedInput
    client?: ClientUpdateOneWithoutNotesNestedInput
    vendor?: VendorUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorNoteNestedInput
    pipeline?: PipelineUpdateOneWithoutNotesNestedInput
    project?: ProjectUpdateOneWithoutNotesNestedInput
    milestone?: MilestoneUpdateOneWithoutNotesNestedInput
    task?: TaskUpdateOneWithoutNotesNestedInput
    budget?: BudgetUpdateOneWithoutNotesNestedInput
    fund?: FundUpdateOneWithoutNotesNestedInput
    expense?: ExpenseUpdateOneWithoutNotesNestedInput
    client?: ClientUpdateOneWithoutNotesNestedInput
    vendor?: VendorUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
    expenseId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: UserUpdateOneWithoutUpdaterProductNestedInput
    leads?: LeadUpdateManyWithoutProductsNestedInput
    opportunities?: OpportunityUpdateManyWithoutProductsNestedInput
    quotes?: QuoteUpdateManyWithoutProductsNestedInput
    contracts?: ContractUpdateManyWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    leads?: LeadUncheckedUpdateManyWithoutProductsNestedInput
    opportunities?: OpportunityUncheckedUpdateManyWithoutProductsNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutProductsNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorProductNestedInput
    leads?: LeadUpdateManyWithoutProductsNestedInput
    opportunities?: OpportunityUpdateManyWithoutProductsNestedInput
    quotes?: QuoteUpdateManyWithoutProductsNestedInput
    contracts?: ContractUpdateManyWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    leads?: LeadUncheckedUpdateManyWithoutProductsNestedInput
    opportunities?: OpportunityUncheckedUpdateManyWithoutProductsNestedInput
    quotes?: QuoteUncheckedUpdateManyWithoutProductsNestedInput
    contracts?: ContractUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProjectUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contract?: ContractUpdateOneWithoutProjectNestedInput
    createdBy?: UserUpdateOneWithoutCreatorProjectNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProjectNestedInput
    members?: UserUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUpdateManyWithoutProjectNestedInput
    notes?: NoteUpdateManyWithoutProjectNestedInput
    stages?: StageUpdateManyWithoutProjectNestedInput
    events?: EventUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUncheckedUpdateManyWithoutProjectNestedInput
    notes?: NoteUncheckedUpdateManyWithoutProjectNestedInput
    stages?: StageUncheckedUpdateManyWithoutProjectNestedInput
    events?: EventUncheckedUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUncheckedUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateManyWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProjectUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contract?: ContractUpdateOneWithoutProjectNestedInput
    assignee?: UserUpdateOneWithoutProjectAssigneeNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProjectNestedInput
    members?: UserUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUpdateManyWithoutProjectNestedInput
    notes?: NoteUpdateManyWithoutProjectNestedInput
    stages?: StageUpdateManyWithoutProjectNestedInput
    events?: EventUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUncheckedUpdateManyWithoutProjectNestedInput
    notes?: NoteUncheckedUpdateManyWithoutProjectNestedInput
    stages?: StageUncheckedUpdateManyWithoutProjectNestedInput
    events?: EventUncheckedUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUncheckedUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProjectUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contract?: ContractUpdateOneWithoutProjectNestedInput
    assignee?: UserUpdateOneWithoutProjectAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorProjectNestedInput
    members?: UserUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUpdateManyWithoutProjectNestedInput
    notes?: NoteUpdateManyWithoutProjectNestedInput
    stages?: StageUpdateManyWithoutProjectNestedInput
    events?: EventUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutProjectMemberNestedInput
    milestones?: MilestoneUncheckedUpdateManyWithoutProjectNestedInput
    notes?: NoteUncheckedUpdateManyWithoutProjectNestedInput
    stages?: StageUncheckedUpdateManyWithoutProjectNestedInput
    events?: EventUncheckedUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUncheckedUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProjectUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contract?: ContractUpdateOneWithoutProjectNestedInput
    assignee?: UserUpdateOneWithoutProjectAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorProjectNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterProjectNestedInput
    milestones?: MilestoneUpdateManyWithoutProjectNestedInput
    notes?: NoteUpdateManyWithoutProjectNestedInput
    stages?: StageUpdateManyWithoutProjectNestedInput
    events?: EventUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: MilestoneUncheckedUpdateManyWithoutProjectNestedInput
    notes?: NoteUncheckedUpdateManyWithoutProjectNestedInput
    stages?: StageUncheckedUpdateManyWithoutProjectNestedInput
    events?: EventUncheckedUpdateManyWithoutProjectNestedInput
    budgets?: BudgetUncheckedUpdateManyWithoutProjectNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateManyWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StageTypeUpdateOneRequiredWithoutStagesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterStageNestedInput
    pipeline?: PipelineUpdateOneWithoutStagesNestedInput
    project?: ProjectUpdateOneWithoutStagesNestedInput
    milestone?: MilestoneUpdateOneWithoutStagesNestedInput
    task?: TaskUpdateOneWithoutStagesNestedInput
    budget?: BudgetUpdateOneWithoutStagesNestedInput
    fund?: FundUpdateOneWithoutStagesNestedInput
  }

  export type StageUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: StageTypeUpdateOneRequiredWithoutStagesNestedInput
    createdBy?: UserUpdateOneWithoutCreatorStageNestedInput
    pipeline?: PipelineUpdateOneWithoutStagesNestedInput
    project?: ProjectUpdateOneWithoutStagesNestedInput
    milestone?: MilestoneUpdateOneWithoutStagesNestedInput
    task?: TaskUpdateOneWithoutStagesNestedInput
    budget?: BudgetUpdateOneWithoutStagesNestedInput
    fund?: FundUpdateOneWithoutStagesNestedInput
  }

  export type StageUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StageUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageTypeId?: StringFieldUpdateOperationsInput | string
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    pipelineId?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    milestoneId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetId?: NullableStringFieldUpdateOperationsInput | string | null
    fundId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestone?: MilestoneUpdateOneRequiredWithoutTasksNestedInput
    createdBy?: UserUpdateOneWithoutCreatorTaskNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterTaskNestedInput
    members?: UserUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUpdateManyWithoutTaskNestedInput
    stages?: StageUpdateManyWithoutTaskNestedInput
    events?: EventUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUpdateManyWithoutTaskNestedInput
    funds?: FundUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestoneId?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUncheckedUpdateManyWithoutTaskNestedInput
    stages?: StageUncheckedUpdateManyWithoutTaskNestedInput
    events?: EventUncheckedUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutTaskNestedInput
    funds?: FundUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateManyWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestoneId?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestone?: MilestoneUpdateOneRequiredWithoutTasksNestedInput
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterTaskNestedInput
    members?: UserUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUpdateManyWithoutTaskNestedInput
    stages?: StageUpdateManyWithoutTaskNestedInput
    events?: EventUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUpdateManyWithoutTaskNestedInput
    funds?: FundUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestoneId?: StringFieldUpdateOperationsInput | string
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUncheckedUpdateManyWithoutTaskNestedInput
    stages?: StageUncheckedUpdateManyWithoutTaskNestedInput
    events?: EventUncheckedUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutTaskNestedInput
    funds?: FundUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestoneId?: StringFieldUpdateOperationsInput | string
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestone?: MilestoneUpdateOneRequiredWithoutTasksNestedInput
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorTaskNestedInput
    members?: UserUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUpdateManyWithoutTaskNestedInput
    stages?: StageUpdateManyWithoutTaskNestedInput
    events?: EventUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUpdateManyWithoutTaskNestedInput
    funds?: FundUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestoneId?: StringFieldUpdateOperationsInput | string
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutTaskMemberNestedInput
    notes?: NoteUncheckedUpdateManyWithoutTaskNestedInput
    stages?: StageUncheckedUpdateManyWithoutTaskNestedInput
    events?: EventUncheckedUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutTaskNestedInput
    funds?: FundUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestoneId?: StringFieldUpdateOperationsInput | string
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestone?: MilestoneUpdateOneRequiredWithoutTasksNestedInput
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorTaskNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterTaskNestedInput
    notes?: NoteUpdateManyWithoutTaskNestedInput
    stages?: StageUpdateManyWithoutTaskNestedInput
    events?: EventUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUpdateManyWithoutTaskNestedInput
    funds?: FundUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestoneId?: StringFieldUpdateOperationsInput | string
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutTaskNestedInput
    stages?: StageUncheckedUpdateManyWithoutTaskNestedInput
    events?: EventUncheckedUpdateManyWithoutTaskNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutTaskNestedInput
    funds?: FundUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateManyWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    title?: StringFieldUpdateOperationsInput | string
    plannedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    plannedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progress?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliverables?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    milestoneId?: StringFieldUpdateOperationsInput | string
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PipelineUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lead?: LeadUpdateOneWithoutPipelineNestedInput
    opportunity?: OpportunityUpdateOneWithoutPipelineNestedInput
    quote?: QuoteUpdateOneWithoutPipelineNestedInput
    contract?: ContractUpdateOneWithoutPipelineNestedInput
    members?: UserUpdateManyWithoutPipelineMemberNestedInput
    createdBy?: UserUpdateOneWithoutCreatorPipelineNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterPipelineNestedInput
    stages?: StageUpdateManyWithoutPipelineNestedInput
    notes?: NoteUpdateManyWithoutPipelineNestedInput
    events?: EventUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutPipelineMemberNestedInput
    stages?: StageUncheckedUpdateManyWithoutPipelineNestedInput
    notes?: NoteUncheckedUpdateManyWithoutPipelineNestedInput
    events?: EventUncheckedUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateManyWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PipelineUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lead?: LeadUpdateOneWithoutPipelineNestedInput
    opportunity?: OpportunityUpdateOneWithoutPipelineNestedInput
    quote?: QuoteUpdateOneWithoutPipelineNestedInput
    contract?: ContractUpdateOneWithoutPipelineNestedInput
    assignee?: UserUpdateOneWithoutPipelineAssigneeNestedInput
    members?: UserUpdateManyWithoutPipelineMemberNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterPipelineNestedInput
    stages?: StageUpdateManyWithoutPipelineNestedInput
    notes?: NoteUpdateManyWithoutPipelineNestedInput
    events?: EventUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutPipelineMemberNestedInput
    stages?: StageUncheckedUpdateManyWithoutPipelineNestedInput
    notes?: NoteUncheckedUpdateManyWithoutPipelineNestedInput
    events?: EventUncheckedUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PipelineUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lead?: LeadUpdateOneWithoutPipelineNestedInput
    opportunity?: OpportunityUpdateOneWithoutPipelineNestedInput
    quote?: QuoteUpdateOneWithoutPipelineNestedInput
    contract?: ContractUpdateOneWithoutPipelineNestedInput
    assignee?: UserUpdateOneWithoutPipelineAssigneeNestedInput
    members?: UserUpdateManyWithoutPipelineMemberNestedInput
    createdBy?: UserUpdateOneWithoutCreatorPipelineNestedInput
    stages?: StageUpdateManyWithoutPipelineNestedInput
    notes?: NoteUpdateManyWithoutPipelineNestedInput
    events?: EventUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutPipelineMemberNestedInput
    stages?: StageUncheckedUpdateManyWithoutPipelineNestedInput
    notes?: NoteUncheckedUpdateManyWithoutPipelineNestedInput
    events?: EventUncheckedUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PipelineUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lead?: LeadUpdateOneWithoutPipelineNestedInput
    opportunity?: OpportunityUpdateOneWithoutPipelineNestedInput
    quote?: QuoteUpdateOneWithoutPipelineNestedInput
    contract?: ContractUpdateOneWithoutPipelineNestedInput
    assignee?: UserUpdateOneWithoutPipelineAssigneeNestedInput
    createdBy?: UserUpdateOneWithoutCreatorPipelineNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterPipelineNestedInput
    stages?: StageUpdateManyWithoutPipelineNestedInput
    notes?: NoteUpdateManyWithoutPipelineNestedInput
    events?: EventUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    stages?: StageUncheckedUpdateManyWithoutPipelineNestedInput
    notes?: NoteUncheckedUpdateManyWithoutPipelineNestedInput
    events?: EventUncheckedUpdateManyWithoutPipelineNestedInput
  }

  export type PipelineUncheckedUpdateManyWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    leadId?: NullableStringFieldUpdateOperationsInput | string | null
    opportunityId?: NullableStringFieldUpdateOperationsInput | string | null
    quoteId?: NullableStringFieldUpdateOperationsInput | string | null
    contractId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VendorUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    vendorCategory?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    siupNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nibNumber?: NullableStringFieldUpdateOperationsInput | string | null
    pkpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    productType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: UserUpdateOneWithoutUpdaterVendorNestedInput
    notes?: NoteUpdateManyWithoutVendorNestedInput
  }

  export type VendorUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    vendorCategory?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    siupNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nibNumber?: NullableStringFieldUpdateOperationsInput | string | null
    pkpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    productType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutVendorNestedInput
  }

  export type VendorUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    vendorCategory?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    siupNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nibNumber?: NullableStringFieldUpdateOperationsInput | string | null
    pkpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    productType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VendorUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    vendorCategory?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    siupNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nibNumber?: NullableStringFieldUpdateOperationsInput | string | null
    pkpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    productType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorVendorNestedInput
    notes?: NoteUpdateManyWithoutVendorNestedInput
  }

  export type VendorUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    vendorCategory?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    siupNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nibNumber?: NullableStringFieldUpdateOperationsInput | string | null
    pkpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    productType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NoteUncheckedUpdateManyWithoutVendorNestedInput
  }

  export type VendorUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    regNumber?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    legal?: NullableStringFieldUpdateOperationsInput | string | null
    vendorCategory?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactRole?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxNumber?: NullableStringFieldUpdateOperationsInput | string | null
    taxStatus?: BoolFieldUpdateOperationsInput | boolean
    siupNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nibNumber?: NullableStringFieldUpdateOperationsInput | string | null
    pkpNumber?: NullableStringFieldUpdateOperationsInput | string | null
    productType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountReferenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountOwnerName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProfileUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    joinDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: UserUpdateOneWithoutUpdaterProfileNestedInput
    user?: UserUpdateOneRequiredWithoutProfileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    joinDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type ProfileUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    joinDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type ProfileUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    joinDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: UserUpdateOneWithoutCreatorProfileNestedInput
    user?: UserUpdateOneRequiredWithoutProfileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    joinDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type ProfileUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    joinDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type CostTypeUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parent?: CostTypeUpdateOneWithoutChildrenNestedInput
    children?: CostTypeUpdateManyWithoutParentNestedInput
    updatedBy?: UserUpdateOneWithoutUpdaterCostTypeNestedInput
    budgetItems?: BudgetItemUpdateManyWithoutCategoryNestedInput
    fundItems?: FundItemUpdateManyWithoutCategoryNestedInput
    expenses?: ExpenseUpdateManyWithoutCategoryNestedInput
  }

  export type CostTypeUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CostTypeUncheckedUpdateManyWithoutParentNestedInput
    budgetItems?: BudgetItemUncheckedUpdateManyWithoutCategoryNestedInput
    fundItems?: FundItemUncheckedUpdateManyWithoutCategoryNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CostTypeUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CostTypeUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parent?: CostTypeUpdateOneWithoutChildrenNestedInput
    children?: CostTypeUpdateManyWithoutParentNestedInput
    createdBy?: UserUpdateOneWithoutCreatorCostTypeNestedInput
    budgetItems?: BudgetItemUpdateManyWithoutCategoryNestedInput
    fundItems?: FundItemUpdateManyWithoutCategoryNestedInput
    expenses?: ExpenseUpdateManyWithoutCategoryNestedInput
  }

  export type CostTypeUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CostTypeUncheckedUpdateManyWithoutParentNestedInput
    budgetItems?: BudgetItemUncheckedUpdateManyWithoutCategoryNestedInput
    fundItems?: FundItemUncheckedUpdateManyWithoutCategoryNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CostTypeUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    order?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateManyRoleInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    organizationId?: string | null
  }

  export type UserUpdateWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    organization?: OrganizationUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateManyOrganizationInput = {
    id?: string
    username: string
    password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    status?: string
    roleId?: string | null
  }

  export type UserUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    role?: RoleUpdateOneWithoutUsersNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    BudgetAssignee?: BudgetUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorBudget?: BudgetUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterBudget?: BudgetUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorClient?: ClientUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterClient?: ClientUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorEvent?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterEvent?: EventUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorExpense?: ExpenseUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterExpense?: ExpenseUncheckedUpdateManyWithoutUpdatedByNestedInput
    FundAssignee?: FundUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorFund?: FundUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterFund?: FundUncheckedUpdateManyWithoutUpdatedByNestedInput
    MilestoneAssignee?: MilestoneUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorMilestone?: MilestoneUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterMilestone?: MilestoneUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorNote?: NoteUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterNote?: NoteUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProduct?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProduct?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectAssignee?: ProjectUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorProject?: ProjectUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProject?: ProjectUncheckedUpdateManyWithoutUpdatedByNestedInput
    ProjectMember?: ProjectUncheckedUpdateManyWithoutMembersNestedInput
    CreatorStage?: StageUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterStage?: StageUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorTask?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterTask?: TaskUncheckedUpdateManyWithoutUpdatedByNestedInput
    TaskMember?: TaskUncheckedUpdateManyWithoutMembersNestedInput
    PipelineAssignee?: PipelineUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatorPipeline?: PipelineUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterPipeline?: PipelineUncheckedUpdateManyWithoutUpdatedByNestedInput
    PipelineMember?: PipelineUncheckedUpdateManyWithoutMembersNestedInput
    CreatorVendor?: VendorUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterVendor?: VendorUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorProfile?: ProfileUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterProfile?: ProfileUncheckedUpdateManyWithoutUpdatedByNestedInput
    CreatorCostType?: CostTypeUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdaterCostType?: CostTypeUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    roleId?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}